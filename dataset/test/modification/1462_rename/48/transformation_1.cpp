/* -----------------RISHABH VERMA------------*/

/*

    âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
      ââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
     âââââââââââââââââââââââââââââ
 

*/
#include <bits/stdc++.h>

using namespace std;

#define FAST1 ios_base::sync_with_stdio(false);
#define FAST2 cin.tie(NULL);
#define ll long long
const ll v_v = 1e9 + 7;
#define sums accumulate
#define int long long

#define for_i(i, t, n) for (ll i = t; i < (ll)n; ++i)
#define for_j(j, i, n) for (ll j = i; j < (ll)n; ++j)
#define for_r(i, n, L, t) for (ll i = n - L; i >= t; --i)
#define for_s(i, vec) for (auto &i : vec)
#define dis(m) cout<<m<<endl

#define yes dis("YES")
#define no dis("NO")
#define yy dis("Yes")
#define nn dis("No")
#define ret(v) cout<<v<<endl;return;

#define all_v(vec) vec.begin(), vec.end()
#define all_a(vec, n) vec, vec + n
#define sz(v) (int)(v.size())
#define mem(t,m) memset(t,m,sizeof t)
#define is_reverse greater<ll>
#define ff first
#define sec second

#define ve vector
#define se set
#define ld long double

#define unmapll unordered_map<ll,ll>
#define unset unordered_set
#define pll pair<ll, ll>
#define mll map<ll, ll>
#define eb emplace_back
#define pqb priority_queue<ll>
#define pqs priority_queue<ll, ve<ll>, greater<ll>>
#define mnh priority_queue<pll, ve<pll>, greater<pll>>
#define setbits(res) __builtin_popcount(res)
#define pp pop_back
#define pb push_back
#define endl "\n"
#define mp make_pair

void av(long z_btl) {cerr << z_btl;}
void vjx_bw(ll x) {cerr << x;}
void o_but(unsigned auo_dy) {cerr << auo_dy;}
void g(unsigned long h) {cerr << h;}
void gaz_qdk(unsigned ll fl) {cerr << fl;}
void pnu_al(float xo) {cerr << xo;}
void nff(double t_tay) {cerr << t_tay;}
void ilx(long double ire_y) {cerr << ire_y;}
void ai_q(char re_zim) {cerr << '\'' << re_zim << '\'';}
void o_wa(const char *hm) {cerr << '\"' << hm << '\"';}
void pte(const string &iu) {cerr << '\"' << iu << '\"';}
void s_bv(bool g) {cerr << (g ? "true" : "false");}

template<typename T, typename V>
void __print(const pair<T, V> &lyf) {cerr << '{'; __print(lyf.ff); cerr << ','; __print(lyf.sec); cerr << '}';}
template<typename T>
void __print(const T &f_eru) {ll L = 0; cerr << '{'; for (auto &i_bkq : f_eru) cerr << (L++ ? "," : ""), __print(i_bkq); cerr << "}";}
void v_o() {cerr << "]\n";}
template <typename T, typename... V>
void tdx_vT o, V... rjr) {__print(o); if (sizeof...(v)) cerr << ", "; _print(rjr...);}
#ifndef ONLINE_JUDGE
#define debug(x...) cerr << "[" << #x << "] = ["; _print(x)
#else
#define debug(x...)
#endif

ll binpow_it(ll a, ll b) {
    a %= v_v;
    ll ans = 1;
    while (b) {
        if (b & 1)
            ans = (ans * 1ll * a) % v_v;
        a = (a * a * 1ll) % v_v, b >>= 1;
    }
    return ans;
}

void z() {
    ll n;
    cin >> n;
    ve<ll> a(n);
    for_i(i, 0, n) cin >> a[i];
    sort(all_v(a));
    debug(a);
    ll ans=0;
    for_i(i,0,n){
        ll x=upper_bound(all_v(a),a[i]+2)-a.begin();
        x-=1;
        debug(x);
        if(x>=i+2){
            ans+=1ll*(x-i)*(x-i-1)/2;
            debug(ans);
        }
    }
    dis(ans);
}

int32_t main() {
    ll t = 1;
    cin >> t;
    while (t--) z();
    return 0;
}