digraph "solve" {  
"1000532" [label = "(METHOD,solve)" ]
"1000675" [label = "(METHOD_RETURN,void)" ]
"1000534" [label = "(R,R(n, m))" ]
"1000537" [label = "(<operator>.assignment,a2[i][j] = 0)" ]
"1000617" [label = "(<operator>.assignment,ans = INF)" ]
"1000673" [label = "(W,W(ans))" ]
"1000545" [label = "(R,R(a[i]))" ]
"1000622" [label = "(<operator>.assignment,i = 1)" ]
"1000625" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000628" [label = "(<operator>.postIncrement,i++)" ]
"1000550" [label = "(<operator>.assignment,a2[i + 1][j + 1] = a[i][j] - '0')" ]
"1000567" [label = "(<operator>.assignmentPlus,a2[i + 1][j + 1] += a2[i][j + 1])" ]
"1000584" [label = "(<operator>.assignmentPlus,a2[i + 1][j + 1] += a2[i + 1][j])" ]
"1000601" [label = "(<operator>.assignmentMinus,a2[i + 1][j + 1] -= a2[i][j])" ]
"1000633" [label = "(<operator>.assignment,j = i + 4)" ]
"1000638" [label = "(<operator>.lessEqualsThan,j <= n)" ]
"1000641" [label = "(<operator>.postIncrement,j++)" ]
"1000560" [label = "(<operator>.subtraction,a[i][j] - '0')" ]
"1000644" [label = "(<operator>.assignment,dp[k][0] = dp[k][1] = dp[k][2] = -1)" ]
"1000664" [label = "(<operator>.assignment,ans = min(ans, compute(i, j, 2, 0)))" ]
"1000557" [label = "(<operator>.addition,j + 1)" ]
"1000574" [label = "(<operator>.addition,j + 1)" ]
"1000581" [label = "(<operator>.addition,j + 1)" ]
"1000591" [label = "(<operator>.addition,j + 1)" ]
"1000608" [label = "(<operator>.addition,j + 1)" ]
"1000635" [label = "(<operator>.addition,i + 4)" ]
"1000554" [label = "(<operator>.addition,i + 1)" ]
"1000571" [label = "(<operator>.addition,i + 1)" ]
"1000588" [label = "(<operator>.addition,i + 1)" ]
"1000597" [label = "(<operator>.addition,i + 1)" ]
"1000605" [label = "(<operator>.addition,i + 1)" ]
"1000650" [label = "(<operator>.assignment,dp[k][1] = dp[k][2] = -1)" ]
"1000666" [label = "(min,min(ans, compute(i, j, 2, 0)))" ]
"1000656" [label = "(<operator>.assignment,dp[k][2] = -1)" ]
"1000668" [label = "(compute,compute(i, j, 2, 0))" ]
"1000662" [label = "(<operator>.minus,-1)" ]
"1000645" [label = "(<operator>.indirectIndexAccess,dp[k][0])" ]
"1000646" [label = "(<operator>.indirectIndexAccess,dp[k])" ]
"1000651" [label = "(<operator>.indirectIndexAccess,dp[k][1])" ]
"1000652" [label = "(<operator>.indirectIndexAccess,dp[k])" ]
"1000657" [label = "(<operator>.indirectIndexAccess,dp[k][2])" ]
"1000658" [label = "(<operator>.indirectIndexAccess,dp[k])" ]
  "1000534" -> "1000675"  [ label = "DDG: R(n, m)"] 
  "1000545" -> "1000675"  [ label = "DDG: a[i]"] 
  "1000545" -> "1000675"  [ label = "DDG: R(a[i])"] 
  "1000560" -> "1000675"  [ label = "DDG: a[i][j]"] 
  "1000550" -> "1000675"  [ label = "DDG: a[i][j] - '0'"] 
  "1000567" -> "1000675"  [ label = "DDG: a2[i][j + 1]"] 
  "1000584" -> "1000675"  [ label = "DDG: a2[i + 1][j]"] 
  "1000608" -> "1000675"  [ label = "DDG: j"] 
  "1000601" -> "1000675"  [ label = "DDG: a2[i + 1][j + 1]"] 
  "1000601" -> "1000675"  [ label = "DDG: a2[i][j]"] 
  "1000625" -> "1000675"  [ label = "DDG: i"] 
  "1000625" -> "1000675"  [ label = "DDG: n"] 
  "1000625" -> "1000675"  [ label = "DDG: i <= n"] 
  "1000673" -> "1000675"  [ label = "DDG: ans"] 
  "1000673" -> "1000675"  [ label = "DDG: W(ans)"] 
  "1000633" -> "1000675"  [ label = "DDG: i + 4"] 
  "1000638" -> "1000675"  [ label = "DDG: j"] 
  "1000638" -> "1000675"  [ label = "DDG: j <= n"] 
  "1000644" -> "1000675"  [ label = "DDG: dp[k][0]"] 
  "1000650" -> "1000675"  [ label = "DDG: dp[k][1]"] 
  "1000656" -> "1000675"  [ label = "DDG: dp[k][2]"] 
  "1000656" -> "1000675"  [ label = "DDG: -1"] 
  "1000666" -> "1000675"  [ label = "DDG: compute(i, j, 2, 0)"] 
  "1000664" -> "1000675"  [ label = "DDG: min(ans, compute(i, j, 2, 0))"] 
  "1000617" -> "1000675"  [ label = "DDG: INF"] 
  "1000534" -> "1000675"  [ label = "DDG: m"] 
  "1000532" -> "1000537"  [ label = "DDG: "] 
  "1000532" -> "1000617"  [ label = "DDG: "] 
  "1000532" -> "1000534"  [ label = "DDG: "] 
  "1000532" -> "1000622"  [ label = "DDG: "] 
  "1000617" -> "1000673"  [ label = "DDG: ans"] 
  "1000664" -> "1000673"  [ label = "DDG: ans"] 
  "1000532" -> "1000673"  [ label = "DDG: "] 
  "1000560" -> "1000550"  [ label = "DDG: '0'"] 
  "1000560" -> "1000550"  [ label = "DDG: a[i][j]"] 
  "1000537" -> "1000601"  [ label = "DDG: a2[i][j]"] 
  "1000622" -> "1000625"  [ label = "DDG: i"] 
  "1000628" -> "1000625"  [ label = "DDG: i"] 
  "1000532" -> "1000625"  [ label = "DDG: "] 
  "1000534" -> "1000625"  [ label = "DDG: n"] 
  "1000638" -> "1000625"  [ label = "DDG: n"] 
  "1000668" -> "1000628"  [ label = "DDG: i"] 
  "1000532" -> "1000628"  [ label = "DDG: "] 
  "1000625" -> "1000628"  [ label = "DDG: i"] 
  "1000550" -> "1000567"  [ label = "DDG: a2[i + 1][j + 1]"] 
  "1000567" -> "1000584"  [ label = "DDG: a2[i + 1][j + 1]"] 
  "1000584" -> "1000601"  [ label = "DDG: a2[i + 1][j + 1]"] 
  "1000625" -> "1000633"  [ label = "DDG: i"] 
  "1000532" -> "1000633"  [ label = "DDG: "] 
  "1000532" -> "1000560"  [ label = "DDG: "] 
  "1000633" -> "1000638"  [ label = "DDG: j"] 
  "1000641" -> "1000638"  [ label = "DDG: j"] 
  "1000532" -> "1000638"  [ label = "DDG: "] 
  "1000625" -> "1000638"  [ label = "DDG: n"] 
  "1000668" -> "1000641"  [ label = "DDG: j"] 
  "1000532" -> "1000641"  [ label = "DDG: "] 
  "1000666" -> "1000664"  [ label = "DDG: compute(i, j, 2, 0)"] 
  "1000666" -> "1000664"  [ label = "DDG: ans"] 
  "1000532" -> "1000557"  [ label = "DDG: "] 
  "1000532" -> "1000574"  [ label = "DDG: "] 
  "1000532" -> "1000581"  [ label = "DDG: "] 
  "1000532" -> "1000591"  [ label = "DDG: "] 
  "1000532" -> "1000608"  [ label = "DDG: "] 
  "1000625" -> "1000635"  [ label = "DDG: i"] 
  "1000532" -> "1000635"  [ label = "DDG: "] 
  "1000650" -> "1000644"  [ label = "DDG: dp[k][1]"] 
  "1000532" -> "1000664"  [ label = "DDG: "] 
  "1000532" -> "1000554"  [ label = "DDG: "] 
  "1000532" -> "1000571"  [ label = "DDG: "] 
  "1000532" -> "1000588"  [ label = "DDG: "] 
  "1000532" -> "1000597"  [ label = "DDG: "] 
  "1000532" -> "1000605"  [ label = "DDG: "] 
  "1000656" -> "1000650"  [ label = "DDG: dp[k][2]"] 
  "1000662" -> "1000650"  [ label = "DDG: 1"] 
  "1000617" -> "1000666"  [ label = "DDG: ans"] 
  "1000664" -> "1000666"  [ label = "DDG: ans"] 
  "1000532" -> "1000666"  [ label = "DDG: "] 
  "1000668" -> "1000666"  [ label = "DDG: 0"] 
  "1000668" -> "1000666"  [ label = "DDG: j"] 
  "1000668" -> "1000666"  [ label = "DDG: i"] 
  "1000668" -> "1000666"  [ label = "DDG: 2"] 
  "1000662" -> "1000656"  [ label = "DDG: 1"] 
  "1000532" -> "1000668"  [ label = "DDG: "] 
  "1000625" -> "1000668"  [ label = "DDG: i"] 
  "1000638" -> "1000668"  [ label = "DDG: j"] 
  "1000532" -> "1000662"  [ label = "DDG: "] 
  "1000625" -> "1000633"  [ label = "CDG: "] 
  "1000625" -> "1000625"  [ label = "CDG: "] 
  "1000625" -> "1000628"  [ label = "CDG: "] 
  "1000625" -> "1000635"  [ label = "CDG: "] 
  "1000625" -> "1000638"  [ label = "CDG: "] 
  "1000638" -> "1000666"  [ label = "CDG: "] 
  "1000638" -> "1000656"  [ label = "CDG: "] 
  "1000638" -> "1000657"  [ label = "CDG: "] 
  "1000638" -> "1000645"  [ label = "CDG: "] 
  "1000638" -> "1000644"  [ label = "CDG: "] 
  "1000638" -> "1000646"  [ label = "CDG: "] 
  "1000638" -> "1000664"  [ label = "CDG: "] 
  "1000638" -> "1000668"  [ label = "CDG: "] 
  "1000638" -> "1000650"  [ label = "CDG: "] 
  "1000638" -> "1000652"  [ label = "CDG: "] 
  "1000638" -> "1000641"  [ label = "CDG: "] 
  "1000638" -> "1000638"  [ label = "CDG: "] 
  "1000638" -> "1000658"  [ label = "CDG: "] 
  "1000638" -> "1000651"  [ label = "CDG: "] 
  "1000638" -> "1000662"  [ label = "CDG: "] 
}
