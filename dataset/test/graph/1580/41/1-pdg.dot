digraph "main" {  
"1000118" [label = "(METHOD,main)" ]
"1000437" [label = "(METHOD_RETURN,signed)" ]
"1000122" [label = "(<operator>.arithmeticShiftRight,cin>>n>>m)" ]
"1000137" [label = "(fill,fill(days,-1))" ]
"1000143" [label = "(<operator>.arithmeticShiftRight,cin>>train[i][j])" ]
"1000168" [label = "(<operator>.assignment,p=x+y)" ]
"1000173" [label = "(<operator>.assignment,st=(st+x)%p)" ]
"1000194" [label = "(<operator>.assignment,ret=0)" ]
"1000207" [label = "(RETURN,return ret;,return ret;)" ]
"1000124" [label = "(<operator>.arithmeticShiftRight,n>>m)" ]
"1000139" [label = "(<operator>.minus,-1)" ]
"1000151" [label = "(<operator>.greaterEqualsThan,train[i][0]+train[i][1]>=sz)" ]
"1000164" [label = "(heavytrains.pb,heavytrains.pb(i))" ]
"1000181" [label = "(<operator>.assignmentPlus,h[p][(i+st)%p]+=ch)" ]
"1000198" [label = "(<operator>.assignmentPlus,ret+=h[i][day%i])" ]
"1000208" [label = "(IDENTIFIER,ret,return ret;)" ]
"1000427" [label = "(<operator>.shiftLeft,cout<<get(j)+ans<<'\n')" ]
"1000170" [label = "(<operator>.addition,x+y)" ]
"1000175" [label = "(<operator>.modulo,(st+x)%p)" ]
"1000152" [label = "(<operator>.addition,train[i][0]+train[i][1])" ]
"1000176" [label = "(<operator>.addition,st+x)" ]
"1000186" [label = "(<operator>.modulo,(i+st)%p)" ]
"1000204" [label = "(<operator>.modulo,day%i)" ]
"1000187" [label = "(<operator>.addition,i+st)" ]
"1000227" [label = "(<operator>.equals,x==1)" ]
"1000260" [label = "(<operator>.lessThan,train[y][0]+train[y][1]<sz)" ]
"1000231" [label = "(<operator>.assignment,days[y][0]=j)" ]
"1000238" [label = "(<operator>.assignment,days[y][1]=m+1)" ]
"1000248" [label = "(<operator>.assignment,days[y][1]=j)" ]
"1000274" [label = "(change,change(days[y][0],train[y][0],train[y][1],((x==1)?1:-1)))" ]
"1000232" [label = "(<operator>.indirectIndexAccess,days[y][0])" ]
"1000239" [label = "(<operator>.indirectIndexAccess,days[y][1])" ]
"1000244" [label = "(<operator>.addition,m+1)" ]
"1000249" [label = "(<operator>.indirectIndexAccess,days[y][1])" ]
"1000275" [label = "(<operator>.indirectIndexAccess,days[y][0])" ]
"1000280" [label = "(<operator>.indirectIndexAccess,train[y][0])" ]
"1000285" [label = "(<operator>.indirectIndexAccess,train[y][1])" ]
"1000290" [label = "(<operator>.conditional,(x==1)?1:-1)" ]
"1000300" [label = "(<operator>.assignment,p=train[y][0]+train[y][1])" ]
"1000233" [label = "(<operator>.indirectIndexAccess,days[y])" ]
"1000240" [label = "(<operator>.indirectIndexAccess,days[y])" ]
"1000250" [label = "(<operator>.indirectIndexAccess,days[y])" ]
"1000276" [label = "(<operator>.indirectIndexAccess,days[y])" ]
"1000281" [label = "(<operator>.indirectIndexAccess,train[y])" ]
"1000286" [label = "(<operator>.indirectIndexAccess,train[y])" ]
"1000291" [label = "(<operator>.equals,x==1)" ]
"1000295" [label = "(<operator>.minus,-1)" ]
"1000302" [label = "(<operator>.addition,train[y][0]+train[y][1])" ]
"1000314" [label = "(<operator>.equals,x==1)" ]
"1000303" [label = "(<operator>.indirectIndexAccess,train[y][0])" ]
"1000308" [label = "(<operator>.indirectIndexAccess,train[y][1])" ]
"1000304" [label = "(<operator>.indirectIndexAccess,train[y])" ]
"1000309" [label = "(<operator>.indirectIndexAccess,train[y])" ]
"1000320" [label = "(<operator>.assignment,i=j+train[y][0])" ]
"1000329" [label = "(<operator>.lessEqualsThan,i<=m)" ]
"1000332" [label = "(<operator>.assignmentPlus,i+=p)" ]
"1000335" [label = "(<operator>.preIncrement,++pre[i])" ]
"1000341" [label = "(<operator>.assignment,i=j+p)" ]
"1000346" [label = "(<operator>.lessEqualsThan,i<=m)" ]
"1000349" [label = "(<operator>.assignmentPlus,i+=p)" ]
"1000352" [label = "(<operator>.preDecrement,--pre[i])" ]
"1000322" [label = "(<operator>.addition,j+train[y][0])" ]
"1000336" [label = "(<operator>.indirectIndexAccess,pre[i])" ]
"1000343" [label = "(<operator>.addition,j+p)" ]
"1000353" [label = "(<operator>.indirectIndexAccess,pre[i])" ]
"1000360" [label = "(<operator>.assignment,i=days[y][0]+train[y][0])" ]
"1000373" [label = "(<operator>.lessEqualsThan,i<=m)" ]
"1000376" [label = "(<operator>.assignmentPlus,i+=p)" ]
"1000402" [label = "(<operator>.assignment,i=days[y][0]+p)" ]
"1000411" [label = "(<operator>.lessEqualsThan,i<=m)" ]
"1000414" [label = "(<operator>.assignmentPlus,i+=p)" ]
"1000324" [label = "(<operator>.indirectIndexAccess,train[y][0])" ]
"1000362" [label = "(<operator>.addition,days[y][0]+train[y][0])" ]
"1000396" [label = "(<operator>.preDecrement,--pre[i])" ]
"1000404" [label = "(<operator>.addition,days[y][0]+p)" ]
"1000418" [label = "(<operator>.preIncrement,++pre[i])" ]
"1000325" [label = "(<operator>.indirectIndexAccess,train[y])" ]
"1000363" [label = "(<operator>.indirectIndexAccess,days[y][0])" ]
"1000368" [label = "(<operator>.indirectIndexAccess,train[y][0])" ]
"1000381" [label = "(<operator>.logicalAnd,i<j && i+train[y][1]>=j)" ]
"1000394" [label = "(<operator>.preDecrement,--ans)" ]
"1000397" [label = "(<operator>.indirectIndexAccess,pre[i])" ]
"1000405" [label = "(<operator>.indirectIndexAccess,days[y][0])" ]
"1000419" [label = "(<operator>.indirectIndexAccess,pre[i])" ]
"1000364" [label = "(<operator>.indirectIndexAccess,days[y])" ]
"1000369" [label = "(<operator>.indirectIndexAccess,train[y])" ]
"1000382" [label = "(<operator>.lessThan,i<j)" ]
"1000385" [label = "(<operator>.greaterEqualsThan,i+train[y][1]>=j)" ]
"1000406" [label = "(<operator>.indirectIndexAccess,days[y])" ]
"1000386" [label = "(<operator>.addition,i+train[y][1])" ]
"1000388" [label = "(<operator>.indirectIndexAccess,train[y][1])" ]
"1000389" [label = "(<operator>.indirectIndexAccess,train[y])" ]
  "1000207" -> "1000437"  [ label = "DDG: <RET>"] 
  "1000124" -> "1000437"  [ label = "DDG: n"] 
  "1000124" -> "1000437"  [ label = "DDG: m"] 
  "1000122" -> "1000437"  [ label = "DDG: n>>m"] 
  "1000122" -> "1000437"  [ label = "DDG: cin>>n>>m"] 
  "1000137" -> "1000437"  [ label = "DDG: days"] 
  "1000137" -> "1000437"  [ label = "DDG: -1"] 
  "1000137" -> "1000437"  [ label = "DDG: fill(days,-1)"] 
  "1000143" -> "1000437"  [ label = "DDG: cin"] 
  "1000143" -> "1000437"  [ label = "DDG: train[i][j]"] 
  "1000143" -> "1000437"  [ label = "DDG: cin>>train[i][j]"] 
  "1000152" -> "1000437"  [ label = "DDG: train[i][0]"] 
  "1000152" -> "1000437"  [ label = "DDG: train[i][1]"] 
  "1000151" -> "1000437"  [ label = "DDG: train[i][0]+train[i][1]"] 
  "1000151" -> "1000437"  [ label = "DDG: sz"] 
  "1000151" -> "1000437"  [ label = "DDG: train[i][0]+train[i][1]>=sz"] 
  "1000164" -> "1000437"  [ label = "DDG: heavytrains.pb(i)"] 
  "1000170" -> "1000437"  [ label = "DDG: y"] 
  "1000168" -> "1000437"  [ label = "DDG: x+y"] 
  "1000176" -> "1000437"  [ label = "DDG: x"] 
  "1000175" -> "1000437"  [ label = "DDG: st+x"] 
  "1000173" -> "1000437"  [ label = "DDG: (st+x)%p"] 
  "1000187" -> "1000437"  [ label = "DDG: st"] 
  "1000186" -> "1000437"  [ label = "DDG: i+st"] 
  "1000186" -> "1000437"  [ label = "DDG: p"] 
  "1000181" -> "1000437"  [ label = "DDG: h[p][(i+st)%p]"] 
  "1000198" -> "1000437"  [ label = "DDG: ret"] 
  "1000204" -> "1000437"  [ label = "DDG: i"] 
  "1000198" -> "1000437"  [ label = "DDG: h[i][day%i]"] 
  "1000427" -> "1000437"  [ label = "DDG: cout"] 
  "1000181" -> "1000437"  [ label = "DDG: ch"] 
  "1000204" -> "1000437"  [ label = "DDG: day"] 
  "1000118" -> "1000122"  [ label = "DDG: "] 
  "1000124" -> "1000122"  [ label = "DDG: n"] 
  "1000124" -> "1000122"  [ label = "DDG: m"] 
  "1000118" -> "1000137"  [ label = "DDG: "] 
  "1000139" -> "1000137"  [ label = "DDG: 1"] 
  "1000118" -> "1000168"  [ label = "DDG: "] 
  "1000175" -> "1000173"  [ label = "DDG: p"] 
  "1000175" -> "1000173"  [ label = "DDG: st+x"] 
  "1000118" -> "1000194"  [ label = "DDG: "] 
  "1000208" -> "1000207"  [ label = "DDG: ret"] 
  "1000198" -> "1000207"  [ label = "DDG: ret"] 
  "1000118" -> "1000124"  [ label = "DDG: "] 
  "1000118" -> "1000139"  [ label = "DDG: "] 
  "1000122" -> "1000143"  [ label = "DDG: cin"] 
  "1000118" -> "1000143"  [ label = "DDG: "] 
  "1000118" -> "1000173"  [ label = "DDG: "] 
  "1000118" -> "1000181"  [ label = "DDG: "] 
  "1000118" -> "1000208"  [ label = "DDG: "] 
  "1000118" -> "1000151"  [ label = "DDG: "] 
  "1000118" -> "1000164"  [ label = "DDG: "] 
  "1000118" -> "1000170"  [ label = "DDG: "] 
  "1000118" -> "1000175"  [ label = "DDG: "] 
  "1000168" -> "1000175"  [ label = "DDG: p"] 
  "1000194" -> "1000198"  [ label = "DDG: ret"] 
  "1000118" -> "1000198"  [ label = "DDG: "] 
  "1000118" -> "1000176"  [ label = "DDG: "] 
  "1000164" -> "1000186"  [ label = "DDG: i"] 
  "1000118" -> "1000186"  [ label = "DDG: "] 
  "1000173" -> "1000186"  [ label = "DDG: st"] 
  "1000175" -> "1000186"  [ label = "DDG: p"] 
  "1000118" -> "1000204"  [ label = "DDG: "] 
  "1000164" -> "1000204"  [ label = "DDG: i"] 
  "1000164" -> "1000187"  [ label = "DDG: i"] 
  "1000118" -> "1000187"  [ label = "DDG: "] 
  "1000173" -> "1000187"  [ label = "DDG: st"] 
  "1000151" -> "1000164"  [ label = "CDG: "] 
  "1000227" -> "1000238"  [ label = "CDG: "] 
  "1000227" -> "1000233"  [ label = "CDG: "] 
  "1000227" -> "1000244"  [ label = "CDG: "] 
  "1000227" -> "1000250"  [ label = "CDG: "] 
  "1000227" -> "1000248"  [ label = "CDG: "] 
  "1000227" -> "1000240"  [ label = "CDG: "] 
  "1000227" -> "1000232"  [ label = "CDG: "] 
  "1000227" -> "1000239"  [ label = "CDG: "] 
  "1000227" -> "1000249"  [ label = "CDG: "] 
  "1000227" -> "1000231"  [ label = "CDG: "] 
  "1000260" -> "1000285"  [ label = "CDG: "] 
  "1000260" -> "1000276"  [ label = "CDG: "] 
  "1000260" -> "1000302"  [ label = "CDG: "] 
  "1000260" -> "1000291"  [ label = "CDG: "] 
  "1000260" -> "1000274"  [ label = "CDG: "] 
  "1000260" -> "1000281"  [ label = "CDG: "] 
  "1000260" -> "1000308"  [ label = "CDG: "] 
  "1000260" -> "1000314"  [ label = "CDG: "] 
  "1000260" -> "1000300"  [ label = "CDG: "] 
  "1000260" -> "1000304"  [ label = "CDG: "] 
  "1000260" -> "1000303"  [ label = "CDG: "] 
  "1000260" -> "1000286"  [ label = "CDG: "] 
  "1000260" -> "1000290"  [ label = "CDG: "] 
  "1000260" -> "1000309"  [ label = "CDG: "] 
  "1000260" -> "1000280"  [ label = "CDG: "] 
  "1000260" -> "1000275"  [ label = "CDG: "] 
  "1000291" -> "1000295"  [ label = "CDG: "] 
  "1000314" -> "1000362"  [ label = "CDG: "] 
  "1000314" -> "1000406"  [ label = "CDG: "] 
  "1000314" -> "1000368"  [ label = "CDG: "] 
  "1000314" -> "1000404"  [ label = "CDG: "] 
  "1000314" -> "1000405"  [ label = "CDG: "] 
  "1000314" -> "1000373"  [ label = "CDG: "] 
  "1000314" -> "1000329"  [ label = "CDG: "] 
  "1000314" -> "1000363"  [ label = "CDG: "] 
  "1000314" -> "1000402"  [ label = "CDG: "] 
  "1000314" -> "1000320"  [ label = "CDG: "] 
  "1000314" -> "1000364"  [ label = "CDG: "] 
  "1000314" -> "1000341"  [ label = "CDG: "] 
  "1000314" -> "1000324"  [ label = "CDG: "] 
  "1000314" -> "1000360"  [ label = "CDG: "] 
  "1000314" -> "1000346"  [ label = "CDG: "] 
  "1000314" -> "1000343"  [ label = "CDG: "] 
  "1000314" -> "1000325"  [ label = "CDG: "] 
  "1000314" -> "1000411"  [ label = "CDG: "] 
  "1000314" -> "1000369"  [ label = "CDG: "] 
  "1000314" -> "1000322"  [ label = "CDG: "] 
  "1000329" -> "1000332"  [ label = "CDG: "] 
  "1000329" -> "1000336"  [ label = "CDG: "] 
  "1000329" -> "1000329"  [ label = "CDG: "] 
  "1000329" -> "1000335"  [ label = "CDG: "] 
  "1000346" -> "1000353"  [ label = "CDG: "] 
  "1000346" -> "1000349"  [ label = "CDG: "] 
  "1000346" -> "1000352"  [ label = "CDG: "] 
  "1000346" -> "1000346"  [ label = "CDG: "] 
  "1000373" -> "1000396"  [ label = "CDG: "] 
  "1000373" -> "1000373"  [ label = "CDG: "] 
  "1000373" -> "1000382"  [ label = "CDG: "] 
  "1000373" -> "1000376"  [ label = "CDG: "] 
  "1000373" -> "1000397"  [ label = "CDG: "] 
  "1000373" -> "1000381"  [ label = "CDG: "] 
  "1000411" -> "1000414"  [ label = "CDG: "] 
  "1000411" -> "1000419"  [ label = "CDG: "] 
  "1000411" -> "1000418"  [ label = "CDG: "] 
  "1000411" -> "1000411"  [ label = "CDG: "] 
  "1000381" -> "1000394"  [ label = "CDG: "] 
  "1000382" -> "1000389"  [ label = "CDG: "] 
  "1000382" -> "1000385"  [ label = "CDG: "] 
  "1000382" -> "1000388"  [ label = "CDG: "] 
  "1000382" -> "1000386"  [ label = "CDG: "] 
}
