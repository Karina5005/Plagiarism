digraph "main" {  
"1000119" [label = "(METHOD,main)" ]
"1000438" [label = "(METHOD_RETURN,signed)" ]
"1000123" [label = "(<operator>.arithmeticShiftRight,cin>>n>>m)" ]
"1000138" [label = "(fill,fill(days,-1))" ]
"1000144" [label = "(<operator>.arithmeticShiftRight,cin>>train[i][j])" ]
"1000169" [label = "(<operator>.assignment,p=x+y)" ]
"1000174" [label = "(<operator>.assignment,st=(st+x)%p)" ]
"1000195" [label = "(<operator>.assignment,ret=0)" ]
"1000208" [label = "(RETURN,return ret;,return ret;)" ]
"1000125" [label = "(<operator>.arithmeticShiftRight,n>>m)" ]
"1000140" [label = "(<operator>.minus,-1)" ]
"1000152" [label = "(<operator>.greaterEqualsThan,train[i][0]+train[i][1]>=sz)" ]
"1000165" [label = "(heavytrains.pb,heavytrains.pb(i))" ]
"1000182" [label = "(<operator>.assignmentPlus,h[p][(i+st)%p]+=ch)" ]
"1000199" [label = "(<operator>.assignmentPlus,ret+=h[i][day%i])" ]
"1000209" [label = "(IDENTIFIER,ret,return ret;)" ]
"1000428" [label = "(<operator>.shiftLeft,cout<<get(j)+ans<<'\n')" ]
"1000171" [label = "(<operator>.addition,x+y)" ]
"1000176" [label = "(<operator>.modulo,(st+x)%p)" ]
"1000153" [label = "(<operator>.addition,train[i][0]+train[i][1])" ]
"1000177" [label = "(<operator>.addition,st+x)" ]
"1000187" [label = "(<operator>.modulo,(i+st)%p)" ]
"1000205" [label = "(<operator>.modulo,day%i)" ]
"1000188" [label = "(<operator>.addition,i+st)" ]
"1000228" [label = "(<operator>.equals,x==1)" ]
"1000261" [label = "(<operator>.lessThan,train[y][0]+train[y][1]<sz)" ]
"1000232" [label = "(<operator>.assignment,days[y][0]=j)" ]
"1000239" [label = "(<operator>.assignment,days[y][1]=m+1)" ]
"1000249" [label = "(<operator>.assignment,days[y][1]=j)" ]
"1000275" [label = "(change,change(days[y][0],train[y][0],train[y][1],((x==1)?1:-1)))" ]
"1000233" [label = "(<operator>.indirectIndexAccess,days[y][0])" ]
"1000240" [label = "(<operator>.indirectIndexAccess,days[y][1])" ]
"1000245" [label = "(<operator>.addition,m+1)" ]
"1000250" [label = "(<operator>.indirectIndexAccess,days[y][1])" ]
"1000276" [label = "(<operator>.indirectIndexAccess,days[y][0])" ]
"1000281" [label = "(<operator>.indirectIndexAccess,train[y][0])" ]
"1000286" [label = "(<operator>.indirectIndexAccess,train[y][1])" ]
"1000291" [label = "(<operator>.conditional,(x==1)?1:-1)" ]
"1000301" [label = "(<operator>.assignment,p=train[y][0]+train[y][1])" ]
"1000234" [label = "(<operator>.indirectIndexAccess,days[y])" ]
"1000241" [label = "(<operator>.indirectIndexAccess,days[y])" ]
"1000251" [label = "(<operator>.indirectIndexAccess,days[y])" ]
"1000277" [label = "(<operator>.indirectIndexAccess,days[y])" ]
"1000282" [label = "(<operator>.indirectIndexAccess,train[y])" ]
"1000287" [label = "(<operator>.indirectIndexAccess,train[y])" ]
"1000292" [label = "(<operator>.equals,x==1)" ]
"1000296" [label = "(<operator>.minus,-1)" ]
"1000303" [label = "(<operator>.addition,train[y][0]+train[y][1])" ]
"1000315" [label = "(<operator>.equals,x==1)" ]
"1000304" [label = "(<operator>.indirectIndexAccess,train[y][0])" ]
"1000309" [label = "(<operator>.indirectIndexAccess,train[y][1])" ]
"1000305" [label = "(<operator>.indirectIndexAccess,train[y])" ]
"1000310" [label = "(<operator>.indirectIndexAccess,train[y])" ]
"1000321" [label = "(<operator>.assignment,i=j+train[y][0])" ]
"1000330" [label = "(<operator>.lessEqualsThan,i<=m)" ]
"1000333" [label = "(<operator>.assignmentPlus,i+=p)" ]
"1000336" [label = "(<operator>.preIncrement,++pre[i])" ]
"1000342" [label = "(<operator>.assignment,i=j+p)" ]
"1000347" [label = "(<operator>.lessEqualsThan,i<=m)" ]
"1000350" [label = "(<operator>.assignmentPlus,i+=p)" ]
"1000353" [label = "(<operator>.preDecrement,--pre[i])" ]
"1000323" [label = "(<operator>.addition,j+train[y][0])" ]
"1000337" [label = "(<operator>.indirectIndexAccess,pre[i])" ]
"1000344" [label = "(<operator>.addition,j+p)" ]
"1000354" [label = "(<operator>.indirectIndexAccess,pre[i])" ]
"1000361" [label = "(<operator>.assignment,i=days[y][0]+train[y][0])" ]
"1000374" [label = "(<operator>.lessEqualsThan,i<=m)" ]
"1000377" [label = "(<operator>.assignmentPlus,i+=p)" ]
"1000403" [label = "(<operator>.assignment,i=days[y][0]+p)" ]
"1000412" [label = "(<operator>.lessEqualsThan,i<=m)" ]
"1000415" [label = "(<operator>.assignmentPlus,i+=p)" ]
"1000325" [label = "(<operator>.indirectIndexAccess,train[y][0])" ]
"1000363" [label = "(<operator>.addition,days[y][0]+train[y][0])" ]
"1000397" [label = "(<operator>.preDecrement,--pre[i])" ]
"1000405" [label = "(<operator>.addition,days[y][0]+p)" ]
"1000419" [label = "(<operator>.preIncrement,++pre[i])" ]
"1000326" [label = "(<operator>.indirectIndexAccess,train[y])" ]
"1000364" [label = "(<operator>.indirectIndexAccess,days[y][0])" ]
"1000369" [label = "(<operator>.indirectIndexAccess,train[y][0])" ]
"1000382" [label = "(<operator>.logicalAnd,i<j && i+train[y][1]>=j)" ]
"1000395" [label = "(<operator>.preDecrement,--ans)" ]
"1000398" [label = "(<operator>.indirectIndexAccess,pre[i])" ]
"1000406" [label = "(<operator>.indirectIndexAccess,days[y][0])" ]
"1000420" [label = "(<operator>.indirectIndexAccess,pre[i])" ]
"1000365" [label = "(<operator>.indirectIndexAccess,days[y])" ]
"1000370" [label = "(<operator>.indirectIndexAccess,train[y])" ]
"1000383" [label = "(<operator>.lessThan,i<j)" ]
"1000386" [label = "(<operator>.greaterEqualsThan,i+train[y][1]>=j)" ]
"1000407" [label = "(<operator>.indirectIndexAccess,days[y])" ]
"1000387" [label = "(<operator>.addition,i+train[y][1])" ]
"1000389" [label = "(<operator>.indirectIndexAccess,train[y][1])" ]
"1000390" [label = "(<operator>.indirectIndexAccess,train[y])" ]
  "1000208" -> "1000438"  [ label = "DDG: <RET>"] 
  "1000125" -> "1000438"  [ label = "DDG: n"] 
  "1000125" -> "1000438"  [ label = "DDG: m"] 
  "1000123" -> "1000438"  [ label = "DDG: n>>m"] 
  "1000123" -> "1000438"  [ label = "DDG: cin>>n>>m"] 
  "1000138" -> "1000438"  [ label = "DDG: days"] 
  "1000138" -> "1000438"  [ label = "DDG: -1"] 
  "1000138" -> "1000438"  [ label = "DDG: fill(days,-1)"] 
  "1000144" -> "1000438"  [ label = "DDG: cin"] 
  "1000144" -> "1000438"  [ label = "DDG: train[i][j]"] 
  "1000144" -> "1000438"  [ label = "DDG: cin>>train[i][j]"] 
  "1000153" -> "1000438"  [ label = "DDG: train[i][0]"] 
  "1000153" -> "1000438"  [ label = "DDG: train[i][1]"] 
  "1000152" -> "1000438"  [ label = "DDG: train[i][0]+train[i][1]"] 
  "1000152" -> "1000438"  [ label = "DDG: sz"] 
  "1000152" -> "1000438"  [ label = "DDG: train[i][0]+train[i][1]>=sz"] 
  "1000165" -> "1000438"  [ label = "DDG: heavytrains.pb(i)"] 
  "1000171" -> "1000438"  [ label = "DDG: y"] 
  "1000169" -> "1000438"  [ label = "DDG: x+y"] 
  "1000177" -> "1000438"  [ label = "DDG: x"] 
  "1000176" -> "1000438"  [ label = "DDG: st+x"] 
  "1000174" -> "1000438"  [ label = "DDG: (st+x)%p"] 
  "1000188" -> "1000438"  [ label = "DDG: st"] 
  "1000187" -> "1000438"  [ label = "DDG: i+st"] 
  "1000187" -> "1000438"  [ label = "DDG: p"] 
  "1000182" -> "1000438"  [ label = "DDG: h[p][(i+st)%p]"] 
  "1000199" -> "1000438"  [ label = "DDG: ret"] 
  "1000205" -> "1000438"  [ label = "DDG: i"] 
  "1000199" -> "1000438"  [ label = "DDG: h[i][day%i]"] 
  "1000205" -> "1000438"  [ label = "DDG: day"] 
  "1000182" -> "1000438"  [ label = "DDG: ch"] 
  "1000428" -> "1000438"  [ label = "DDG: cout"] 
  "1000119" -> "1000123"  [ label = "DDG: "] 
  "1000125" -> "1000123"  [ label = "DDG: m"] 
  "1000125" -> "1000123"  [ label = "DDG: n"] 
  "1000119" -> "1000138"  [ label = "DDG: "] 
  "1000140" -> "1000138"  [ label = "DDG: 1"] 
  "1000119" -> "1000169"  [ label = "DDG: "] 
  "1000176" -> "1000174"  [ label = "DDG: p"] 
  "1000176" -> "1000174"  [ label = "DDG: st+x"] 
  "1000119" -> "1000195"  [ label = "DDG: "] 
  "1000209" -> "1000208"  [ label = "DDG: ret"] 
  "1000199" -> "1000208"  [ label = "DDG: ret"] 
  "1000119" -> "1000125"  [ label = "DDG: "] 
  "1000119" -> "1000140"  [ label = "DDG: "] 
  "1000123" -> "1000144"  [ label = "DDG: cin"] 
  "1000119" -> "1000144"  [ label = "DDG: "] 
  "1000119" -> "1000174"  [ label = "DDG: "] 
  "1000119" -> "1000182"  [ label = "DDG: "] 
  "1000119" -> "1000209"  [ label = "DDG: "] 
  "1000119" -> "1000152"  [ label = "DDG: "] 
  "1000119" -> "1000165"  [ label = "DDG: "] 
  "1000119" -> "1000171"  [ label = "DDG: "] 
  "1000119" -> "1000176"  [ label = "DDG: "] 
  "1000169" -> "1000176"  [ label = "DDG: p"] 
  "1000195" -> "1000199"  [ label = "DDG: ret"] 
  "1000119" -> "1000199"  [ label = "DDG: "] 
  "1000119" -> "1000177"  [ label = "DDG: "] 
  "1000174" -> "1000187"  [ label = "DDG: st"] 
  "1000119" -> "1000187"  [ label = "DDG: "] 
  "1000165" -> "1000187"  [ label = "DDG: i"] 
  "1000176" -> "1000187"  [ label = "DDG: p"] 
  "1000119" -> "1000205"  [ label = "DDG: "] 
  "1000165" -> "1000205"  [ label = "DDG: i"] 
  "1000165" -> "1000188"  [ label = "DDG: i"] 
  "1000119" -> "1000188"  [ label = "DDG: "] 
  "1000174" -> "1000188"  [ label = "DDG: st"] 
  "1000152" -> "1000165"  [ label = "CDG: "] 
  "1000228" -> "1000233"  [ label = "CDG: "] 
  "1000228" -> "1000251"  [ label = "CDG: "] 
  "1000228" -> "1000250"  [ label = "CDG: "] 
  "1000228" -> "1000240"  [ label = "CDG: "] 
  "1000228" -> "1000245"  [ label = "CDG: "] 
  "1000228" -> "1000232"  [ label = "CDG: "] 
  "1000228" -> "1000239"  [ label = "CDG: "] 
  "1000228" -> "1000234"  [ label = "CDG: "] 
  "1000228" -> "1000249"  [ label = "CDG: "] 
  "1000228" -> "1000241"  [ label = "CDG: "] 
  "1000261" -> "1000305"  [ label = "CDG: "] 
  "1000261" -> "1000315"  [ label = "CDG: "] 
  "1000261" -> "1000276"  [ label = "CDG: "] 
  "1000261" -> "1000310"  [ label = "CDG: "] 
  "1000261" -> "1000291"  [ label = "CDG: "] 
  "1000261" -> "1000277"  [ label = "CDG: "] 
  "1000261" -> "1000281"  [ label = "CDG: "] 
  "1000261" -> "1000282"  [ label = "CDG: "] 
  "1000261" -> "1000304"  [ label = "CDG: "] 
  "1000261" -> "1000292"  [ label = "CDG: "] 
  "1000261" -> "1000303"  [ label = "CDG: "] 
  "1000261" -> "1000286"  [ label = "CDG: "] 
  "1000261" -> "1000309"  [ label = "CDG: "] 
  "1000261" -> "1000301"  [ label = "CDG: "] 
  "1000261" -> "1000287"  [ label = "CDG: "] 
  "1000261" -> "1000275"  [ label = "CDG: "] 
  "1000292" -> "1000296"  [ label = "CDG: "] 
  "1000315" -> "1000370"  [ label = "CDG: "] 
  "1000315" -> "1000406"  [ label = "CDG: "] 
  "1000315" -> "1000321"  [ label = "CDG: "] 
  "1000315" -> "1000407"  [ label = "CDG: "] 
  "1000315" -> "1000405"  [ label = "CDG: "] 
  "1000315" -> "1000326"  [ label = "CDG: "] 
  "1000315" -> "1000412"  [ label = "CDG: "] 
  "1000315" -> "1000330"  [ label = "CDG: "] 
  "1000315" -> "1000363"  [ label = "CDG: "] 
  "1000315" -> "1000364"  [ label = "CDG: "] 
  "1000315" -> "1000342"  [ label = "CDG: "] 
  "1000315" -> "1000344"  [ label = "CDG: "] 
  "1000315" -> "1000323"  [ label = "CDG: "] 
  "1000315" -> "1000403"  [ label = "CDG: "] 
  "1000315" -> "1000365"  [ label = "CDG: "] 
  "1000315" -> "1000361"  [ label = "CDG: "] 
  "1000315" -> "1000347"  [ label = "CDG: "] 
  "1000315" -> "1000374"  [ label = "CDG: "] 
  "1000315" -> "1000325"  [ label = "CDG: "] 
  "1000315" -> "1000369"  [ label = "CDG: "] 
  "1000330" -> "1000337"  [ label = "CDG: "] 
  "1000330" -> "1000330"  [ label = "CDG: "] 
  "1000330" -> "1000336"  [ label = "CDG: "] 
  "1000330" -> "1000333"  [ label = "CDG: "] 
  "1000347" -> "1000354"  [ label = "CDG: "] 
  "1000347" -> "1000353"  [ label = "CDG: "] 
  "1000347" -> "1000350"  [ label = "CDG: "] 
  "1000347" -> "1000347"  [ label = "CDG: "] 
  "1000374" -> "1000383"  [ label = "CDG: "] 
  "1000374" -> "1000398"  [ label = "CDG: "] 
  "1000374" -> "1000382"  [ label = "CDG: "] 
  "1000374" -> "1000397"  [ label = "CDG: "] 
  "1000374" -> "1000377"  [ label = "CDG: "] 
  "1000374" -> "1000374"  [ label = "CDG: "] 
  "1000412" -> "1000415"  [ label = "CDG: "] 
  "1000412" -> "1000420"  [ label = "CDG: "] 
  "1000412" -> "1000412"  [ label = "CDG: "] 
  "1000412" -> "1000419"  [ label = "CDG: "] 
  "1000382" -> "1000395"  [ label = "CDG: "] 
  "1000383" -> "1000389"  [ label = "CDG: "] 
  "1000383" -> "1000387"  [ label = "CDG: "] 
  "1000383" -> "1000386"  [ label = "CDG: "] 
  "1000383" -> "1000390"  [ label = "CDG: "] 
}
