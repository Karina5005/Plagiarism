digraph "main" {  
"1000283" [label = "(METHOD,main)" ]
"1000391" [label = "(METHOD_RETURN,int)" ]
"1000285" [label = "(scanf,scanf(\"%d%d%d%lld\",&n,&m,&k,&p))" ]
"1000295" [label = "(memset,memset(dp,-1,sizeof(dp)))" ]
"1000355" [label = "(<operator>.assignment,fac[0]=1)" ]
"1000383" [label = "(printf,printf(\"%lld\n\",F(n,m-1,k)))" ]
"1000303" [label = "(<operator>.assignment,i=0)" ]
"1000306" [label = "(<operator>.lessEqualsThan,i<=100)" ]
"1000309" [label = "(<operator>.postIncrement,i++)" ]
"1000362" [label = "(<operator>.assignment,i=1)" ]
"1000365" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000368" [label = "(<operator>.postIncrement,i++)" ]
"1000370" [label = "(<operator>.assignment,fac[i]=fac[i-1]*i%p)" ]
"1000297" [label = "(<operator>.minus,-1)" ]
"1000299" [label = "(<operator>.sizeOf,sizeof(dp))" ]
"1000312" [label = "(<operator>.assignment,C[i][0]=1)" ]
"1000385" [label = "(F,F(n,m-1,k))" ]
"1000321" [label = "(<operator>.assignment,j=1)" ]
"1000324" [label = "(<operator>.lessEqualsThan,j<=i)" ]
"1000327" [label = "(<operator>.postIncrement,j++)" ]
"1000374" [label = "(<operator>.multiplication,fac[i-1]*i%p)" ]
"1000387" [label = "(<operator>.subtraction,m-1)" ]
"1000330" [label = "(<operator>.assignment,C[i][j]=(C[i-1][j]+C[i-1][j-1])%p)" ]
"1000380" [label = "(<operator>.modulo,i%p)" ]
"1000377" [label = "(<operator>.subtraction,i-1)" ]
"1000336" [label = "(<operator>.modulo,(C[i-1][j]+C[i-1][j-1])%p)" ]
"1000337" [label = "(<operator>.addition,C[i-1][j]+C[i-1][j-1])" ]
"1000351" [label = "(<operator>.subtraction,j-1)" ]
"1000341" [label = "(<operator>.subtraction,i-1)" ]
"1000348" [label = "(<operator>.subtraction,i-1)" ]
"1000371" [label = "(<operator>.indirectIndexAccess,fac[i])" ]
"1000313" [label = "(<operator>.indirectIndexAccess,C[i][0])" ]
"1000375" [label = "(<operator>.indirectIndexAccess,fac[i-1])" ]
"1000314" [label = "(<operator>.indirectIndexAccess,C[i])" ]
"1000331" [label = "(<operator>.indirectIndexAccess,C[i][j])" ]
"1000332" [label = "(<operator>.indirectIndexAccess,C[i])" ]
"1000338" [label = "(<operator>.indirectIndexAccess,C[i-1][j])" ]
"1000345" [label = "(<operator>.indirectIndexAccess,C[i-1][j-1])" ]
"1000339" [label = "(<operator>.indirectIndexAccess,C[i-1])" ]
"1000346" [label = "(<operator>.indirectIndexAccess,C[i-1])" ]
  "1000285" -> "1000391"  [ label = "DDG: &n"] 
  "1000285" -> "1000391"  [ label = "DDG: &m"] 
  "1000285" -> "1000391"  [ label = "DDG: &k"] 
  "1000285" -> "1000391"  [ label = "DDG: &p"] 
  "1000295" -> "1000391"  [ label = "DDG: dp"] 
  "1000295" -> "1000391"  [ label = "DDG: -1"] 
  "1000295" -> "1000391"  [ label = "DDG: memset(dp,-1,sizeof(dp))"] 
  "1000306" -> "1000391"  [ label = "DDG: i<=100"] 
  "1000355" -> "1000391"  [ label = "DDG: fac[0]"] 
  "1000365" -> "1000391"  [ label = "DDG: i"] 
  "1000365" -> "1000391"  [ label = "DDG: i<=n"] 
  "1000385" -> "1000391"  [ label = "DDG: n"] 
  "1000387" -> "1000391"  [ label = "DDG: m"] 
  "1000385" -> "1000391"  [ label = "DDG: m-1"] 
  "1000385" -> "1000391"  [ label = "DDG: k"] 
  "1000383" -> "1000391"  [ label = "DDG: F(n,m-1,k)"] 
  "1000383" -> "1000391"  [ label = "DDG: printf(\"%lld\n\",F(n,m-1,k))"] 
  "1000370" -> "1000391"  [ label = "DDG: fac[i]"] 
  "1000374" -> "1000391"  [ label = "DDG: fac[i-1]"] 
  "1000380" -> "1000391"  [ label = "DDG: p"] 
  "1000374" -> "1000391"  [ label = "DDG: i%p"] 
  "1000370" -> "1000391"  [ label = "DDG: fac[i-1]*i%p"] 
  "1000312" -> "1000391"  [ label = "DDG: C[i][0]"] 
  "1000324" -> "1000391"  [ label = "DDG: j"] 
  "1000324" -> "1000391"  [ label = "DDG: j<=i"] 
  "1000330" -> "1000391"  [ label = "DDG: C[i][j]"] 
  "1000337" -> "1000391"  [ label = "DDG: C[i-1][j]"] 
  "1000337" -> "1000391"  [ label = "DDG: C[i-1][j-1]"] 
  "1000336" -> "1000391"  [ label = "DDG: C[i-1][j]+C[i-1][j-1]"] 
  "1000336" -> "1000391"  [ label = "DDG: p"] 
  "1000330" -> "1000391"  [ label = "DDG: (C[i-1][j]+C[i-1][j-1])%p"] 
  "1000283" -> "1000285"  [ label = "DDG: "] 
  "1000283" -> "1000355"  [ label = "DDG: "] 
  "1000283" -> "1000295"  [ label = "DDG: "] 
  "1000297" -> "1000295"  [ label = "DDG: 1"] 
  "1000283" -> "1000303"  [ label = "DDG: "] 
  "1000283" -> "1000362"  [ label = "DDG: "] 
  "1000374" -> "1000370"  [ label = "DDG: i%p"] 
  "1000374" -> "1000370"  [ label = "DDG: fac[i-1]"] 
  "1000283" -> "1000383"  [ label = "DDG: "] 
  "1000385" -> "1000383"  [ label = "DDG: k"] 
  "1000385" -> "1000383"  [ label = "DDG: m-1"] 
  "1000385" -> "1000383"  [ label = "DDG: n"] 
  "1000283" -> "1000297"  [ label = "DDG: "] 
  "1000283" -> "1000299"  [ label = "DDG: "] 
  "1000303" -> "1000306"  [ label = "DDG: i"] 
  "1000309" -> "1000306"  [ label = "DDG: i"] 
  "1000283" -> "1000306"  [ label = "DDG: "] 
  "1000324" -> "1000309"  [ label = "DDG: i"] 
  "1000283" -> "1000309"  [ label = "DDG: "] 
  "1000283" -> "1000312"  [ label = "DDG: "] 
  "1000362" -> "1000365"  [ label = "DDG: i"] 
  "1000368" -> "1000365"  [ label = "DDG: i"] 
  "1000283" -> "1000365"  [ label = "DDG: "] 
  "1000380" -> "1000368"  [ label = "DDG: i"] 
  "1000283" -> "1000368"  [ label = "DDG: "] 
  "1000365" -> "1000385"  [ label = "DDG: n"] 
  "1000283" -> "1000385"  [ label = "DDG: "] 
  "1000387" -> "1000385"  [ label = "DDG: 1"] 
  "1000387" -> "1000385"  [ label = "DDG: m"] 
  "1000283" -> "1000321"  [ label = "DDG: "] 
  "1000380" -> "1000374"  [ label = "DDG: i"] 
  "1000380" -> "1000374"  [ label = "DDG: p"] 
  "1000283" -> "1000387"  [ label = "DDG: "] 
  "1000321" -> "1000324"  [ label = "DDG: j"] 
  "1000327" -> "1000324"  [ label = "DDG: j"] 
  "1000283" -> "1000324"  [ label = "DDG: "] 
  "1000306" -> "1000324"  [ label = "DDG: i"] 
  "1000348" -> "1000324"  [ label = "DDG: i"] 
  "1000351" -> "1000327"  [ label = "DDG: j"] 
  "1000283" -> "1000327"  [ label = "DDG: "] 
  "1000336" -> "1000330"  [ label = "DDG: C[i-1][j]+C[i-1][j-1]"] 
  "1000336" -> "1000330"  [ label = "DDG: p"] 
  "1000377" -> "1000380"  [ label = "DDG: i"] 
  "1000283" -> "1000380"  [ label = "DDG: "] 
  "1000336" -> "1000380"  [ label = "DDG: p"] 
  "1000365" -> "1000377"  [ label = "DDG: i"] 
  "1000283" -> "1000377"  [ label = "DDG: "] 
  "1000283" -> "1000336"  [ label = "DDG: "] 
  "1000324" -> "1000351"  [ label = "DDG: j"] 
  "1000283" -> "1000351"  [ label = "DDG: "] 
  "1000324" -> "1000341"  [ label = "DDG: i"] 
  "1000283" -> "1000341"  [ label = "DDG: "] 
  "1000341" -> "1000348"  [ label = "DDG: i"] 
  "1000283" -> "1000348"  [ label = "DDG: "] 
  "1000306" -> "1000312"  [ label = "CDG: "] 
  "1000306" -> "1000324"  [ label = "CDG: "] 
  "1000306" -> "1000321"  [ label = "CDG: "] 
  "1000306" -> "1000306"  [ label = "CDG: "] 
  "1000306" -> "1000313"  [ label = "CDG: "] 
  "1000306" -> "1000309"  [ label = "CDG: "] 
  "1000306" -> "1000314"  [ label = "CDG: "] 
  "1000365" -> "1000380"  [ label = "CDG: "] 
  "1000365" -> "1000370"  [ label = "CDG: "] 
  "1000365" -> "1000371"  [ label = "CDG: "] 
  "1000365" -> "1000368"  [ label = "CDG: "] 
  "1000365" -> "1000377"  [ label = "CDG: "] 
  "1000365" -> "1000375"  [ label = "CDG: "] 
  "1000365" -> "1000365"  [ label = "CDG: "] 
  "1000365" -> "1000374"  [ label = "CDG: "] 
  "1000324" -> "1000341"  [ label = "CDG: "] 
  "1000324" -> "1000332"  [ label = "CDG: "] 
  "1000324" -> "1000337"  [ label = "CDG: "] 
  "1000324" -> "1000324"  [ label = "CDG: "] 
  "1000324" -> "1000345"  [ label = "CDG: "] 
  "1000324" -> "1000338"  [ label = "CDG: "] 
  "1000324" -> "1000351"  [ label = "CDG: "] 
  "1000324" -> "1000330"  [ label = "CDG: "] 
  "1000324" -> "1000346"  [ label = "CDG: "] 
  "1000324" -> "1000336"  [ label = "CDG: "] 
  "1000324" -> "1000331"  [ label = "CDG: "] 
  "1000324" -> "1000327"  [ label = "CDG: "] 
  "1000324" -> "1000348"  [ label = "CDG: "] 
  "1000324" -> "1000339"  [ label = "CDG: "] 
}
