digraph "solution" {  
"1001632" [label = "(METHOD,solution)" ]
"1001800" [label = "(METHOD_RETURN,void)" ]
"1001637" [label = "(<operator>.arithmeticShiftRight,cin >> a >> b >> n)" ]
"1001690" [label = "(sort,sort(all(monster)))" ]
"1001762" [label = "(<operator>.assignment,all = 1)" ]
"1001645" [label = "(<operator>.lessThan,vector<pair<ll)" ]
"1001650" [label = "(<operator>.arithmeticShiftRight,ll>> monster(n))" ]
"1001656" [label = "(<operator>.assignment,i = 0)" ]
"1001659" [label = "(<operator>.lessThan,i < n)" ]
"1001662" [label = "(<operator>.preIncrement,++i)" ]
"1001674" [label = "(<operator>.assignment,i = 0)" ]
"1001677" [label = "(<operator>.lessThan,i < n)" ]
"1001680" [label = "(<operator>.preIncrement,++i)" ]
"1001695" [label = "(<operator>.assignment,i = 0)" ]
"1001698" [label = "(<operator>.lessThan,i < n)" ]
"1001701" [label = "(<operator>.preIncrement,++i)" ]
"1001767" [label = "(<operator>.assignment,i = 0)" ]
"1001770" [label = "(<operator>.lessThan,i < n)" ]
"1001773" [label = "(<operator>.preIncrement,++i)" ]
"1001792" [label = "(IDENTIFIER,all,if (all))" ]
"1001793" [label = "(<operator>.shiftLeft,cout << \"YES\")" ]
"1001639" [label = "(<operator>.arithmeticShiftRight,a >> b >> n)" ]
"1001665" [label = "(<operator>.arithmeticShiftRight,cin >> monster[i].first)" ]
"1001683" [label = "(<operator>.arithmeticShiftRight,cin >> monster[i].second)" ]
"1001691" [label = "(all,all(monster))" ]
"1001705" [label = "(<operator>.assignment,turns_of_hero = ceil(monster[i].second / double(a)))" ]
"1001717" [label = "(<operator>.assignment,turns_of_monster = ceil(double(b) / monster[i].first))" ]
"1001728" [label = "(print,print(turns_of_hero, turns_of_monster))" ]
"1001732" [label = "(<operator>.assignment,mini = min(turns_of_hero, turns_of_monster))" ]
"1001737" [label = "(<operator>.assignmentMinus,b -= mini * monster[i].first)" ]
"1001746" [label = "(<operator>.assignmentMinus,monster[i].second -= mini * a)" ]
"1001776" [label = "(print,print(monster[i].second))" ]
"1001782" [label = "(<operators>.assignmentAnd,all &= monster[i].second <= 0)" ]
"1001797" [label = "(<operator>.shiftLeft,cout << \"NO\")" ]
"1001641" [label = "(<operator>.arithmeticShiftRight,b >> n)" ]
"1001647" [label = "(<operator>.lessThan,pair<ll)" ]
"1001652" [label = "(monster,monster(n))" ]
"1001756" [label = "(<operator>.lessThan,b < 1)" ]
"1001707" [label = "(ceil,ceil(monster[i].second / double(a)))" ]
"1001719" [label = "(ceil,ceil(double(b) / monster[i].first))" ]
"1001734" [label = "(min,min(turns_of_hero, turns_of_monster))" ]
"1001739" [label = "(<operator>.multiplication,mini * monster[i].first)" ]
"1001752" [label = "(<operator>.multiplication,mini * a)" ]
"1001784" [label = "(<operator>.lessEqualsThan,monster[i].second <= 0)" ]
"1001708" [label = "(<operator>.division,monster[i].second / double(a))" ]
"1001720" [label = "(<operator>.division,double(b) / monster[i].first)" ]
"1001714" [label = "(double,double(a))" ]
"1001721" [label = "(double,double(b))" ]
"1001667" [label = "(<operator>.fieldAccess,monster[i].first)" ]
"1001685" [label = "(<operator>.fieldAccess,monster[i].second)" ]
"1001747" [label = "(<operator>.fieldAccess,monster[i].second)" ]
"1001777" [label = "(<operator>.fieldAccess,monster[i].second)" ]
"1001668" [label = "(<operator>.indirectIndexAccess,monster[i])" ]
"1001671" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1001686" [label = "(<operator>.indirectIndexAccess,monster[i])" ]
"1001689" [label = "(FIELD_IDENTIFIER,second,second)" ]
"1001741" [label = "(<operator>.fieldAccess,monster[i].first)" ]
"1001748" [label = "(<operator>.indirectIndexAccess,monster[i])" ]
"1001751" [label = "(FIELD_IDENTIFIER,second,second)" ]
"1001778" [label = "(<operator>.indirectIndexAccess,monster[i])" ]
"1001781" [label = "(FIELD_IDENTIFIER,second,second)" ]
"1001785" [label = "(<operator>.fieldAccess,monster[i].second)" ]
"1001709" [label = "(<operator>.fieldAccess,monster[i].second)" ]
"1001723" [label = "(<operator>.fieldAccess,monster[i].first)" ]
"1001742" [label = "(<operator>.indirectIndexAccess,monster[i])" ]
"1001745" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1001786" [label = "(<operator>.indirectIndexAccess,monster[i])" ]
"1001789" [label = "(FIELD_IDENTIFIER,second,second)" ]
"1001710" [label = "(<operator>.indirectIndexAccess,monster[i])" ]
"1001713" [label = "(FIELD_IDENTIFIER,second,second)" ]
"1001724" [label = "(<operator>.indirectIndexAccess,monster[i])" ]
"1001727" [label = "(FIELD_IDENTIFIER,first,first)" ]
  "1001637" -> "1001800"  [ label = "DDG: cin"] 
  "1001639" -> "1001800"  [ label = "DDG: a"] 
  "1001641" -> "1001800"  [ label = "DDG: b"] 
  "1001639" -> "1001800"  [ label = "DDG: b >> n"] 
  "1001637" -> "1001800"  [ label = "DDG: a >> b >> n"] 
  "1001637" -> "1001800"  [ label = "DDG: cin >> a >> b >> n"] 
  "1001645" -> "1001800"  [ label = "DDG: pair<ll"] 
  "1001645" -> "1001800"  [ label = "DDG: vector<pair<ll"] 
  "1001650" -> "1001800"  [ label = "DDG: ll"] 
  "1001650" -> "1001800"  [ label = "DDG: monster(n)"] 
  "1001650" -> "1001800"  [ label = "DDG: ll>> monster(n)"] 
  "1001691" -> "1001800"  [ label = "DDG: monster"] 
  "1001690" -> "1001800"  [ label = "DDG: all(monster)"] 
  "1001690" -> "1001800"  [ label = "DDG: sort(all(monster))"] 
  "1001708" -> "1001800"  [ label = "DDG: double(a)"] 
  "1001707" -> "1001800"  [ label = "DDG: monster[i].second / double(a)"] 
  "1001705" -> "1001800"  [ label = "DDG: ceil(monster[i].second / double(a))"] 
  "1001720" -> "1001800"  [ label = "DDG: double(b)"] 
  "1001719" -> "1001800"  [ label = "DDG: double(b) / monster[i].first"] 
  "1001717" -> "1001800"  [ label = "DDG: ceil(double(b) / monster[i].first)"] 
  "1001728" -> "1001800"  [ label = "DDG: print(turns_of_hero, turns_of_monster)"] 
  "1001734" -> "1001800"  [ label = "DDG: turns_of_hero"] 
  "1001734" -> "1001800"  [ label = "DDG: turns_of_monster"] 
  "1001732" -> "1001800"  [ label = "DDG: min(turns_of_hero, turns_of_monster)"] 
  "1001737" -> "1001800"  [ label = "DDG: mini * monster[i].first"] 
  "1001752" -> "1001800"  [ label = "DDG: mini"] 
  "1001752" -> "1001800"  [ label = "DDG: a"] 
  "1001746" -> "1001800"  [ label = "DDG: mini * a"] 
  "1001756" -> "1001800"  [ label = "DDG: b"] 
  "1001756" -> "1001800"  [ label = "DDG: b < 1"] 
  "1001762" -> "1001800"  [ label = "DDG: all"] 
  "1001770" -> "1001800"  [ label = "DDG: i"] 
  "1001770" -> "1001800"  [ label = "DDG: n"] 
  "1001770" -> "1001800"  [ label = "DDG: i < n"] 
  "1001797" -> "1001800"  [ label = "DDG: cout"] 
  "1001797" -> "1001800"  [ label = "DDG: cout << \"NO\""] 
  "1001793" -> "1001800"  [ label = "DDG: cout"] 
  "1001793" -> "1001800"  [ label = "DDG: cout << \"YES\""] 
  "1001776" -> "1001800"  [ label = "DDG: print(monster[i].second)"] 
  "1001782" -> "1001800"  [ label = "DDG: all"] 
  "1001782" -> "1001800"  [ label = "DDG: monster[i].second <= 0"] 
  "1001782" -> "1001800"  [ label = "DDG: all &= monster[i].second <= 0"] 
  "1001683" -> "1001800"  [ label = "DDG: cin"] 
  "1001683" -> "1001800"  [ label = "DDG: cin >> monster[i].second"] 
  "1001665" -> "1001800"  [ label = "DDG: cin"] 
  "1001665" -> "1001800"  [ label = "DDG: cin >> monster[i].first"] 
  "1001645" -> "1001800"  [ label = "DDG: vector"] 
  "1001647" -> "1001800"  [ label = "DDG: pair"] 
  "1001632" -> "1001762"  [ label = "DDG: "] 
  "1001632" -> "1001637"  [ label = "DDG: "] 
  "1001639" -> "1001637"  [ label = "DDG: a"] 
  "1001639" -> "1001637"  [ label = "DDG: b >> n"] 
  "1001632" -> "1001656"  [ label = "DDG: "] 
  "1001632" -> "1001674"  [ label = "DDG: "] 
  "1001691" -> "1001690"  [ label = "DDG: monster"] 
  "1001632" -> "1001695"  [ label = "DDG: "] 
  "1001632" -> "1001767"  [ label = "DDG: "] 
  "1001632" -> "1001792"  [ label = "DDG: "] 
  "1001632" -> "1001639"  [ label = "DDG: "] 
  "1001641" -> "1001639"  [ label = "DDG: b"] 
  "1001641" -> "1001639"  [ label = "DDG: n"] 
  "1001632" -> "1001645"  [ label = "DDG: "] 
  "1001647" -> "1001645"  [ label = "DDG: pair"] 
  "1001647" -> "1001645"  [ label = "DDG: ll"] 
  "1001647" -> "1001650"  [ label = "DDG: ll"] 
  "1001632" -> "1001650"  [ label = "DDG: "] 
  "1001652" -> "1001650"  [ label = "DDG: n"] 
  "1001656" -> "1001659"  [ label = "DDG: i"] 
  "1001662" -> "1001659"  [ label = "DDG: i"] 
  "1001632" -> "1001659"  [ label = "DDG: "] 
  "1001652" -> "1001659"  [ label = "DDG: n"] 
  "1001659" -> "1001662"  [ label = "DDG: i"] 
  "1001632" -> "1001662"  [ label = "DDG: "] 
  "1001674" -> "1001677"  [ label = "DDG: i"] 
  "1001680" -> "1001677"  [ label = "DDG: i"] 
  "1001632" -> "1001677"  [ label = "DDG: "] 
  "1001659" -> "1001677"  [ label = "DDG: n"] 
  "1001677" -> "1001680"  [ label = "DDG: i"] 
  "1001632" -> "1001680"  [ label = "DDG: "] 
  "1001632" -> "1001691"  [ label = "DDG: "] 
  "1001695" -> "1001698"  [ label = "DDG: i"] 
  "1001701" -> "1001698"  [ label = "DDG: i"] 
  "1001632" -> "1001698"  [ label = "DDG: "] 
  "1001677" -> "1001698"  [ label = "DDG: n"] 
  "1001698" -> "1001701"  [ label = "DDG: i"] 
  "1001632" -> "1001701"  [ label = "DDG: "] 
  "1001707" -> "1001705"  [ label = "DDG: monster[i].second / double(a)"] 
  "1001719" -> "1001717"  [ label = "DDG: double(b) / monster[i].first"] 
  "1001734" -> "1001732"  [ label = "DDG: turns_of_monster"] 
  "1001734" -> "1001732"  [ label = "DDG: turns_of_hero"] 
  "1001739" -> "1001737"  [ label = "DDG: monster[i].first"] 
  "1001739" -> "1001737"  [ label = "DDG: mini"] 
  "1001752" -> "1001746"  [ label = "DDG: mini"] 
  "1001752" -> "1001746"  [ label = "DDG: a"] 
  "1001767" -> "1001770"  [ label = "DDG: i"] 
  "1001773" -> "1001770"  [ label = "DDG: i"] 
  "1001632" -> "1001770"  [ label = "DDG: "] 
  "1001698" -> "1001770"  [ label = "DDG: n"] 
  "1001770" -> "1001773"  [ label = "DDG: i"] 
  "1001632" -> "1001773"  [ label = "DDG: "] 
  "1001632" -> "1001793"  [ label = "DDG: "] 
  "1001632" -> "1001641"  [ label = "DDG: "] 
  "1001632" -> "1001647"  [ label = "DDG: "] 
  "1001641" -> "1001652"  [ label = "DDG: n"] 
  "1001632" -> "1001652"  [ label = "DDG: "] 
  "1001637" -> "1001665"  [ label = "DDG: cin"] 
  "1001632" -> "1001665"  [ label = "DDG: "] 
  "1001637" -> "1001683"  [ label = "DDG: cin"] 
  "1001665" -> "1001683"  [ label = "DDG: cin"] 
  "1001632" -> "1001683"  [ label = "DDG: "] 
  "1001632" -> "1001705"  [ label = "DDG: "] 
  "1001632" -> "1001717"  [ label = "DDG: "] 
  "1001705" -> "1001728"  [ label = "DDG: turns_of_hero"] 
  "1001632" -> "1001728"  [ label = "DDG: "] 
  "1001717" -> "1001728"  [ label = "DDG: turns_of_monster"] 
  "1001632" -> "1001732"  [ label = "DDG: "] 
  "1001721" -> "1001737"  [ label = "DDG: b"] 
  "1001632" -> "1001737"  [ label = "DDG: "] 
  "1001708" -> "1001746"  [ label = "DDG: monster[i].second"] 
  "1001762" -> "1001782"  [ label = "DDG: all"] 
  "1001632" -> "1001782"  [ label = "DDG: "] 
  "1001784" -> "1001782"  [ label = "DDG: 0"] 
  "1001784" -> "1001782"  [ label = "DDG: monster[i].second"] 
  "1001632" -> "1001797"  [ label = "DDG: "] 
  "1001708" -> "1001707"  [ label = "DDG: double(a)"] 
  "1001708" -> "1001707"  [ label = "DDG: monster[i].second"] 
  "1001720" -> "1001719"  [ label = "DDG: double(b)"] 
  "1001720" -> "1001719"  [ label = "DDG: monster[i].first"] 
  "1001728" -> "1001734"  [ label = "DDG: turns_of_hero"] 
  "1001632" -> "1001734"  [ label = "DDG: "] 
  "1001728" -> "1001734"  [ label = "DDG: turns_of_monster"] 
  "1001732" -> "1001739"  [ label = "DDG: mini"] 
  "1001632" -> "1001739"  [ label = "DDG: "] 
  "1001720" -> "1001739"  [ label = "DDG: monster[i].first"] 
  "1001739" -> "1001752"  [ label = "DDG: mini"] 
  "1001632" -> "1001752"  [ label = "DDG: "] 
  "1001714" -> "1001752"  [ label = "DDG: a"] 
  "1001737" -> "1001756"  [ label = "DDG: b"] 
  "1001632" -> "1001756"  [ label = "DDG: "] 
  "1001776" -> "1001784"  [ label = "DDG: monster[i].second"] 
  "1001632" -> "1001784"  [ label = "DDG: "] 
  "1001714" -> "1001708"  [ label = "DDG: a"] 
  "1001721" -> "1001720"  [ label = "DDG: b"] 
  "1001639" -> "1001714"  [ label = "DDG: a"] 
  "1001752" -> "1001714"  [ label = "DDG: a"] 
  "1001632" -> "1001714"  [ label = "DDG: "] 
  "1001641" -> "1001721"  [ label = "DDG: b"] 
  "1001756" -> "1001721"  [ label = "DDG: b"] 
  "1001632" -> "1001721"  [ label = "DDG: "] 
  "1001659" -> "1001662"  [ label = "CDG: "] 
  "1001659" -> "1001665"  [ label = "CDG: "] 
  "1001659" -> "1001667"  [ label = "CDG: "] 
  "1001659" -> "1001659"  [ label = "CDG: "] 
  "1001659" -> "1001671"  [ label = "CDG: "] 
  "1001659" -> "1001668"  [ label = "CDG: "] 
  "1001677" -> "1001689"  [ label = "CDG: "] 
  "1001677" -> "1001683"  [ label = "CDG: "] 
  "1001677" -> "1001685"  [ label = "CDG: "] 
  "1001677" -> "1001680"  [ label = "CDG: "] 
  "1001677" -> "1001686"  [ label = "CDG: "] 
  "1001677" -> "1001677"  [ label = "CDG: "] 
  "1001698" -> "1001705"  [ label = "CDG: "] 
  "1001698" -> "1001756"  [ label = "CDG: "] 
  "1001698" -> "1001739"  [ label = "CDG: "] 
  "1001698" -> "1001728"  [ label = "CDG: "] 
  "1001698" -> "1001748"  [ label = "CDG: "] 
  "1001698" -> "1001741"  [ label = "CDG: "] 
  "1001698" -> "1001745"  [ label = "CDG: "] 
  "1001698" -> "1001747"  [ label = "CDG: "] 
  "1001698" -> "1001717"  [ label = "CDG: "] 
  "1001698" -> "1001713"  [ label = "CDG: "] 
  "1001698" -> "1001751"  [ label = "CDG: "] 
  "1001698" -> "1001732"  [ label = "CDG: "] 
  "1001698" -> "1001710"  [ label = "CDG: "] 
  "1001698" -> "1001707"  [ label = "CDG: "] 
  "1001698" -> "1001727"  [ label = "CDG: "] 
  "1001698" -> "1001734"  [ label = "CDG: "] 
  "1001698" -> "1001714"  [ label = "CDG: "] 
  "1001698" -> "1001752"  [ label = "CDG: "] 
  "1001698" -> "1001720"  [ label = "CDG: "] 
  "1001698" -> "1001719"  [ label = "CDG: "] 
  "1001698" -> "1001709"  [ label = "CDG: "] 
  "1001698" -> "1001737"  [ label = "CDG: "] 
  "1001698" -> "1001746"  [ label = "CDG: "] 
  "1001698" -> "1001742"  [ label = "CDG: "] 
  "1001698" -> "1001708"  [ label = "CDG: "] 
  "1001698" -> "1001721"  [ label = "CDG: "] 
  "1001698" -> "1001723"  [ label = "CDG: "] 
  "1001698" -> "1001724"  [ label = "CDG: "] 
  "1001770" -> "1001781"  [ label = "CDG: "] 
  "1001770" -> "1001782"  [ label = "CDG: "] 
  "1001770" -> "1001777"  [ label = "CDG: "] 
  "1001770" -> "1001770"  [ label = "CDG: "] 
  "1001770" -> "1001785"  [ label = "CDG: "] 
  "1001770" -> "1001778"  [ label = "CDG: "] 
  "1001770" -> "1001786"  [ label = "CDG: "] 
  "1001770" -> "1001776"  [ label = "CDG: "] 
  "1001770" -> "1001773"  [ label = "CDG: "] 
  "1001770" -> "1001784"  [ label = "CDG: "] 
  "1001770" -> "1001789"  [ label = "CDG: "] 
  "1001756" -> "1001701"  [ label = "CDG: "] 
  "1001756" -> "1001698"  [ label = "CDG: "] 
}
