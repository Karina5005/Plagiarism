digraph "solution" {  
"1001632" [label = "(METHOD,solution)" ]
"1001676" [label = "(METHOD_RETURN,void)" ]
"1001635" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1001639" [label = "(<operator>.arithmeticShiftRight,cin >> v)" ]
"1001662" [label = "(<operator>.assignment,ans = p1.size() + p2.size() - 2)" ]
"1001669" [label = "(print,print(p1))" ]
"1001671" [label = "(print,print(p2))" ]
"1001673" [label = "(<operator>.shiftLeft,cout << ans)" ]
"1001645" [label = "(p1.push_back,p1.push_back(0))" ]
"1001647" [label = "(p2.push_back,p2.push_back(0))" ]
"1001651" [label = "(<operator>.assignment,i = 0)" ]
"1001654" [label = "(<operator>.lessThan,i < n)" ]
"1001657" [label = "(<operator>.preIncrement,++i)" ]
"1001664" [label = "(<operator>.addition,p1.size() + p2.size() - 2)" ]
"1001666" [label = "(<operator>.subtraction,p2.size() - 2)" ]
  "1001635" -> "1001676"  [ label = "DDG: cin >> n"] 
  "1001639" -> "1001676"  [ label = "DDG: cin"] 
  "1001639" -> "1001676"  [ label = "DDG: v"] 
  "1001639" -> "1001676"  [ label = "DDG: cin >> v"] 
  "1001645" -> "1001676"  [ label = "DDG: p1.push_back(0)"] 
  "1001647" -> "1001676"  [ label = "DDG: p2.push_back(0)"] 
  "1001654" -> "1001676"  [ label = "DDG: i"] 
  "1001654" -> "1001676"  [ label = "DDG: n"] 
  "1001654" -> "1001676"  [ label = "DDG: i < n"] 
  "1001664" -> "1001676"  [ label = "DDG: p1.size()"] 
  "1001666" -> "1001676"  [ label = "DDG: p2.size()"] 
  "1001664" -> "1001676"  [ label = "DDG: p2.size() - 2"] 
  "1001662" -> "1001676"  [ label = "DDG: p1.size() + p2.size() - 2"] 
  "1001669" -> "1001676"  [ label = "DDG: p1"] 
  "1001669" -> "1001676"  [ label = "DDG: print(p1)"] 
  "1001671" -> "1001676"  [ label = "DDG: p2"] 
  "1001671" -> "1001676"  [ label = "DDG: print(p2)"] 
  "1001673" -> "1001676"  [ label = "DDG: ans"] 
  "1001673" -> "1001676"  [ label = "DDG: cout << ans"] 
  "1001673" -> "1001676"  [ label = "DDG: cout"] 
  "1001666" -> "1001662"  [ label = "DDG: 2"] 
  "1001666" -> "1001662"  [ label = "DDG: p2.size()"] 
  "1001632" -> "1001662"  [ label = "DDG: "] 
  "1001632" -> "1001635"  [ label = "DDG: "] 
  "1001635" -> "1001639"  [ label = "DDG: cin"] 
  "1001632" -> "1001639"  [ label = "DDG: "] 
  "1001632" -> "1001651"  [ label = "DDG: "] 
  "1001632" -> "1001669"  [ label = "DDG: "] 
  "1001632" -> "1001671"  [ label = "DDG: "] 
  "1001632" -> "1001673"  [ label = "DDG: "] 
  "1001662" -> "1001673"  [ label = "DDG: ans"] 
  "1001632" -> "1001645"  [ label = "DDG: "] 
  "1001632" -> "1001647"  [ label = "DDG: "] 
  "1001651" -> "1001654"  [ label = "DDG: i"] 
  "1001657" -> "1001654"  [ label = "DDG: i"] 
  "1001632" -> "1001654"  [ label = "DDG: "] 
  "1001635" -> "1001654"  [ label = "DDG: n"] 
  "1001654" -> "1001657"  [ label = "DDG: i"] 
  "1001632" -> "1001657"  [ label = "DDG: "] 
  "1001632" -> "1001664"  [ label = "DDG: "] 
  "1001666" -> "1001664"  [ label = "DDG: 2"] 
  "1001666" -> "1001664"  [ label = "DDG: p2.size()"] 
  "1001632" -> "1001666"  [ label = "DDG: "] 
  "1001654" -> "1001657"  [ label = "CDG: "] 
  "1001654" -> "1001654"  [ label = "CDG: "] 
}
