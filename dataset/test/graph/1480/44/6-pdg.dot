digraph "main" {  
"1000223" [label = "(METHOD,main)" ]
"1000356" [label = "(METHOD_RETURN,int)" ]
"1000225" [label = "(IDENTIFIER,fastio,)" ]
"1000227" [label = "(<operator>.assignment,tc=1)" ]
"1000230" [label = "(<operator>.arithmeticShiftRight,cin >> tc)" ]
"1000354" [label = "(RETURN,return 0;,return 0;)" ]
"1000234" [label = "(<operator>.postDecrement,tc--)" ]
"1000355" [label = "(LITERAL,0,return 0;)" ]
"1000241" [label = "(<operator>.arithmeticShiftRight,cin >> A >> B >> n)" ]
"1000248" [label = "(<operator>.assignment,curr=B)" ]
"1000270" [label = "(<operator>.assignment,maxi = *max_element(attack_power.begin(), attack_power.end()))" ]
"1000255" [label = "(<operator>.assignment,i=0)" ]
"1000258" [label = "(<operator>.lessThan,i<n)" ]
"1000261" [label = "(<operator>.postIncrement,i++)" ]
"1000278" [label = "(<operator>.assignment,i=0)" ]
"1000281" [label = "(<operator>.lessThan,i<n)" ]
"1000284" [label = "(<operator>.postIncrement,i++)" ]
"1000336" [label = "(<operator>.lessEqualsThan,curr+maxi<=0)" ]
"1000243" [label = "(<operator>.arithmeticShiftRight,A >> B >> n)" ]
"1000264" [label = "(<operator>.arithmeticShiftRight,cin >> attack_power[i])" ]
"1000287" [label = "(<operator>.arithmeticShiftRight,cin >> initial_health[i])" ]
"1000342" [label = "(<operator>.shiftLeft,cout << \"NO\" << endl)" ]
"1000245" [label = "(<operator>.arithmeticShiftRight,B >> n)" ]
"1000273" [label = "(max_element,max_element(attack_power.begin(), attack_power.end()))" ]
"1000293" [label = "(<operator>.equals,initial_health[i]%A==0)" ]
"1000337" [label = "(<operator>.addition,curr+maxi)" ]
"1000349" [label = "(<operator>.shiftLeft,cout << \"YES\" << endl)" ]
"1000302" [label = "(<operator>.assignment,temp = initial_health[i]/A)" ]
"1000309" [label = "(<operator>.assignmentMinus,curr-=(temp*attack_power[i]))" ]
"1000344" [label = "(<operator>.shiftLeft,\"NO\" << endl)" ]
"1000294" [label = "(<operator>.modulo,initial_health[i]%A)" ]
"1000319" [label = "(<operator>.assignment,temp = initial_health[i]/A + 1)" ]
"1000328" [label = "(<operator>.assignmentMinus,curr-=(temp*attack_power[i]))" ]
"1000351" [label = "(<operator>.shiftLeft,\"YES\" << endl)" ]
"1000304" [label = "(<operator>.division,initial_health[i]/A)" ]
"1000311" [label = "(<operator>.multiplication,temp*attack_power[i])" ]
"1000321" [label = "(<operator>.addition,initial_health[i]/A + 1)" ]
"1000330" [label = "(<operator>.multiplication,temp*attack_power[i])" ]
"1000322" [label = "(<operator>.division,initial_health[i]/A)" ]
"1000272" [label = "(<operator>.indirection,*max_element(attack_power.begin(), attack_power.end()))" ]
"1000266" [label = "(<operator>.indirectIndexAccess,attack_power[i])" ]
"1000274" [label = "(attack_power.begin,attack_power.begin())" ]
"1000275" [label = "(attack_power.end,attack_power.end())" ]
"1000289" [label = "(<operator>.indirectIndexAccess,initial_health[i])" ]
"1000295" [label = "(<operator>.indirectIndexAccess,initial_health[i])" ]
"1000305" [label = "(<operator>.indirectIndexAccess,initial_health[i])" ]
"1000313" [label = "(<operator>.indirectIndexAccess,attack_power[i])" ]
"1000332" [label = "(<operator>.indirectIndexAccess,attack_power[i])" ]
"1000323" [label = "(<operator>.indirectIndexAccess,initial_health[i])" ]
  "1000230" -> "1000356"  [ label = "DDG: cin"] 
  "1000230" -> "1000356"  [ label = "DDG: cin >> tc"] 
  "1000234" -> "1000356"  [ label = "DDG: tc"] 
  "1000241" -> "1000356"  [ label = "DDG: cin"] 
  "1000243" -> "1000356"  [ label = "DDG: A"] 
  "1000243" -> "1000356"  [ label = "DDG: B >> n"] 
  "1000241" -> "1000356"  [ label = "DDG: A >> B >> n"] 
  "1000241" -> "1000356"  [ label = "DDG: cin >> A >> B >> n"] 
  "1000248" -> "1000356"  [ label = "DDG: B"] 
  "1000273" -> "1000356"  [ label = "DDG: attack_power.begin()"] 
  "1000273" -> "1000356"  [ label = "DDG: attack_power.end()"] 
  "1000270" -> "1000356"  [ label = "DDG: *max_element(attack_power.begin(), attack_power.end())"] 
  "1000281" -> "1000356"  [ label = "DDG: i"] 
  "1000281" -> "1000356"  [ label = "DDG: n"] 
  "1000281" -> "1000356"  [ label = "DDG: i<n"] 
  "1000337" -> "1000356"  [ label = "DDG: curr"] 
  "1000337" -> "1000356"  [ label = "DDG: maxi"] 
  "1000336" -> "1000356"  [ label = "DDG: curr+maxi"] 
  "1000336" -> "1000356"  [ label = "DDG: curr+maxi<=0"] 
  "1000349" -> "1000356"  [ label = "DDG: cout"] 
  "1000351" -> "1000356"  [ label = "DDG: endl"] 
  "1000349" -> "1000356"  [ label = "DDG: \"YES\" << endl"] 
  "1000349" -> "1000356"  [ label = "DDG: cout << \"YES\" << endl"] 
  "1000342" -> "1000356"  [ label = "DDG: cout"] 
  "1000344" -> "1000356"  [ label = "DDG: endl"] 
  "1000342" -> "1000356"  [ label = "DDG: \"NO\" << endl"] 
  "1000342" -> "1000356"  [ label = "DDG: cout << \"NO\" << endl"] 
  "1000287" -> "1000356"  [ label = "DDG: cin"] 
  "1000287" -> "1000356"  [ label = "DDG: cin >> initial_health[i]"] 
  "1000293" -> "1000356"  [ label = "DDG: initial_health[i]%A"] 
  "1000293" -> "1000356"  [ label = "DDG: initial_health[i]%A==0"] 
  "1000322" -> "1000356"  [ label = "DDG: initial_health[i]"] 
  "1000322" -> "1000356"  [ label = "DDG: A"] 
  "1000321" -> "1000356"  [ label = "DDG: initial_health[i]/A"] 
  "1000319" -> "1000356"  [ label = "DDG: initial_health[i]/A + 1"] 
  "1000330" -> "1000356"  [ label = "DDG: temp"] 
  "1000330" -> "1000356"  [ label = "DDG: attack_power[i]"] 
  "1000328" -> "1000356"  [ label = "DDG: temp*attack_power[i]"] 
  "1000304" -> "1000356"  [ label = "DDG: initial_health[i]"] 
  "1000304" -> "1000356"  [ label = "DDG: A"] 
  "1000302" -> "1000356"  [ label = "DDG: initial_health[i]/A"] 
  "1000311" -> "1000356"  [ label = "DDG: temp"] 
  "1000311" -> "1000356"  [ label = "DDG: attack_power[i]"] 
  "1000309" -> "1000356"  [ label = "DDG: temp*attack_power[i]"] 
  "1000264" -> "1000356"  [ label = "DDG: cin"] 
  "1000264" -> "1000356"  [ label = "DDG: attack_power[i]"] 
  "1000264" -> "1000356"  [ label = "DDG: cin >> attack_power[i]"] 
  "1000354" -> "1000356"  [ label = "DDG: <RET>"] 
  "1000223" -> "1000225"  [ label = "DDG: "] 
  "1000223" -> "1000227"  [ label = "DDG: "] 
  "1000355" -> "1000354"  [ label = "DDG: 0"] 
  "1000223" -> "1000354"  [ label = "DDG: "] 
  "1000223" -> "1000230"  [ label = "DDG: "] 
  "1000227" -> "1000230"  [ label = "DDG: tc"] 
  "1000223" -> "1000355"  [ label = "DDG: "] 
  "1000230" -> "1000234"  [ label = "DDG: tc"] 
  "1000223" -> "1000234"  [ label = "DDG: "] 
  "1000245" -> "1000248"  [ label = "DDG: B"] 
  "1000223" -> "1000248"  [ label = "DDG: "] 
  "1000230" -> "1000241"  [ label = "DDG: cin"] 
  "1000287" -> "1000241"  [ label = "DDG: cin"] 
  "1000264" -> "1000241"  [ label = "DDG: cin"] 
  "1000223" -> "1000241"  [ label = "DDG: "] 
  "1000243" -> "1000241"  [ label = "DDG: B >> n"] 
  "1000243" -> "1000241"  [ label = "DDG: A"] 
  "1000223" -> "1000255"  [ label = "DDG: "] 
  "1000223" -> "1000270"  [ label = "DDG: "] 
  "1000223" -> "1000278"  [ label = "DDG: "] 
  "1000322" -> "1000243"  [ label = "DDG: A"] 
  "1000304" -> "1000243"  [ label = "DDG: A"] 
  "1000223" -> "1000243"  [ label = "DDG: "] 
  "1000245" -> "1000243"  [ label = "DDG: n"] 
  "1000245" -> "1000243"  [ label = "DDG: B"] 
  "1000255" -> "1000258"  [ label = "DDG: i"] 
  "1000261" -> "1000258"  [ label = "DDG: i"] 
  "1000223" -> "1000258"  [ label = "DDG: "] 
  "1000245" -> "1000258"  [ label = "DDG: n"] 
  "1000258" -> "1000261"  [ label = "DDG: i"] 
  "1000223" -> "1000261"  [ label = "DDG: "] 
  "1000278" -> "1000281"  [ label = "DDG: i"] 
  "1000284" -> "1000281"  [ label = "DDG: i"] 
  "1000223" -> "1000281"  [ label = "DDG: "] 
  "1000258" -> "1000281"  [ label = "DDG: n"] 
  "1000281" -> "1000284"  [ label = "DDG: i"] 
  "1000223" -> "1000284"  [ label = "DDG: "] 
  "1000270" -> "1000336"  [ label = "DDG: maxi"] 
  "1000223" -> "1000336"  [ label = "DDG: "] 
  "1000248" -> "1000336"  [ label = "DDG: curr"] 
  "1000328" -> "1000336"  [ label = "DDG: curr"] 
  "1000309" -> "1000336"  [ label = "DDG: curr"] 
  "1000223" -> "1000245"  [ label = "DDG: "] 
  "1000281" -> "1000245"  [ label = "DDG: n"] 
  "1000241" -> "1000264"  [ label = "DDG: cin"] 
  "1000223" -> "1000264"  [ label = "DDG: "] 
  "1000330" -> "1000264"  [ label = "DDG: attack_power[i]"] 
  "1000311" -> "1000264"  [ label = "DDG: attack_power[i]"] 
  "1000223" -> "1000273"  [ label = "DDG: "] 
  "1000241" -> "1000287"  [ label = "DDG: cin"] 
  "1000264" -> "1000287"  [ label = "DDG: cin"] 
  "1000223" -> "1000287"  [ label = "DDG: "] 
  "1000322" -> "1000287"  [ label = "DDG: initial_health[i]"] 
  "1000304" -> "1000287"  [ label = "DDG: initial_health[i]"] 
  "1000248" -> "1000337"  [ label = "DDG: curr"] 
  "1000328" -> "1000337"  [ label = "DDG: curr"] 
  "1000309" -> "1000337"  [ label = "DDG: curr"] 
  "1000223" -> "1000337"  [ label = "DDG: "] 
  "1000270" -> "1000337"  [ label = "DDG: maxi"] 
  "1000349" -> "1000342"  [ label = "DDG: cout"] 
  "1000223" -> "1000342"  [ label = "DDG: "] 
  "1000344" -> "1000342"  [ label = "DDG: \"NO\""] 
  "1000344" -> "1000342"  [ label = "DDG: endl"] 
  "1000294" -> "1000293"  [ label = "DDG: initial_health[i]"] 
  "1000294" -> "1000293"  [ label = "DDG: A"] 
  "1000223" -> "1000293"  [ label = "DDG: "] 
  "1000304" -> "1000302"  [ label = "DDG: A"] 
  "1000304" -> "1000302"  [ label = "DDG: initial_health[i]"] 
  "1000311" -> "1000309"  [ label = "DDG: temp"] 
  "1000311" -> "1000309"  [ label = "DDG: attack_power[i]"] 
  "1000223" -> "1000344"  [ label = "DDG: "] 
  "1000351" -> "1000344"  [ label = "DDG: endl"] 
  "1000342" -> "1000349"  [ label = "DDG: cout"] 
  "1000223" -> "1000349"  [ label = "DDG: "] 
  "1000351" -> "1000349"  [ label = "DDG: \"YES\""] 
  "1000351" -> "1000349"  [ label = "DDG: endl"] 
  "1000287" -> "1000294"  [ label = "DDG: initial_health[i]"] 
  "1000243" -> "1000294"  [ label = "DDG: A"] 
  "1000322" -> "1000294"  [ label = "DDG: A"] 
  "1000304" -> "1000294"  [ label = "DDG: A"] 
  "1000223" -> "1000294"  [ label = "DDG: "] 
  "1000223" -> "1000302"  [ label = "DDG: "] 
  "1000248" -> "1000309"  [ label = "DDG: curr"] 
  "1000328" -> "1000309"  [ label = "DDG: curr"] 
  "1000223" -> "1000309"  [ label = "DDG: "] 
  "1000322" -> "1000319"  [ label = "DDG: initial_health[i]"] 
  "1000322" -> "1000319"  [ label = "DDG: A"] 
  "1000223" -> "1000319"  [ label = "DDG: "] 
  "1000330" -> "1000328"  [ label = "DDG: temp"] 
  "1000330" -> "1000328"  [ label = "DDG: attack_power[i]"] 
  "1000223" -> "1000351"  [ label = "DDG: "] 
  "1000344" -> "1000351"  [ label = "DDG: endl"] 
  "1000294" -> "1000304"  [ label = "DDG: initial_health[i]"] 
  "1000294" -> "1000304"  [ label = "DDG: A"] 
  "1000223" -> "1000304"  [ label = "DDG: "] 
  "1000302" -> "1000311"  [ label = "DDG: temp"] 
  "1000223" -> "1000311"  [ label = "DDG: "] 
  "1000330" -> "1000311"  [ label = "DDG: attack_power[i]"] 
  "1000264" -> "1000311"  [ label = "DDG: attack_power[i]"] 
  "1000248" -> "1000328"  [ label = "DDG: curr"] 
  "1000309" -> "1000328"  [ label = "DDG: curr"] 
  "1000223" -> "1000328"  [ label = "DDG: "] 
  "1000322" -> "1000321"  [ label = "DDG: initial_health[i]"] 
  "1000322" -> "1000321"  [ label = "DDG: A"] 
  "1000223" -> "1000321"  [ label = "DDG: "] 
  "1000319" -> "1000330"  [ label = "DDG: temp"] 
  "1000223" -> "1000330"  [ label = "DDG: "] 
  "1000311" -> "1000330"  [ label = "DDG: attack_power[i]"] 
  "1000264" -> "1000330"  [ label = "DDG: attack_power[i]"] 
  "1000294" -> "1000322"  [ label = "DDG: initial_health[i]"] 
  "1000294" -> "1000322"  [ label = "DDG: A"] 
  "1000223" -> "1000322"  [ label = "DDG: "] 
  "1000234" -> "1000258"  [ label = "CDG: "] 
  "1000234" -> "1000337"  [ label = "CDG: "] 
  "1000234" -> "1000255"  [ label = "CDG: "] 
  "1000234" -> "1000243"  [ label = "CDG: "] 
  "1000234" -> "1000274"  [ label = "CDG: "] 
  "1000234" -> "1000281"  [ label = "CDG: "] 
  "1000234" -> "1000336"  [ label = "CDG: "] 
  "1000234" -> "1000248"  [ label = "CDG: "] 
  "1000234" -> "1000273"  [ label = "CDG: "] 
  "1000234" -> "1000270"  [ label = "CDG: "] 
  "1000234" -> "1000245"  [ label = "CDG: "] 
  "1000234" -> "1000234"  [ label = "CDG: "] 
  "1000234" -> "1000272"  [ label = "CDG: "] 
  "1000234" -> "1000278"  [ label = "CDG: "] 
  "1000234" -> "1000241"  [ label = "CDG: "] 
  "1000234" -> "1000275"  [ label = "CDG: "] 
  "1000258" -> "1000258"  [ label = "CDG: "] 
  "1000258" -> "1000261"  [ label = "CDG: "] 
  "1000258" -> "1000266"  [ label = "CDG: "] 
  "1000258" -> "1000264"  [ label = "CDG: "] 
  "1000281" -> "1000294"  [ label = "CDG: "] 
  "1000281" -> "1000293"  [ label = "CDG: "] 
  "1000281" -> "1000281"  [ label = "CDG: "] 
  "1000281" -> "1000284"  [ label = "CDG: "] 
  "1000281" -> "1000289"  [ label = "CDG: "] 
  "1000281" -> "1000295"  [ label = "CDG: "] 
  "1000281" -> "1000287"  [ label = "CDG: "] 
  "1000336" -> "1000349"  [ label = "CDG: "] 
  "1000336" -> "1000342"  [ label = "CDG: "] 
  "1000336" -> "1000344"  [ label = "CDG: "] 
  "1000336" -> "1000351"  [ label = "CDG: "] 
  "1000293" -> "1000305"  [ label = "CDG: "] 
  "1000293" -> "1000332"  [ label = "CDG: "] 
  "1000293" -> "1000302"  [ label = "CDG: "] 
  "1000293" -> "1000321"  [ label = "CDG: "] 
  "1000293" -> "1000313"  [ label = "CDG: "] 
  "1000293" -> "1000330"  [ label = "CDG: "] 
  "1000293" -> "1000304"  [ label = "CDG: "] 
  "1000293" -> "1000311"  [ label = "CDG: "] 
  "1000293" -> "1000323"  [ label = "CDG: "] 
  "1000293" -> "1000328"  [ label = "CDG: "] 
  "1000293" -> "1000309"  [ label = "CDG: "] 
  "1000293" -> "1000319"  [ label = "CDG: "] 
  "1000293" -> "1000322"  [ label = "CDG: "] 
}
