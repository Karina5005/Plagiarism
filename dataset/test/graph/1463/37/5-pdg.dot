digraph "decToBinary" {  
"1000172" [label = "(METHOD,decToBinary)" ]
"1000205" [label = "(METHOD_RETURN,string)" ]
"1000173" [label = "(PARAM,int n)" ]
"1000176" [label = "(<operator>.assignment,s=\"\")" ]
"1000180" [label = "(<operator>.assignment,i = 0)" ]
"1000203" [label = "(RETURN,return s;,return s;)" ]
"1000184" [label = "(<operator>.greaterThan,n > 0)" ]
"1000204" [label = "(IDENTIFIER,s,return s;)" ]
"1000188" [label = "(<operator>.assignment,s =to_string(n % 2)+s)" ]
"1000196" [label = "(<operator>.assignment,n = n / 2)" ]
"1000201" [label = "(<operator>.postIncrement,i++)" ]
"1000190" [label = "(<operator>.addition,to_string(n % 2)+s)" ]
"1000198" [label = "(<operator>.division,n / 2)" ]
"1000191" [label = "(to_string,to_string(n % 2))" ]
"1000192" [label = "(<operator>.modulo,n % 2)" ]
  "1000173" -> "1000205"  [ label = "DDG: n"] 
  "1000176" -> "1000205"  [ label = "DDG: s"] 
  "1000180" -> "1000205"  [ label = "DDG: i"] 
  "1000184" -> "1000205"  [ label = "DDG: n"] 
  "1000184" -> "1000205"  [ label = "DDG: n > 0"] 
  "1000188" -> "1000205"  [ label = "DDG: s"] 
  "1000191" -> "1000205"  [ label = "DDG: n % 2"] 
  "1000190" -> "1000205"  [ label = "DDG: to_string(n % 2)"] 
  "1000188" -> "1000205"  [ label = "DDG: to_string(n % 2)+s"] 
  "1000196" -> "1000205"  [ label = "DDG: n / 2"] 
  "1000201" -> "1000205"  [ label = "DDG: i"] 
  "1000203" -> "1000205"  [ label = "DDG: <RET>"] 
  "1000172" -> "1000173"  [ label = "DDG: "] 
  "1000172" -> "1000176"  [ label = "DDG: "] 
  "1000172" -> "1000180"  [ label = "DDG: "] 
  "1000204" -> "1000203"  [ label = "DDG: s"] 
  "1000176" -> "1000203"  [ label = "DDG: s"] 
  "1000188" -> "1000203"  [ label = "DDG: s"] 
  "1000172" -> "1000204"  [ label = "DDG: "] 
  "1000196" -> "1000184"  [ label = "DDG: n"] 
  "1000173" -> "1000184"  [ label = "DDG: n"] 
  "1000172" -> "1000184"  [ label = "DDG: "] 
  "1000176" -> "1000188"  [ label = "DDG: s"] 
  "1000172" -> "1000188"  [ label = "DDG: "] 
  "1000191" -> "1000188"  [ label = "DDG: n % 2"] 
  "1000198" -> "1000196"  [ label = "DDG: 2"] 
  "1000198" -> "1000196"  [ label = "DDG: n"] 
  "1000173" -> "1000196"  [ label = "DDG: n"] 
  "1000172" -> "1000196"  [ label = "DDG: "] 
  "1000180" -> "1000201"  [ label = "DDG: i"] 
  "1000172" -> "1000201"  [ label = "DDG: "] 
  "1000191" -> "1000190"  [ label = "DDG: n % 2"] 
  "1000176" -> "1000190"  [ label = "DDG: s"] 
  "1000188" -> "1000190"  [ label = "DDG: s"] 
  "1000172" -> "1000190"  [ label = "DDG: "] 
  "1000192" -> "1000198"  [ label = "DDG: n"] 
  "1000173" -> "1000198"  [ label = "DDG: n"] 
  "1000172" -> "1000198"  [ label = "DDG: "] 
  "1000192" -> "1000191"  [ label = "DDG: n"] 
  "1000192" -> "1000191"  [ label = "DDG: 2"] 
  "1000184" -> "1000192"  [ label = "DDG: n"] 
  "1000173" -> "1000192"  [ label = "DDG: n"] 
  "1000172" -> "1000192"  [ label = "DDG: "] 
  "1000184" -> "1000201"  [ label = "CDG: "] 
  "1000184" -> "1000192"  [ label = "CDG: "] 
  "1000184" -> "1000184"  [ label = "CDG: "] 
  "1000184" -> "1000188"  [ label = "CDG: "] 
  "1000184" -> "1000198"  [ label = "CDG: "] 
  "1000184" -> "1000191"  [ label = "CDG: "] 
  "1000184" -> "1000190"  [ label = "CDG: "] 
  "1000184" -> "1000196"  [ label = "CDG: "] 
}
