digraph "isPrime" {  
"1000194" [label = "(METHOD,isPrime)" ]
"1000225" [label = "(METHOD_RETURN,bool)" ]
"1000195" [label = "(PARAM,ll n)" ]
"1000223" [label = "(RETURN,return true;,return true;)" ]
"1000198" [label = "(<operator>.lessEqualsThan,n <= 1)" ]
"1000201" [label = "(RETURN,return false;,return false;)" ]
"1000205" [label = "(<operator>.assignment,i = 2)" ]
"1000208" [label = "(<operator>.lessEqualsThan,i <= sqrt(n))" ]
"1000212" [label = "(<operator>.postIncrement,i++)" ]
"1000224" [label = "(IDENTIFIER,true,return true;)" ]
"1000202" [label = "(IDENTIFIER,false,return false;)" ]
"1000210" [label = "(sqrt,sqrt(n))" ]
"1000216" [label = "(<operator>.equals,n % i == 0)" ]
"1000221" [label = "(RETURN,return false;,return false;)" ]
"1000222" [label = "(IDENTIFIER,false,return false;)" ]
"1000217" [label = "(<operator>.modulo,n % i)" ]
  "1000223" -> "1000225"  [ label = "DDG: <RET>"] 
  "1000201" -> "1000225"  [ label = "DDG: <RET>"] 
  "1000221" -> "1000225"  [ label = "DDG: <RET>"] 
  "1000195" -> "1000225"  [ label = "DDG: n"] 
  "1000198" -> "1000225"  [ label = "DDG: n"] 
  "1000198" -> "1000225"  [ label = "DDG: n <= 1"] 
  "1000208" -> "1000225"  [ label = "DDG: i"] 
  "1000210" -> "1000225"  [ label = "DDG: n"] 
  "1000208" -> "1000225"  [ label = "DDG: sqrt(n)"] 
  "1000208" -> "1000225"  [ label = "DDG: i <= sqrt(n)"] 
  "1000217" -> "1000225"  [ label = "DDG: n"] 
  "1000217" -> "1000225"  [ label = "DDG: i"] 
  "1000216" -> "1000225"  [ label = "DDG: n % i"] 
  "1000216" -> "1000225"  [ label = "DDG: n % i == 0"] 
  "1000194" -> "1000195"  [ label = "DDG: "] 
  "1000224" -> "1000223"  [ label = "DDG: true"] 
  "1000194" -> "1000223"  [ label = "DDG: "] 
  "1000202" -> "1000201"  [ label = "DDG: false"] 
  "1000194" -> "1000201"  [ label = "DDG: "] 
  "1000194" -> "1000205"  [ label = "DDG: "] 
  "1000194" -> "1000224"  [ label = "DDG: "] 
  "1000195" -> "1000198"  [ label = "DDG: n"] 
  "1000194" -> "1000198"  [ label = "DDG: "] 
  "1000194" -> "1000202"  [ label = "DDG: "] 
  "1000205" -> "1000208"  [ label = "DDG: i"] 
  "1000212" -> "1000208"  [ label = "DDG: i"] 
  "1000194" -> "1000208"  [ label = "DDG: "] 
  "1000210" -> "1000208"  [ label = "DDG: n"] 
  "1000217" -> "1000212"  [ label = "DDG: i"] 
  "1000194" -> "1000212"  [ label = "DDG: "] 
  "1000198" -> "1000210"  [ label = "DDG: n"] 
  "1000217" -> "1000210"  [ label = "DDG: n"] 
  "1000195" -> "1000210"  [ label = "DDG: n"] 
  "1000194" -> "1000210"  [ label = "DDG: "] 
  "1000222" -> "1000221"  [ label = "DDG: false"] 
  "1000194" -> "1000221"  [ label = "DDG: "] 
  "1000217" -> "1000216"  [ label = "DDG: n"] 
  "1000217" -> "1000216"  [ label = "DDG: i"] 
  "1000194" -> "1000216"  [ label = "DDG: "] 
  "1000194" -> "1000222"  [ label = "DDG: "] 
  "1000210" -> "1000217"  [ label = "DDG: n"] 
  "1000195" -> "1000217"  [ label = "DDG: n"] 
  "1000194" -> "1000217"  [ label = "DDG: "] 
  "1000208" -> "1000217"  [ label = "DDG: i"] 
  "1000198" -> "1000201"  [ label = "CDG: "] 
  "1000198" -> "1000210"  [ label = "CDG: "] 
  "1000198" -> "1000208"  [ label = "CDG: "] 
  "1000198" -> "1000205"  [ label = "CDG: "] 
  "1000208" -> "1000217"  [ label = "CDG: "] 
  "1000208" -> "1000223"  [ label = "CDG: "] 
  "1000208" -> "1000216"  [ label = "CDG: "] 
  "1000216" -> "1000210"  [ label = "CDG: "] 
  "1000216" -> "1000208"  [ label = "CDG: "] 
  "1000216" -> "1000212"  [ label = "CDG: "] 
  "1000216" -> "1000221"  [ label = "CDG: "] 
}
