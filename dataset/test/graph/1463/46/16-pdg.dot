digraph "sieve" {  
"1000665" [label = "(METHOD,sieve)" ]
"1000706" [label = "(METHOD_RETURN,void)" ]
"1000666" [label = "(PARAM,int n)" ]
"1000670" [label = "(<operator>.assignment,i = 2)" ]
"1000673" [label = "(<operator>.lessThan,i * i < n)" ]
"1000678" [label = "(<operator>.postIncrement,i++)" ]
"1000674" [label = "(<operator>.multiplication,i * i)" ]
"1000682" [label = "(<operator>.logicalNot,!isprime[i])" ]
"1000689" [label = "(<operator>.assignment,j = i * i)" ]
"1000694" [label = "(<operator>.lessThan,j < n)" ]
"1000697" [label = "(<operator>.assignmentPlus,j += i)" ]
"1000701" [label = "(<operator>.assignment,isprime[j] = false)" ]
"1000691" [label = "(<operator>.multiplication,i * i)" ]
"1000683" [label = "(<operator>.indirectIndexAccess,isprime[i])" ]
"1000702" [label = "(<operator>.indirectIndexAccess,isprime[j])" ]
  "1000666" -> "1000706"  [ label = "DDG: n"] 
  "1000674" -> "1000706"  [ label = "DDG: i"] 
  "1000673" -> "1000706"  [ label = "DDG: i * i"] 
  "1000673" -> "1000706"  [ label = "DDG: n"] 
  "1000673" -> "1000706"  [ label = "DDG: i * i < n"] 
  "1000682" -> "1000706"  [ label = "DDG: isprime[i]"] 
  "1000682" -> "1000706"  [ label = "DDG: !isprime[i]"] 
  "1000694" -> "1000706"  [ label = "DDG: j"] 
  "1000694" -> "1000706"  [ label = "DDG: j < n"] 
  "1000701" -> "1000706"  [ label = "DDG: isprime[j]"] 
  "1000701" -> "1000706"  [ label = "DDG: false"] 
  "1000665" -> "1000666"  [ label = "DDG: "] 
  "1000665" -> "1000670"  [ label = "DDG: "] 
  "1000674" -> "1000673"  [ label = "DDG: i"] 
  "1000694" -> "1000673"  [ label = "DDG: n"] 
  "1000666" -> "1000673"  [ label = "DDG: n"] 
  "1000665" -> "1000673"  [ label = "DDG: "] 
  "1000674" -> "1000678"  [ label = "DDG: i"] 
  "1000691" -> "1000678"  [ label = "DDG: i"] 
  "1000665" -> "1000678"  [ label = "DDG: "] 
  "1000670" -> "1000674"  [ label = "DDG: i"] 
  "1000678" -> "1000674"  [ label = "DDG: i"] 
  "1000665" -> "1000674"  [ label = "DDG: "] 
  "1000691" -> "1000689"  [ label = "DDG: i"] 
  "1000691" -> "1000697"  [ label = "DDG: i"] 
  "1000665" -> "1000697"  [ label = "DDG: "] 
  "1000665" -> "1000689"  [ label = "DDG: "] 
  "1000689" -> "1000694"  [ label = "DDG: j"] 
  "1000697" -> "1000694"  [ label = "DDG: j"] 
  "1000665" -> "1000694"  [ label = "DDG: "] 
  "1000673" -> "1000694"  [ label = "DDG: n"] 
  "1000666" -> "1000694"  [ label = "DDG: n"] 
  "1000694" -> "1000697"  [ label = "DDG: j"] 
  "1000665" -> "1000701"  [ label = "DDG: "] 
  "1000674" -> "1000691"  [ label = "DDG: i"] 
  "1000665" -> "1000691"  [ label = "DDG: "] 
  "1000673" -> "1000682"  [ label = "CDG: "] 
  "1000673" -> "1000674"  [ label = "CDG: "] 
  "1000673" -> "1000678"  [ label = "CDG: "] 
  "1000673" -> "1000673"  [ label = "CDG: "] 
  "1000673" -> "1000683"  [ label = "CDG: "] 
  "1000682" -> "1000694"  [ label = "CDG: "] 
  "1000682" -> "1000689"  [ label = "CDG: "] 
  "1000682" -> "1000691"  [ label = "CDG: "] 
  "1000694" -> "1000694"  [ label = "CDG: "] 
  "1000694" -> "1000697"  [ label = "CDG: "] 
  "1000694" -> "1000701"  [ label = "CDG: "] 
  "1000694" -> "1000702"  [ label = "CDG: "] 
}
