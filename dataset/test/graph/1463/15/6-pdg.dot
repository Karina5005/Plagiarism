digraph "solve" {  
"1000370" [label = "(METHOD,solve)" ]
"1000595" [label = "(METHOD_RETURN,void)" ]
"1000372" [label = "(<operator>.arithmeticShiftRight,cin >> n >> k)" ]
"1000392" [label = "(<operator>.assignment,dsu = DisjointSet(n))" ]
"1000424" [label = "(check,check())" ]
"1000468" [label = "(check,check())" ]
"1000488" [label = "(<operator>.assignment,cur = 0)" ]
"1000530" [label = "(memset,memset(visited , 0 , sizeof(visited)))" ]
"1000379" [label = "(<operator>.assignment,i=1)" ]
"1000382" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000385" [label = "(<operator>.preIncrement,++i)" ]
"1000387" [label = "(<operator>.arithmeticShiftRight,cin >> p[i])" ]
"1000398" [label = "(<operator>.assignment,i=1)" ]
"1000401" [label = "(<operator>.lessEqualsThan,i<=k)" ]
"1000404" [label = "(<operator>.preIncrement,++i)" ]
"1000427" [label = "(<operator>.assignment,i=1)" ]
"1000430" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000433" [label = "(<operator>.preIncrement,++i)" ]
"1000435" [label = "(adj[i].clear,adj[i].clear())" ]
"1000438" [label = "(<operator>.assignment,i=1)" ]
"1000441" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000444" [label = "(<operator>.preIncrement,++i)" ]
"1000471" [label = "(<operator>.assignment,i=1)" ]
"1000474" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000477" [label = "(<operator>.preIncrement,++i)" ]
"1000493" [label = "(<operator>.assignment,i=n)" ]
"1000496" [label = "(<operator>.greaterEqualsThan,i>=1)" ]
"1000499" [label = "(<operator>.preDecrement,--i)" ]
"1000537" [label = "(<operator>.assignment,i=1)" ]
"1000540" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000543" [label = "(<operator>.preIncrement,++i)" ]
"1000580" [label = "(<operator>.assignment,i=1)" ]
"1000583" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000586" [label = "(<operator>.preIncrement,++i)" ]
"1000588" [label = "(<operator>.shiftLeft,cout << res[i] << \" \")" ]
"1000374" [label = "(<operator>.arithmeticShiftRight,n >> k)" ]
"1000394" [label = "(DisjointSet,DisjointSet(n))" ]
"1000409" [label = "(<operator>.arithmeticShiftRight,cin >> u >> v)" ]
"1000414" [label = "(<operator>.assignment,nxt[u] = v)" ]
"1000419" [label = "(adj[u].push_back,adj[u].push_back(v))" ]
"1000421" [label = "(dsu.join,dsu.join(u , v))" ]
"1000455" [label = "(<operator>.assignment,u = dsu.Find(p[i]))" ]
"1000462" [label = "(<operator>.assignment,v = dsu.Find(i))" ]
"1000466" [label = "(adj[u].push_back,adj[u].push_back(v))" ]
"1000503" [label = "(<operator>.assignment,u = nodes[i])" ]
"1000533" [label = "(<operator>.sizeOf,sizeof(visited))" ]
"1000547" [label = "(<operator>.assignment,u = res[i])" ]
"1000553" [label = "(<operator>.assignment,v = p[u])" ]
"1000558" [label = "(<operator>.assignment,visited[u] = 1)" ]
"1000448" [label = "(<operator>.equals,p[i] == 0)" ]
"1000481" [label = "(<operator>.logicalNot,!visited[i])" ]
"1000485" [label = "(dfs,dfs(i))" ]
"1000509" [label = "(<operator>.notEquals,dsu.Find(u) != u)" ]
"1000515" [label = "(<operator>.notEquals,u != 0)" ]
"1000564" [label = "(<operator>.equals,v == 0)" ]
"1000569" [label = "(<operator>.logicalNot,!visited[v])" ]
"1000590" [label = "(<operator>.shiftLeft,res[i] << \" \")" ]
"1000411" [label = "(<operator>.arithmeticShiftRight,u >> v)" ]
"1000457" [label = "(dsu.Find,dsu.Find(p[i]))" ]
"1000464" [label = "(dsu.Find,dsu.Find(i))" ]
"1000519" [label = "(<operator>.assignment,res[++cur] = u)" ]
"1000525" [label = "(<operator>.assignment,u = nxt[u])" ]
"1000574" [label = "(<operator>.shiftLeft,cout << 0)" ]
"1000577" [label = "(RETURN,return;,return;)" ]
"1000510" [label = "(dsu.Find,dsu.Find(u))" ]
"1000522" [label = "(<operator>.preIncrement,++cur)" ]
"1000389" [label = "(<operator>.indirectIndexAccess,p[i])" ]
"1000415" [label = "(<operator>.indirectIndexAccess,nxt[u])" ]
"1000505" [label = "(<operator>.indirectIndexAccess,nodes[i])" ]
"1000549" [label = "(<operator>.indirectIndexAccess,res[i])" ]
"1000555" [label = "(<operator>.indirectIndexAccess,p[u])" ]
"1000559" [label = "(<operator>.indirectIndexAccess,visited[u])" ]
"1000591" [label = "(<operator>.indirectIndexAccess,res[i])" ]
"1000449" [label = "(<operator>.indirectIndexAccess,p[i])" ]
"1000458" [label = "(<operator>.indirectIndexAccess,p[i])" ]
"1000482" [label = "(<operator>.indirectIndexAccess,visited[i])" ]
"1000570" [label = "(<operator>.indirectIndexAccess,visited[v])" ]
"1000520" [label = "(<operator>.indirectIndexAccess,res[++cur])" ]
"1000527" [label = "(<operator>.indirectIndexAccess,nxt[u])" ]
  "1000372" -> "1000595"  [ label = "DDG: cin"] 
  "1000372" -> "1000595"  [ label = "DDG: n >> k"] 
  "1000372" -> "1000595"  [ label = "DDG: cin >> n >> k"] 
  "1000392" -> "1000595"  [ label = "DDG: DisjointSet(n)"] 
  "1000401" -> "1000595"  [ label = "DDG: k"] 
  "1000401" -> "1000595"  [ label = "DDG: i<=k"] 
  "1000468" -> "1000595"  [ label = "DDG: check()"] 
  "1000488" -> "1000595"  [ label = "DDG: cur"] 
  "1000496" -> "1000595"  [ label = "DDG: i>=1"] 
  "1000530" -> "1000595"  [ label = "DDG: visited"] 
  "1000530" -> "1000595"  [ label = "DDG: memset(visited , 0 , sizeof(visited))"] 
  "1000540" -> "1000595"  [ label = "DDG: i"] 
  "1000540" -> "1000595"  [ label = "DDG: n"] 
  "1000540" -> "1000595"  [ label = "DDG: i<=n"] 
  "1000583" -> "1000595"  [ label = "DDG: i"] 
  "1000583" -> "1000595"  [ label = "DDG: n"] 
  "1000583" -> "1000595"  [ label = "DDG: i<=n"] 
  "1000588" -> "1000595"  [ label = "DDG: cout"] 
  "1000590" -> "1000595"  [ label = "DDG: res[i]"] 
  "1000588" -> "1000595"  [ label = "DDG: res[i] << \" \""] 
  "1000588" -> "1000595"  [ label = "DDG: cout << res[i] << \" \""] 
  "1000547" -> "1000595"  [ label = "DDG: u"] 
  "1000547" -> "1000595"  [ label = "DDG: res[i]"] 
  "1000553" -> "1000595"  [ label = "DDG: p[u]"] 
  "1000558" -> "1000595"  [ label = "DDG: visited[u]"] 
  "1000564" -> "1000595"  [ label = "DDG: v"] 
  "1000564" -> "1000595"  [ label = "DDG: v == 0"] 
  "1000569" -> "1000595"  [ label = "DDG: visited[v]"] 
  "1000569" -> "1000595"  [ label = "DDG: !visited[v]"] 
  "1000574" -> "1000595"  [ label = "DDG: cout"] 
  "1000574" -> "1000595"  [ label = "DDG: cout << 0"] 
  "1000503" -> "1000595"  [ label = "DDG: nodes[i]"] 
  "1000509" -> "1000595"  [ label = "DDG: dsu.Find(u)"] 
  "1000509" -> "1000595"  [ label = "DDG: u"] 
  "1000509" -> "1000595"  [ label = "DDG: dsu.Find(u) != u"] 
  "1000515" -> "1000595"  [ label = "DDG: u"] 
  "1000515" -> "1000595"  [ label = "DDG: u != 0"] 
  "1000522" -> "1000595"  [ label = "DDG: cur"] 
  "1000519" -> "1000595"  [ label = "DDG: res[++cur]"] 
  "1000525" -> "1000595"  [ label = "DDG: nxt[u]"] 
  "1000481" -> "1000595"  [ label = "DDG: visited[i]"] 
  "1000481" -> "1000595"  [ label = "DDG: !visited[i]"] 
  "1000485" -> "1000595"  [ label = "DDG: dfs(i)"] 
  "1000448" -> "1000595"  [ label = "DDG: p[i]"] 
  "1000448" -> "1000595"  [ label = "DDG: p[i] == 0"] 
  "1000455" -> "1000595"  [ label = "DDG: u"] 
  "1000457" -> "1000595"  [ label = "DDG: p[i]"] 
  "1000455" -> "1000595"  [ label = "DDG: dsu.Find(p[i])"] 
  "1000462" -> "1000595"  [ label = "DDG: dsu.Find(i)"] 
  "1000466" -> "1000595"  [ label = "DDG: v"] 
  "1000466" -> "1000595"  [ label = "DDG: adj[u].push_back(v)"] 
  "1000435" -> "1000595"  [ label = "DDG: adj[i].clear()"] 
  "1000409" -> "1000595"  [ label = "DDG: cin"] 
  "1000409" -> "1000595"  [ label = "DDG: u >> v"] 
  "1000409" -> "1000595"  [ label = "DDG: cin >> u >> v"] 
  "1000414" -> "1000595"  [ label = "DDG: nxt[u]"] 
  "1000419" -> "1000595"  [ label = "DDG: adj[u].push_back(v)"] 
  "1000421" -> "1000595"  [ label = "DDG: u"] 
  "1000421" -> "1000595"  [ label = "DDG: v"] 
  "1000421" -> "1000595"  [ label = "DDG: dsu.join(u , v)"] 
  "1000387" -> "1000595"  [ label = "DDG: cin"] 
  "1000387" -> "1000595"  [ label = "DDG: p[i]"] 
  "1000387" -> "1000595"  [ label = "DDG: cin >> p[i]"] 
  "1000577" -> "1000595"  [ label = "DDG: <RET>"] 
  "1000392" -> "1000595"  [ label = "DDG: dsu"] 
  "1000394" -> "1000392"  [ label = "DDG: n"] 
  "1000370" -> "1000424"  [ label = "DDG: "] 
  "1000370" -> "1000468"  [ label = "DDG: "] 
  "1000370" -> "1000488"  [ label = "DDG: "] 
  "1000370" -> "1000372"  [ label = "DDG: "] 
  "1000374" -> "1000372"  [ label = "DDG: k"] 
  "1000374" -> "1000372"  [ label = "DDG: n"] 
  "1000370" -> "1000379"  [ label = "DDG: "] 
  "1000370" -> "1000392"  [ label = "DDG: "] 
  "1000370" -> "1000398"  [ label = "DDG: "] 
  "1000370" -> "1000427"  [ label = "DDG: "] 
  "1000370" -> "1000435"  [ label = "DDG: "] 
  "1000370" -> "1000438"  [ label = "DDG: "] 
  "1000370" -> "1000471"  [ label = "DDG: "] 
  "1000474" -> "1000493"  [ label = "DDG: n"] 
  "1000370" -> "1000493"  [ label = "DDG: "] 
  "1000481" -> "1000530"  [ label = "DDG: visited[i]"] 
  "1000370" -> "1000530"  [ label = "DDG: "] 
  "1000370" -> "1000537"  [ label = "DDG: "] 
  "1000370" -> "1000580"  [ label = "DDG: "] 
  "1000370" -> "1000374"  [ label = "DDG: "] 
  "1000379" -> "1000382"  [ label = "DDG: i"] 
  "1000385" -> "1000382"  [ label = "DDG: i"] 
  "1000370" -> "1000382"  [ label = "DDG: "] 
  "1000374" -> "1000382"  [ label = "DDG: n"] 
  "1000382" -> "1000385"  [ label = "DDG: i"] 
  "1000370" -> "1000385"  [ label = "DDG: "] 
  "1000372" -> "1000387"  [ label = "DDG: cin"] 
  "1000370" -> "1000387"  [ label = "DDG: "] 
  "1000382" -> "1000394"  [ label = "DDG: n"] 
  "1000370" -> "1000394"  [ label = "DDG: "] 
  "1000398" -> "1000401"  [ label = "DDG: i"] 
  "1000404" -> "1000401"  [ label = "DDG: i"] 
  "1000370" -> "1000401"  [ label = "DDG: "] 
  "1000374" -> "1000401"  [ label = "DDG: k"] 
  "1000401" -> "1000404"  [ label = "DDG: i"] 
  "1000370" -> "1000404"  [ label = "DDG: "] 
  "1000411" -> "1000414"  [ label = "DDG: v"] 
  "1000370" -> "1000414"  [ label = "DDG: "] 
  "1000427" -> "1000430"  [ label = "DDG: i"] 
  "1000433" -> "1000430"  [ label = "DDG: i"] 
  "1000370" -> "1000430"  [ label = "DDG: "] 
  "1000394" -> "1000430"  [ label = "DDG: n"] 
  "1000430" -> "1000433"  [ label = "DDG: i"] 
  "1000370" -> "1000433"  [ label = "DDG: "] 
  "1000438" -> "1000441"  [ label = "DDG: i"] 
  "1000444" -> "1000441"  [ label = "DDG: i"] 
  "1000370" -> "1000441"  [ label = "DDG: "] 
  "1000430" -> "1000441"  [ label = "DDG: n"] 
  "1000441" -> "1000444"  [ label = "DDG: i"] 
  "1000464" -> "1000444"  [ label = "DDG: i"] 
  "1000370" -> "1000444"  [ label = "DDG: "] 
  "1000457" -> "1000455"  [ label = "DDG: p[i]"] 
  "1000464" -> "1000462"  [ label = "DDG: i"] 
  "1000471" -> "1000474"  [ label = "DDG: i"] 
  "1000477" -> "1000474"  [ label = "DDG: i"] 
  "1000370" -> "1000474"  [ label = "DDG: "] 
  "1000441" -> "1000474"  [ label = "DDG: n"] 
  "1000474" -> "1000477"  [ label = "DDG: i"] 
  "1000485" -> "1000477"  [ label = "DDG: i"] 
  "1000370" -> "1000477"  [ label = "DDG: "] 
  "1000493" -> "1000496"  [ label = "DDG: i"] 
  "1000499" -> "1000496"  [ label = "DDG: i"] 
  "1000370" -> "1000496"  [ label = "DDG: "] 
  "1000496" -> "1000499"  [ label = "DDG: i"] 
  "1000370" -> "1000499"  [ label = "DDG: "] 
  "1000370" -> "1000533"  [ label = "DDG: "] 
  "1000537" -> "1000540"  [ label = "DDG: i"] 
  "1000543" -> "1000540"  [ label = "DDG: i"] 
  "1000370" -> "1000540"  [ label = "DDG: "] 
  "1000474" -> "1000540"  [ label = "DDG: n"] 
  "1000540" -> "1000543"  [ label = "DDG: i"] 
  "1000370" -> "1000543"  [ label = "DDG: "] 
  "1000370" -> "1000558"  [ label = "DDG: "] 
  "1000580" -> "1000583"  [ label = "DDG: i"] 
  "1000586" -> "1000583"  [ label = "DDG: i"] 
  "1000370" -> "1000583"  [ label = "DDG: "] 
  "1000540" -> "1000583"  [ label = "DDG: n"] 
  "1000583" -> "1000586"  [ label = "DDG: i"] 
  "1000370" -> "1000586"  [ label = "DDG: "] 
  "1000370" -> "1000588"  [ label = "DDG: "] 
  "1000590" -> "1000588"  [ label = "DDG: res[i]"] 
  "1000590" -> "1000588"  [ label = "DDG: \" \""] 
  "1000372" -> "1000409"  [ label = "DDG: cin"] 
  "1000387" -> "1000409"  [ label = "DDG: cin"] 
  "1000370" -> "1000409"  [ label = "DDG: "] 
  "1000411" -> "1000409"  [ label = "DDG: v"] 
  "1000411" -> "1000409"  [ label = "DDG: u"] 
  "1000370" -> "1000419"  [ label = "DDG: "] 
  "1000411" -> "1000419"  [ label = "DDG: v"] 
  "1000411" -> "1000421"  [ label = "DDG: u"] 
  "1000370" -> "1000421"  [ label = "DDG: "] 
  "1000419" -> "1000421"  [ label = "DDG: v"] 
  "1000370" -> "1000455"  [ label = "DDG: "] 
  "1000370" -> "1000462"  [ label = "DDG: "] 
  "1000462" -> "1000466"  [ label = "DDG: v"] 
  "1000370" -> "1000466"  [ label = "DDG: "] 
  "1000370" -> "1000503"  [ label = "DDG: "] 
  "1000370" -> "1000547"  [ label = "DDG: "] 
  "1000370" -> "1000553"  [ label = "DDG: "] 
  "1000370" -> "1000590"  [ label = "DDG: "] 
  "1000421" -> "1000411"  [ label = "DDG: u"] 
  "1000370" -> "1000411"  [ label = "DDG: "] 
  "1000421" -> "1000411"  [ label = "DDG: v"] 
  "1000457" -> "1000448"  [ label = "DDG: p[i]"] 
  "1000387" -> "1000448"  [ label = "DDG: p[i]"] 
  "1000370" -> "1000448"  [ label = "DDG: "] 
  "1000448" -> "1000457"  [ label = "DDG: p[i]"] 
  "1000441" -> "1000464"  [ label = "DDG: i"] 
  "1000370" -> "1000464"  [ label = "DDG: "] 
  "1000474" -> "1000485"  [ label = "DDG: i"] 
  "1000370" -> "1000485"  [ label = "DDG: "] 
  "1000510" -> "1000509"  [ label = "DDG: u"] 
  "1000370" -> "1000509"  [ label = "DDG: "] 
  "1000509" -> "1000515"  [ label = "DDG: u"] 
  "1000525" -> "1000515"  [ label = "DDG: u"] 
  "1000370" -> "1000515"  [ label = "DDG: "] 
  "1000515" -> "1000519"  [ label = "DDG: u"] 
  "1000370" -> "1000519"  [ label = "DDG: "] 
  "1000414" -> "1000525"  [ label = "DDG: nxt[u]"] 
  "1000553" -> "1000564"  [ label = "DDG: v"] 
  "1000370" -> "1000564"  [ label = "DDG: "] 
  "1000530" -> "1000569"  [ label = "DDG: visited"] 
  "1000370" -> "1000577"  [ label = "DDG: "] 
  "1000503" -> "1000510"  [ label = "DDG: u"] 
  "1000370" -> "1000510"  [ label = "DDG: "] 
  "1000370" -> "1000525"  [ label = "DDG: "] 
  "1000370" -> "1000574"  [ label = "DDG: "] 
  "1000488" -> "1000522"  [ label = "DDG: cur"] 
  "1000370" -> "1000522"  [ label = "DDG: "] 
  "1000382" -> "1000389"  [ label = "CDG: "] 
  "1000382" -> "1000387"  [ label = "CDG: "] 
  "1000382" -> "1000385"  [ label = "CDG: "] 
  "1000382" -> "1000382"  [ label = "CDG: "] 
  "1000401" -> "1000409"  [ label = "CDG: "] 
  "1000401" -> "1000415"  [ label = "CDG: "] 
  "1000401" -> "1000404"  [ label = "CDG: "] 
  "1000401" -> "1000414"  [ label = "CDG: "] 
  "1000401" -> "1000419"  [ label = "CDG: "] 
  "1000401" -> "1000401"  [ label = "CDG: "] 
  "1000401" -> "1000421"  [ label = "CDG: "] 
  "1000401" -> "1000411"  [ label = "CDG: "] 
  "1000430" -> "1000430"  [ label = "CDG: "] 
  "1000430" -> "1000435"  [ label = "CDG: "] 
  "1000430" -> "1000433"  [ label = "CDG: "] 
  "1000441" -> "1000448"  [ label = "CDG: "] 
  "1000441" -> "1000449"  [ label = "CDG: "] 
  "1000441" -> "1000444"  [ label = "CDG: "] 
  "1000441" -> "1000441"  [ label = "CDG: "] 
  "1000474" -> "1000477"  [ label = "CDG: "] 
  "1000474" -> "1000474"  [ label = "CDG: "] 
  "1000474" -> "1000482"  [ label = "CDG: "] 
  "1000474" -> "1000481"  [ label = "CDG: "] 
  "1000496" -> "1000503"  [ label = "CDG: "] 
  "1000496" -> "1000499"  [ label = "CDG: "] 
  "1000496" -> "1000496"  [ label = "CDG: "] 
  "1000496" -> "1000510"  [ label = "CDG: "] 
  "1000496" -> "1000505"  [ label = "CDG: "] 
  "1000496" -> "1000509"  [ label = "CDG: "] 
  "1000540" -> "1000580"  [ label = "CDG: "] 
  "1000540" -> "1000558"  [ label = "CDG: "] 
  "1000540" -> "1000559"  [ label = "CDG: "] 
  "1000540" -> "1000555"  [ label = "CDG: "] 
  "1000540" -> "1000547"  [ label = "CDG: "] 
  "1000540" -> "1000564"  [ label = "CDG: "] 
  "1000540" -> "1000553"  [ label = "CDG: "] 
  "1000540" -> "1000549"  [ label = "CDG: "] 
  "1000540" -> "1000583"  [ label = "CDG: "] 
  "1000583" -> "1000586"  [ label = "CDG: "] 
  "1000583" -> "1000590"  [ label = "CDG: "] 
  "1000583" -> "1000588"  [ label = "CDG: "] 
  "1000583" -> "1000583"  [ label = "CDG: "] 
  "1000583" -> "1000591"  [ label = "CDG: "] 
  "1000448" -> "1000466"  [ label = "CDG: "] 
  "1000448" -> "1000464"  [ label = "CDG: "] 
  "1000448" -> "1000462"  [ label = "CDG: "] 
  "1000448" -> "1000457"  [ label = "CDG: "] 
  "1000448" -> "1000458"  [ label = "CDG: "] 
  "1000448" -> "1000455"  [ label = "CDG: "] 
  "1000481" -> "1000485"  [ label = "CDG: "] 
  "1000509" -> "1000515"  [ label = "CDG: "] 
  "1000515" -> "1000520"  [ label = "CDG: "] 
  "1000515" -> "1000525"  [ label = "CDG: "] 
  "1000515" -> "1000522"  [ label = "CDG: "] 
  "1000515" -> "1000527"  [ label = "CDG: "] 
  "1000515" -> "1000519"  [ label = "CDG: "] 
  "1000515" -> "1000515"  [ label = "CDG: "] 
  "1000564" -> "1000543"  [ label = "CDG: "] 
  "1000564" -> "1000540"  [ label = "CDG: "] 
  "1000564" -> "1000570"  [ label = "CDG: "] 
  "1000564" -> "1000569"  [ label = "CDG: "] 
  "1000569" -> "1000577"  [ label = "CDG: "] 
  "1000569" -> "1000543"  [ label = "CDG: "] 
  "1000569" -> "1000540"  [ label = "CDG: "] 
  "1000569" -> "1000574"  [ label = "CDG: "] 
}
