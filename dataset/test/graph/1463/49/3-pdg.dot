digraph "main" {  
"1000311" [label = "(METHOD,main)" ]
"1000335" [label = "(METHOD_RETURN,int)" ]
"1000313" [label = "(IDENTIFIER,IOS,)" ]
"1000315" [label = "(<operator>.assignment,number_of_test_cases = 1)" ]
"1000318" [label = "(<operator>.arithmeticShiftRight,cin >> number_of_test_cases)" ]
"1000333" [label = "(RETURN,return 0;,return 0;)" ]
"1000323" [label = "(<operator>.assignment,test_case_number = 1)" ]
"1000326" [label = "(<operator>.lessEqualsThan,test_case_number <= number_of_test_cases)" ]
"1000329" [label = "(<operator>.preIncrement,++test_case_number)" ]
"1000334" [label = "(LITERAL,0,return 0;)" ]
"1000332" [label = "(solve_test_case,solve_test_case())" ]
  "1000333" -> "1000335"  [ label = "DDG: <RET>"] 
  "1000318" -> "1000335"  [ label = "DDG: cin >> number_of_test_cases"] 
  "1000326" -> "1000335"  [ label = "DDG: test_case_number"] 
  "1000326" -> "1000335"  [ label = "DDG: number_of_test_cases"] 
  "1000326" -> "1000335"  [ label = "DDG: test_case_number <= number_of_test_cases"] 
  "1000332" -> "1000335"  [ label = "DDG: solve_test_case()"] 
  "1000318" -> "1000335"  [ label = "DDG: cin"] 
  "1000311" -> "1000313"  [ label = "DDG: "] 
  "1000311" -> "1000315"  [ label = "DDG: "] 
  "1000334" -> "1000333"  [ label = "DDG: 0"] 
  "1000311" -> "1000333"  [ label = "DDG: "] 
  "1000311" -> "1000318"  [ label = "DDG: "] 
  "1000315" -> "1000318"  [ label = "DDG: number_of_test_cases"] 
  "1000311" -> "1000323"  [ label = "DDG: "] 
  "1000311" -> "1000334"  [ label = "DDG: "] 
  "1000323" -> "1000326"  [ label = "DDG: test_case_number"] 
  "1000329" -> "1000326"  [ label = "DDG: test_case_number"] 
  "1000311" -> "1000326"  [ label = "DDG: "] 
  "1000318" -> "1000326"  [ label = "DDG: number_of_test_cases"] 
  "1000326" -> "1000329"  [ label = "DDG: test_case_number"] 
  "1000311" -> "1000329"  [ label = "DDG: "] 
  "1000311" -> "1000332"  [ label = "DDG: "] 
  "1000326" -> "1000329"  [ label = "CDG: "] 
  "1000326" -> "1000332"  [ label = "CDG: "] 
  "1000326" -> "1000326"  [ label = "CDG: "] 
}
