digraph "PRIME_FACTOR" {  
"1000466" [label = "(METHOD,PRIME_FACTOR)" ]
"1000503" [label = "(METHOD_RETURN,vector<int>)" ]
"1000467" [label = "(PARAM,int n)" ]
"1000501" [label = "(RETURN,return f;,return f;)" ]
"1000472" [label = "(<operator>.assignment,i = 2)" ]
"1000475" [label = "(<operator>.lessEqualsThan,i * i <= n)" ]
"1000480" [label = "(<operator>.postIncrement,i++)" ]
"1000496" [label = "(<operator>.greaterThan,n > 1)" ]
"1000499" [label = "(f.push_back,f.push_back(n))" ]
"1000502" [label = "(IDENTIFIER,f,return f;)" ]
"1000476" [label = "(<operator>.multiplication,i * i)" ]
"1000484" [label = "(<operator>.equals,n % i == 0)" ]
"1000490" [label = "(f.push_back,f.push_back(i))" ]
"1000492" [label = "(<operator>.assignmentDivision,n /= i)" ]
"1000485" [label = "(<operator>.modulo,n % i)" ]
  "1000467" -> "1000503"  [ label = "DDG: n"] 
  "1000476" -> "1000503"  [ label = "DDG: i"] 
  "1000475" -> "1000503"  [ label = "DDG: i * i"] 
  "1000475" -> "1000503"  [ label = "DDG: i * i <= n"] 
  "1000496" -> "1000503"  [ label = "DDG: n"] 
  "1000496" -> "1000503"  [ label = "DDG: n > 1"] 
  "1000499" -> "1000503"  [ label = "DDG: n"] 
  "1000499" -> "1000503"  [ label = "DDG: f.push_back(n)"] 
  "1000484" -> "1000503"  [ label = "DDG: n % i"] 
  "1000484" -> "1000503"  [ label = "DDG: n % i == 0"] 
  "1000490" -> "1000503"  [ label = "DDG: f.push_back(i)"] 
  "1000501" -> "1000503"  [ label = "DDG: <RET>"] 
  "1000466" -> "1000467"  [ label = "DDG: "] 
  "1000502" -> "1000501"  [ label = "DDG: f"] 
  "1000466" -> "1000501"  [ label = "DDG: "] 
  "1000466" -> "1000472"  [ label = "DDG: "] 
  "1000466" -> "1000502"  [ label = "DDG: "] 
  "1000476" -> "1000475"  [ label = "DDG: i"] 
  "1000485" -> "1000475"  [ label = "DDG: n"] 
  "1000467" -> "1000475"  [ label = "DDG: n"] 
  "1000466" -> "1000475"  [ label = "DDG: "] 
  "1000485" -> "1000480"  [ label = "DDG: i"] 
  "1000466" -> "1000480"  [ label = "DDG: "] 
  "1000475" -> "1000496"  [ label = "DDG: n"] 
  "1000467" -> "1000496"  [ label = "DDG: n"] 
  "1000466" -> "1000496"  [ label = "DDG: "] 
  "1000496" -> "1000499"  [ label = "DDG: n"] 
  "1000467" -> "1000499"  [ label = "DDG: n"] 
  "1000466" -> "1000499"  [ label = "DDG: "] 
  "1000472" -> "1000476"  [ label = "DDG: i"] 
  "1000480" -> "1000476"  [ label = "DDG: i"] 
  "1000466" -> "1000476"  [ label = "DDG: "] 
  "1000485" -> "1000484"  [ label = "DDG: n"] 
  "1000485" -> "1000484"  [ label = "DDG: i"] 
  "1000466" -> "1000484"  [ label = "DDG: "] 
  "1000490" -> "1000492"  [ label = "DDG: i"] 
  "1000466" -> "1000492"  [ label = "DDG: "] 
  "1000475" -> "1000485"  [ label = "DDG: n"] 
  "1000492" -> "1000485"  [ label = "DDG: n"] 
  "1000467" -> "1000485"  [ label = "DDG: n"] 
  "1000466" -> "1000485"  [ label = "DDG: "] 
  "1000476" -> "1000485"  [ label = "DDG: i"] 
  "1000490" -> "1000485"  [ label = "DDG: i"] 
  "1000485" -> "1000490"  [ label = "DDG: i"] 
  "1000466" -> "1000490"  [ label = "DDG: "] 
  "1000485" -> "1000492"  [ label = "DDG: n"] 
  "1000467" -> "1000492"  [ label = "DDG: n"] 
  "1000475" -> "1000485"  [ label = "CDG: "] 
  "1000475" -> "1000475"  [ label = "CDG: "] 
  "1000475" -> "1000476"  [ label = "CDG: "] 
  "1000475" -> "1000484"  [ label = "CDG: "] 
  "1000475" -> "1000480"  [ label = "CDG: "] 
  "1000496" -> "1000499"  [ label = "CDG: "] 
  "1000484" -> "1000490"  [ label = "CDG: "] 
  "1000484" -> "1000485"  [ label = "CDG: "] 
  "1000484" -> "1000492"  [ label = "CDG: "] 
  "1000484" -> "1000484"  [ label = "CDG: "] 
}
