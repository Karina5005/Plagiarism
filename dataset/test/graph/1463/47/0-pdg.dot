digraph "main" {  
"1000101" [label = "(METHOD,main)" ]
"1000233" [label = "(METHOD_RETURN,int)" ]
"1000103" [label = "(ios_base::sync_with_stdio,ios_base::sync_with_stdio(0))" ]
"1000105" [label = "(cin.tie,cin.tie(0))" ]
"1000107" [label = "(freopen,freopen(\"in.txt\", \"r\", stdin))" ]
"1000111" [label = "(freopen,freopen(\"out.txt\", \"w\", stdout))" ]
"1000116" [label = "(<operator>.arithmeticShiftRight,cin >> t)" ]
"1000231" [label = "(RETURN,return 0;,return 0;)" ]
"1000120" [label = "(<operator>.postDecrement,t--)" ]
"1000232" [label = "(LITERAL,0,return 0;)" ]
"1000124" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000129" [label = "(<operator>.arithmeticShiftRight,cin >> i)" ]
"1000135" [label = "(<operator>.assignment,i = 0)" ]
"1000138" [label = "(<operator>.lessThan,i < n)" ]
"1000141" [label = "(<operator>.preIncrement,++i)" ]
"1000143" [label = "(<operator>.assignmentPlus,sum[i & 1] += v[i] - 1)" ]
"1000155" [label = "(<operator>.lessEqualsThan,sum[1] * 2 <= S)" ]
"1000149" [label = "(<operator>.subtraction,v[i] - 1)" ]
"1000156" [label = "(<operator>.multiplication,sum[1] * 2)" ]
"1000165" [label = "(<operator>.assignment,i = 0)" ]
"1000168" [label = "(<operator>.lessThan,i < n)" ]
"1000171" [label = "(<operator>.preIncrement,++i)" ]
"1000173" [label = "(<operator>.shiftLeft,cout << (i & 1 ^ 1? v[i] : 1) << \" \n\"[i + 1 == n])" ]
"1000195" [label = "(assert,assert(sum[0] * 2 <= S))" ]
"1000146" [label = "(<operator>.and,i & 1)" ]
"1000205" [label = "(<operator>.assignment,i = 0)" ]
"1000208" [label = "(<operator>.lessThan,i < n)" ]
"1000211" [label = "(<operator>.preIncrement,++i)" ]
"1000213" [label = "(<operator>.shiftLeft,cout << (i & 1 ? v[i] : 1) << \" \n\"[i + 1 == n])" ]
"1000175" [label = "(<operator>.shiftLeft,(i & 1 ^ 1? v[i] : 1) << \" \n\"[i + 1 == n])" ]
"1000196" [label = "(<operator>.lessEqualsThan,sum[0] * 2 <= S)" ]
"1000176" [label = "(<operator>.conditional,i & 1 ^ 1? v[i] : 1)" ]
"1000197" [label = "(<operator>.multiplication,sum[0] * 2)" ]
"1000215" [label = "(<operator>.shiftLeft,(i & 1 ? v[i] : 1) << \" \n\"[i + 1 == n])" ]
"1000177" [label = "(<operator>.or,i & 1 ^ 1)" ]
"1000188" [label = "(<operator>.equals,i + 1 == n)" ]
"1000216" [label = "(<operator>.conditional,i & 1 ? v[i] : 1)" ]
"1000178" [label = "(<operator>.and,i & 1)" ]
"1000189" [label = "(<operator>.addition,i + 1)" ]
"1000217" [label = "(<operator>.and,i & 1)" ]
"1000226" [label = "(<operator>.equals,i + 1 == n)" ]
"1000227" [label = "(<operator>.addition,i + 1)" ]
"1000144" [label = "(<operator>.indirectIndexAccess,sum[i & 1])" ]
"1000150" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000157" [label = "(<operator>.indirectIndexAccess,sum[1])" ]
"1000186" [label = "(<operator>.indirectIndexAccess,\" \n\"[i + 1 == n])" ]
"1000182" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000198" [label = "(<operator>.indirectIndexAccess,sum[0])" ]
"1000224" [label = "(<operator>.indirectIndexAccess,\" \n\"[i + 1 == n])" ]
"1000220" [label = "(<operator>.indirectIndexAccess,v[i])" ]
  "1000103" -> "1000233"  [ label = "DDG: ios_base::sync_with_stdio(0)"] 
  "1000105" -> "1000233"  [ label = "DDG: cin.tie(0)"] 
  "1000107" -> "1000233"  [ label = "DDG: freopen(\"in.txt\", \"r\", stdin)"] 
  "1000111" -> "1000233"  [ label = "DDG: freopen(\"out.txt\", \"w\", stdout)"] 
  "1000116" -> "1000233"  [ label = "DDG: cin"] 
  "1000116" -> "1000233"  [ label = "DDG: cin >> t"] 
  "1000120" -> "1000233"  [ label = "DDG: t"] 
  "1000124" -> "1000233"  [ label = "DDG: cin >> n"] 
  "1000129" -> "1000233"  [ label = "DDG: cin"] 
  "1000129" -> "1000233"  [ label = "DDG: cin >> i"] 
  "1000156" -> "1000233"  [ label = "DDG: sum[1]"] 
  "1000155" -> "1000233"  [ label = "DDG: sum[1] * 2"] 
  "1000155" -> "1000233"  [ label = "DDG: S"] 
  "1000155" -> "1000233"  [ label = "DDG: sum[1] * 2 <= S"] 
  "1000197" -> "1000233"  [ label = "DDG: sum[0]"] 
  "1000196" -> "1000233"  [ label = "DDG: sum[0] * 2"] 
  "1000196" -> "1000233"  [ label = "DDG: S"] 
  "1000195" -> "1000233"  [ label = "DDG: sum[0] * 2 <= S"] 
  "1000195" -> "1000233"  [ label = "DDG: assert(sum[0] * 2 <= S)"] 
  "1000208" -> "1000233"  [ label = "DDG: i"] 
  "1000208" -> "1000233"  [ label = "DDG: n"] 
  "1000208" -> "1000233"  [ label = "DDG: i < n"] 
  "1000213" -> "1000233"  [ label = "DDG: cout"] 
  "1000216" -> "1000233"  [ label = "DDG: i & 1"] 
  "1000216" -> "1000233"  [ label = "DDG: v[i]"] 
  "1000215" -> "1000233"  [ label = "DDG: i & 1 ? v[i] : 1"] 
  "1000226" -> "1000233"  [ label = "DDG: i + 1"] 
  "1000215" -> "1000233"  [ label = "DDG: \" \n\"[i + 1 == n]"] 
  "1000213" -> "1000233"  [ label = "DDG: (i & 1 ? v[i] : 1) << \" \n\"[i + 1 == n]"] 
  "1000213" -> "1000233"  [ label = "DDG: cout << (i & 1 ? v[i] : 1) << \" \n\"[i + 1 == n]"] 
  "1000168" -> "1000233"  [ label = "DDG: i"] 
  "1000168" -> "1000233"  [ label = "DDG: n"] 
  "1000168" -> "1000233"  [ label = "DDG: i < n"] 
  "1000173" -> "1000233"  [ label = "DDG: cout"] 
  "1000177" -> "1000233"  [ label = "DDG: i & 1"] 
  "1000176" -> "1000233"  [ label = "DDG: i & 1 ^ 1"] 
  "1000176" -> "1000233"  [ label = "DDG: v[i]"] 
  "1000175" -> "1000233"  [ label = "DDG: i & 1 ^ 1? v[i] : 1"] 
  "1000188" -> "1000233"  [ label = "DDG: i + 1"] 
  "1000175" -> "1000233"  [ label = "DDG: \" \n\"[i + 1 == n]"] 
  "1000173" -> "1000233"  [ label = "DDG: (i & 1 ^ 1? v[i] : 1) << \" \n\"[i + 1 == n]"] 
  "1000173" -> "1000233"  [ label = "DDG: cout << (i & 1 ^ 1? v[i] : 1) << \" \n\"[i + 1 == n]"] 
  "1000143" -> "1000233"  [ label = "DDG: sum[i & 1]"] 
  "1000149" -> "1000233"  [ label = "DDG: v[i]"] 
  "1000143" -> "1000233"  [ label = "DDG: v[i] - 1"] 
  "1000231" -> "1000233"  [ label = "DDG: <RET>"] 
  "1000111" -> "1000233"  [ label = "DDG: stdout"] 
  "1000107" -> "1000233"  [ label = "DDG: stdin"] 
  "1000232" -> "1000231"  [ label = "DDG: 0"] 
  "1000101" -> "1000231"  [ label = "DDG: "] 
  "1000101" -> "1000103"  [ label = "DDG: "] 
  "1000101" -> "1000105"  [ label = "DDG: "] 
  "1000101" -> "1000107"  [ label = "DDG: "] 
  "1000101" -> "1000111"  [ label = "DDG: "] 
  "1000101" -> "1000116"  [ label = "DDG: "] 
  "1000101" -> "1000232"  [ label = "DDG: "] 
  "1000116" -> "1000120"  [ label = "DDG: t"] 
  "1000101" -> "1000120"  [ label = "DDG: "] 
  "1000116" -> "1000124"  [ label = "DDG: cin"] 
  "1000129" -> "1000124"  [ label = "DDG: cin"] 
  "1000101" -> "1000124"  [ label = "DDG: "] 
  "1000208" -> "1000124"  [ label = "DDG: n"] 
  "1000168" -> "1000124"  [ label = "DDG: n"] 
  "1000124" -> "1000129"  [ label = "DDG: cin"] 
  "1000101" -> "1000129"  [ label = "DDG: "] 
  "1000208" -> "1000129"  [ label = "DDG: i"] 
  "1000168" -> "1000129"  [ label = "DDG: i"] 
  "1000101" -> "1000135"  [ label = "DDG: "] 
  "1000149" -> "1000143"  [ label = "DDG: 1"] 
  "1000149" -> "1000143"  [ label = "DDG: v[i]"] 
  "1000135" -> "1000138"  [ label = "DDG: i"] 
  "1000141" -> "1000138"  [ label = "DDG: i"] 
  "1000101" -> "1000138"  [ label = "DDG: "] 
  "1000124" -> "1000138"  [ label = "DDG: n"] 
  "1000146" -> "1000141"  [ label = "DDG: i"] 
  "1000101" -> "1000141"  [ label = "DDG: "] 
  "1000156" -> "1000155"  [ label = "DDG: 2"] 
  "1000156" -> "1000155"  [ label = "DDG: sum[1]"] 
  "1000196" -> "1000155"  [ label = "DDG: S"] 
  "1000101" -> "1000155"  [ label = "DDG: "] 
  "1000101" -> "1000149"  [ label = "DDG: "] 
  "1000101" -> "1000156"  [ label = "DDG: "] 
  "1000101" -> "1000165"  [ label = "DDG: "] 
  "1000138" -> "1000146"  [ label = "DDG: i"] 
  "1000101" -> "1000146"  [ label = "DDG: "] 
  "1000165" -> "1000168"  [ label = "DDG: i"] 
  "1000171" -> "1000168"  [ label = "DDG: i"] 
  "1000101" -> "1000168"  [ label = "DDG: "] 
  "1000138" -> "1000168"  [ label = "DDG: n"] 
  "1000188" -> "1000168"  [ label = "DDG: n"] 
  "1000101" -> "1000171"  [ label = "DDG: "] 
  "1000178" -> "1000171"  [ label = "DDG: i"] 
  "1000213" -> "1000173"  [ label = "DDG: cout"] 
  "1000101" -> "1000173"  [ label = "DDG: "] 
  "1000175" -> "1000173"  [ label = "DDG: \" \n\"[i + 1 == n]"] 
  "1000175" -> "1000173"  [ label = "DDG: i & 1 ^ 1? v[i] : 1"] 
  "1000196" -> "1000195"  [ label = "DDG: S"] 
  "1000196" -> "1000195"  [ label = "DDG: sum[0] * 2"] 
  "1000101" -> "1000205"  [ label = "DDG: "] 
  "1000149" -> "1000175"  [ label = "DDG: v[i]"] 
  "1000101" -> "1000175"  [ label = "DDG: "] 
  "1000215" -> "1000175"  [ label = "DDG: \" \n\"[i + 1 == n]"] 
  "1000197" -> "1000196"  [ label = "DDG: 2"] 
  "1000197" -> "1000196"  [ label = "DDG: sum[0]"] 
  "1000155" -> "1000196"  [ label = "DDG: S"] 
  "1000101" -> "1000196"  [ label = "DDG: "] 
  "1000205" -> "1000208"  [ label = "DDG: i"] 
  "1000211" -> "1000208"  [ label = "DDG: i"] 
  "1000101" -> "1000208"  [ label = "DDG: "] 
  "1000138" -> "1000208"  [ label = "DDG: n"] 
  "1000226" -> "1000208"  [ label = "DDG: n"] 
  "1000101" -> "1000211"  [ label = "DDG: "] 
  "1000217" -> "1000211"  [ label = "DDG: i"] 
  "1000173" -> "1000213"  [ label = "DDG: cout"] 
  "1000101" -> "1000213"  [ label = "DDG: "] 
  "1000215" -> "1000213"  [ label = "DDG: i & 1 ? v[i] : 1"] 
  "1000215" -> "1000213"  [ label = "DDG: \" \n\"[i + 1 == n]"] 
  "1000149" -> "1000176"  [ label = "DDG: v[i]"] 
  "1000101" -> "1000176"  [ label = "DDG: "] 
  "1000101" -> "1000197"  [ label = "DDG: "] 
  "1000101" -> "1000215"  [ label = "DDG: "] 
  "1000149" -> "1000215"  [ label = "DDG: v[i]"] 
  "1000175" -> "1000215"  [ label = "DDG: \" \n\"[i + 1 == n]"] 
  "1000178" -> "1000177"  [ label = "DDG: i"] 
  "1000178" -> "1000177"  [ label = "DDG: 1"] 
  "1000101" -> "1000177"  [ label = "DDG: "] 
  "1000101" -> "1000188"  [ label = "DDG: "] 
  "1000178" -> "1000188"  [ label = "DDG: i"] 
  "1000168" -> "1000188"  [ label = "DDG: n"] 
  "1000149" -> "1000216"  [ label = "DDG: v[i]"] 
  "1000101" -> "1000216"  [ label = "DDG: "] 
  "1000168" -> "1000178"  [ label = "DDG: i"] 
  "1000101" -> "1000178"  [ label = "DDG: "] 
  "1000178" -> "1000189"  [ label = "DDG: i"] 
  "1000101" -> "1000189"  [ label = "DDG: "] 
  "1000208" -> "1000217"  [ label = "DDG: i"] 
  "1000101" -> "1000217"  [ label = "DDG: "] 
  "1000217" -> "1000226"  [ label = "DDG: i"] 
  "1000101" -> "1000226"  [ label = "DDG: "] 
  "1000208" -> "1000226"  [ label = "DDG: n"] 
  "1000217" -> "1000227"  [ label = "DDG: i"] 
  "1000101" -> "1000227"  [ label = "DDG: "] 
  "1000120" -> "1000156"  [ label = "CDG: "] 
  "1000120" -> "1000157"  [ label = "CDG: "] 
  "1000120" -> "1000120"  [ label = "CDG: "] 
  "1000120" -> "1000138"  [ label = "CDG: "] 
  "1000120" -> "1000135"  [ label = "CDG: "] 
  "1000120" -> "1000155"  [ label = "CDG: "] 
  "1000120" -> "1000129"  [ label = "CDG: "] 
  "1000120" -> "1000124"  [ label = "CDG: "] 
  "1000138" -> "1000141"  [ label = "CDG: "] 
  "1000138" -> "1000150"  [ label = "CDG: "] 
  "1000138" -> "1000144"  [ label = "CDG: "] 
  "1000138" -> "1000149"  [ label = "CDG: "] 
  "1000138" -> "1000146"  [ label = "CDG: "] 
  "1000138" -> "1000138"  [ label = "CDG: "] 
  "1000138" -> "1000143"  [ label = "CDG: "] 
  "1000155" -> "1000208"  [ label = "CDG: "] 
  "1000155" -> "1000197"  [ label = "CDG: "] 
  "1000155" -> "1000165"  [ label = "CDG: "] 
  "1000155" -> "1000198"  [ label = "CDG: "] 
  "1000155" -> "1000195"  [ label = "CDG: "] 
  "1000155" -> "1000196"  [ label = "CDG: "] 
  "1000155" -> "1000168"  [ label = "CDG: "] 
  "1000155" -> "1000205"  [ label = "CDG: "] 
  "1000168" -> "1000188"  [ label = "CDG: "] 
  "1000168" -> "1000175"  [ label = "CDG: "] 
  "1000168" -> "1000176"  [ label = "CDG: "] 
  "1000168" -> "1000186"  [ label = "CDG: "] 
  "1000168" -> "1000189"  [ label = "CDG: "] 
  "1000168" -> "1000168"  [ label = "CDG: "] 
  "1000168" -> "1000178"  [ label = "CDG: "] 
  "1000168" -> "1000173"  [ label = "CDG: "] 
  "1000168" -> "1000171"  [ label = "CDG: "] 
  "1000168" -> "1000177"  [ label = "CDG: "] 
  "1000208" -> "1000211"  [ label = "CDG: "] 
  "1000208" -> "1000208"  [ label = "CDG: "] 
  "1000208" -> "1000227"  [ label = "CDG: "] 
  "1000208" -> "1000216"  [ label = "CDG: "] 
  "1000208" -> "1000224"  [ label = "CDG: "] 
  "1000208" -> "1000217"  [ label = "CDG: "] 
  "1000208" -> "1000226"  [ label = "CDG: "] 
  "1000208" -> "1000213"  [ label = "CDG: "] 
  "1000208" -> "1000215"  [ label = "CDG: "] 
  "1000177" -> "1000182"  [ label = "CDG: "] 
  "1000217" -> "1000220"  [ label = "CDG: "] 
}
