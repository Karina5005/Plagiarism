digraph "Sieve" {  
"1000143" [label = "(METHOD,Sieve)" ]
"1000188" [label = "(METHOD_RETURN,void)" ]
"1000144" [label = "(PARAM,ll n)" ]
"1000146" [label = "(memset,memset(prime,true,sizeof(prime)))" ]
"1000153" [label = "(<operator>.assignment,p=2)" ]
"1000156" [label = "(<operator>.lessEqualsThan,p*p<=n)" ]
"1000161" [label = "(<operator>.postIncrement,p++)" ]
"1000149" [label = "(<operator>.sizeOf,sizeof(prime))" ]
"1000157" [label = "(<operator>.multiplication,p*p)" ]
"1000171" [label = "(<operator>.assignment,i=p*p)" ]
"1000176" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000179" [label = "(<operator>.assignmentPlus,i+=p)" ]
"1000183" [label = "(<operator>.assignment,prime[i]=false)" ]
"1000173" [label = "(<operator>.multiplication,p*p)" ]
"1000165" [label = "(<operator>.indirectIndexAccess,prime[p])" ]
"1000184" [label = "(<operator>.indirectIndexAccess,prime[i])" ]
  "1000144" -> "1000188"  [ label = "DDG: n"] 
  "1000146" -> "1000188"  [ label = "DDG: prime"] 
  "1000146" -> "1000188"  [ label = "DDG: memset(prime,true,sizeof(prime))"] 
  "1000157" -> "1000188"  [ label = "DDG: p"] 
  "1000156" -> "1000188"  [ label = "DDG: p*p"] 
  "1000156" -> "1000188"  [ label = "DDG: n"] 
  "1000156" -> "1000188"  [ label = "DDG: p*p<=n"] 
  "1000176" -> "1000188"  [ label = "DDG: i"] 
  "1000176" -> "1000188"  [ label = "DDG: i<=n"] 
  "1000183" -> "1000188"  [ label = "DDG: prime[i]"] 
  "1000183" -> "1000188"  [ label = "DDG: false"] 
  "1000146" -> "1000188"  [ label = "DDG: true"] 
  "1000143" -> "1000144"  [ label = "DDG: "] 
  "1000143" -> "1000146"  [ label = "DDG: "] 
  "1000143" -> "1000153"  [ label = "DDG: "] 
  "1000143" -> "1000149"  [ label = "DDG: "] 
  "1000157" -> "1000156"  [ label = "DDG: p"] 
  "1000176" -> "1000156"  [ label = "DDG: n"] 
  "1000144" -> "1000156"  [ label = "DDG: n"] 
  "1000143" -> "1000156"  [ label = "DDG: "] 
  "1000157" -> "1000161"  [ label = "DDG: p"] 
  "1000173" -> "1000161"  [ label = "DDG: p"] 
  "1000143" -> "1000161"  [ label = "DDG: "] 
  "1000153" -> "1000157"  [ label = "DDG: p"] 
  "1000161" -> "1000157"  [ label = "DDG: p"] 
  "1000143" -> "1000157"  [ label = "DDG: "] 
  "1000173" -> "1000171"  [ label = "DDG: p"] 
  "1000173" -> "1000179"  [ label = "DDG: p"] 
  "1000143" -> "1000179"  [ label = "DDG: "] 
  "1000143" -> "1000171"  [ label = "DDG: "] 
  "1000171" -> "1000176"  [ label = "DDG: i"] 
  "1000179" -> "1000176"  [ label = "DDG: i"] 
  "1000143" -> "1000176"  [ label = "DDG: "] 
  "1000156" -> "1000176"  [ label = "DDG: n"] 
  "1000144" -> "1000176"  [ label = "DDG: n"] 
  "1000176" -> "1000179"  [ label = "DDG: i"] 
  "1000143" -> "1000183"  [ label = "DDG: "] 
  "1000157" -> "1000173"  [ label = "DDG: p"] 
  "1000143" -> "1000173"  [ label = "DDG: "] 
  "1000156" -> "1000156"  [ label = "CDG: "] 
  "1000156" -> "1000161"  [ label = "CDG: "] 
  "1000156" -> "1000165"  [ label = "CDG: "] 
  "1000156" -> "1000157"  [ label = "CDG: "] 
  "1000165" -> "1000173"  [ label = "CDG: "] 
  "1000165" -> "1000171"  [ label = "CDG: "] 
  "1000165" -> "1000176"  [ label = "CDG: "] 
  "1000176" -> "1000179"  [ label = "CDG: "] 
  "1000176" -> "1000184"  [ label = "CDG: "] 
  "1000176" -> "1000176"  [ label = "CDG: "] 
  "1000176" -> "1000183"  [ label = "CDG: "] 
}
