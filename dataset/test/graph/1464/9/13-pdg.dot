digraph "ck2" {  
"1000601" [label = "(METHOD,ck2)" ]
"1000698" [label = "(METHOD_RETURN,inline bool)" ]
"1000602" [label = "(PARAM,int x)" ]
"1000603" [label = "(PARAM,int d)" ]
"1000606" [label = "(<operator>.assignment,y=x)" ]
"1000610" [label = "(<operator>.assignment,lst=0)" ]
"1000696" [label = "(RETURN,return 1;,return 1;)" ]
"1000614" [label = "(IDENTIFIER,y,for(;y;y=dad[lst=top[y]]))" ]
"1000615" [label = "(<operator>.assignment,y=dad[lst=top[y]])" ]
"1000697" [label = "(LITERAL,1,return 1;)" ]
"1000626" [label = "(<operator>.greaterThan,T2.ask(be[top[y]],be[y]-1)+dep[x]>d)" ]
"1000643" [label = "(RETURN,return 0;,return 0;)" ]
"1000646" [label = "(<operator>.greaterThan,(lst?max(T1.ask(be[y]+1,be[lst]-1),T1.ask(en[lst]+1,en[y]))+dep[x]-dep[y]*2:\n\t\t\tT1.ask(be[y]+1,en[y])-dep[x])>d)" ]
"1000694" [label = "(RETURN,return 0;,return 0;)" ]
"1000619" [label = "(<operator>.assignment,lst=top[y])" ]
"1000644" [label = "(LITERAL,0,return 0;)" ]
"1000695" [label = "(LITERAL,0,return 0;)" ]
"1000627" [label = "(<operator>.addition,T2.ask(be[top[y]],be[y]-1)+dep[x])" ]
"1000647" [label = "(<operator>.conditional,lst?max(T1.ask(be[y]+1,be[lst]-1),T1.ask(en[lst]+1,en[y]))+dep[x]-dep[y]*2:\n\t\t\tT1.ask(be[y]+1,en[y])-dep[x])" ]
"1000628" [label = "(T2.ask,T2.ask(be[top[y]],be[y]-1))" ]
"1000649" [label = "(<operator>.addition,max(T1.ask(be[y]+1,be[lst]-1),T1.ask(en[lst]+1,en[y]))+dep[x]-dep[y]*2)" ]
"1000680" [label = "(<operator>.subtraction,T1.ask(be[y]+1,en[y])-dep[x])" ]
"1000634" [label = "(<operator>.subtraction,be[y]-1)" ]
"1000650" [label = "(max,max(T1.ask(be[y]+1,be[lst]-1),T1.ask(en[lst]+1,en[y])))" ]
"1000671" [label = "(<operator>.subtraction,dep[x]-dep[y]*2)" ]
"1000681" [label = "(T1.ask,T1.ask(be[y]+1,en[y]))" ]
"1000651" [label = "(T1.ask,T1.ask(be[y]+1,be[lst]-1))" ]
"1000662" [label = "(T1.ask,T1.ask(en[lst]+1,en[y]))" ]
"1000675" [label = "(<operator>.multiplication,dep[y]*2)" ]
"1000682" [label = "(<operator>.addition,be[y]+1)" ]
"1000652" [label = "(<operator>.addition,be[y]+1)" ]
"1000657" [label = "(<operator>.subtraction,be[lst]-1)" ]
"1000663" [label = "(<operator>.addition,en[lst]+1)" ]
"1000617" [label = "(<operator>.indirectIndexAccess,dad[lst=top[y]])" ]
"1000621" [label = "(<operator>.indirectIndexAccess,top[y])" ]
"1000639" [label = "(<operator>.indirectIndexAccess,dep[x])" ]
"1000629" [label = "(<operator>.indirectIndexAccess,be[top[y]])" ]
"1000690" [label = "(<operator>.indirectIndexAccess,dep[x])" ]
"1000631" [label = "(<operator>.indirectIndexAccess,top[y])" ]
"1000635" [label = "(<operator>.indirectIndexAccess,be[y])" ]
"1000672" [label = "(<operator>.indirectIndexAccess,dep[x])" ]
"1000687" [label = "(<operator>.indirectIndexAccess,en[y])" ]
"1000668" [label = "(<operator>.indirectIndexAccess,en[y])" ]
"1000676" [label = "(<operator>.indirectIndexAccess,dep[y])" ]
"1000683" [label = "(<operator>.indirectIndexAccess,be[y])" ]
"1000653" [label = "(<operator>.indirectIndexAccess,be[y])" ]
"1000658" [label = "(<operator>.indirectIndexAccess,be[lst])" ]
"1000664" [label = "(<operator>.indirectIndexAccess,en[lst])" ]
  "1000696" -> "1000698"  [ label = "DDG: <RET>"] 
  "1000602" -> "1000698"  [ label = "DDG: x"] 
  "1000603" -> "1000698"  [ label = "DDG: d"] 
  "1000606" -> "1000698"  [ label = "DDG: y"] 
  "1000606" -> "1000698"  [ label = "DDG: x"] 
  "1000610" -> "1000698"  [ label = "DDG: lst"] 
  "1000628" -> "1000698"  [ label = "DDG: be[top[y]]"] 
  "1000634" -> "1000698"  [ label = "DDG: be[y]"] 
  "1000628" -> "1000698"  [ label = "DDG: be[y]-1"] 
  "1000627" -> "1000698"  [ label = "DDG: T2.ask(be[top[y]],be[y]-1)"] 
  "1000627" -> "1000698"  [ label = "DDG: dep[x]"] 
  "1000626" -> "1000698"  [ label = "DDG: T2.ask(be[top[y]],be[y]-1)+dep[x]"] 
  "1000626" -> "1000698"  [ label = "DDG: d"] 
  "1000626" -> "1000698"  [ label = "DDG: T2.ask(be[top[y]],be[y]-1)+dep[x]>d"] 
  "1000647" -> "1000698"  [ label = "DDG: lst"] 
  "1000682" -> "1000698"  [ label = "DDG: be[y]"] 
  "1000681" -> "1000698"  [ label = "DDG: be[y]+1"] 
  "1000681" -> "1000698"  [ label = "DDG: en[y]"] 
  "1000680" -> "1000698"  [ label = "DDG: T1.ask(be[y]+1,en[y])"] 
  "1000680" -> "1000698"  [ label = "DDG: dep[x]"] 
  "1000647" -> "1000698"  [ label = "DDG: T1.ask(be[y]+1,en[y])-dep[x]"] 
  "1000652" -> "1000698"  [ label = "DDG: be[y]"] 
  "1000651" -> "1000698"  [ label = "DDG: be[y]+1"] 
  "1000657" -> "1000698"  [ label = "DDG: be[lst]"] 
  "1000651" -> "1000698"  [ label = "DDG: be[lst]-1"] 
  "1000650" -> "1000698"  [ label = "DDG: T1.ask(be[y]+1,be[lst]-1)"] 
  "1000663" -> "1000698"  [ label = "DDG: en[lst]"] 
  "1000662" -> "1000698"  [ label = "DDG: en[lst]+1"] 
  "1000662" -> "1000698"  [ label = "DDG: en[y]"] 
  "1000650" -> "1000698"  [ label = "DDG: T1.ask(en[lst]+1,en[y])"] 
  "1000649" -> "1000698"  [ label = "DDG: max(T1.ask(be[y]+1,be[lst]-1),T1.ask(en[lst]+1,en[y]))"] 
  "1000671" -> "1000698"  [ label = "DDG: dep[x]"] 
  "1000675" -> "1000698"  [ label = "DDG: dep[y]"] 
  "1000671" -> "1000698"  [ label = "DDG: dep[y]*2"] 
  "1000649" -> "1000698"  [ label = "DDG: dep[x]-dep[y]*2"] 
  "1000647" -> "1000698"  [ label = "DDG: max(T1.ask(be[y]+1,be[lst]-1),T1.ask(en[lst]+1,en[y]))+dep[x]-dep[y]*2"] 
  "1000646" -> "1000698"  [ label = "DDG: lst?max(T1.ask(be[y]+1,be[lst]-1),T1.ask(en[lst]+1,en[y]))+dep[x]-dep[y]*2:\n\t\t\tT1.ask(be[y]+1,en[y])-dep[x]"] 
  "1000646" -> "1000698"  [ label = "DDG: d"] 
  "1000646" -> "1000698"  [ label = "DDG: (lst?max(T1.ask(be[y]+1,be[lst]-1),T1.ask(en[lst]+1,en[y]))+dep[x]-dep[y]*2:\n\t\t\tT1.ask(be[y]+1,en[y])-dep[x])>d"] 
  "1000615" -> "1000698"  [ label = "DDG: y"] 
  "1000619" -> "1000698"  [ label = "DDG: lst"] 
  "1000619" -> "1000698"  [ label = "DDG: top[y]"] 
  "1000615" -> "1000698"  [ label = "DDG: dad[lst=top[y]]"] 
  "1000643" -> "1000698"  [ label = "DDG: <RET>"] 
  "1000694" -> "1000698"  [ label = "DDG: <RET>"] 
  "1000601" -> "1000602"  [ label = "DDG: "] 
  "1000601" -> "1000603"  [ label = "DDG: "] 
  "1000602" -> "1000606"  [ label = "DDG: x"] 
  "1000601" -> "1000606"  [ label = "DDG: "] 
  "1000601" -> "1000610"  [ label = "DDG: "] 
  "1000697" -> "1000696"  [ label = "DDG: 1"] 
  "1000601" -> "1000696"  [ label = "DDG: "] 
  "1000601" -> "1000614"  [ label = "DDG: "] 
  "1000601" -> "1000697"  [ label = "DDG: "] 
  "1000601" -> "1000615"  [ label = "DDG: "] 
  "1000644" -> "1000643"  [ label = "DDG: 0"] 
  "1000601" -> "1000643"  [ label = "DDG: "] 
  "1000695" -> "1000694"  [ label = "DDG: 0"] 
  "1000601" -> "1000694"  [ label = "DDG: "] 
  "1000601" -> "1000619"  [ label = "DDG: "] 
  "1000680" -> "1000626"  [ label = "DDG: dep[x]"] 
  "1000671" -> "1000626"  [ label = "DDG: dep[x]"] 
  "1000628" -> "1000626"  [ label = "DDG: be[y]-1"] 
  "1000628" -> "1000626"  [ label = "DDG: be[top[y]]"] 
  "1000646" -> "1000626"  [ label = "DDG: d"] 
  "1000603" -> "1000626"  [ label = "DDG: d"] 
  "1000601" -> "1000626"  [ label = "DDG: "] 
  "1000601" -> "1000644"  [ label = "DDG: "] 
  "1000601" -> "1000646"  [ label = "DDG: "] 
  "1000680" -> "1000646"  [ label = "DDG: T1.ask(be[y]+1,en[y])"] 
  "1000680" -> "1000646"  [ label = "DDG: dep[x]"] 
  "1000650" -> "1000646"  [ label = "DDG: T1.ask(be[y]+1,be[lst]-1)"] 
  "1000650" -> "1000646"  [ label = "DDG: T1.ask(en[lst]+1,en[y])"] 
  "1000671" -> "1000646"  [ label = "DDG: dep[x]"] 
  "1000671" -> "1000646"  [ label = "DDG: dep[y]*2"] 
  "1000626" -> "1000646"  [ label = "DDG: d"] 
  "1000603" -> "1000646"  [ label = "DDG: d"] 
  "1000601" -> "1000695"  [ label = "DDG: "] 
  "1000628" -> "1000627"  [ label = "DDG: be[y]-1"] 
  "1000628" -> "1000627"  [ label = "DDG: be[top[y]]"] 
  "1000680" -> "1000627"  [ label = "DDG: dep[x]"] 
  "1000671" -> "1000627"  [ label = "DDG: dep[x]"] 
  "1000601" -> "1000647"  [ label = "DDG: "] 
  "1000650" -> "1000647"  [ label = "DDG: T1.ask(be[y]+1,be[lst]-1)"] 
  "1000650" -> "1000647"  [ label = "DDG: T1.ask(en[lst]+1,en[y])"] 
  "1000671" -> "1000647"  [ label = "DDG: dep[x]"] 
  "1000671" -> "1000647"  [ label = "DDG: dep[y]*2"] 
  "1000680" -> "1000647"  [ label = "DDG: T1.ask(be[y]+1,en[y])"] 
  "1000680" -> "1000647"  [ label = "DDG: dep[x]"] 
  "1000634" -> "1000628"  [ label = "DDG: 1"] 
  "1000634" -> "1000628"  [ label = "DDG: be[y]"] 
  "1000650" -> "1000649"  [ label = "DDG: T1.ask(be[y]+1,be[lst]-1)"] 
  "1000650" -> "1000649"  [ label = "DDG: T1.ask(en[lst]+1,en[y])"] 
  "1000671" -> "1000649"  [ label = "DDG: dep[x]"] 
  "1000671" -> "1000649"  [ label = "DDG: dep[y]*2"] 
  "1000681" -> "1000680"  [ label = "DDG: be[y]+1"] 
  "1000681" -> "1000680"  [ label = "DDG: en[y]"] 
  "1000671" -> "1000680"  [ label = "DDG: dep[x]"] 
  "1000601" -> "1000634"  [ label = "DDG: "] 
  "1000651" -> "1000650"  [ label = "DDG: be[y]+1"] 
  "1000651" -> "1000650"  [ label = "DDG: be[lst]-1"] 
  "1000662" -> "1000650"  [ label = "DDG: en[y]"] 
  "1000662" -> "1000650"  [ label = "DDG: en[lst]+1"] 
  "1000680" -> "1000671"  [ label = "DDG: dep[x]"] 
  "1000675" -> "1000671"  [ label = "DDG: 2"] 
  "1000675" -> "1000671"  [ label = "DDG: dep[y]"] 
  "1000601" -> "1000681"  [ label = "DDG: "] 
  "1000634" -> "1000681"  [ label = "DDG: be[y]"] 
  "1000662" -> "1000681"  [ label = "DDG: en[y]"] 
  "1000634" -> "1000651"  [ label = "DDG: be[y]"] 
  "1000601" -> "1000651"  [ label = "DDG: "] 
  "1000657" -> "1000651"  [ label = "DDG: be[lst]"] 
  "1000657" -> "1000651"  [ label = "DDG: 1"] 
  "1000601" -> "1000662"  [ label = "DDG: "] 
  "1000681" -> "1000662"  [ label = "DDG: en[y]"] 
  "1000601" -> "1000675"  [ label = "DDG: "] 
  "1000634" -> "1000682"  [ label = "DDG: be[y]"] 
  "1000601" -> "1000682"  [ label = "DDG: "] 
  "1000634" -> "1000652"  [ label = "DDG: be[y]"] 
  "1000601" -> "1000652"  [ label = "DDG: "] 
  "1000601" -> "1000657"  [ label = "DDG: "] 
  "1000601" -> "1000663"  [ label = "DDG: "] 
  "1000626" -> "1000647"  [ label = "CDG: "] 
  "1000626" -> "1000643"  [ label = "CDG: "] 
  "1000626" -> "1000646"  [ label = "CDG: "] 
  "1000626" -> "1000681"  [ label = "CDG: "] 
  "1000626" -> "1000649"  [ label = "CDG: "] 
  "1000626" -> "1000671"  [ label = "CDG: "] 
  "1000626" -> "1000650"  [ label = "CDG: "] 
  "1000626" -> "1000658"  [ label = "CDG: "] 
  "1000626" -> "1000687"  [ label = "CDG: "] 
  "1000626" -> "1000662"  [ label = "CDG: "] 
  "1000626" -> "1000657"  [ label = "CDG: "] 
  "1000626" -> "1000680"  [ label = "CDG: "] 
  "1000626" -> "1000676"  [ label = "CDG: "] 
  "1000626" -> "1000682"  [ label = "CDG: "] 
  "1000626" -> "1000672"  [ label = "CDG: "] 
  "1000626" -> "1000690"  [ label = "CDG: "] 
  "1000626" -> "1000675"  [ label = "CDG: "] 
  "1000626" -> "1000663"  [ label = "CDG: "] 
  "1000626" -> "1000664"  [ label = "CDG: "] 
  "1000626" -> "1000668"  [ label = "CDG: "] 
  "1000626" -> "1000652"  [ label = "CDG: "] 
  "1000626" -> "1000651"  [ label = "CDG: "] 
  "1000626" -> "1000653"  [ label = "CDG: "] 
  "1000626" -> "1000683"  [ label = "CDG: "] 
  "1000646" -> "1000619"  [ label = "CDG: "] 
  "1000646" -> "1000615"  [ label = "CDG: "] 
  "1000646" -> "1000694"  [ label = "CDG: "] 
  "1000646" -> "1000617"  [ label = "CDG: "] 
  "1000646" -> "1000621"  [ label = "CDG: "] 
  "1000646" -> "1000626"  [ label = "CDG: "] 
  "1000646" -> "1000631"  [ label = "CDG: "] 
  "1000646" -> "1000627"  [ label = "CDG: "] 
  "1000646" -> "1000696"  [ label = "CDG: "] 
  "1000646" -> "1000634"  [ label = "CDG: "] 
  "1000646" -> "1000629"  [ label = "CDG: "] 
  "1000646" -> "1000639"  [ label = "CDG: "] 
  "1000646" -> "1000628"  [ label = "CDG: "] 
  "1000646" -> "1000635"  [ label = "CDG: "] 
}
