digraph "gethld" {  
"1000789" [label = "(METHOD,gethld)" ]
"1000908" [label = "(METHOD_RETURN,int)" ]
"1000790" [label = "(PARAM,int n)" ]
"1000791" [label = "(PARAM,int g)" ]
"1000794" [label = "(<operator>.assignment,ans=-INF)" ]
"1000906" [label = "(RETURN,return ans;,return ans;)" ]
"1000799" [label = "(<operator>.notEquals,n!=g)" ]
"1000907" [label = "(IDENTIFIER,ans,return ans;)" ]
"1000796" [label = "(<operator>.minus,-INF)" ]
"1000803" [label = "(<operator>.logicalOr,t[n]==0 || t[n]==n)" ]
"1000815" [label = "(ckmax,ckmax(ans, getval(p[n][0], n)-2*d[p[n][0]]))" ]
"1000834" [label = "(<operator>.assignment,n=p[n][0])" ]
"1000804" [label = "(<operator>.equals,t[n]==0)" ]
"1000809" [label = "(<operator>.equals,t[n]==n)" ]
"1000884" [label = "(ckmax,ckmax(ans, hvst.qry(hv[t[n]], hv[t[n]]+l[n])))" ]
"1000901" [label = "(<operator>.assignment,n=t[n])" ]
"1000817" [label = "(<operator>.subtraction,getval(p[n][0], n)-2*d[p[n][0]])" ]
"1000844" [label = "(<operator>.greaterEqualsThan,d[g]>=d[t[n]])" ]
"1000818" [label = "(getval,getval(p[n][0], n))" ]
"1000825" [label = "(<operator>.multiplication,2*d[p[n][0]])" ]
"1000854" [label = "(assert,assert(t[g]==t[n]))" ]
"1000862" [label = "(ckmax,ckmax(ans, hvst.qry(hv[t[n]]+l[g], hv[t[n]]+l[n])))" ]
"1000886" [label = "(hvst.qry,hvst.qry(hv[t[n]], hv[t[n]]+l[n]))" ]
"1000892" [label = "(<operator>.addition,hv[t[n]]+l[n])" ]
"1000855" [label = "(<operator>.equals,t[g]==t[n])" ]
"1000864" [label = "(hvst.qry,hvst.qry(hv[t[n]]+l[g], hv[t[n]]+l[n]))" ]
"1000865" [label = "(<operator>.addition,hv[t[n]]+l[g])" ]
"1000874" [label = "(<operator>.addition,hv[t[n]]+l[n])" ]
"1000805" [label = "(<operator>.indirectIndexAccess,t[n])" ]
"1000810" [label = "(<operator>.indirectIndexAccess,t[n])" ]
"1000836" [label = "(<operator>.indirectIndexAccess,p[n][0])" ]
"1000837" [label = "(<operator>.indirectIndexAccess,p[n])" ]
"1000903" [label = "(<operator>.indirectIndexAccess,t[n])" ]
"1000819" [label = "(<operator>.indirectIndexAccess,p[n][0])" ]
"1000827" [label = "(<operator>.indirectIndexAccess,d[p[n][0]])" ]
"1000845" [label = "(<operator>.indirectIndexAccess,d[g])" ]
"1000848" [label = "(<operator>.indirectIndexAccess,d[t[n]])" ]
"1000887" [label = "(<operator>.indirectIndexAccess,hv[t[n]])" ]
"1000820" [label = "(<operator>.indirectIndexAccess,p[n])" ]
"1000829" [label = "(<operator>.indirectIndexAccess,p[n][0])" ]
"1000850" [label = "(<operator>.indirectIndexAccess,t[n])" ]
"1000889" [label = "(<operator>.indirectIndexAccess,t[n])" ]
"1000893" [label = "(<operator>.indirectIndexAccess,hv[t[n]])" ]
"1000898" [label = "(<operator>.indirectIndexAccess,l[n])" ]
"1000830" [label = "(<operator>.indirectIndexAccess,p[n])" ]
"1000856" [label = "(<operator>.indirectIndexAccess,t[g])" ]
"1000859" [label = "(<operator>.indirectIndexAccess,t[n])" ]
"1000895" [label = "(<operator>.indirectIndexAccess,t[n])" ]
"1000866" [label = "(<operator>.indirectIndexAccess,hv[t[n]])" ]
"1000871" [label = "(<operator>.indirectIndexAccess,l[g])" ]
"1000875" [label = "(<operator>.indirectIndexAccess,hv[t[n]])" ]
"1000880" [label = "(<operator>.indirectIndexAccess,l[n])" ]
"1000868" [label = "(<operator>.indirectIndexAccess,t[n])" ]
"1000877" [label = "(<operator>.indirectIndexAccess,t[n])" ]
  "1000906" -> "1000908"  [ label = "DDG: <RET>"] 
  "1000790" -> "1000908"  [ label = "DDG: n"] 
  "1000791" -> "1000908"  [ label = "DDG: g"] 
  "1000794" -> "1000908"  [ label = "DDG: ans"] 
  "1000794" -> "1000908"  [ label = "DDG: -INF"] 
  "1000799" -> "1000908"  [ label = "DDG: n"] 
  "1000799" -> "1000908"  [ label = "DDG: g"] 
  "1000799" -> "1000908"  [ label = "DDG: n!=g"] 
  "1000804" -> "1000908"  [ label = "DDG: t[n]"] 
  "1000803" -> "1000908"  [ label = "DDG: t[n]==0"] 
  "1000809" -> "1000908"  [ label = "DDG: t[n]"] 
  "1000809" -> "1000908"  [ label = "DDG: n"] 
  "1000803" -> "1000908"  [ label = "DDG: t[n]==n"] 
  "1000803" -> "1000908"  [ label = "DDG: t[n]==0 || t[n]==n"] 
  "1000844" -> "1000908"  [ label = "DDG: d[g]"] 
  "1000844" -> "1000908"  [ label = "DDG: d[t[n]]"] 
  "1000844" -> "1000908"  [ label = "DDG: d[g]>=d[t[n]]"] 
  "1000884" -> "1000908"  [ label = "DDG: ans"] 
  "1000886" -> "1000908"  [ label = "DDG: hv[t[n]]"] 
  "1000892" -> "1000908"  [ label = "DDG: l[n]"] 
  "1000886" -> "1000908"  [ label = "DDG: hv[t[n]]+l[n]"] 
  "1000884" -> "1000908"  [ label = "DDG: hvst.qry(hv[t[n]], hv[t[n]]+l[n])"] 
  "1000884" -> "1000908"  [ label = "DDG: ckmax(ans, hvst.qry(hv[t[n]], hv[t[n]]+l[n]))"] 
  "1000901" -> "1000908"  [ label = "DDG: t[n]"] 
  "1000855" -> "1000908"  [ label = "DDG: t[g]"] 
  "1000855" -> "1000908"  [ label = "DDG: t[n]"] 
  "1000854" -> "1000908"  [ label = "DDG: t[g]==t[n]"] 
  "1000854" -> "1000908"  [ label = "DDG: assert(t[g]==t[n])"] 
  "1000862" -> "1000908"  [ label = "DDG: ans"] 
  "1000865" -> "1000908"  [ label = "DDG: l[g]"] 
  "1000864" -> "1000908"  [ label = "DDG: hv[t[n]]+l[g]"] 
  "1000874" -> "1000908"  [ label = "DDG: hv[t[n]]"] 
  "1000874" -> "1000908"  [ label = "DDG: l[n]"] 
  "1000864" -> "1000908"  [ label = "DDG: hv[t[n]]+l[n]"] 
  "1000862" -> "1000908"  [ label = "DDG: hvst.qry(hv[t[n]]+l[g], hv[t[n]]+l[n])"] 
  "1000862" -> "1000908"  [ label = "DDG: ckmax(ans, hvst.qry(hv[t[n]]+l[g], hv[t[n]]+l[n]))"] 
  "1000815" -> "1000908"  [ label = "DDG: ans"] 
  "1000817" -> "1000908"  [ label = "DDG: getval(p[n][0], n)"] 
  "1000825" -> "1000908"  [ label = "DDG: d[p[n][0]]"] 
  "1000817" -> "1000908"  [ label = "DDG: 2*d[p[n][0]]"] 
  "1000815" -> "1000908"  [ label = "DDG: getval(p[n][0], n)-2*d[p[n][0]]"] 
  "1000815" -> "1000908"  [ label = "DDG: ckmax(ans, getval(p[n][0], n)-2*d[p[n][0]])"] 
  "1000834" -> "1000908"  [ label = "DDG: p[n][0]"] 
  "1000796" -> "1000908"  [ label = "DDG: INF"] 
  "1000789" -> "1000790"  [ label = "DDG: "] 
  "1000789" -> "1000791"  [ label = "DDG: "] 
  "1000796" -> "1000794"  [ label = "DDG: INF"] 
  "1000907" -> "1000906"  [ label = "DDG: ans"] 
  "1000794" -> "1000906"  [ label = "DDG: ans"] 
  "1000884" -> "1000906"  [ label = "DDG: ans"] 
  "1000862" -> "1000906"  [ label = "DDG: ans"] 
  "1000815" -> "1000906"  [ label = "DDG: ans"] 
  "1000789" -> "1000794"  [ label = "DDG: "] 
  "1000789" -> "1000907"  [ label = "DDG: "] 
  "1000789" -> "1000796"  [ label = "DDG: "] 
  "1000901" -> "1000799"  [ label = "DDG: n"] 
  "1000834" -> "1000799"  [ label = "DDG: n"] 
  "1000790" -> "1000799"  [ label = "DDG: n"] 
  "1000789" -> "1000799"  [ label = "DDG: "] 
  "1000791" -> "1000799"  [ label = "DDG: g"] 
  "1000804" -> "1000803"  [ label = "DDG: t[n]"] 
  "1000804" -> "1000803"  [ label = "DDG: 0"] 
  "1000809" -> "1000803"  [ label = "DDG: n"] 
  "1000809" -> "1000803"  [ label = "DDG: t[n]"] 
  "1000818" -> "1000834"  [ label = "DDG: p[n][0]"] 
  "1000809" -> "1000804"  [ label = "DDG: t[n]"] 
  "1000789" -> "1000804"  [ label = "DDG: "] 
  "1000804" -> "1000809"  [ label = "DDG: t[n]"] 
  "1000799" -> "1000809"  [ label = "DDG: n"] 
  "1000790" -> "1000809"  [ label = "DDG: n"] 
  "1000789" -> "1000809"  [ label = "DDG: "] 
  "1000794" -> "1000815"  [ label = "DDG: ans"] 
  "1000884" -> "1000815"  [ label = "DDG: ans"] 
  "1000789" -> "1000815"  [ label = "DDG: "] 
  "1000817" -> "1000815"  [ label = "DDG: 2*d[p[n][0]]"] 
  "1000817" -> "1000815"  [ label = "DDG: getval(p[n][0], n)"] 
  "1000790" -> "1000834"  [ label = "DDG: n"] 
  "1000789" -> "1000834"  [ label = "DDG: "] 
  "1000804" -> "1000901"  [ label = "DDG: t[n]"] 
  "1000809" -> "1000901"  [ label = "DDG: t[n]"] 
  "1000818" -> "1000817"  [ label = "DDG: n"] 
  "1000818" -> "1000817"  [ label = "DDG: p[n][0]"] 
  "1000825" -> "1000817"  [ label = "DDG: d[p[n][0]]"] 
  "1000825" -> "1000817"  [ label = "DDG: 2"] 
  "1000794" -> "1000884"  [ label = "DDG: ans"] 
  "1000815" -> "1000884"  [ label = "DDG: ans"] 
  "1000789" -> "1000884"  [ label = "DDG: "] 
  "1000886" -> "1000884"  [ label = "DDG: hv[t[n]]+l[n]"] 
  "1000886" -> "1000884"  [ label = "DDG: hv[t[n]]"] 
  "1000790" -> "1000901"  [ label = "DDG: n"] 
  "1000789" -> "1000901"  [ label = "DDG: "] 
  "1000799" -> "1000818"  [ label = "DDG: n"] 
  "1000809" -> "1000818"  [ label = "DDG: n"] 
  "1000790" -> "1000818"  [ label = "DDG: n"] 
  "1000789" -> "1000818"  [ label = "DDG: "] 
  "1000789" -> "1000825"  [ label = "DDG: "] 
  "1000855" -> "1000854"  [ label = "DDG: t[n]"] 
  "1000855" -> "1000854"  [ label = "DDG: t[g]"] 
  "1000794" -> "1000862"  [ label = "DDG: ans"] 
  "1000884" -> "1000862"  [ label = "DDG: ans"] 
  "1000815" -> "1000862"  [ label = "DDG: ans"] 
  "1000789" -> "1000862"  [ label = "DDG: "] 
  "1000864" -> "1000862"  [ label = "DDG: hv[t[n]]+l[n]"] 
  "1000864" -> "1000862"  [ label = "DDG: hv[t[n]]+l[g]"] 
  "1000886" -> "1000892"  [ label = "DDG: hv[t[n]]"] 
  "1000804" -> "1000855"  [ label = "DDG: t[n]"] 
  "1000809" -> "1000855"  [ label = "DDG: t[n]"] 
  "1000886" -> "1000864"  [ label = "DDG: hv[t[n]]"] 
  "1000886" -> "1000865"  [ label = "DDG: hv[t[n]]"] 
  "1000886" -> "1000874"  [ label = "DDG: hv[t[n]]"] 
  "1000799" -> "1000804"  [ label = "CDG: "] 
  "1000799" -> "1000803"  [ label = "CDG: "] 
  "1000799" -> "1000805"  [ label = "CDG: "] 
  "1000803" -> "1000815"  [ label = "CDG: "] 
  "1000803" -> "1000819"  [ label = "CDG: "] 
  "1000803" -> "1000825"  [ label = "CDG: "] 
  "1000803" -> "1000799"  [ label = "CDG: "] 
  "1000803" -> "1000834"  [ label = "CDG: "] 
  "1000803" -> "1000848"  [ label = "CDG: "] 
  "1000803" -> "1000830"  [ label = "CDG: "] 
  "1000803" -> "1000827"  [ label = "CDG: "] 
  "1000803" -> "1000818"  [ label = "CDG: "] 
  "1000803" -> "1000850"  [ label = "CDG: "] 
  "1000803" -> "1000820"  [ label = "CDG: "] 
  "1000803" -> "1000836"  [ label = "CDG: "] 
  "1000803" -> "1000845"  [ label = "CDG: "] 
  "1000803" -> "1000829"  [ label = "CDG: "] 
  "1000803" -> "1000837"  [ label = "CDG: "] 
  "1000803" -> "1000844"  [ label = "CDG: "] 
  "1000803" -> "1000817"  [ label = "CDG: "] 
  "1000804" -> "1000809"  [ label = "CDG: "] 
  "1000804" -> "1000810"  [ label = "CDG: "] 
  "1000844" -> "1000859"  [ label = "CDG: "] 
  "1000844" -> "1000893"  [ label = "CDG: "] 
  "1000844" -> "1000875"  [ label = "CDG: "] 
  "1000844" -> "1000892"  [ label = "CDG: "] 
  "1000844" -> "1000799"  [ label = "CDG: "] 
  "1000844" -> "1000855"  [ label = "CDG: "] 
  "1000844" -> "1000864"  [ label = "CDG: "] 
  "1000844" -> "1000866"  [ label = "CDG: "] 
  "1000844" -> "1000903"  [ label = "CDG: "] 
  "1000844" -> "1000877"  [ label = "CDG: "] 
  "1000844" -> "1000871"  [ label = "CDG: "] 
  "1000844" -> "1000856"  [ label = "CDG: "] 
  "1000844" -> "1000887"  [ label = "CDG: "] 
  "1000844" -> "1000874"  [ label = "CDG: "] 
  "1000844" -> "1000901"  [ label = "CDG: "] 
  "1000844" -> "1000854"  [ label = "CDG: "] 
  "1000844" -> "1000886"  [ label = "CDG: "] 
  "1000844" -> "1000862"  [ label = "CDG: "] 
  "1000844" -> "1000880"  [ label = "CDG: "] 
  "1000844" -> "1000884"  [ label = "CDG: "] 
  "1000844" -> "1000898"  [ label = "CDG: "] 
  "1000844" -> "1000868"  [ label = "CDG: "] 
  "1000844" -> "1000889"  [ label = "CDG: "] 
  "1000844" -> "1000895"  [ label = "CDG: "] 
  "1000844" -> "1000865"  [ label = "CDG: "] 
}
