digraph "solve2" {  
"1000399" [label = "(METHOD,solve2)" ]
"1000472" [label = "(METHOD_RETURN,pair<ll, int>)" ]
"1000400" [label = "(PARAM,vector<int>& cycles)" ]
"1000401" [label = "(PARAM,int n)" ]
"1000404" [label = "(<operator>.assignment,prod = 2 * binpow(3, n / 3) % mod)" ]
"1000416" [label = "(<operator>.assignment,cnt = 0)" ]
"1000422" [label = "(<operator>.postIncrement,mod[len % 3]++)" ]
"1000428" [label = "(<operator>.assignmentPlus,cnt += (len - 1) / 3)" ]
"1000406" [label = "(<operator>.multiplication,2 * binpow(3, n / 3) % mod)" ]
"1000440" [label = "(<operator>.postDecrement,mod[2]--)" ]
"1000444" [label = "(<operator>.assignmentPlus,cnt += combine(mod[1], mod[2]))" ]
"1000408" [label = "(<operator>.modulo,binpow(3, n / 3) % mod)" ]
"1000430" [label = "(<operator>.division,(len - 1) / 3)" ]
"1000455" [label = "(<operator>.assignmentMinus,mod[1] -= 2)" ]
"1000460" [label = "(<operator>.postIncrement,cnt++)" ]
"1000462" [label = "(<operator>.assignmentPlus,cnt += combine(mod[1], mod[2]))" ]
"1000409" [label = "(binpow,binpow(3, n / 3))" ]
"1000425" [label = "(<operator>.modulo,len % 3)" ]
"1000431" [label = "(<operator>.subtraction,len - 1)" ]
"1000446" [label = "(combine,combine(mod[1], mod[2]))" ]
"1000411" [label = "(<operator>.division,n / 3)" ]
"1000464" [label = "(combine,combine(mod[1], mod[2]))" ]
"1000436" [label = "(<operator>.indirectIndexAccess,mod[2])" ]
"1000441" [label = "(<operator>.indirectIndexAccess,mod[2])" ]
"1000447" [label = "(<operator>.indirectIndexAccess,mod[1])" ]
"1000450" [label = "(<operator>.indirectIndexAccess,mod[2])" ]
"1000456" [label = "(<operator>.indirectIndexAccess,mod[1])" ]
"1000465" [label = "(<operator>.indirectIndexAccess,mod[1])" ]
"1000468" [label = "(<operator>.indirectIndexAccess,mod[2])" ]
  "1000400" -> "1000472"  [ label = "DDG: cycles"] 
  "1000401" -> "1000472"  [ label = "DDG: n"] 
  "1000404" -> "1000472"  [ label = "DDG: prod"] 
  "1000411" -> "1000472"  [ label = "DDG: n"] 
  "1000409" -> "1000472"  [ label = "DDG: n / 3"] 
  "1000408" -> "1000472"  [ label = "DDG: binpow(3, n / 3)"] 
  "1000408" -> "1000472"  [ label = "DDG: mod"] 
  "1000406" -> "1000472"  [ label = "DDG: binpow(3, n / 3) % mod"] 
  "1000404" -> "1000472"  [ label = "DDG: 2 * binpow(3, n / 3) % mod"] 
  "1000422" -> "1000472"  [ label = "DDG: mod[len % 3]"] 
  "1000431" -> "1000472"  [ label = "DDG: len"] 
  "1000430" -> "1000472"  [ label = "DDG: len - 1"] 
  "1000428" -> "1000472"  [ label = "DDG: (len - 1) / 3"] 
  "1000462" -> "1000472"  [ label = "DDG: cnt"] 
  "1000464" -> "1000472"  [ label = "DDG: mod[1]"] 
  "1000464" -> "1000472"  [ label = "DDG: mod[2]"] 
  "1000462" -> "1000472"  [ label = "DDG: combine(mod[1], mod[2])"] 
  "1000444" -> "1000472"  [ label = "DDG: cnt"] 
  "1000446" -> "1000472"  [ label = "DDG: mod[1]"] 
  "1000446" -> "1000472"  [ label = "DDG: mod[2]"] 
  "1000444" -> "1000472"  [ label = "DDG: combine(mod[1], mod[2])"] 
  "1000399" -> "1000400"  [ label = "DDG: "] 
  "1000399" -> "1000401"  [ label = "DDG: "] 
  "1000406" -> "1000404"  [ label = "DDG: 2"] 
  "1000406" -> "1000404"  [ label = "DDG: binpow(3, n / 3) % mod"] 
  "1000399" -> "1000416"  [ label = "DDG: "] 
  "1000399" -> "1000404"  [ label = "DDG: "] 
  "1000430" -> "1000428"  [ label = "DDG: 3"] 
  "1000430" -> "1000428"  [ label = "DDG: len - 1"] 
  "1000399" -> "1000406"  [ label = "DDG: "] 
  "1000408" -> "1000406"  [ label = "DDG: binpow(3, n / 3)"] 
  "1000408" -> "1000406"  [ label = "DDG: mod"] 
  "1000408" -> "1000422"  [ label = "DDG: mod"] 
  "1000416" -> "1000428"  [ label = "DDG: cnt"] 
  "1000399" -> "1000428"  [ label = "DDG: "] 
  "1000446" -> "1000444"  [ label = "DDG: mod[2]"] 
  "1000446" -> "1000444"  [ label = "DDG: mod[1]"] 
  "1000409" -> "1000408"  [ label = "DDG: 3"] 
  "1000409" -> "1000408"  [ label = "DDG: n / 3"] 
  "1000399" -> "1000408"  [ label = "DDG: "] 
  "1000431" -> "1000430"  [ label = "DDG: len"] 
  "1000431" -> "1000430"  [ label = "DDG: 1"] 
  "1000399" -> "1000430"  [ label = "DDG: "] 
  "1000408" -> "1000440"  [ label = "DDG: mod"] 
  "1000428" -> "1000444"  [ label = "DDG: cnt"] 
  "1000399" -> "1000444"  [ label = "DDG: "] 
  "1000399" -> "1000455"  [ label = "DDG: "] 
  "1000464" -> "1000462"  [ label = "DDG: mod[1]"] 
  "1000464" -> "1000462"  [ label = "DDG: mod[2]"] 
  "1000399" -> "1000409"  [ label = "DDG: "] 
  "1000411" -> "1000409"  [ label = "DDG: 3"] 
  "1000411" -> "1000409"  [ label = "DDG: n"] 
  "1000399" -> "1000425"  [ label = "DDG: "] 
  "1000425" -> "1000431"  [ label = "DDG: len"] 
  "1000399" -> "1000431"  [ label = "DDG: "] 
  "1000408" -> "1000446"  [ label = "DDG: mod"] 
  "1000440" -> "1000446"  [ label = "DDG: mod[2]"] 
  "1000408" -> "1000455"  [ label = "DDG: mod"] 
  "1000428" -> "1000460"  [ label = "DDG: cnt"] 
  "1000399" -> "1000460"  [ label = "DDG: "] 
  "1000460" -> "1000462"  [ label = "DDG: cnt"] 
  "1000399" -> "1000462"  [ label = "DDG: "] 
  "1000401" -> "1000411"  [ label = "DDG: n"] 
  "1000399" -> "1000411"  [ label = "DDG: "] 
  "1000408" -> "1000464"  [ label = "DDG: mod"] 
  "1000455" -> "1000464"  [ label = "DDG: mod[1]"] 
  "1000436" -> "1000446"  [ label = "CDG: "] 
  "1000436" -> "1000450"  [ label = "CDG: "] 
  "1000436" -> "1000440"  [ label = "CDG: "] 
  "1000436" -> "1000465"  [ label = "CDG: "] 
  "1000436" -> "1000456"  [ label = "CDG: "] 
  "1000436" -> "1000455"  [ label = "CDG: "] 
  "1000436" -> "1000444"  [ label = "CDG: "] 
  "1000436" -> "1000460"  [ label = "CDG: "] 
  "1000436" -> "1000441"  [ label = "CDG: "] 
  "1000436" -> "1000468"  [ label = "CDG: "] 
  "1000436" -> "1000464"  [ label = "CDG: "] 
  "1000436" -> "1000462"  [ label = "CDG: "] 
  "1000436" -> "1000447"  [ label = "CDG: "] 
}
