digraph "main" {  
"1000917" [label = "(METHOD,main)" ]
"1001030" [label = "(METHOD_RETURN,int)" ]
"1000940" [label = "(init,init())" ]
"1000941" [label = "(fil,fil(Q,-1))" ]
"1001006" [label = "(insert,insert(1,1,q,j,q,i.fi))" ]
"1001015" [label = "(solve,solve(1,1,q))" ]
"1000920" [label = "(<operator>.assignment,n=read())" ]
"1000923" [label = "(<operator>.assignment,q=read())" ]
"1000928" [label = "(<operator>.assignment,x=read())" ]
"1000932" [label = "(<operator>.assignment,y=read())" ]
"1000948" [label = "(<operator>.assignment,opt=read())" ]
"1000952" [label = "(<operator>.assignment,x=read())" ]
"1001023" [label = "(puts,puts(ans[i]?\"Yes\":\"No\"))" ]
"1000936" [label = "(e[x].pb,e[x].pb(y))" ]
"1000938" [label = "(e[y].pb,e[y].pb(x))" ]
"1000943" [label = "(<operator>.minus,-1)" ]
"1000956" [label = "(<operator>.lessEqualsThan,opt<=2)" ]
"1000961" [label = "(<operator>.assignment,y=read())" ]
"1001024" [label = "(<operator>.conditional,ans[i]?\"Yes\":\"No\")" ]
"1000965" [label = "(<operator>.greaterThan,x>y)" ]
"1000968" [label = "(swap,swap(x,y))" ]
"1000972" [label = "(<operator>.equals,opt==1)" ]
"1000999" [label = "(<operator>.assignment,Q[i]=x)" ]
"1000976" [label = "(f[mp(x,y)].pb,f[mp(x,y)].pb(i))" ]
"1000980" [label = "(assert,assert(!f[mp(x,y)].empty()))" ]
"1000984" [label = "(<operator>.assignment,l=f[mp(x,y)].back())" ]
"1000987" [label = "(f[mp(x,y)].pop_back,f[mp(x,y)].pop_back())" ]
"1000988" [label = "(insert,insert(1,1,q,l,i,mp(x,y)))" ]
"1000981" [label = "(<operator>.logicalNot,!f[mp(x,y)].empty())" ]
"1000994" [label = "(mp,mp(x,y))" ]
"1001020" [label = "(<operator>.indirectIndexAccess,~Q[i])" ]
"1001025" [label = "(<operator>.indirectIndexAccess,ans[i])" ]
"1000963" [label = "(read,read())" ]
"1001000" [label = "(<operator>.indirectIndexAccess,Q[i])" ]
"1000986" [label = "(f[mp(x,y)].back,f[mp(x,y)].back())" ]
"1000982" [label = "(f[mp(x,y)].empty,f[mp(x,y)].empty())" ]
  "1000936" -> "1001030"  [ label = "DDG: y"] 
  "1000936" -> "1001030"  [ label = "DDG: e[x].pb(y)"] 
  "1000938" -> "1001030"  [ label = "DDG: e[y].pb(x)"] 
  "1000940" -> "1001030"  [ label = "DDG: init()"] 
  "1000941" -> "1001030"  [ label = "DDG: Q"] 
  "1000941" -> "1001030"  [ label = "DDG: -1"] 
  "1000941" -> "1001030"  [ label = "DDG: fil(Q,-1)"] 
  "1000952" -> "1001030"  [ label = "DDG: read()"] 
  "1000956" -> "1001030"  [ label = "DDG: opt"] 
  "1000956" -> "1001030"  [ label = "DDG: opt<=2"] 
  "1000999" -> "1001030"  [ label = "DDG: Q[i]"] 
  "1000999" -> "1001030"  [ label = "DDG: x"] 
  "1000961" -> "1001030"  [ label = "DDG: read()"] 
  "1000965" -> "1001030"  [ label = "DDG: x"] 
  "1000965" -> "1001030"  [ label = "DDG: y"] 
  "1000965" -> "1001030"  [ label = "DDG: x>y"] 
  "1000968" -> "1001030"  [ label = "DDG: x"] 
  "1000968" -> "1001030"  [ label = "DDG: y"] 
  "1000968" -> "1001030"  [ label = "DDG: swap(x,y)"] 
  "1000972" -> "1001030"  [ label = "DDG: opt"] 
  "1000972" -> "1001030"  [ label = "DDG: opt==1"] 
  "1000981" -> "1001030"  [ label = "DDG: f[mp(x,y)].empty()"] 
  "1000980" -> "1001030"  [ label = "DDG: !f[mp(x,y)].empty()"] 
  "1000980" -> "1001030"  [ label = "DDG: assert(!f[mp(x,y)].empty())"] 
  "1000984" -> "1001030"  [ label = "DDG: f[mp(x,y)].back()"] 
  "1000987" -> "1001030"  [ label = "DDG: f[mp(x,y)].pop_back()"] 
  "1000988" -> "1001030"  [ label = "DDG: l"] 
  "1000988" -> "1001030"  [ label = "DDG: i"] 
  "1000994" -> "1001030"  [ label = "DDG: x"] 
  "1000994" -> "1001030"  [ label = "DDG: y"] 
  "1000988" -> "1001030"  [ label = "DDG: mp(x,y)"] 
  "1000988" -> "1001030"  [ label = "DDG: insert(1,1,q,l,i,mp(x,y))"] 
  "1000976" -> "1001030"  [ label = "DDG: i"] 
  "1000976" -> "1001030"  [ label = "DDG: f[mp(x,y)].pb(i)"] 
  "1001006" -> "1001030"  [ label = "DDG: i.fi"] 
  "1001006" -> "1001030"  [ label = "DDG: insert(1,1,q,j,q,i.fi)"] 
  "1001015" -> "1001030"  [ label = "DDG: q"] 
  "1001015" -> "1001030"  [ label = "DDG: solve(1,1,q)"] 
  "1001024" -> "1001030"  [ label = "DDG: ans[i]"] 
  "1001023" -> "1001030"  [ label = "DDG: ans[i]?\"Yes\":\"No\""] 
  "1001023" -> "1001030"  [ label = "DDG: puts(ans[i]?\"Yes\":\"No\")"] 
  "1001006" -> "1001030"  [ label = "DDG: j"] 
  "1000920" -> "1001030"  [ label = "DDG: n"] 
  "1000917" -> "1000940"  [ label = "DDG: "] 
  "1000917" -> "1000920"  [ label = "DDG: "] 
  "1000917" -> "1000923"  [ label = "DDG: "] 
  "1000917" -> "1000928"  [ label = "DDG: "] 
  "1000917" -> "1000932"  [ label = "DDG: "] 
  "1000917" -> "1000941"  [ label = "DDG: "] 
  "1000943" -> "1000941"  [ label = "DDG: 1"] 
  "1000917" -> "1000948"  [ label = "DDG: "] 
  "1000917" -> "1000952"  [ label = "DDG: "] 
  "1000917" -> "1001006"  [ label = "DDG: "] 
  "1000923" -> "1001006"  [ label = "DDG: q"] 
  "1000988" -> "1001006"  [ label = "DDG: q"] 
  "1000988" -> "1001006"  [ label = "DDG: i"] 
  "1000976" -> "1001006"  [ label = "DDG: i"] 
  "1000917" -> "1001015"  [ label = "DDG: "] 
  "1001006" -> "1001015"  [ label = "DDG: q"] 
  "1000917" -> "1000943"  [ label = "DDG: "] 
  "1000917" -> "1001023"  [ label = "DDG: "] 
  "1000932" -> "1000936"  [ label = "DDG: y"] 
  "1000917" -> "1000936"  [ label = "DDG: "] 
  "1000928" -> "1000938"  [ label = "DDG: x"] 
  "1000917" -> "1000938"  [ label = "DDG: "] 
  "1000948" -> "1000956"  [ label = "DDG: opt"] 
  "1000917" -> "1000956"  [ label = "DDG: "] 
  "1000917" -> "1000961"  [ label = "DDG: "] 
  "1000917" -> "1001024"  [ label = "DDG: "] 
  "1000952" -> "1000999"  [ label = "DDG: x"] 
  "1000917" -> "1000999"  [ label = "DDG: "] 
  "1000952" -> "1000965"  [ label = "DDG: x"] 
  "1000917" -> "1000965"  [ label = "DDG: "] 
  "1000961" -> "1000965"  [ label = "DDG: y"] 
  "1000965" -> "1000968"  [ label = "DDG: x"] 
  "1000917" -> "1000968"  [ label = "DDG: "] 
  "1000965" -> "1000968"  [ label = "DDG: y"] 
  "1000956" -> "1000972"  [ label = "DDG: opt"] 
  "1000917" -> "1000972"  [ label = "DDG: "] 
  "1000917" -> "1000976"  [ label = "DDG: "] 
  "1000917" -> "1000984"  [ label = "DDG: "] 
  "1000917" -> "1000987"  [ label = "DDG: "] 
  "1000981" -> "1000980"  [ label = "DDG: f[mp(x,y)].empty()"] 
  "1000917" -> "1000988"  [ label = "DDG: "] 
  "1000923" -> "1000988"  [ label = "DDG: q"] 
  "1000994" -> "1000988"  [ label = "DDG: x"] 
  "1000994" -> "1000988"  [ label = "DDG: y"] 
  "1000984" -> "1000988"  [ label = "DDG: l"] 
  "1000917" -> "1000981"  [ label = "DDG: "] 
  "1000965" -> "1000994"  [ label = "DDG: x"] 
  "1000968" -> "1000994"  [ label = "DDG: x"] 
  "1000917" -> "1000994"  [ label = "DDG: "] 
  "1000965" -> "1000994"  [ label = "DDG: y"] 
  "1000968" -> "1000994"  [ label = "DDG: y"] 
  "1001020" -> "1001023"  [ label = "CDG: "] 
  "1001020" -> "1001024"  [ label = "CDG: "] 
  "1001020" -> "1001025"  [ label = "CDG: "] 
  "1000956" -> "1001000"  [ label = "CDG: "] 
  "1000956" -> "1000963"  [ label = "CDG: "] 
  "1000956" -> "1000999"  [ label = "CDG: "] 
  "1000956" -> "1000961"  [ label = "CDG: "] 
  "1000956" -> "1000965"  [ label = "CDG: "] 
  "1000956" -> "1000972"  [ label = "CDG: "] 
  "1000965" -> "1000968"  [ label = "CDG: "] 
  "1000972" -> "1000980"  [ label = "CDG: "] 
  "1000972" -> "1000984"  [ label = "CDG: "] 
  "1000972" -> "1000976"  [ label = "CDG: "] 
  "1000972" -> "1000988"  [ label = "CDG: "] 
  "1000972" -> "1000987"  [ label = "CDG: "] 
  "1000972" -> "1000982"  [ label = "CDG: "] 
  "1000972" -> "1000981"  [ label = "CDG: "] 
  "1000972" -> "1000986"  [ label = "CDG: "] 
  "1000972" -> "1000994"  [ label = "CDG: "] 
}
