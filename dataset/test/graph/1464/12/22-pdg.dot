digraph "main" {  
"1001041" [label = "(METHOD,main)" ]
"1001152" [label = "(METHOD_RETURN,int)" ]
"1001150" [label = "(RETURN,return 0;,return 0;)" ]
"1001044" [label = "(<operator>.assignment,n = get())" ]
"1001047" [label = "(<operator>.assignment,q = get())" ]
"1001057" [label = "(<operator>.lessThan,i < n)" ]
"1001060" [label = "(<operator>.postIncrement,i++)" ]
"1001078" [label = "(dfs,dfs(1, 0))" ]
"1001081" [label = "(df5,df5(1, 1))" ]
"1001086" [label = "(<operator>.assignment,t = 1)" ]
"1001089" [label = "(<operator>.lessEqualsThan,t <= q)" ]
"1001092" [label = "(<operator>.postIncrement,t++)" ]
"1001151" [label = "(LITERAL,0,return 0;)" ]
"1001063" [label = "(<operator>.assignment,u = get())" ]
"1001096" [label = "(<operator>.assignment,op = get())" ]
"1001067" [label = "(<operator>.assignment,v = get())" ]
"1001100" [label = "(<operator>.equals,op == 1)" ]
"1001071" [label = "(add,add(u, v))" ]
"1001074" [label = "(add,add(v, u))" ]
"1001105" [label = "(<operator>.assignment,x = get())" ]
"1001109" [label = "(<operator>.assignment,y = get())" ]
"1001112" [label = "(insert,insert(x, y))" ]
"1001117" [label = "(<operator>.equals,op == 2)" ]
"1001122" [label = "(<operator>.assignment,x = get())" ]
"1001126" [label = "(<operator>.assignment,y = get())" ]
"1001129" [label = "(erase,erase(x, y))" ]
"1001135" [label = "(<operator>.assignment,x = get())" ]
"1001139" [label = "(<operator>.assignment,res = ask(x))" ]
"1001144" [label = "(IDENTIFIER,res,if(res))" ]
"1001145" [label = "(printf,printf(\"Yes\n\"))" ]
"1001141" [label = "(ask,ask(x))" ]
"1001148" [label = "(printf,printf(\"No\n\"))" ]
"1001065" [label = "(get,get())" ]
"1001098" [label = "(get,get())" ]
"1001069" [label = "(get,get())" ]
"1001107" [label = "(get,get())" ]
"1001111" [label = "(get,get())" ]
"1001124" [label = "(get,get())" ]
"1001128" [label = "(get,get())" ]
"1001137" [label = "(get,get())" ]
  "1001047" -> "1001152"  [ label = "DDG: get()"] 
  "1001057" -> "1001152"  [ label = "DDG: i"] 
  "1001057" -> "1001152"  [ label = "DDG: n"] 
  "1001057" -> "1001152"  [ label = "DDG: i < n"] 
  "1001078" -> "1001152"  [ label = "DDG: dfs(1, 0)"] 
  "1001081" -> "1001152"  [ label = "DDG: df5(1, 1)"] 
  "1001089" -> "1001152"  [ label = "DDG: t"] 
  "1001089" -> "1001152"  [ label = "DDG: q"] 
  "1001089" -> "1001152"  [ label = "DDG: t <= q"] 
  "1001100" -> "1001152"  [ label = "DDG: op"] 
  "1001100" -> "1001152"  [ label = "DDG: op == 1"] 
  "1001117" -> "1001152"  [ label = "DDG: op"] 
  "1001117" -> "1001152"  [ label = "DDG: op == 2"] 
  "1001135" -> "1001152"  [ label = "DDG: get()"] 
  "1001139" -> "1001152"  [ label = "DDG: res"] 
  "1001141" -> "1001152"  [ label = "DDG: x"] 
  "1001139" -> "1001152"  [ label = "DDG: ask(x)"] 
  "1001148" -> "1001152"  [ label = "DDG: printf(\"No\n\")"] 
  "1001145" -> "1001152"  [ label = "DDG: printf(\"Yes\n\")"] 
  "1001126" -> "1001152"  [ label = "DDG: get()"] 
  "1001129" -> "1001152"  [ label = "DDG: x"] 
  "1001129" -> "1001152"  [ label = "DDG: y"] 
  "1001129" -> "1001152"  [ label = "DDG: erase(x, y)"] 
  "1001109" -> "1001152"  [ label = "DDG: get()"] 
  "1001112" -> "1001152"  [ label = "DDG: x"] 
  "1001112" -> "1001152"  [ label = "DDG: y"] 
  "1001112" -> "1001152"  [ label = "DDG: insert(x, y)"] 
  "1001067" -> "1001152"  [ label = "DDG: get()"] 
  "1001071" -> "1001152"  [ label = "DDG: add(u, v)"] 
  "1001074" -> "1001152"  [ label = "DDG: v"] 
  "1001074" -> "1001152"  [ label = "DDG: u"] 
  "1001074" -> "1001152"  [ label = "DDG: add(v, u)"] 
  "1001150" -> "1001152"  [ label = "DDG: <RET>"] 
  "1001151" -> "1001150"  [ label = "DDG: 0"] 
  "1001041" -> "1001150"  [ label = "DDG: "] 
  "1001041" -> "1001044"  [ label = "DDG: "] 
  "1001041" -> "1001047"  [ label = "DDG: "] 
  "1001041" -> "1001086"  [ label = "DDG: "] 
  "1001041" -> "1001151"  [ label = "DDG: "] 
  "1001060" -> "1001057"  [ label = "DDG: i"] 
  "1001041" -> "1001057"  [ label = "DDG: "] 
  "1001044" -> "1001057"  [ label = "DDG: n"] 
  "1001057" -> "1001060"  [ label = "DDG: i"] 
  "1001041" -> "1001060"  [ label = "DDG: "] 
  "1001041" -> "1001063"  [ label = "DDG: "] 
  "1001041" -> "1001078"  [ label = "DDG: "] 
  "1001041" -> "1001081"  [ label = "DDG: "] 
  "1001086" -> "1001089"  [ label = "DDG: t"] 
  "1001092" -> "1001089"  [ label = "DDG: t"] 
  "1001041" -> "1001089"  [ label = "DDG: "] 
  "1001047" -> "1001089"  [ label = "DDG: q"] 
  "1001089" -> "1001092"  [ label = "DDG: t"] 
  "1001041" -> "1001092"  [ label = "DDG: "] 
  "1001041" -> "1001096"  [ label = "DDG: "] 
  "1001041" -> "1001067"  [ label = "DDG: "] 
  "1001096" -> "1001100"  [ label = "DDG: op"] 
  "1001041" -> "1001100"  [ label = "DDG: "] 
  "1001041" -> "1001105"  [ label = "DDG: "] 
  "1001041" -> "1001109"  [ label = "DDG: "] 
  "1001063" -> "1001071"  [ label = "DDG: u"] 
  "1001041" -> "1001071"  [ label = "DDG: "] 
  "1001067" -> "1001071"  [ label = "DDG: v"] 
  "1001071" -> "1001074"  [ label = "DDG: v"] 
  "1001041" -> "1001074"  [ label = "DDG: "] 
  "1001071" -> "1001074"  [ label = "DDG: u"] 
  "1001105" -> "1001112"  [ label = "DDG: x"] 
  "1001041" -> "1001112"  [ label = "DDG: "] 
  "1001109" -> "1001112"  [ label = "DDG: y"] 
  "1001100" -> "1001117"  [ label = "DDG: op"] 
  "1001041" -> "1001117"  [ label = "DDG: "] 
  "1001041" -> "1001122"  [ label = "DDG: "] 
  "1001041" -> "1001126"  [ label = "DDG: "] 
  "1001122" -> "1001129"  [ label = "DDG: x"] 
  "1001041" -> "1001129"  [ label = "DDG: "] 
  "1001126" -> "1001129"  [ label = "DDG: y"] 
  "1001041" -> "1001135"  [ label = "DDG: "] 
  "1001141" -> "1001139"  [ label = "DDG: x"] 
  "1001041" -> "1001139"  [ label = "DDG: "] 
  "1001041" -> "1001144"  [ label = "DDG: "] 
  "1001135" -> "1001141"  [ label = "DDG: x"] 
  "1001041" -> "1001141"  [ label = "DDG: "] 
  "1001041" -> "1001145"  [ label = "DDG: "] 
  "1001041" -> "1001148"  [ label = "DDG: "] 
  "1001057" -> "1001057"  [ label = "CDG: "] 
  "1001057" -> "1001067"  [ label = "CDG: "] 
  "1001057" -> "1001069"  [ label = "CDG: "] 
  "1001057" -> "1001074"  [ label = "CDG: "] 
  "1001057" -> "1001063"  [ label = "CDG: "] 
  "1001057" -> "1001060"  [ label = "CDG: "] 
  "1001057" -> "1001071"  [ label = "CDG: "] 
  "1001057" -> "1001065"  [ label = "CDG: "] 
  "1001089" -> "1001098"  [ label = "CDG: "] 
  "1001089" -> "1001089"  [ label = "CDG: "] 
  "1001089" -> "1001096"  [ label = "CDG: "] 
  "1001089" -> "1001100"  [ label = "CDG: "] 
  "1001089" -> "1001092"  [ label = "CDG: "] 
  "1001100" -> "1001112"  [ label = "CDG: "] 
  "1001100" -> "1001105"  [ label = "CDG: "] 
  "1001100" -> "1001111"  [ label = "CDG: "] 
  "1001100" -> "1001107"  [ label = "CDG: "] 
  "1001100" -> "1001117"  [ label = "CDG: "] 
  "1001100" -> "1001109"  [ label = "CDG: "] 
  "1001117" -> "1001128"  [ label = "CDG: "] 
  "1001117" -> "1001141"  [ label = "CDG: "] 
  "1001117" -> "1001126"  [ label = "CDG: "] 
  "1001117" -> "1001124"  [ label = "CDG: "] 
  "1001117" -> "1001137"  [ label = "CDG: "] 
  "1001117" -> "1001135"  [ label = "CDG: "] 
  "1001117" -> "1001129"  [ label = "CDG: "] 
  "1001117" -> "1001122"  [ label = "CDG: "] 
  "1001117" -> "1001139"  [ label = "CDG: "] 
  "1001117" -> "1001145"  [ label = "CDG: "] 
  "1001117" -> "1001148"  [ label = "CDG: "] 
}
