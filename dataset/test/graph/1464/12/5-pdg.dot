digraph "GetLA" {  
"1000457" [label = "(METHOD,GetLA)" ]
"1000494" [label = "(METHOD_RETURN,int)" ]
"1000458" [label = "(PARAM,int x)" ]
"1000459" [label = "(PARAM,int y)" ]
"1000492" [label = "(RETURN,return x;,return x;)" ]
"1000462" [label = "(<operator>.lessEqualsThan,dep[x] <= y)" ]
"1000467" [label = "(RETURN,return 1;,return 1;)" ]
"1000471" [label = "(<operator>.assignment,i = 19)" ]
"1000474" [label = "(<operator>.greaterEqualsThan,i >= 0)" ]
"1000477" [label = "(<operator>.postDecrement,i--)" ]
"1000493" [label = "(IDENTIFIER,x,return x;)" ]
"1000468" [label = "(LITERAL,1,return 1;)" ]
"1000480" [label = "(<operator>.and,y >> i & 1)" ]
"1000485" [label = "(<operator>.assignment,x = f[x][i])" ]
"1000481" [label = "(<operator>.arithmeticShiftRight,y >> i)" ]
"1000487" [label = "(<operator>.indirectIndexAccess,f[x][i])" ]
"1000488" [label = "(<operator>.indirectIndexAccess,f[x])" ]
  "1000492" -> "1000494"  [ label = "DDG: <RET>"] 
  "1000467" -> "1000494"  [ label = "DDG: <RET>"] 
  "1000458" -> "1000494"  [ label = "DDG: x"] 
  "1000459" -> "1000494"  [ label = "DDG: y"] 
  "1000462" -> "1000494"  [ label = "DDG: dep[x]"] 
  "1000462" -> "1000494"  [ label = "DDG: y"] 
  "1000462" -> "1000494"  [ label = "DDG: dep[x] <= y"] 
  "1000474" -> "1000494"  [ label = "DDG: i"] 
  "1000474" -> "1000494"  [ label = "DDG: i >= 0"] 
  "1000481" -> "1000494"  [ label = "DDG: y"] 
  "1000480" -> "1000494"  [ label = "DDG: y >> i"] 
  "1000480" -> "1000494"  [ label = "DDG: y >> i & 1"] 
  "1000485" -> "1000494"  [ label = "DDG: x"] 
  "1000485" -> "1000494"  [ label = "DDG: f[x][i]"] 
  "1000457" -> "1000458"  [ label = "DDG: "] 
  "1000457" -> "1000459"  [ label = "DDG: "] 
  "1000493" -> "1000492"  [ label = "DDG: x"] 
  "1000485" -> "1000492"  [ label = "DDG: x"] 
  "1000458" -> "1000492"  [ label = "DDG: x"] 
  "1000468" -> "1000467"  [ label = "DDG: 1"] 
  "1000457" -> "1000467"  [ label = "DDG: "] 
  "1000457" -> "1000471"  [ label = "DDG: "] 
  "1000457" -> "1000493"  [ label = "DDG: "] 
  "1000459" -> "1000462"  [ label = "DDG: y"] 
  "1000457" -> "1000462"  [ label = "DDG: "] 
  "1000457" -> "1000468"  [ label = "DDG: "] 
  "1000471" -> "1000474"  [ label = "DDG: i"] 
  "1000477" -> "1000474"  [ label = "DDG: i"] 
  "1000457" -> "1000474"  [ label = "DDG: "] 
  "1000481" -> "1000477"  [ label = "DDG: i"] 
  "1000457" -> "1000477"  [ label = "DDG: "] 
  "1000481" -> "1000480"  [ label = "DDG: y"] 
  "1000481" -> "1000480"  [ label = "DDG: i"] 
  "1000457" -> "1000480"  [ label = "DDG: "] 
  "1000458" -> "1000485"  [ label = "DDG: x"] 
  "1000457" -> "1000485"  [ label = "DDG: "] 
  "1000462" -> "1000481"  [ label = "DDG: y"] 
  "1000459" -> "1000481"  [ label = "DDG: y"] 
  "1000457" -> "1000481"  [ label = "DDG: "] 
  "1000474" -> "1000481"  [ label = "DDG: i"] 
  "1000462" -> "1000471"  [ label = "CDG: "] 
  "1000462" -> "1000492"  [ label = "CDG: "] 
  "1000462" -> "1000467"  [ label = "CDG: "] 
  "1000462" -> "1000474"  [ label = "CDG: "] 
  "1000474" -> "1000477"  [ label = "CDG: "] 
  "1000474" -> "1000474"  [ label = "CDG: "] 
  "1000474" -> "1000481"  [ label = "CDG: "] 
  "1000474" -> "1000480"  [ label = "CDG: "] 
  "1000480" -> "1000488"  [ label = "CDG: "] 
  "1000480" -> "1000487"  [ label = "CDG: "] 
  "1000480" -> "1000485"  [ label = "CDG: "] 
}
