digraph "main" {  
"1000267" [label = "(METHOD,main)" ]
"1000455" [label = "(METHOD_RETURN,int)" ]
"1000269" [label = "(scanf,scanf(\"%d%d\", &n, &m))" ]
"1000275" [label = "(t.resize,t.resize(m+100))" ]
"1000400" [label = "(fwht,fwht(t))" ]
"1000403" [label = "(<operator>.assignment,odp=0)" ]
"1000444" [label = "(printf,printf(\"%lld\n\", (1-odp+mod)%mod))" ]
"1000453" [label = "(RETURN,return 0;,return 0;)" ]
"1000281" [label = "(<operator>.assignment,i=1)" ]
"1000284" [label = "(<operator>.lessEqualsThan,i<=m)" ]
"1000287" [label = "(<operator>.preIncrement,++i)" ]
"1000302" [label = "(<operator>.assignment,i=1)" ]
"1000305" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000308" [label = "(<operator>.preIncrement,++i)" ]
"1000324" [label = "(<operator>.logicalNot,!que.empty())" ]
"1000397" [label = "(<operator>.logicalNot,!t.back())" ]
"1000399" [label = "(t.pop_back,t.pop_back())" ]
"1000408" [label = "(<operator>.assignmentPlus,odp+=obr((1-i*n%mod*obr(n+1)%mod+mod)*(n+1)%mod*t.size()%mod))" ]
"1000454" [label = "(LITERAL,0,return 0;)" ]
"1000276" [label = "(<operator>.addition,m+100)" ]
"1000290" [label = "(scanf,scanf(\"%d%d\", &a, &b))" ]
"1000296" [label = "(v[a].push_back,v[a].push_back(b))" ]
"1000298" [label = "(r[b].push_back,r[b].push_back(a))" ]
"1000311" [label = "(<operator>.assignment,stp[i]=v[i].size())" ]
"1000328" [label = "(<operator>.assignment,x=que.front())" ]
"1000331" [label = "(que.pop,que.pop())" ]
"1000332" [label = "(<operator>.preIncrement,++l)" ]
"1000343" [label = "(<operator>.assignment,war[x]=0)" ]
"1000360" [label = "(<operator>.assignmentPlus,t[war[x]]+=obr(n))" ]
"1000438" [label = "(<operator>.greaterEqualsThan,odp>=mod)" ]
"1000441" [label = "(<operator>.assignmentMinus,odp-=mod)" ]
"1000446" [label = "(<operator>.modulo,(1-odp+mod)%mod)" ]
"1000317" [label = "(<operator>.logicalNot,!stp[i])" ]
"1000321" [label = "(que.push,que.push(i))" ]
"1000336" [label = "(<operator>.assignment,odw[war[i]]=l)" ]
"1000349" [label = "(<operator>.equals,odw[war[x]]==l)" ]
"1000356" [label = "(<operator>.preIncrement,++war[x])" ]
"1000369" [label = "(<operator>.greaterEqualsThan,t[war[x]]>=mod)" ]
"1000376" [label = "(<operator>.assignmentMinus,t[war[x]]-=mod)" ]
"1000385" [label = "(<operator>.preDecrement,--stp[i])" ]
"1000410" [label = "(obr,obr((1-i*n%mod*obr(n+1)%mod+mod)*(n+1)%mod*t.size()%mod))" ]
"1000447" [label = "(<operator>.subtraction,1-odp+mod)" ]
"1000366" [label = "(obr,obr(n))" ]
"1000390" [label = "(<operator>.logicalNot,!stp[i])" ]
"1000394" [label = "(que.push,que.push(i))" ]
"1000411" [label = "(<operator>.multiplication,(1-i*n%mod*obr(n+1)%mod+mod)*(n+1)%mod*t.size()%mod)" ]
"1000449" [label = "(<operator>.addition,odp+mod)" ]
"1000412" [label = "(<operator>.subtraction,1-i*n%mod*obr(n+1)%mod+mod)" ]
"1000428" [label = "(<operator>.modulo,(n+1)%mod*t.size()%mod)" ]
"1000414" [label = "(<operator>.addition,i*n%mod*obr(n+1)%mod+mod)" ]
"1000429" [label = "(<operator>.addition,n+1)" ]
"1000432" [label = "(<operator>.multiplication,mod*t.size()%mod)" ]
"1000415" [label = "(<operator>.multiplication,i*n%mod*obr(n+1)%mod)" ]
"1000434" [label = "(<operator>.modulo,t.size()%mod)" ]
"1000417" [label = "(<operator>.modulo,n%mod*obr(n+1)%mod)" ]
"1000419" [label = "(<operator>.multiplication,mod*obr(n+1)%mod)" ]
"1000421" [label = "(<operator>.modulo,obr(n+1)%mod)" ]
"1000422" [label = "(obr,obr(n+1))" ]
"1000423" [label = "(<operator>.addition,n+1)" ]
"1000325" [label = "(que.empty,que.empty())" ]
"1000398" [label = "(t.back,t.back())" ]
"1000292" [label = "(<operator>.addressOf,&a)" ]
"1000294" [label = "(<operator>.addressOf,&b)" ]
"1000312" [label = "(<operator>.indirectIndexAccess,stp[i])" ]
"1000315" [label = "(v[i].size,v[i].size())" ]
"1000330" [label = "(que.front,que.front())" ]
"1000344" [label = "(<operator>.indirectIndexAccess,war[x])" ]
"1000361" [label = "(<operator>.indirectIndexAccess,t[war[x]])" ]
"1000318" [label = "(<operator>.indirectIndexAccess,stp[i])" ]
"1000337" [label = "(<operator>.indirectIndexAccess,odw[war[i]])" ]
"1000350" [label = "(<operator>.indirectIndexAccess,odw[war[x]])" ]
"1000357" [label = "(<operator>.indirectIndexAccess,war[x])" ]
"1000363" [label = "(<operator>.indirectIndexAccess,war[x])" ]
"1000370" [label = "(<operator>.indirectIndexAccess,t[war[x]])" ]
"1000377" [label = "(<operator>.indirectIndexAccess,t[war[x]])" ]
"1000386" [label = "(<operator>.indirectIndexAccess,stp[i])" ]
"1000339" [label = "(<operator>.indirectIndexAccess,war[i])" ]
"1000352" [label = "(<operator>.indirectIndexAccess,war[x])" ]
"1000372" [label = "(<operator>.indirectIndexAccess,war[x])" ]
"1000379" [label = "(<operator>.indirectIndexAccess,war[x])" ]
"1000391" [label = "(<operator>.indirectIndexAccess,stp[i])" ]
  "1000269" -> "1000455"  [ label = "DDG: &n"] 
  "1000269" -> "1000455"  [ label = "DDG: &m"] 
  "1000275" -> "1000455"  [ label = "DDG: m+100"] 
  "1000275" -> "1000455"  [ label = "DDG: t.resize(m+100)"] 
  "1000284" -> "1000455"  [ label = "DDG: m"] 
  "1000284" -> "1000455"  [ label = "DDG: i<=m"] 
  "1000305" -> "1000455"  [ label = "DDG: i<=n"] 
  "1000324" -> "1000455"  [ label = "DDG: que.empty()"] 
  "1000324" -> "1000455"  [ label = "DDG: !que.empty()"] 
  "1000397" -> "1000455"  [ label = "DDG: t.back()"] 
  "1000397" -> "1000455"  [ label = "DDG: !t.back()"] 
  "1000400" -> "1000455"  [ label = "DDG: t"] 
  "1000400" -> "1000455"  [ label = "DDG: fwht(t)"] 
  "1000415" -> "1000455"  [ label = "DDG: i"] 
  "1000421" -> "1000455"  [ label = "DDG: obr(n+1)"] 
  "1000419" -> "1000455"  [ label = "DDG: obr(n+1)%mod"] 
  "1000417" -> "1000455"  [ label = "DDG: mod*obr(n+1)%mod"] 
  "1000415" -> "1000455"  [ label = "DDG: n%mod*obr(n+1)%mod"] 
  "1000414" -> "1000455"  [ label = "DDG: i*n%mod*obr(n+1)%mod"] 
  "1000412" -> "1000455"  [ label = "DDG: i*n%mod*obr(n+1)%mod+mod"] 
  "1000411" -> "1000455"  [ label = "DDG: 1-i*n%mod*obr(n+1)%mod+mod"] 
  "1000429" -> "1000455"  [ label = "DDG: n"] 
  "1000428" -> "1000455"  [ label = "DDG: n+1"] 
  "1000434" -> "1000455"  [ label = "DDG: t.size()"] 
  "1000432" -> "1000455"  [ label = "DDG: t.size()%mod"] 
  "1000428" -> "1000455"  [ label = "DDG: mod*t.size()%mod"] 
  "1000411" -> "1000455"  [ label = "DDG: (n+1)%mod*t.size()%mod"] 
  "1000410" -> "1000455"  [ label = "DDG: (1-i*n%mod*obr(n+1)%mod+mod)*(n+1)%mod*t.size()%mod"] 
  "1000408" -> "1000455"  [ label = "DDG: obr((1-i*n%mod*obr(n+1)%mod+mod)*(n+1)%mod*t.size()%mod)"] 
  "1000438" -> "1000455"  [ label = "DDG: odp>=mod"] 
  "1000449" -> "1000455"  [ label = "DDG: odp"] 
  "1000447" -> "1000455"  [ label = "DDG: odp+mod"] 
  "1000446" -> "1000455"  [ label = "DDG: 1-odp+mod"] 
  "1000446" -> "1000455"  [ label = "DDG: mod"] 
  "1000444" -> "1000455"  [ label = "DDG: (1-odp+mod)%mod"] 
  "1000444" -> "1000455"  [ label = "DDG: printf(\"%lld\n\", (1-odp+mod)%mod)"] 
  "1000399" -> "1000455"  [ label = "DDG: t.pop_back()"] 
  "1000328" -> "1000455"  [ label = "DDG: x"] 
  "1000328" -> "1000455"  [ label = "DDG: que.front()"] 
  "1000331" -> "1000455"  [ label = "DDG: que.pop()"] 
  "1000336" -> "1000455"  [ label = "DDG: odw[war[i]]"] 
  "1000343" -> "1000455"  [ label = "DDG: war[x]"] 
  "1000349" -> "1000455"  [ label = "DDG: odw[war[x]]"] 
  "1000349" -> "1000455"  [ label = "DDG: l"] 
  "1000349" -> "1000455"  [ label = "DDG: odw[war[x]]==l"] 
  "1000360" -> "1000455"  [ label = "DDG: obr(n)"] 
  "1000369" -> "1000455"  [ label = "DDG: t[war[x]]"] 
  "1000369" -> "1000455"  [ label = "DDG: t[war[x]]>=mod"] 
  "1000376" -> "1000455"  [ label = "DDG: t[war[x]]"] 
  "1000390" -> "1000455"  [ label = "DDG: stp[i]"] 
  "1000390" -> "1000455"  [ label = "DDG: !stp[i]"] 
  "1000394" -> "1000455"  [ label = "DDG: que.push(i)"] 
  "1000356" -> "1000455"  [ label = "DDG: war[x]"] 
  "1000311" -> "1000455"  [ label = "DDG: v[i].size()"] 
  "1000317" -> "1000455"  [ label = "DDG: stp[i]"] 
  "1000317" -> "1000455"  [ label = "DDG: !stp[i]"] 
  "1000321" -> "1000455"  [ label = "DDG: que.push(i)"] 
  "1000290" -> "1000455"  [ label = "DDG: &a"] 
  "1000290" -> "1000455"  [ label = "DDG: &b"] 
  "1000296" -> "1000455"  [ label = "DDG: b"] 
  "1000296" -> "1000455"  [ label = "DDG: v[a].push_back(b)"] 
  "1000298" -> "1000455"  [ label = "DDG: a"] 
  "1000298" -> "1000455"  [ label = "DDG: r[b].push_back(a)"] 
  "1000453" -> "1000455"  [ label = "DDG: <RET>"] 
  "1000267" -> "1000269"  [ label = "DDG: "] 
  "1000267" -> "1000403"  [ label = "DDG: "] 
  "1000454" -> "1000453"  [ label = "DDG: 0"] 
  "1000267" -> "1000453"  [ label = "DDG: "] 
  "1000267" -> "1000275"  [ label = "DDG: "] 
  "1000267" -> "1000281"  [ label = "DDG: "] 
  "1000267" -> "1000302"  [ label = "DDG: "] 
  "1000267" -> "1000399"  [ label = "DDG: "] 
  "1000369" -> "1000400"  [ label = "DDG: t[war[x]]"] 
  "1000376" -> "1000400"  [ label = "DDG: t[war[x]]"] 
  "1000267" -> "1000400"  [ label = "DDG: "] 
  "1000410" -> "1000408"  [ label = "DDG: (1-i*n%mod*obr(n+1)%mod+mod)*(n+1)%mod*t.size()%mod"] 
  "1000267" -> "1000444"  [ label = "DDG: "] 
  "1000446" -> "1000444"  [ label = "DDG: mod"] 
  "1000446" -> "1000444"  [ label = "DDG: 1-odp+mod"] 
  "1000267" -> "1000454"  [ label = "DDG: "] 
  "1000267" -> "1000276"  [ label = "DDG: "] 
  "1000281" -> "1000284"  [ label = "DDG: i"] 
  "1000287" -> "1000284"  [ label = "DDG: i"] 
  "1000267" -> "1000284"  [ label = "DDG: "] 
  "1000284" -> "1000287"  [ label = "DDG: i"] 
  "1000267" -> "1000287"  [ label = "DDG: "] 
  "1000267" -> "1000290"  [ label = "DDG: "] 
  "1000302" -> "1000305"  [ label = "DDG: i"] 
  "1000308" -> "1000305"  [ label = "DDG: i"] 
  "1000267" -> "1000305"  [ label = "DDG: "] 
  "1000305" -> "1000308"  [ label = "DDG: i"] 
  "1000321" -> "1000308"  [ label = "DDG: i"] 
  "1000267" -> "1000308"  [ label = "DDG: "] 
  "1000267" -> "1000311"  [ label = "DDG: "] 
  "1000267" -> "1000324"  [ label = "DDG: "] 
  "1000267" -> "1000328"  [ label = "DDG: "] 
  "1000267" -> "1000331"  [ label = "DDG: "] 
  "1000267" -> "1000343"  [ label = "DDG: "] 
  "1000366" -> "1000360"  [ label = "DDG: n"] 
  "1000267" -> "1000397"  [ label = "DDG: "] 
  "1000403" -> "1000408"  [ label = "DDG: odp"] 
  "1000267" -> "1000408"  [ label = "DDG: "] 
  "1000438" -> "1000441"  [ label = "DDG: mod"] 
  "1000267" -> "1000441"  [ label = "DDG: "] 
  "1000447" -> "1000446"  [ label = "DDG: odp+mod"] 
  "1000447" -> "1000446"  [ label = "DDG: 1"] 
  "1000267" -> "1000446"  [ label = "DDG: "] 
  "1000438" -> "1000446"  [ label = "DDG: mod"] 
  "1000267" -> "1000296"  [ label = "DDG: "] 
  "1000267" -> "1000298"  [ label = "DDG: "] 
  "1000349" -> "1000332"  [ label = "DDG: l"] 
  "1000267" -> "1000332"  [ label = "DDG: "] 
  "1000332" -> "1000336"  [ label = "DDG: l"] 
  "1000267" -> "1000336"  [ label = "DDG: "] 
  "1000369" -> "1000360"  [ label = "DDG: t[war[x]]"] 
  "1000376" -> "1000360"  [ label = "DDG: t[war[x]]"] 
  "1000369" -> "1000376"  [ label = "DDG: mod"] 
  "1000267" -> "1000376"  [ label = "DDG: "] 
  "1000411" -> "1000410"  [ label = "DDG: (n+1)%mod*t.size()%mod"] 
  "1000411" -> "1000410"  [ label = "DDG: 1-i*n%mod*obr(n+1)%mod+mod"] 
  "1000408" -> "1000438"  [ label = "DDG: odp"] 
  "1000267" -> "1000438"  [ label = "DDG: "] 
  "1000432" -> "1000438"  [ label = "DDG: mod"] 
  "1000438" -> "1000441"  [ label = "DDG: odp"] 
  "1000267" -> "1000447"  [ label = "DDG: "] 
  "1000438" -> "1000447"  [ label = "DDG: mod"] 
  "1000438" -> "1000447"  [ label = "DDG: odp"] 
  "1000441" -> "1000447"  [ label = "DDG: odp"] 
  "1000311" -> "1000317"  [ label = "DDG: stp[i]"] 
  "1000305" -> "1000321"  [ label = "DDG: i"] 
  "1000267" -> "1000321"  [ label = "DDG: "] 
  "1000267" -> "1000349"  [ label = "DDG: "] 
  "1000332" -> "1000349"  [ label = "DDG: l"] 
  "1000343" -> "1000356"  [ label = "DDG: war[x]"] 
  "1000305" -> "1000366"  [ label = "DDG: n"] 
  "1000267" -> "1000366"  [ label = "DDG: "] 
  "1000360" -> "1000369"  [ label = "DDG: t[war[x]]"] 
  "1000267" -> "1000369"  [ label = "DDG: "] 
  "1000369" -> "1000376"  [ label = "DDG: t[war[x]]"] 
  "1000390" -> "1000385"  [ label = "DDG: stp[i]"] 
  "1000317" -> "1000385"  [ label = "DDG: stp[i]"] 
  "1000412" -> "1000411"  [ label = "DDG: i*n%mod*obr(n+1)%mod+mod"] 
  "1000412" -> "1000411"  [ label = "DDG: 1"] 
  "1000428" -> "1000411"  [ label = "DDG: n+1"] 
  "1000428" -> "1000411"  [ label = "DDG: mod*t.size()%mod"] 
  "1000438" -> "1000449"  [ label = "DDG: odp"] 
  "1000441" -> "1000449"  [ label = "DDG: odp"] 
  "1000267" -> "1000449"  [ label = "DDG: "] 
  "1000438" -> "1000449"  [ label = "DDG: mod"] 
  "1000385" -> "1000390"  [ label = "DDG: stp[i]"] 
  "1000305" -> "1000394"  [ label = "DDG: i"] 
  "1000267" -> "1000394"  [ label = "DDG: "] 
  "1000267" -> "1000412"  [ label = "DDG: "] 
  "1000415" -> "1000412"  [ label = "DDG: n%mod*obr(n+1)%mod"] 
  "1000415" -> "1000412"  [ label = "DDG: i"] 
  "1000419" -> "1000412"  [ label = "DDG: mod"] 
  "1000417" -> "1000428"  [ label = "DDG: n"] 
  "1000267" -> "1000428"  [ label = "DDG: "] 
  "1000432" -> "1000428"  [ label = "DDG: t.size()%mod"] 
  "1000432" -> "1000428"  [ label = "DDG: mod"] 
  "1000415" -> "1000414"  [ label = "DDG: n%mod*obr(n+1)%mod"] 
  "1000415" -> "1000414"  [ label = "DDG: i"] 
  "1000419" -> "1000414"  [ label = "DDG: mod"] 
  "1000267" -> "1000414"  [ label = "DDG: "] 
  "1000417" -> "1000429"  [ label = "DDG: n"] 
  "1000267" -> "1000429"  [ label = "DDG: "] 
  "1000434" -> "1000432"  [ label = "DDG: mod"] 
  "1000267" -> "1000432"  [ label = "DDG: "] 
  "1000434" -> "1000432"  [ label = "DDG: t.size()"] 
  "1000305" -> "1000415"  [ label = "DDG: i"] 
  "1000394" -> "1000415"  [ label = "DDG: i"] 
  "1000267" -> "1000415"  [ label = "DDG: "] 
  "1000417" -> "1000415"  [ label = "DDG: n"] 
  "1000417" -> "1000415"  [ label = "DDG: mod*obr(n+1)%mod"] 
  "1000267" -> "1000434"  [ label = "DDG: "] 
  "1000419" -> "1000434"  [ label = "DDG: mod"] 
  "1000267" -> "1000417"  [ label = "DDG: "] 
  "1000305" -> "1000417"  [ label = "DDG: n"] 
  "1000366" -> "1000417"  [ label = "DDG: n"] 
  "1000419" -> "1000417"  [ label = "DDG: mod"] 
  "1000419" -> "1000417"  [ label = "DDG: obr(n+1)%mod"] 
  "1000421" -> "1000419"  [ label = "DDG: mod"] 
  "1000267" -> "1000419"  [ label = "DDG: "] 
  "1000421" -> "1000419"  [ label = "DDG: obr(n+1)"] 
  "1000422" -> "1000421"  [ label = "DDG: n+1"] 
  "1000369" -> "1000421"  [ label = "DDG: mod"] 
  "1000267" -> "1000421"  [ label = "DDG: "] 
  "1000305" -> "1000422"  [ label = "DDG: n"] 
  "1000366" -> "1000422"  [ label = "DDG: n"] 
  "1000267" -> "1000422"  [ label = "DDG: "] 
  "1000305" -> "1000423"  [ label = "DDG: n"] 
  "1000366" -> "1000423"  [ label = "DDG: n"] 
  "1000267" -> "1000423"  [ label = "DDG: "] 
  "1000284" -> "1000294"  [ label = "CDG: "] 
  "1000284" -> "1000298"  [ label = "CDG: "] 
  "1000284" -> "1000284"  [ label = "CDG: "] 
  "1000284" -> "1000292"  [ label = "CDG: "] 
  "1000284" -> "1000290"  [ label = "CDG: "] 
  "1000284" -> "1000296"  [ label = "CDG: "] 
  "1000284" -> "1000287"  [ label = "CDG: "] 
  "1000305" -> "1000305"  [ label = "CDG: "] 
  "1000305" -> "1000315"  [ label = "CDG: "] 
  "1000305" -> "1000312"  [ label = "CDG: "] 
  "1000305" -> "1000318"  [ label = "CDG: "] 
  "1000305" -> "1000308"  [ label = "CDG: "] 
  "1000305" -> "1000311"  [ label = "CDG: "] 
  "1000305" -> "1000317"  [ label = "CDG: "] 
  "1000324" -> "1000332"  [ label = "CDG: "] 
  "1000324" -> "1000370"  [ label = "CDG: "] 
  "1000324" -> "1000337"  [ label = "CDG: "] 
  "1000324" -> "1000385"  [ label = "CDG: "] 
  "1000324" -> "1000349"  [ label = "CDG: "] 
  "1000324" -> "1000330"  [ label = "CDG: "] 
  "1000324" -> "1000336"  [ label = "CDG: "] 
  "1000324" -> "1000363"  [ label = "CDG: "] 
  "1000324" -> "1000352"  [ label = "CDG: "] 
  "1000324" -> "1000386"  [ label = "CDG: "] 
  "1000324" -> "1000339"  [ label = "CDG: "] 
  "1000324" -> "1000350"  [ label = "CDG: "] 
  "1000324" -> "1000344"  [ label = "CDG: "] 
  "1000324" -> "1000391"  [ label = "CDG: "] 
  "1000324" -> "1000324"  [ label = "CDG: "] 
  "1000324" -> "1000360"  [ label = "CDG: "] 
  "1000324" -> "1000328"  [ label = "CDG: "] 
  "1000324" -> "1000366"  [ label = "CDG: "] 
  "1000324" -> "1000331"  [ label = "CDG: "] 
  "1000324" -> "1000361"  [ label = "CDG: "] 
  "1000324" -> "1000390"  [ label = "CDG: "] 
  "1000324" -> "1000343"  [ label = "CDG: "] 
  "1000324" -> "1000372"  [ label = "CDG: "] 
  "1000324" -> "1000325"  [ label = "CDG: "] 
  "1000324" -> "1000369"  [ label = "CDG: "] 
  "1000397" -> "1000398"  [ label = "CDG: "] 
  "1000397" -> "1000397"  [ label = "CDG: "] 
  "1000397" -> "1000399"  [ label = "CDG: "] 
  "1000438" -> "1000441"  [ label = "CDG: "] 
  "1000317" -> "1000321"  [ label = "CDG: "] 
  "1000349" -> "1000349"  [ label = "CDG: "] 
  "1000349" -> "1000357"  [ label = "CDG: "] 
  "1000349" -> "1000352"  [ label = "CDG: "] 
  "1000349" -> "1000350"  [ label = "CDG: "] 
  "1000349" -> "1000356"  [ label = "CDG: "] 
  "1000369" -> "1000379"  [ label = "CDG: "] 
  "1000369" -> "1000376"  [ label = "CDG: "] 
  "1000369" -> "1000377"  [ label = "CDG: "] 
  "1000390" -> "1000394"  [ label = "CDG: "] 
}
