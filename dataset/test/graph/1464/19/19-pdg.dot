digraph "works" {  
"1000678" [label = "(METHOD,works)" ]
"1000835" [label = "(METHOD_RETURN,void)" ]
"1000680" [label = "(<operator>.assignment,n=read())" ]
"1000683" [label = "(t.clear,t.clear())" ]
"1000732" [label = "(<operator>.assignment,ans1=-1)" ]
"1000737" [label = "(<operator>.assignment,ans2=0)" ]
"1000741" [label = "(<operator>.assignment,tmp=INF)" ]
"1000781" [label = "(printf,printf(\"%d \",ans1))" ]
"1000784" [label = "(memset,memset(cnt,0,sizeof(cnt)))" ]
"1000830" [label = "(printf,printf(\"%d\n\",ans2+tmp))" ]
"1000685" [label = "(<operator>.assignment,p[i]=read())" ]
"1000690" [label = "(<operator>.assignment,vis[i]=0)" ]
"1000745" [label = "(<operator>.equals,n%3==1)" ]
"1000801" [label = "(<operator>.postIncrement,cnt[it]++)" ]
"1000806" [label = "(<operator>.equals,n%3==0)" ]
"1000697" [label = "(<operator>.logicalNot,!vis[i])" ]
"1000734" [label = "(<operator>.minus,-1)" ]
"1000751" [label = "(<operator>.assignment,ans1=ksm(3,n/3-1))" ]
"1000760" [label = "(mulmod,mulmod(ans1,4))" ]
"1000787" [label = "(<operator>.sizeOf,sizeof(cnt))" ]
"1000792" [label = "(<operator>.greaterThan,it>6)" ]
"1000832" [label = "(<operator>.addition,ans2+tmp)" ]
"1000703" [label = "(<operator>.assignment,cnt=0)" ]
"1000707" [label = "(<operator>.assignment,u=i)" ]
"1000729" [label = "(t.pb,t.pb(cnt))" ]
"1000746" [label = "(<operator>.modulo,n%3)" ]
"1000765" [label = "(<operator>.assignment,ans1=ksm(3,n/3))" ]
"1000796" [label = "(<operator>.assignmentMinus,it-=3)" ]
"1000799" [label = "(<operator>.postIncrement,ans2++)" ]
"1000807" [label = "(<operator>.modulo,n%3)" ]
"1000815" [label = "(<operator>.equals,n%3==1)" ]
"1000726" [label = "(<operator>.notEquals,u!=i)" ]
"1000753" [label = "(ksm,ksm(3,n/3-1))" ]
"1000773" [label = "(<operator>.equals,n%3==2)" ]
"1000778" [label = "(mulmod,mulmod(ans1,2))" ]
"1000755" [label = "(<operator>.subtraction,n/3-1)" ]
"1000767" [label = "(ksm,ksm(3,n/3))" ]
"1000816" [label = "(<operator>.modulo,n%3)" ]
"1000713" [label = "(<operator>.assignment,vis[u]=1)" ]
"1000756" [label = "(<operator>.division,n/3)" ]
"1000769" [label = "(<operator>.division,n/3)" ]
"1000774" [label = "(<operator>.modulo,n%3)" ]
"1000719" [label = "(<operator>.postIncrement,cnt++)" ]
"1000721" [label = "(<operator>.assignment,u=p[u])" ]
"1000714" [label = "(<operator>.indirectIndexAccess,vis[u])" ]
"1000723" [label = "(<operator>.indirectIndexAccess,p[u])" ]
  "1000683" -> "1000835"  [ label = "DDG: t.clear()"] 
  "1000685" -> "1000835"  [ label = "DDG: p[i]"] 
  "1000685" -> "1000835"  [ label = "DDG: read()"] 
  "1000697" -> "1000835"  [ label = "DDG: vis[i]"] 
  "1000697" -> "1000835"  [ label = "DDG: !vis[i]"] 
  "1000713" -> "1000835"  [ label = "DDG: vis[u]"] 
  "1000721" -> "1000835"  [ label = "DDG: p[u]"] 
  "1000726" -> "1000835"  [ label = "DDG: u"] 
  "1000726" -> "1000835"  [ label = "DDG: i"] 
  "1000726" -> "1000835"  [ label = "DDG: u!=i"] 
  "1000729" -> "1000835"  [ label = "DDG: t.pb(cnt)"] 
  "1000732" -> "1000835"  [ label = "DDG: -1"] 
  "1000767" -> "1000835"  [ label = "DDG: n/3"] 
  "1000765" -> "1000835"  [ label = "DDG: ksm(3,n/3)"] 
  "1000773" -> "1000835"  [ label = "DDG: n%3==2"] 
  "1000778" -> "1000835"  [ label = "DDG: mulmod(ans1,2)"] 
  "1000755" -> "1000835"  [ label = "DDG: n/3"] 
  "1000753" -> "1000835"  [ label = "DDG: n/3-1"] 
  "1000751" -> "1000835"  [ label = "DDG: ksm(3,n/3-1)"] 
  "1000760" -> "1000835"  [ label = "DDG: mulmod(ans1,4)"] 
  "1000781" -> "1000835"  [ label = "DDG: ans1"] 
  "1000781" -> "1000835"  [ label = "DDG: printf(\"%d \",ans1)"] 
  "1000784" -> "1000835"  [ label = "DDG: cnt"] 
  "1000784" -> "1000835"  [ label = "DDG: memset(cnt,0,sizeof(cnt))"] 
  "1000792" -> "1000835"  [ label = "DDG: it"] 
  "1000792" -> "1000835"  [ label = "DDG: it>6"] 
  "1000801" -> "1000835"  [ label = "DDG: cnt[it]"] 
  "1000806" -> "1000835"  [ label = "DDG: n%3==0"] 
  "1000816" -> "1000835"  [ label = "DDG: n"] 
  "1000815" -> "1000835"  [ label = "DDG: n%3"] 
  "1000815" -> "1000835"  [ label = "DDG: n%3==1"] 
  "1000832" -> "1000835"  [ label = "DDG: ans2"] 
  "1000832" -> "1000835"  [ label = "DDG: tmp"] 
  "1000830" -> "1000835"  [ label = "DDG: ans2+tmp"] 
  "1000830" -> "1000835"  [ label = "DDG: printf(\"%d\n\",ans2+tmp)"] 
  "1000741" -> "1000835"  [ label = "DDG: INF"] 
  "1000678" -> "1000680"  [ label = "DDG: "] 
  "1000678" -> "1000683"  [ label = "DDG: "] 
  "1000734" -> "1000732"  [ label = "DDG: 1"] 
  "1000678" -> "1000737"  [ label = "DDG: "] 
  "1000678" -> "1000741"  [ label = "DDG: "] 
  "1000678" -> "1000685"  [ label = "DDG: "] 
  "1000678" -> "1000690"  [ label = "DDG: "] 
  "1000678" -> "1000732"  [ label = "DDG: "] 
  "1000678" -> "1000781"  [ label = "DDG: "] 
  "1000765" -> "1000781"  [ label = "DDG: ans1"] 
  "1000778" -> "1000781"  [ label = "DDG: ans1"] 
  "1000760" -> "1000781"  [ label = "DDG: ans1"] 
  "1000678" -> "1000784"  [ label = "DDG: "] 
  "1000678" -> "1000830"  [ label = "DDG: "] 
  "1000741" -> "1000830"  [ label = "DDG: tmp"] 
  "1000737" -> "1000830"  [ label = "DDG: ans2"] 
  "1000799" -> "1000830"  [ label = "DDG: ans2"] 
  "1000678" -> "1000734"  [ label = "DDG: "] 
  "1000746" -> "1000745"  [ label = "DDG: 3"] 
  "1000746" -> "1000745"  [ label = "DDG: n"] 
  "1000678" -> "1000745"  [ label = "DDG: "] 
  "1000753" -> "1000751"  [ label = "DDG: n/3-1"] 
  "1000753" -> "1000751"  [ label = "DDG: 3"] 
  "1000678" -> "1000787"  [ label = "DDG: "] 
  "1000784" -> "1000801"  [ label = "DDG: cnt"] 
  "1000807" -> "1000806"  [ label = "DDG: 3"] 
  "1000807" -> "1000806"  [ label = "DDG: n"] 
  "1000678" -> "1000806"  [ label = "DDG: "] 
  "1000737" -> "1000832"  [ label = "DDG: ans2"] 
  "1000799" -> "1000832"  [ label = "DDG: ans2"] 
  "1000678" -> "1000832"  [ label = "DDG: "] 
  "1000741" -> "1000832"  [ label = "DDG: tmp"] 
  "1000690" -> "1000697"  [ label = "DDG: vis[i]"] 
  "1000678" -> "1000703"  [ label = "DDG: "] 
  "1000678" -> "1000707"  [ label = "DDG: "] 
  "1000680" -> "1000746"  [ label = "DDG: n"] 
  "1000678" -> "1000746"  [ label = "DDG: "] 
  "1000678" -> "1000751"  [ label = "DDG: "] 
  "1000751" -> "1000760"  [ label = "DDG: ans1"] 
  "1000678" -> "1000760"  [ label = "DDG: "] 
  "1000767" -> "1000765"  [ label = "DDG: 3"] 
  "1000767" -> "1000765"  [ label = "DDG: n/3"] 
  "1000796" -> "1000792"  [ label = "DDG: it"] 
  "1000678" -> "1000792"  [ label = "DDG: "] 
  "1000678" -> "1000796"  [ label = "DDG: "] 
  "1000774" -> "1000807"  [ label = "DDG: n"] 
  "1000756" -> "1000807"  [ label = "DDG: n"] 
  "1000678" -> "1000807"  [ label = "DDG: "] 
  "1000719" -> "1000729"  [ label = "DDG: cnt"] 
  "1000678" -> "1000729"  [ label = "DDG: "] 
  "1000678" -> "1000753"  [ label = "DDG: "] 
  "1000755" -> "1000753"  [ label = "DDG: n/3"] 
  "1000755" -> "1000753"  [ label = "DDG: 1"] 
  "1000678" -> "1000765"  [ label = "DDG: "] 
  "1000792" -> "1000796"  [ label = "DDG: it"] 
  "1000737" -> "1000799"  [ label = "DDG: ans2"] 
  "1000678" -> "1000799"  [ label = "DDG: "] 
  "1000816" -> "1000815"  [ label = "DDG: n"] 
  "1000816" -> "1000815"  [ label = "DDG: 3"] 
  "1000678" -> "1000815"  [ label = "DDG: "] 
  "1000721" -> "1000726"  [ label = "DDG: u"] 
  "1000678" -> "1000726"  [ label = "DDG: "] 
  "1000756" -> "1000755"  [ label = "DDG: 3"] 
  "1000756" -> "1000755"  [ label = "DDG: n"] 
  "1000678" -> "1000755"  [ label = "DDG: "] 
  "1000678" -> "1000767"  [ label = "DDG: "] 
  "1000769" -> "1000767"  [ label = "DDG: n"] 
  "1000769" -> "1000767"  [ label = "DDG: 3"] 
  "1000774" -> "1000773"  [ label = "DDG: n"] 
  "1000774" -> "1000773"  [ label = "DDG: 3"] 
  "1000678" -> "1000773"  [ label = "DDG: "] 
  "1000765" -> "1000778"  [ label = "DDG: ans1"] 
  "1000678" -> "1000778"  [ label = "DDG: "] 
  "1000807" -> "1000816"  [ label = "DDG: n"] 
  "1000678" -> "1000816"  [ label = "DDG: "] 
  "1000678" -> "1000713"  [ label = "DDG: "] 
  "1000746" -> "1000756"  [ label = "DDG: n"] 
  "1000678" -> "1000756"  [ label = "DDG: "] 
  "1000746" -> "1000769"  [ label = "DDG: n"] 
  "1000678" -> "1000769"  [ label = "DDG: "] 
  "1000769" -> "1000774"  [ label = "DDG: n"] 
  "1000678" -> "1000774"  [ label = "DDG: "] 
  "1000703" -> "1000719"  [ label = "DDG: cnt"] 
  "1000678" -> "1000719"  [ label = "DDG: "] 
  "1000678" -> "1000721"  [ label = "DDG: "] 
  "1000745" -> "1000760"  [ label = "CDG: "] 
  "1000745" -> "1000755"  [ label = "CDG: "] 
  "1000745" -> "1000765"  [ label = "CDG: "] 
  "1000745" -> "1000774"  [ label = "CDG: "] 
  "1000745" -> "1000773"  [ label = "CDG: "] 
  "1000745" -> "1000767"  [ label = "CDG: "] 
  "1000745" -> "1000751"  [ label = "CDG: "] 
  "1000745" -> "1000756"  [ label = "CDG: "] 
  "1000745" -> "1000753"  [ label = "CDG: "] 
  "1000745" -> "1000769"  [ label = "CDG: "] 
  "1000697" -> "1000713"  [ label = "CDG: "] 
  "1000697" -> "1000726"  [ label = "CDG: "] 
  "1000697" -> "1000703"  [ label = "CDG: "] 
  "1000697" -> "1000707"  [ label = "CDG: "] 
  "1000697" -> "1000729"  [ label = "CDG: "] 
  "1000697" -> "1000721"  [ label = "CDG: "] 
  "1000697" -> "1000714"  [ label = "CDG: "] 
  "1000697" -> "1000723"  [ label = "CDG: "] 
  "1000697" -> "1000719"  [ label = "CDG: "] 
  "1000792" -> "1000799"  [ label = "CDG: "] 
  "1000792" -> "1000796"  [ label = "CDG: "] 
  "1000792" -> "1000792"  [ label = "CDG: "] 
  "1000726" -> "1000713"  [ label = "CDG: "] 
  "1000726" -> "1000726"  [ label = "CDG: "] 
  "1000726" -> "1000721"  [ label = "CDG: "] 
  "1000726" -> "1000714"  [ label = "CDG: "] 
  "1000726" -> "1000723"  [ label = "CDG: "] 
  "1000726" -> "1000719"  [ label = "CDG: "] 
  "1000773" -> "1000778"  [ label = "CDG: "] 
}
