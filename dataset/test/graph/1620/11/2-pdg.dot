digraph "solve" {  
"1000128" [label = "(METHOD,solve)" ]
"1000183" [label = "(METHOD_RETURN,void)" ]
"1000131" [label = "(<operator>.arithmeticShiftRight,cin>>input)" ]
"1000135" [label = "(<operator>.assignment,size= input.size())" ]
"1000141" [label = "(<operator>.and,0&#39)" ]
"1000147" [label = "(<operator>.assignment,i=0)" ]
"1000150" [label = "(<operator>.lessThan,i<size)" ]
"1000153" [label = "(<operator>.postIncrement,i++)" ]
"1000171" [label = "(<operator>.equals,count==1)" ]
"1000156" [label = "(<operator>.assignment,item=input.at(i))" ]
"1000160" [label = "(<operator>.equals,item==&#39)" ]
"1000164" [label = "(<operator>.and,N&#39)" ]
"1000175" [label = "(<operator>.shiftLeft,cout<<\"NO\")" ]
"1000168" [label = "(<operator>.postIncrement,count++)" ]
"1000180" [label = "(<operator>.shiftLeft,cout<<\"YES\")" ]
"1000158" [label = "(input.at,input.at(i))" ]
"1000162" [label = "(<operator>.addressOf,&#39)" ]
  "1000131" -> "1000183"  [ label = "DDG: input"] 
  "1000131" -> "1000183"  [ label = "DDG: cin>>input"] 
  "1000135" -> "1000183"  [ label = "DDG: input.size()"] 
  "1000141" -> "1000183"  [ label = "DDG: 0&#39"] 
  "1000150" -> "1000183"  [ label = "DDG: i"] 
  "1000150" -> "1000183"  [ label = "DDG: size"] 
  "1000150" -> "1000183"  [ label = "DDG: i<size"] 
  "1000171" -> "1000183"  [ label = "DDG: count"] 
  "1000171" -> "1000183"  [ label = "DDG: count==1"] 
  "1000180" -> "1000183"  [ label = "DDG: cout"] 
  "1000180" -> "1000183"  [ label = "DDG: cout<<\"YES\""] 
  "1000175" -> "1000183"  [ label = "DDG: cout"] 
  "1000175" -> "1000183"  [ label = "DDG: cout<<\"NO\""] 
  "1000156" -> "1000183"  [ label = "DDG: input.at(i)"] 
  "1000160" -> "1000183"  [ label = "DDG: item"] 
  "1000160" -> "1000183"  [ label = "DDG: &#39"] 
  "1000160" -> "1000183"  [ label = "DDG: item==&#39"] 
  "1000164" -> "1000183"  [ label = "DDG: N&#39"] 
  "1000131" -> "1000183"  [ label = "DDG: cin"] 
  "1000164" -> "1000183"  [ label = "DDG: N"] 
  "1000128" -> "1000135"  [ label = "DDG: "] 
  "1000128" -> "1000131"  [ label = "DDG: "] 
  "1000128" -> "1000147"  [ label = "DDG: "] 
  "1000128" -> "1000141"  [ label = "DDG: "] 
  "1000147" -> "1000150"  [ label = "DDG: i"] 
  "1000153" -> "1000150"  [ label = "DDG: i"] 
  "1000128" -> "1000150"  [ label = "DDG: "] 
  "1000135" -> "1000150"  [ label = "DDG: size"] 
  "1000158" -> "1000153"  [ label = "DDG: i"] 
  "1000128" -> "1000153"  [ label = "DDG: "] 
  "1000158" -> "1000156"  [ label = "DDG: i"] 
  "1000168" -> "1000171"  [ label = "DDG: count"] 
  "1000128" -> "1000171"  [ label = "DDG: "] 
  "1000128" -> "1000156"  [ label = "DDG: "] 
  "1000156" -> "1000160"  [ label = "DDG: item"] 
  "1000128" -> "1000160"  [ label = "DDG: "] 
  "1000128" -> "1000164"  [ label = "DDG: "] 
  "1000128" -> "1000175"  [ label = "DDG: "] 
  "1000150" -> "1000158"  [ label = "DDG: i"] 
  "1000128" -> "1000158"  [ label = "DDG: "] 
  "1000128" -> "1000168"  [ label = "DDG: "] 
  "1000128" -> "1000180"  [ label = "DDG: "] 
  "1000150" -> "1000168"  [ label = "CDG: "] 
  "1000150" -> "1000153"  [ label = "CDG: "] 
  "1000150" -> "1000164"  [ label = "CDG: "] 
  "1000150" -> "1000158"  [ label = "CDG: "] 
  "1000150" -> "1000156"  [ label = "CDG: "] 
  "1000150" -> "1000160"  [ label = "CDG: "] 
  "1000150" -> "1000150"  [ label = "CDG: "] 
  "1000150" -> "1000162"  [ label = "CDG: "] 
  "1000171" -> "1000175"  [ label = "CDG: "] 
  "1000171" -> "1000180"  [ label = "CDG: "] 
}
