digraph "solve" {  
"1000337" [label = "(METHOD,solve)" ]
"1000482" [label = "(METHOD_RETURN,void)" ]
"1000340" [label = "(<operator>.subtraction,x - &#39)" ]
"1000344" [label = "(<operator>.and,a&#39)" ]
"1000425" [label = "(<operator>.assignment,a[0] = 0)" ]
"1000430" [label = "(fmt,fmt(0, (1 << n) - 1))" ]
"1000438" [label = "(<operator>.assignment,ans = 0)" ]
"1000473" [label = "(<operator>.shiftLeft,cout << ans << &#39)" ]
"1000479" [label = "(<operator>.and,n&#39)" ]
"1000349" [label = "(<operator>.assignment,x = j & (-j))" ]
"1000391" [label = "(<operator>.assignment,cur = 1)" ]
"1000394" [label = "(<operator>.assignment,cur = (cur * (mi[j][i] + 1)) % mod)" ]
"1000443" [label = "(<operator>.assignment,s1 = 0)" ]
"1000447" [label = "(<operator>.assignment,s2 = 0)" ]
"1000464" [label = "(<operators>.assignmentXor,ans ^= s1 * s2 * a[i])" ]
"1000356" [label = "(<operator>.equals,x == 0)" ]
"1000359" [label = "(<operator>.assignment,mi[i][j] = 23456)" ]
"1000408" [label = "(<operator>.and,__builtin_popcount(i) & 1)" ]
"1000412" [label = "(<operator>.assignment,a[i] = cur)" ]
"1000432" [label = "(<operator>.subtraction,(1 << n) - 1)" ]
"1000451" [label = "(<operator>.and,i & (1 << j))" ]
"1000475" [label = "(<operator>.shiftLeft,ans << &#39)" ]
"1000351" [label = "(<operator>.and,j & (-j))" ]
"1000367" [label = "(<operator>.assignment,mi[i][j] = min(mi[i][j - x], cnt[__builtin_ctzll(x) + 1][i]))" ]
"1000396" [label = "(<operator>.modulo,(cur * (mi[j][i] + 1)) % mod)" ]
"1000418" [label = "(<operator>.assignment,a[i] = mod - cur)" ]
"1000433" [label = "(<operator>.shiftLeft,1 << n)" ]
"1000457" [label = "(<operator>.preIncrement,++s1)" ]
"1000459" [label = "(<operator>.assignmentPlus,s2 += j + 1)" ]
"1000466" [label = "(<operator>.multiplication,s1 * s2 * a[i])" ]
"1000353" [label = "(<operator>.minus,-j)" ]
"1000397" [label = "(<operator>.multiplication,cur * (mi[j][i] + 1))" ]
"1000409" [label = "(__builtin_popcount,__builtin_popcount(i))" ]
"1000453" [label = "(<operator>.shiftLeft,1 << j)" ]
"1000468" [label = "(<operator>.multiplication,s2 * a[i])" ]
"1000373" [label = "(min,min(mi[i][j - x], cnt[__builtin_ctzll(x) + 1][i]))" ]
"1000399" [label = "(<operator>.addition,mi[j][i] + 1)" ]
"1000422" [label = "(<operator>.subtraction,mod - cur)" ]
"1000461" [label = "(<operator>.addition,j + 1)" ]
"1000378" [label = "(<operator>.subtraction,j - x)" ]
"1000384" [label = "(<operator>.addition,__builtin_ctzll(x) + 1)" ]
"1000385" [label = "(__builtin_ctzll,__builtin_ctzll(x))" ]
"1000360" [label = "(<operator>.indirectIndexAccess,mi[i][j])" ]
"1000413" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000361" [label = "(<operator>.indirectIndexAccess,mi[i])" ]
"1000368" [label = "(<operator>.indirectIndexAccess,mi[i][j])" ]
"1000419" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000369" [label = "(<operator>.indirectIndexAccess,mi[i])" ]
"1000374" [label = "(<operator>.indirectIndexAccess,mi[i][j - x])" ]
"1000381" [label = "(<operator>.indirectIndexAccess,cnt[__builtin_ctzll(x) + 1][i])" ]
"1000375" [label = "(<operator>.indirectIndexAccess,mi[i])" ]
"1000382" [label = "(<operator>.indirectIndexAccess,cnt[__builtin_ctzll(x) + 1])" ]
  "1000340" -> "1000482"  [ label = "DDG: x - &#39"] 
  "1000344" -> "1000482"  [ label = "DDG: a"] 
  "1000344" -> "1000482"  [ label = "DDG: a&#39"] 
  "1000351" -> "1000482"  [ label = "DDG: -j"] 
  "1000349" -> "1000482"  [ label = "DDG: j & (-j)"] 
  "1000356" -> "1000482"  [ label = "DDG: x"] 
  "1000356" -> "1000482"  [ label = "DDG: x == 0"] 
  "1000367" -> "1000482"  [ label = "DDG: mi[i][j]"] 
  "1000373" -> "1000482"  [ label = "DDG: mi[i][j - x]"] 
  "1000385" -> "1000482"  [ label = "DDG: x"] 
  "1000384" -> "1000482"  [ label = "DDG: __builtin_ctzll(x)"] 
  "1000373" -> "1000482"  [ label = "DDG: cnt[__builtin_ctzll(x) + 1][i]"] 
  "1000367" -> "1000482"  [ label = "DDG: min(mi[i][j - x], cnt[__builtin_ctzll(x) + 1][i])"] 
  "1000359" -> "1000482"  [ label = "DDG: mi[i][j]"] 
  "1000399" -> "1000482"  [ label = "DDG: mi[j][i]"] 
  "1000397" -> "1000482"  [ label = "DDG: mi[j][i] + 1"] 
  "1000396" -> "1000482"  [ label = "DDG: cur * (mi[j][i] + 1)"] 
  "1000396" -> "1000482"  [ label = "DDG: mod"] 
  "1000394" -> "1000482"  [ label = "DDG: (cur * (mi[j][i] + 1)) % mod"] 
  "1000408" -> "1000482"  [ label = "DDG: __builtin_popcount(i)"] 
  "1000408" -> "1000482"  [ label = "DDG: __builtin_popcount(i) & 1"] 
  "1000422" -> "1000482"  [ label = "DDG: mod"] 
  "1000422" -> "1000482"  [ label = "DDG: cur"] 
  "1000418" -> "1000482"  [ label = "DDG: mod - cur"] 
  "1000412" -> "1000482"  [ label = "DDG: cur"] 
  "1000425" -> "1000482"  [ label = "DDG: a[0]"] 
  "1000432" -> "1000482"  [ label = "DDG: 1 << n"] 
  "1000430" -> "1000482"  [ label = "DDG: (1 << n) - 1"] 
  "1000430" -> "1000482"  [ label = "DDG: fmt(0, (1 << n) - 1)"] 
  "1000451" -> "1000482"  [ label = "DDG: i"] 
  "1000453" -> "1000482"  [ label = "DDG: j"] 
  "1000451" -> "1000482"  [ label = "DDG: 1 << j"] 
  "1000451" -> "1000482"  [ label = "DDG: i & (1 << j)"] 
  "1000461" -> "1000482"  [ label = "DDG: j"] 
  "1000459" -> "1000482"  [ label = "DDG: j + 1"] 
  "1000466" -> "1000482"  [ label = "DDG: s1"] 
  "1000468" -> "1000482"  [ label = "DDG: s2"] 
  "1000468" -> "1000482"  [ label = "DDG: a[i]"] 
  "1000466" -> "1000482"  [ label = "DDG: s2 * a[i]"] 
  "1000464" -> "1000482"  [ label = "DDG: s1 * s2 * a[i]"] 
  "1000464" -> "1000482"  [ label = "DDG: ans ^= s1 * s2 * a[i]"] 
  "1000475" -> "1000482"  [ label = "DDG: ans"] 
  "1000475" -> "1000482"  [ label = "DDG: &#39"] 
  "1000473" -> "1000482"  [ label = "DDG: ans << &#39"] 
  "1000473" -> "1000482"  [ label = "DDG: cout << ans << &#39"] 
  "1000479" -> "1000482"  [ label = "DDG: n"] 
  "1000479" -> "1000482"  [ label = "DDG: n&#39"] 
  "1000473" -> "1000482"  [ label = "DDG: cout"] 
  "1000337" -> "1000425"  [ label = "DDG: "] 
  "1000337" -> "1000438"  [ label = "DDG: "] 
  "1000337" -> "1000340"  [ label = "DDG: "] 
  "1000337" -> "1000344"  [ label = "DDG: "] 
  "1000351" -> "1000349"  [ label = "DDG: j"] 
  "1000351" -> "1000349"  [ label = "DDG: -j"] 
  "1000337" -> "1000391"  [ label = "DDG: "] 
  "1000396" -> "1000394"  [ label = "DDG: cur * (mi[j][i] + 1)"] 
  "1000396" -> "1000394"  [ label = "DDG: mod"] 
  "1000337" -> "1000430"  [ label = "DDG: "] 
  "1000432" -> "1000430"  [ label = "DDG: 1"] 
  "1000432" -> "1000430"  [ label = "DDG: 1 << n"] 
  "1000337" -> "1000443"  [ label = "DDG: "] 
  "1000337" -> "1000447"  [ label = "DDG: "] 
  "1000337" -> "1000473"  [ label = "DDG: "] 
  "1000475" -> "1000473"  [ label = "DDG: &#39"] 
  "1000475" -> "1000473"  [ label = "DDG: ans"] 
  "1000433" -> "1000479"  [ label = "DDG: n"] 
  "1000337" -> "1000479"  [ label = "DDG: "] 
  "1000337" -> "1000349"  [ label = "DDG: "] 
  "1000337" -> "1000359"  [ label = "DDG: "] 
  "1000337" -> "1000394"  [ label = "DDG: "] 
  "1000394" -> "1000412"  [ label = "DDG: cur"] 
  "1000337" -> "1000412"  [ label = "DDG: "] 
  "1000433" -> "1000432"  [ label = "DDG: 1"] 
  "1000433" -> "1000432"  [ label = "DDG: n"] 
  "1000337" -> "1000432"  [ label = "DDG: "] 
  "1000438" -> "1000464"  [ label = "DDG: ans"] 
  "1000337" -> "1000464"  [ label = "DDG: "] 
  "1000466" -> "1000464"  [ label = "DDG: s1"] 
  "1000466" -> "1000464"  [ label = "DDG: s2 * a[i]"] 
  "1000464" -> "1000475"  [ label = "DDG: ans"] 
  "1000337" -> "1000475"  [ label = "DDG: "] 
  "1000340" -> "1000475"  [ label = "DDG: &#39"] 
  "1000353" -> "1000351"  [ label = "DDG: j"] 
  "1000337" -> "1000351"  [ label = "DDG: "] 
  "1000349" -> "1000356"  [ label = "DDG: x"] 
  "1000337" -> "1000356"  [ label = "DDG: "] 
  "1000373" -> "1000367"  [ label = "DDG: cnt[__builtin_ctzll(x) + 1][i]"] 
  "1000373" -> "1000367"  [ label = "DDG: mi[i][j - x]"] 
  "1000397" -> "1000396"  [ label = "DDG: mi[j][i] + 1"] 
  "1000397" -> "1000396"  [ label = "DDG: cur"] 
  "1000337" -> "1000396"  [ label = "DDG: "] 
  "1000409" -> "1000408"  [ label = "DDG: i"] 
  "1000337" -> "1000408"  [ label = "DDG: "] 
  "1000422" -> "1000418"  [ label = "DDG: mod"] 
  "1000422" -> "1000418"  [ label = "DDG: cur"] 
  "1000337" -> "1000433"  [ label = "DDG: "] 
  "1000409" -> "1000451"  [ label = "DDG: i"] 
  "1000337" -> "1000451"  [ label = "DDG: "] 
  "1000453" -> "1000451"  [ label = "DDG: j"] 
  "1000453" -> "1000451"  [ label = "DDG: 1"] 
  "1000337" -> "1000459"  [ label = "DDG: "] 
  "1000453" -> "1000459"  [ label = "DDG: j"] 
  "1000443" -> "1000466"  [ label = "DDG: s1"] 
  "1000457" -> "1000466"  [ label = "DDG: s1"] 
  "1000337" -> "1000466"  [ label = "DDG: "] 
  "1000468" -> "1000466"  [ label = "DDG: a[i]"] 
  "1000468" -> "1000466"  [ label = "DDG: s2"] 
  "1000337" -> "1000353"  [ label = "DDG: "] 
  "1000391" -> "1000397"  [ label = "DDG: cur"] 
  "1000337" -> "1000397"  [ label = "DDG: "] 
  "1000337" -> "1000409"  [ label = "DDG: "] 
  "1000337" -> "1000453"  [ label = "DDG: "] 
  "1000351" -> "1000453"  [ label = "DDG: j"] 
  "1000378" -> "1000453"  [ label = "DDG: j"] 
  "1000443" -> "1000457"  [ label = "DDG: s1"] 
  "1000337" -> "1000457"  [ label = "DDG: "] 
  "1000447" -> "1000459"  [ label = "DDG: s2"] 
  "1000447" -> "1000468"  [ label = "DDG: s2"] 
  "1000459" -> "1000468"  [ label = "DDG: s2"] 
  "1000337" -> "1000468"  [ label = "DDG: "] 
  "1000344" -> "1000468"  [ label = "DDG: a"] 
  "1000418" -> "1000468"  [ label = "DDG: a[i]"] 
  "1000412" -> "1000468"  [ label = "DDG: a[i]"] 
  "1000337" -> "1000399"  [ label = "DDG: "] 
  "1000396" -> "1000422"  [ label = "DDG: mod"] 
  "1000337" -> "1000422"  [ label = "DDG: "] 
  "1000394" -> "1000422"  [ label = "DDG: cur"] 
  "1000453" -> "1000461"  [ label = "DDG: j"] 
  "1000337" -> "1000461"  [ label = "DDG: "] 
  "1000351" -> "1000378"  [ label = "DDG: j"] 
  "1000337" -> "1000378"  [ label = "DDG: "] 
  "1000356" -> "1000378"  [ label = "DDG: x"] 
  "1000385" -> "1000384"  [ label = "DDG: x"] 
  "1000337" -> "1000384"  [ label = "DDG: "] 
  "1000378" -> "1000385"  [ label = "DDG: x"] 
  "1000337" -> "1000385"  [ label = "DDG: "] 
  "1000356" -> "1000367"  [ label = "CDG: "] 
  "1000356" -> "1000359"  [ label = "CDG: "] 
  "1000356" -> "1000368"  [ label = "CDG: "] 
  "1000356" -> "1000360"  [ label = "CDG: "] 
  "1000356" -> "1000385"  [ label = "CDG: "] 
  "1000356" -> "1000384"  [ label = "CDG: "] 
  "1000356" -> "1000373"  [ label = "CDG: "] 
  "1000356" -> "1000375"  [ label = "CDG: "] 
  "1000356" -> "1000382"  [ label = "CDG: "] 
  "1000356" -> "1000361"  [ label = "CDG: "] 
  "1000356" -> "1000374"  [ label = "CDG: "] 
  "1000356" -> "1000378"  [ label = "CDG: "] 
  "1000356" -> "1000381"  [ label = "CDG: "] 
  "1000356" -> "1000369"  [ label = "CDG: "] 
  "1000408" -> "1000419"  [ label = "CDG: "] 
  "1000408" -> "1000418"  [ label = "CDG: "] 
  "1000408" -> "1000422"  [ label = "CDG: "] 
  "1000408" -> "1000413"  [ label = "CDG: "] 
  "1000408" -> "1000412"  [ label = "CDG: "] 
  "1000451" -> "1000461"  [ label = "CDG: "] 
  "1000451" -> "1000457"  [ label = "CDG: "] 
  "1000451" -> "1000459"  [ label = "CDG: "] 
}
