digraph "solve" {  
"1000104" [label = "(METHOD,solve)" ]
"1000229" [label = "(METHOD_RETURN,void)" ]
"1000108" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000113" [label = "(<operator>.assignment,maxxThree = 0)" ]
"1000132" [label = "(<operator>.assignment,minnCoins = 1e9)" ]
"1000226" [label = "(<operator>.shiftLeft,cout << minnCoins)" ]
"1000117" [label = "(<operator>.arithmeticShiftRight,cin >> a[i])" ]
"1000122" [label = "(<operator>.assignment,maxxThree = max(maxxThree , a[i]/3))" ]
"1000124" [label = "(max,max(maxxThree , a[i]/3))" ]
"1000139" [label = "(<operator>.assignment,one = i)" ]
"1000143" [label = "(<operator>.assignment,two = j)" ]
"1000147" [label = "(<operator>.assignment,three = k)" ]
"1000151" [label = "(<operator>.assignment,violations = 0)" ]
"1000126" [label = "(<operator>.division,a[i]/3)" ]
"1000156" [label = "(<operator>.assignment,id = 1)" ]
"1000159" [label = "(<operator>.lessEqualsThan,id<=n)" ]
"1000162" [label = "(<operator>.postIncrement,id++)" ]
"1000213" [label = "(<operator>.equals,violations == 0)" ]
"1000166" [label = "(<operator>.assignment,poss = 0)" ]
"1000217" [label = "(<operator>.assignment,minnCoins = min(minnCoins , one + two + three))" ]
"1000204" [label = "(<operator>.equals,poss == 0)" ]
"1000172" [label = "(<operator>.assignment,left = a[id] - f - 2*g)" ]
"1000208" [label = "(<operator>.assignment,violations = 1)" ]
"1000219" [label = "(min,min(minnCoins , one + two + three))" ]
"1000184" [label = "(<operator>.logicalAnd,(left >= 0) && ((left%3) == 0) && (left/3 <= k))" ]
"1000221" [label = "(<operator>.addition,one + two + three)" ]
"1000174" [label = "(<operator>.subtraction,a[id] - f - 2*g)" ]
"1000200" [label = "(<operator>.assignment,poss = 1)" ]
"1000223" [label = "(<operator>.addition,two + three)" ]
"1000178" [label = "(<operator>.subtraction,f - 2*g)" ]
"1000185" [label = "(<operator>.greaterEqualsThan,left >= 0)" ]
"1000188" [label = "(<operator>.logicalAnd,((left%3) == 0) && (left/3 <= k))" ]
"1000180" [label = "(<operator>.multiplication,2*g)" ]
"1000189" [label = "(<operator>.equals,(left%3) == 0)" ]
"1000194" [label = "(<operator>.lessEqualsThan,left/3 <= k)" ]
"1000190" [label = "(<operator>.modulo,left%3)" ]
"1000195" [label = "(<operator>.division,left/3)" ]
"1000175" [label = "(<operator>.indirectIndexAccess,a[id])" ]
  "1000108" -> "1000229"  [ label = "DDG: cin >> n"] 
  "1000117" -> "1000229"  [ label = "DDG: cin"] 
  "1000117" -> "1000229"  [ label = "DDG: cin >> a[i]"] 
  "1000122" -> "1000229"  [ label = "DDG: maxxThree"] 
  "1000126" -> "1000229"  [ label = "DDG: a[i]"] 
  "1000124" -> "1000229"  [ label = "DDG: a[i]/3"] 
  "1000122" -> "1000229"  [ label = "DDG: max(maxxThree , a[i]/3)"] 
  "1000139" -> "1000229"  [ label = "DDG: one"] 
  "1000139" -> "1000229"  [ label = "DDG: i"] 
  "1000143" -> "1000229"  [ label = "DDG: two"] 
  "1000147" -> "1000229"  [ label = "DDG: three"] 
  "1000147" -> "1000229"  [ label = "DDG: k"] 
  "1000159" -> "1000229"  [ label = "DDG: id"] 
  "1000159" -> "1000229"  [ label = "DDG: n"] 
  "1000159" -> "1000229"  [ label = "DDG: id<=n"] 
  "1000174" -> "1000229"  [ label = "DDG: a[id]"] 
  "1000178" -> "1000229"  [ label = "DDG: 2*g"] 
  "1000174" -> "1000229"  [ label = "DDG: f - 2*g"] 
  "1000172" -> "1000229"  [ label = "DDG: a[id] - f - 2*g"] 
  "1000185" -> "1000229"  [ label = "DDG: left"] 
  "1000184" -> "1000229"  [ label = "DDG: left >= 0"] 
  "1000190" -> "1000229"  [ label = "DDG: left"] 
  "1000189" -> "1000229"  [ label = "DDG: left%3"] 
  "1000188" -> "1000229"  [ label = "DDG: (left%3) == 0"] 
  "1000195" -> "1000229"  [ label = "DDG: left"] 
  "1000194" -> "1000229"  [ label = "DDG: left/3"] 
  "1000194" -> "1000229"  [ label = "DDG: k"] 
  "1000188" -> "1000229"  [ label = "DDG: left/3 <= k"] 
  "1000184" -> "1000229"  [ label = "DDG: ((left%3) == 0) && (left/3 <= k)"] 
  "1000184" -> "1000229"  [ label = "DDG: (left >= 0) && ((left%3) == 0) && (left/3 <= k)"] 
  "1000204" -> "1000229"  [ label = "DDG: poss"] 
  "1000204" -> "1000229"  [ label = "DDG: poss == 0"] 
  "1000213" -> "1000229"  [ label = "DDG: violations"] 
  "1000213" -> "1000229"  [ label = "DDG: violations == 0"] 
  "1000221" -> "1000229"  [ label = "DDG: one"] 
  "1000223" -> "1000229"  [ label = "DDG: two"] 
  "1000223" -> "1000229"  [ label = "DDG: three"] 
  "1000221" -> "1000229"  [ label = "DDG: two + three"] 
  "1000219" -> "1000229"  [ label = "DDG: one + two + three"] 
  "1000217" -> "1000229"  [ label = "DDG: min(minnCoins , one + two + three)"] 
  "1000226" -> "1000229"  [ label = "DDG: minnCoins"] 
  "1000226" -> "1000229"  [ label = "DDG: cout << minnCoins"] 
  "1000178" -> "1000229"  [ label = "DDG: f"] 
  "1000226" -> "1000229"  [ label = "DDG: cout"] 
  "1000143" -> "1000229"  [ label = "DDG: j"] 
  "1000180" -> "1000229"  [ label = "DDG: g"] 
  "1000104" -> "1000113"  [ label = "DDG: "] 
  "1000104" -> "1000132"  [ label = "DDG: "] 
  "1000104" -> "1000108"  [ label = "DDG: "] 
  "1000124" -> "1000122"  [ label = "DDG: maxxThree"] 
  "1000124" -> "1000122"  [ label = "DDG: a[i]/3"] 
  "1000104" -> "1000226"  [ label = "DDG: "] 
  "1000132" -> "1000226"  [ label = "DDG: minnCoins"] 
  "1000217" -> "1000226"  [ label = "DDG: minnCoins"] 
  "1000108" -> "1000117"  [ label = "DDG: cin"] 
  "1000104" -> "1000117"  [ label = "DDG: "] 
  "1000104" -> "1000122"  [ label = "DDG: "] 
  "1000113" -> "1000124"  [ label = "DDG: maxxThree"] 
  "1000104" -> "1000124"  [ label = "DDG: "] 
  "1000126" -> "1000124"  [ label = "DDG: a[i]"] 
  "1000126" -> "1000124"  [ label = "DDG: 3"] 
  "1000104" -> "1000139"  [ label = "DDG: "] 
  "1000104" -> "1000143"  [ label = "DDG: "] 
  "1000104" -> "1000147"  [ label = "DDG: "] 
  "1000104" -> "1000151"  [ label = "DDG: "] 
  "1000117" -> "1000126"  [ label = "DDG: a[i]"] 
  "1000104" -> "1000126"  [ label = "DDG: "] 
  "1000104" -> "1000156"  [ label = "DDG: "] 
  "1000156" -> "1000159"  [ label = "DDG: id"] 
  "1000162" -> "1000159"  [ label = "DDG: id"] 
  "1000104" -> "1000159"  [ label = "DDG: "] 
  "1000108" -> "1000159"  [ label = "DDG: n"] 
  "1000159" -> "1000162"  [ label = "DDG: id"] 
  "1000104" -> "1000162"  [ label = "DDG: "] 
  "1000104" -> "1000166"  [ label = "DDG: "] 
  "1000151" -> "1000213"  [ label = "DDG: violations"] 
  "1000208" -> "1000213"  [ label = "DDG: violations"] 
  "1000104" -> "1000213"  [ label = "DDG: "] 
  "1000219" -> "1000217"  [ label = "DDG: minnCoins"] 
  "1000219" -> "1000217"  [ label = "DDG: one + two + three"] 
  "1000104" -> "1000217"  [ label = "DDG: "] 
  "1000174" -> "1000172"  [ label = "DDG: f - 2*g"] 
  "1000174" -> "1000172"  [ label = "DDG: a[id]"] 
  "1000166" -> "1000204"  [ label = "DDG: poss"] 
  "1000200" -> "1000204"  [ label = "DDG: poss"] 
  "1000104" -> "1000204"  [ label = "DDG: "] 
  "1000104" -> "1000208"  [ label = "DDG: "] 
  "1000132" -> "1000219"  [ label = "DDG: minnCoins"] 
  "1000104" -> "1000219"  [ label = "DDG: "] 
  "1000139" -> "1000219"  [ label = "DDG: one"] 
  "1000147" -> "1000219"  [ label = "DDG: three"] 
  "1000143" -> "1000219"  [ label = "DDG: two"] 
  "1000104" -> "1000172"  [ label = "DDG: "] 
  "1000139" -> "1000221"  [ label = "DDG: one"] 
  "1000104" -> "1000221"  [ label = "DDG: "] 
  "1000147" -> "1000221"  [ label = "DDG: three"] 
  "1000143" -> "1000221"  [ label = "DDG: two"] 
  "1000178" -> "1000174"  [ label = "DDG: f"] 
  "1000178" -> "1000174"  [ label = "DDG: 2*g"] 
  "1000185" -> "1000184"  [ label = "DDG: 0"] 
  "1000185" -> "1000184"  [ label = "DDG: left"] 
  "1000188" -> "1000184"  [ label = "DDG: left/3 <= k"] 
  "1000188" -> "1000184"  [ label = "DDG: (left%3) == 0"] 
  "1000104" -> "1000200"  [ label = "DDG: "] 
  "1000143" -> "1000223"  [ label = "DDG: two"] 
  "1000104" -> "1000223"  [ label = "DDG: "] 
  "1000147" -> "1000223"  [ label = "DDG: three"] 
  "1000104" -> "1000178"  [ label = "DDG: "] 
  "1000180" -> "1000178"  [ label = "DDG: g"] 
  "1000180" -> "1000178"  [ label = "DDG: 2"] 
  "1000172" -> "1000185"  [ label = "DDG: left"] 
  "1000104" -> "1000185"  [ label = "DDG: "] 
  "1000189" -> "1000188"  [ label = "DDG: 0"] 
  "1000189" -> "1000188"  [ label = "DDG: left%3"] 
  "1000194" -> "1000188"  [ label = "DDG: k"] 
  "1000194" -> "1000188"  [ label = "DDG: left/3"] 
  "1000104" -> "1000180"  [ label = "DDG: "] 
  "1000190" -> "1000189"  [ label = "DDG: left"] 
  "1000190" -> "1000189"  [ label = "DDG: 3"] 
  "1000104" -> "1000189"  [ label = "DDG: "] 
  "1000195" -> "1000194"  [ label = "DDG: 3"] 
  "1000195" -> "1000194"  [ label = "DDG: left"] 
  "1000104" -> "1000194"  [ label = "DDG: "] 
  "1000185" -> "1000190"  [ label = "DDG: left"] 
  "1000104" -> "1000190"  [ label = "DDG: "] 
  "1000190" -> "1000195"  [ label = "DDG: left"] 
  "1000104" -> "1000195"  [ label = "DDG: "] 
  "1000159" -> "1000174"  [ label = "CDG: "] 
  "1000159" -> "1000166"  [ label = "CDG: "] 
  "1000159" -> "1000180"  [ label = "CDG: "] 
  "1000159" -> "1000204"  [ label = "CDG: "] 
  "1000159" -> "1000172"  [ label = "CDG: "] 
  "1000159" -> "1000178"  [ label = "CDG: "] 
  "1000159" -> "1000175"  [ label = "CDG: "] 
  "1000159" -> "1000184"  [ label = "CDG: "] 
  "1000159" -> "1000185"  [ label = "CDG: "] 
  "1000213" -> "1000221"  [ label = "CDG: "] 
  "1000213" -> "1000219"  [ label = "CDG: "] 
  "1000213" -> "1000217"  [ label = "CDG: "] 
  "1000213" -> "1000223"  [ label = "CDG: "] 
  "1000204" -> "1000208"  [ label = "CDG: "] 
  "1000204" -> "1000159"  [ label = "CDG: "] 
  "1000204" -> "1000162"  [ label = "CDG: "] 
  "1000184" -> "1000200"  [ label = "CDG: "] 
  "1000185" -> "1000189"  [ label = "CDG: "] 
  "1000185" -> "1000188"  [ label = "CDG: "] 
  "1000185" -> "1000190"  [ label = "CDG: "] 
  "1000189" -> "1000195"  [ label = "CDG: "] 
  "1000189" -> "1000194"  [ label = "CDG: "] 
}
