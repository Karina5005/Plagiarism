digraph "solve" {  
"1000181" [label = "(METHOD,solve)" ]
"1000332" [label = "(METHOD_RETURN,void)" ]
"1000183" [label = "(scanf,scanf(\"%lld\",&n))" ]
"1000204" [label = "(<operator>.assignment,ans=INF)" ]
"1000327" [label = "(<operator>.shiftLeft,cout<<ans<<endl)" ]
"1000189" [label = "(<operator>.assignment,i=1)" ]
"1000192" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000195" [label = "(<operator>.postIncrement,i++)" ]
"1000197" [label = "(scanf,scanf(\"%lld\",&a[i]))" ]
"1000209" [label = "(<operator>.assignment,c1=0)" ]
"1000212" [label = "(<operator>.lessEqualsThan,c1<=2)" ]
"1000215" [label = "(<operator>.postIncrement,c1++)" ]
"1000219" [label = "(<operator>.assignment,c2=0)" ]
"1000222" [label = "(<operator>.lessEqualsThan,c2<=2)" ]
"1000225" [label = "(<operator>.postIncrement,c2++)" ]
"1000329" [label = "(<operator>.shiftLeft,ans<<endl)" ]
"1000229" [label = "(<operator>.assignment,now=0)" ]
"1000234" [label = "(<operator>.assignment,i=1)" ]
"1000237" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000240" [label = "(<operator>.postIncrement,i++)" ]
"1000315" [label = "(<operator>.notEquals,now!=INF)" ]
"1000318" [label = "(<operator>.assignment,ans=min(ans,now+c1+c2))" ]
"1000244" [label = "(<operator>.assignment,cnt_i=INF)" ]
"1000309" [label = "(<operator>.assignment,now=max(now,cnt_i))" ]
"1000249" [label = "(<operator>.assignment,i1=0)" ]
"1000252" [label = "(<operator>.lessEqualsThan,i1<=c1)" ]
"1000255" [label = "(<operator>.postIncrement,i1++)" ]
"1000320" [label = "(min,min(ans,now+c1+c2))" ]
"1000259" [label = "(<operator>.assignment,i2=0)" ]
"1000262" [label = "(<operator>.lessEqualsThan,i2<=c2)" ]
"1000265" [label = "(<operator>.postIncrement,i2++)" ]
"1000311" [label = "(max,max(now,cnt_i))" ]
"1000322" [label = "(<operator>.addition,now+c1+c2)" ]
"1000324" [label = "(<operator>.addition,c1+c2)" ]
"1000269" [label = "(<operator>.logicalAnd,(a[i]-i1-i2-i2)%3==0&&a[i]-i1-i2-i2>=0)" ]
"1000294" [label = "(<operator>.assignment,cnt_i=min(cnt_i,(a[i]-i1-i2-i2)/3))" ]
"1000270" [label = "(<operator>.equals,(a[i]-i1-i2-i2)%3==0)" ]
"1000283" [label = "(<operator>.greaterEqualsThan,a[i]-i1-i2-i2>=0)" ]
"1000296" [label = "(min,min(cnt_i,(a[i]-i1-i2-i2)/3))" ]
"1000271" [label = "(<operator>.modulo,(a[i]-i1-i2-i2)%3)" ]
"1000284" [label = "(<operator>.subtraction,a[i]-i1-i2-i2)" ]
"1000298" [label = "(<operator>.division,(a[i]-i1-i2-i2)/3)" ]
"1000272" [label = "(<operator>.subtraction,a[i]-i1-i2-i2)" ]
"1000288" [label = "(<operator>.subtraction,i1-i2-i2)" ]
"1000299" [label = "(<operator>.subtraction,a[i]-i1-i2-i2)" ]
"1000276" [label = "(<operator>.subtraction,i1-i2-i2)" ]
"1000290" [label = "(<operator>.subtraction,i2-i2)" ]
"1000303" [label = "(<operator>.subtraction,i1-i2-i2)" ]
"1000278" [label = "(<operator>.subtraction,i2-i2)" ]
"1000305" [label = "(<operator>.subtraction,i2-i2)" ]
"1000199" [label = "(<operator>.addressOf,&a[i])" ]
"1000200" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000285" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000273" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000300" [label = "(<operator>.indirectIndexAccess,a[i])" ]
  "1000183" -> "1000332"  [ label = "DDG: &n"] 
  "1000192" -> "1000332"  [ label = "DDG: i"] 
  "1000192" -> "1000332"  [ label = "DDG: n"] 
  "1000192" -> "1000332"  [ label = "DDG: i<=n"] 
  "1000204" -> "1000332"  [ label = "DDG: INF"] 
  "1000212" -> "1000332"  [ label = "DDG: c1"] 
  "1000212" -> "1000332"  [ label = "DDG: c1<=2"] 
  "1000329" -> "1000332"  [ label = "DDG: ans"] 
  "1000327" -> "1000332"  [ label = "DDG: ans<<endl"] 
  "1000327" -> "1000332"  [ label = "DDG: cout<<ans<<endl"] 
  "1000222" -> "1000332"  [ label = "DDG: c2"] 
  "1000222" -> "1000332"  [ label = "DDG: c2<=2"] 
  "1000237" -> "1000332"  [ label = "DDG: i"] 
  "1000237" -> "1000332"  [ label = "DDG: n"] 
  "1000237" -> "1000332"  [ label = "DDG: i<=n"] 
  "1000315" -> "1000332"  [ label = "DDG: now"] 
  "1000315" -> "1000332"  [ label = "DDG: INF"] 
  "1000315" -> "1000332"  [ label = "DDG: now!=INF"] 
  "1000322" -> "1000332"  [ label = "DDG: now"] 
  "1000322" -> "1000332"  [ label = "DDG: c1+c2"] 
  "1000320" -> "1000332"  [ label = "DDG: now+c1+c2"] 
  "1000318" -> "1000332"  [ label = "DDG: min(ans,now+c1+c2)"] 
  "1000252" -> "1000332"  [ label = "DDG: i1"] 
  "1000252" -> "1000332"  [ label = "DDG: i1<=c1"] 
  "1000311" -> "1000332"  [ label = "DDG: cnt_i"] 
  "1000309" -> "1000332"  [ label = "DDG: max(now,cnt_i)"] 
  "1000262" -> "1000332"  [ label = "DDG: i2"] 
  "1000262" -> "1000332"  [ label = "DDG: i2<=c2"] 
  "1000272" -> "1000332"  [ label = "DDG: a[i]"] 
  "1000276" -> "1000332"  [ label = "DDG: i2-i2"] 
  "1000272" -> "1000332"  [ label = "DDG: i1-i2-i2"] 
  "1000271" -> "1000332"  [ label = "DDG: a[i]-i1-i2-i2"] 
  "1000270" -> "1000332"  [ label = "DDG: (a[i]-i1-i2-i2)%3"] 
  "1000269" -> "1000332"  [ label = "DDG: (a[i]-i1-i2-i2)%3==0"] 
  "1000284" -> "1000332"  [ label = "DDG: a[i]"] 
  "1000288" -> "1000332"  [ label = "DDG: i2-i2"] 
  "1000284" -> "1000332"  [ label = "DDG: i1-i2-i2"] 
  "1000283" -> "1000332"  [ label = "DDG: a[i]-i1-i2-i2"] 
  "1000269" -> "1000332"  [ label = "DDG: a[i]-i1-i2-i2>=0"] 
  "1000269" -> "1000332"  [ label = "DDG: (a[i]-i1-i2-i2)%3==0&&a[i]-i1-i2-i2>=0"] 
  "1000299" -> "1000332"  [ label = "DDG: a[i]"] 
  "1000303" -> "1000332"  [ label = "DDG: i2-i2"] 
  "1000299" -> "1000332"  [ label = "DDG: i1-i2-i2"] 
  "1000298" -> "1000332"  [ label = "DDG: a[i]-i1-i2-i2"] 
  "1000296" -> "1000332"  [ label = "DDG: (a[i]-i1-i2-i2)/3"] 
  "1000294" -> "1000332"  [ label = "DDG: min(cnt_i,(a[i]-i1-i2-i2)/3)"] 
  "1000197" -> "1000332"  [ label = "DDG: &a[i]"] 
  "1000329" -> "1000332"  [ label = "DDG: endl"] 
  "1000327" -> "1000332"  [ label = "DDG: cout"] 
  "1000181" -> "1000183"  [ label = "DDG: "] 
  "1000181" -> "1000204"  [ label = "DDG: "] 
  "1000181" -> "1000189"  [ label = "DDG: "] 
  "1000181" -> "1000197"  [ label = "DDG: "] 
  "1000181" -> "1000209"  [ label = "DDG: "] 
  "1000181" -> "1000327"  [ label = "DDG: "] 
  "1000329" -> "1000327"  [ label = "DDG: endl"] 
  "1000329" -> "1000327"  [ label = "DDG: ans"] 
  "1000189" -> "1000192"  [ label = "DDG: i"] 
  "1000195" -> "1000192"  [ label = "DDG: i"] 
  "1000181" -> "1000192"  [ label = "DDG: "] 
  "1000192" -> "1000195"  [ label = "DDG: i"] 
  "1000181" -> "1000195"  [ label = "DDG: "] 
  "1000209" -> "1000212"  [ label = "DDG: c1"] 
  "1000215" -> "1000212"  [ label = "DDG: c1"] 
  "1000181" -> "1000212"  [ label = "DDG: "] 
  "1000212" -> "1000215"  [ label = "DDG: c1"] 
  "1000252" -> "1000215"  [ label = "DDG: c1"] 
  "1000181" -> "1000215"  [ label = "DDG: "] 
  "1000181" -> "1000219"  [ label = "DDG: "] 
  "1000204" -> "1000329"  [ label = "DDG: ans"] 
  "1000318" -> "1000329"  [ label = "DDG: ans"] 
  "1000181" -> "1000329"  [ label = "DDG: "] 
  "1000219" -> "1000222"  [ label = "DDG: c2"] 
  "1000225" -> "1000222"  [ label = "DDG: c2"] 
  "1000181" -> "1000222"  [ label = "DDG: "] 
  "1000222" -> "1000225"  [ label = "DDG: c2"] 
  "1000262" -> "1000225"  [ label = "DDG: c2"] 
  "1000181" -> "1000225"  [ label = "DDG: "] 
  "1000181" -> "1000229"  [ label = "DDG: "] 
  "1000181" -> "1000234"  [ label = "DDG: "] 
  "1000320" -> "1000318"  [ label = "DDG: ans"] 
  "1000320" -> "1000318"  [ label = "DDG: now+c1+c2"] 
  "1000234" -> "1000237"  [ label = "DDG: i"] 
  "1000240" -> "1000237"  [ label = "DDG: i"] 
  "1000181" -> "1000237"  [ label = "DDG: "] 
  "1000192" -> "1000237"  [ label = "DDG: n"] 
  "1000237" -> "1000240"  [ label = "DDG: i"] 
  "1000181" -> "1000240"  [ label = "DDG: "] 
  "1000315" -> "1000244"  [ label = "DDG: INF"] 
  "1000181" -> "1000244"  [ label = "DDG: "] 
  "1000311" -> "1000309"  [ label = "DDG: now"] 
  "1000311" -> "1000309"  [ label = "DDG: cnt_i"] 
  "1000229" -> "1000315"  [ label = "DDG: now"] 
  "1000309" -> "1000315"  [ label = "DDG: now"] 
  "1000181" -> "1000315"  [ label = "DDG: "] 
  "1000181" -> "1000318"  [ label = "DDG: "] 
  "1000181" -> "1000249"  [ label = "DDG: "] 
  "1000181" -> "1000309"  [ label = "DDG: "] 
  "1000204" -> "1000320"  [ label = "DDG: ans"] 
  "1000318" -> "1000320"  [ label = "DDG: ans"] 
  "1000181" -> "1000320"  [ label = "DDG: "] 
  "1000212" -> "1000320"  [ label = "DDG: c1"] 
  "1000252" -> "1000320"  [ label = "DDG: c1"] 
  "1000222" -> "1000320"  [ label = "DDG: c2"] 
  "1000262" -> "1000320"  [ label = "DDG: c2"] 
  "1000315" -> "1000320"  [ label = "DDG: now"] 
  "1000249" -> "1000252"  [ label = "DDG: i1"] 
  "1000255" -> "1000252"  [ label = "DDG: i1"] 
  "1000181" -> "1000252"  [ label = "DDG: "] 
  "1000212" -> "1000252"  [ label = "DDG: c1"] 
  "1000252" -> "1000255"  [ label = "DDG: i1"] 
  "1000276" -> "1000255"  [ label = "DDG: i1"] 
  "1000288" -> "1000255"  [ label = "DDG: i1"] 
  "1000303" -> "1000255"  [ label = "DDG: i1"] 
  "1000181" -> "1000255"  [ label = "DDG: "] 
  "1000181" -> "1000259"  [ label = "DDG: "] 
  "1000229" -> "1000311"  [ label = "DDG: now"] 
  "1000309" -> "1000311"  [ label = "DDG: now"] 
  "1000181" -> "1000311"  [ label = "DDG: "] 
  "1000244" -> "1000311"  [ label = "DDG: cnt_i"] 
  "1000294" -> "1000311"  [ label = "DDG: cnt_i"] 
  "1000315" -> "1000322"  [ label = "DDG: now"] 
  "1000181" -> "1000322"  [ label = "DDG: "] 
  "1000212" -> "1000322"  [ label = "DDG: c1"] 
  "1000252" -> "1000322"  [ label = "DDG: c1"] 
  "1000222" -> "1000322"  [ label = "DDG: c2"] 
  "1000262" -> "1000322"  [ label = "DDG: c2"] 
  "1000259" -> "1000262"  [ label = "DDG: i2"] 
  "1000265" -> "1000262"  [ label = "DDG: i2"] 
  "1000181" -> "1000262"  [ label = "DDG: "] 
  "1000222" -> "1000262"  [ label = "DDG: c2"] 
  "1000278" -> "1000265"  [ label = "DDG: i2"] 
  "1000290" -> "1000265"  [ label = "DDG: i2"] 
  "1000305" -> "1000265"  [ label = "DDG: i2"] 
  "1000181" -> "1000265"  [ label = "DDG: "] 
  "1000212" -> "1000324"  [ label = "DDG: c1"] 
  "1000252" -> "1000324"  [ label = "DDG: c1"] 
  "1000181" -> "1000324"  [ label = "DDG: "] 
  "1000222" -> "1000324"  [ label = "DDG: c2"] 
  "1000262" -> "1000324"  [ label = "DDG: c2"] 
  "1000296" -> "1000294"  [ label = "DDG: cnt_i"] 
  "1000296" -> "1000294"  [ label = "DDG: (a[i]-i1-i2-i2)/3"] 
  "1000270" -> "1000269"  [ label = "DDG: 0"] 
  "1000270" -> "1000269"  [ label = "DDG: (a[i]-i1-i2-i2)%3"] 
  "1000283" -> "1000269"  [ label = "DDG: a[i]-i1-i2-i2"] 
  "1000283" -> "1000269"  [ label = "DDG: 0"] 
  "1000181" -> "1000294"  [ label = "DDG: "] 
  "1000271" -> "1000270"  [ label = "DDG: 3"] 
  "1000271" -> "1000270"  [ label = "DDG: a[i]-i1-i2-i2"] 
  "1000181" -> "1000270"  [ label = "DDG: "] 
  "1000284" -> "1000283"  [ label = "DDG: i1-i2-i2"] 
  "1000284" -> "1000283"  [ label = "DDG: a[i]"] 
  "1000181" -> "1000283"  [ label = "DDG: "] 
  "1000244" -> "1000296"  [ label = "DDG: cnt_i"] 
  "1000294" -> "1000296"  [ label = "DDG: cnt_i"] 
  "1000181" -> "1000296"  [ label = "DDG: "] 
  "1000298" -> "1000296"  [ label = "DDG: 3"] 
  "1000298" -> "1000296"  [ label = "DDG: a[i]-i1-i2-i2"] 
  "1000272" -> "1000271"  [ label = "DDG: a[i]"] 
  "1000272" -> "1000271"  [ label = "DDG: i1-i2-i2"] 
  "1000181" -> "1000271"  [ label = "DDG: "] 
  "1000272" -> "1000284"  [ label = "DDG: a[i]"] 
  "1000288" -> "1000284"  [ label = "DDG: i2-i2"] 
  "1000288" -> "1000284"  [ label = "DDG: i1"] 
  "1000299" -> "1000298"  [ label = "DDG: i1-i2-i2"] 
  "1000299" -> "1000298"  [ label = "DDG: a[i]"] 
  "1000181" -> "1000298"  [ label = "DDG: "] 
  "1000284" -> "1000272"  [ label = "DDG: a[i]"] 
  "1000299" -> "1000272"  [ label = "DDG: a[i]"] 
  "1000276" -> "1000272"  [ label = "DDG: i2-i2"] 
  "1000276" -> "1000272"  [ label = "DDG: i1"] 
  "1000276" -> "1000288"  [ label = "DDG: i1"] 
  "1000181" -> "1000288"  [ label = "DDG: "] 
  "1000290" -> "1000288"  [ label = "DDG: i2"] 
  "1000272" -> "1000299"  [ label = "DDG: a[i]"] 
  "1000284" -> "1000299"  [ label = "DDG: a[i]"] 
  "1000303" -> "1000299"  [ label = "DDG: i2-i2"] 
  "1000303" -> "1000299"  [ label = "DDG: i1"] 
  "1000252" -> "1000276"  [ label = "DDG: i1"] 
  "1000288" -> "1000276"  [ label = "DDG: i1"] 
  "1000303" -> "1000276"  [ label = "DDG: i1"] 
  "1000181" -> "1000276"  [ label = "DDG: "] 
  "1000278" -> "1000276"  [ label = "DDG: i2"] 
  "1000278" -> "1000290"  [ label = "DDG: i2"] 
  "1000181" -> "1000290"  [ label = "DDG: "] 
  "1000276" -> "1000303"  [ label = "DDG: i1"] 
  "1000288" -> "1000303"  [ label = "DDG: i1"] 
  "1000181" -> "1000303"  [ label = "DDG: "] 
  "1000305" -> "1000303"  [ label = "DDG: i2"] 
  "1000262" -> "1000278"  [ label = "DDG: i2"] 
  "1000181" -> "1000278"  [ label = "DDG: "] 
  "1000278" -> "1000305"  [ label = "DDG: i2"] 
  "1000290" -> "1000305"  [ label = "DDG: i2"] 
  "1000181" -> "1000305"  [ label = "DDG: "] 
  "1000192" -> "1000200"  [ label = "CDG: "] 
  "1000192" -> "1000199"  [ label = "CDG: "] 
  "1000192" -> "1000197"  [ label = "CDG: "] 
  "1000192" -> "1000192"  [ label = "CDG: "] 
  "1000192" -> "1000195"  [ label = "CDG: "] 
  "1000212" -> "1000219"  [ label = "CDG: "] 
  "1000212" -> "1000222"  [ label = "CDG: "] 
  "1000212" -> "1000212"  [ label = "CDG: "] 
  "1000212" -> "1000215"  [ label = "CDG: "] 
  "1000222" -> "1000315"  [ label = "CDG: "] 
  "1000222" -> "1000222"  [ label = "CDG: "] 
  "1000222" -> "1000229"  [ label = "CDG: "] 
  "1000222" -> "1000234"  [ label = "CDG: "] 
  "1000222" -> "1000225"  [ label = "CDG: "] 
  "1000222" -> "1000237"  [ label = "CDG: "] 
  "1000237" -> "1000244"  [ label = "CDG: "] 
  "1000237" -> "1000311"  [ label = "CDG: "] 
  "1000237" -> "1000240"  [ label = "CDG: "] 
  "1000237" -> "1000309"  [ label = "CDG: "] 
  "1000237" -> "1000252"  [ label = "CDG: "] 
  "1000237" -> "1000237"  [ label = "CDG: "] 
  "1000237" -> "1000249"  [ label = "CDG: "] 
  "1000315" -> "1000318"  [ label = "CDG: "] 
  "1000315" -> "1000320"  [ label = "CDG: "] 
  "1000315" -> "1000324"  [ label = "CDG: "] 
  "1000315" -> "1000322"  [ label = "CDG: "] 
  "1000252" -> "1000255"  [ label = "CDG: "] 
  "1000252" -> "1000259"  [ label = "CDG: "] 
  "1000252" -> "1000262"  [ label = "CDG: "] 
  "1000252" -> "1000252"  [ label = "CDG: "] 
  "1000262" -> "1000276"  [ label = "CDG: "] 
  "1000262" -> "1000269"  [ label = "CDG: "] 
  "1000262" -> "1000273"  [ label = "CDG: "] 
  "1000262" -> "1000270"  [ label = "CDG: "] 
  "1000262" -> "1000265"  [ label = "CDG: "] 
  "1000262" -> "1000262"  [ label = "CDG: "] 
  "1000262" -> "1000272"  [ label = "CDG: "] 
  "1000262" -> "1000271"  [ label = "CDG: "] 
  "1000262" -> "1000278"  [ label = "CDG: "] 
  "1000269" -> "1000294"  [ label = "CDG: "] 
  "1000269" -> "1000305"  [ label = "CDG: "] 
  "1000269" -> "1000298"  [ label = "CDG: "] 
  "1000269" -> "1000300"  [ label = "CDG: "] 
  "1000269" -> "1000303"  [ label = "CDG: "] 
  "1000269" -> "1000299"  [ label = "CDG: "] 
  "1000269" -> "1000296"  [ label = "CDG: "] 
  "1000270" -> "1000285"  [ label = "CDG: "] 
  "1000270" -> "1000284"  [ label = "CDG: "] 
  "1000270" -> "1000288"  [ label = "CDG: "] 
  "1000270" -> "1000290"  [ label = "CDG: "] 
  "1000270" -> "1000283"  [ label = "CDG: "] 
}
