digraph "solve" {  
"1000103" [label = "(METHOD,solve)" ]
"1000228" [label = "(METHOD_RETURN,void)" ]
"1000107" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000112" [label = "(<operator>.assignment,maxxThree = 0)" ]
"1000131" [label = "(<operator>.assignment,minnCoins = 1e9)" ]
"1000225" [label = "(<operator>.shiftLeft,cout << minnCoins)" ]
"1000116" [label = "(<operator>.arithmeticShiftRight,cin >> a[i])" ]
"1000121" [label = "(<operator>.assignment,maxxThree = max(maxxThree , a[i]/3))" ]
"1000123" [label = "(max,max(maxxThree , a[i]/3))" ]
"1000138" [label = "(<operator>.assignment,one = i)" ]
"1000142" [label = "(<operator>.assignment,two = j)" ]
"1000146" [label = "(<operator>.assignment,three = k)" ]
"1000150" [label = "(<operator>.assignment,violations = 0)" ]
"1000125" [label = "(<operator>.division,a[i]/3)" ]
"1000155" [label = "(<operator>.assignment,id = 1)" ]
"1000158" [label = "(<operator>.lessEqualsThan,id<=n)" ]
"1000161" [label = "(<operator>.postIncrement,id++)" ]
"1000212" [label = "(<operator>.equals,violations == 0)" ]
"1000165" [label = "(<operator>.assignment,poss = 0)" ]
"1000216" [label = "(<operator>.assignment,minnCoins = min(minnCoins , one + two + three))" ]
"1000203" [label = "(<operator>.equals,poss == 0)" ]
"1000171" [label = "(<operator>.assignment,left = a[id] - f - 2*g)" ]
"1000207" [label = "(<operator>.assignment,violations = 1)" ]
"1000218" [label = "(min,min(minnCoins , one + two + three))" ]
"1000183" [label = "(<operator>.logicalAnd,(left >= 0) && ((left%3) == 0) && (left/3 <= k))" ]
"1000220" [label = "(<operator>.addition,one + two + three)" ]
"1000173" [label = "(<operator>.subtraction,a[id] - f - 2*g)" ]
"1000199" [label = "(<operator>.assignment,poss = 1)" ]
"1000222" [label = "(<operator>.addition,two + three)" ]
"1000177" [label = "(<operator>.subtraction,f - 2*g)" ]
"1000184" [label = "(<operator>.greaterEqualsThan,left >= 0)" ]
"1000187" [label = "(<operator>.logicalAnd,((left%3) == 0) && (left/3 <= k))" ]
"1000179" [label = "(<operator>.multiplication,2*g)" ]
"1000188" [label = "(<operator>.equals,(left%3) == 0)" ]
"1000193" [label = "(<operator>.lessEqualsThan,left/3 <= k)" ]
"1000189" [label = "(<operator>.modulo,left%3)" ]
"1000194" [label = "(<operator>.division,left/3)" ]
"1000174" [label = "(<operator>.indirectIndexAccess,a[id])" ]
  "1000107" -> "1000228"  [ label = "DDG: cin >> n"] 
  "1000116" -> "1000228"  [ label = "DDG: cin"] 
  "1000116" -> "1000228"  [ label = "DDG: cin >> a[i]"] 
  "1000121" -> "1000228"  [ label = "DDG: maxxThree"] 
  "1000125" -> "1000228"  [ label = "DDG: a[i]"] 
  "1000123" -> "1000228"  [ label = "DDG: a[i]/3"] 
  "1000121" -> "1000228"  [ label = "DDG: max(maxxThree , a[i]/3)"] 
  "1000138" -> "1000228"  [ label = "DDG: one"] 
  "1000138" -> "1000228"  [ label = "DDG: i"] 
  "1000142" -> "1000228"  [ label = "DDG: two"] 
  "1000146" -> "1000228"  [ label = "DDG: three"] 
  "1000146" -> "1000228"  [ label = "DDG: k"] 
  "1000158" -> "1000228"  [ label = "DDG: id"] 
  "1000158" -> "1000228"  [ label = "DDG: n"] 
  "1000158" -> "1000228"  [ label = "DDG: id<=n"] 
  "1000173" -> "1000228"  [ label = "DDG: a[id]"] 
  "1000177" -> "1000228"  [ label = "DDG: 2*g"] 
  "1000173" -> "1000228"  [ label = "DDG: f - 2*g"] 
  "1000171" -> "1000228"  [ label = "DDG: a[id] - f - 2*g"] 
  "1000184" -> "1000228"  [ label = "DDG: left"] 
  "1000183" -> "1000228"  [ label = "DDG: left >= 0"] 
  "1000189" -> "1000228"  [ label = "DDG: left"] 
  "1000188" -> "1000228"  [ label = "DDG: left%3"] 
  "1000187" -> "1000228"  [ label = "DDG: (left%3) == 0"] 
  "1000194" -> "1000228"  [ label = "DDG: left"] 
  "1000193" -> "1000228"  [ label = "DDG: left/3"] 
  "1000193" -> "1000228"  [ label = "DDG: k"] 
  "1000187" -> "1000228"  [ label = "DDG: left/3 <= k"] 
  "1000183" -> "1000228"  [ label = "DDG: ((left%3) == 0) && (left/3 <= k)"] 
  "1000183" -> "1000228"  [ label = "DDG: (left >= 0) && ((left%3) == 0) && (left/3 <= k)"] 
  "1000203" -> "1000228"  [ label = "DDG: poss"] 
  "1000203" -> "1000228"  [ label = "DDG: poss == 0"] 
  "1000212" -> "1000228"  [ label = "DDG: violations"] 
  "1000212" -> "1000228"  [ label = "DDG: violations == 0"] 
  "1000220" -> "1000228"  [ label = "DDG: one"] 
  "1000222" -> "1000228"  [ label = "DDG: two"] 
  "1000222" -> "1000228"  [ label = "DDG: three"] 
  "1000220" -> "1000228"  [ label = "DDG: two + three"] 
  "1000218" -> "1000228"  [ label = "DDG: one + two + three"] 
  "1000216" -> "1000228"  [ label = "DDG: min(minnCoins , one + two + three)"] 
  "1000225" -> "1000228"  [ label = "DDG: minnCoins"] 
  "1000225" -> "1000228"  [ label = "DDG: cout << minnCoins"] 
  "1000142" -> "1000228"  [ label = "DDG: j"] 
  "1000179" -> "1000228"  [ label = "DDG: g"] 
  "1000177" -> "1000228"  [ label = "DDG: f"] 
  "1000225" -> "1000228"  [ label = "DDG: cout"] 
  "1000103" -> "1000112"  [ label = "DDG: "] 
  "1000103" -> "1000131"  [ label = "DDG: "] 
  "1000103" -> "1000107"  [ label = "DDG: "] 
  "1000123" -> "1000121"  [ label = "DDG: maxxThree"] 
  "1000123" -> "1000121"  [ label = "DDG: a[i]/3"] 
  "1000103" -> "1000225"  [ label = "DDG: "] 
  "1000131" -> "1000225"  [ label = "DDG: minnCoins"] 
  "1000216" -> "1000225"  [ label = "DDG: minnCoins"] 
  "1000107" -> "1000116"  [ label = "DDG: cin"] 
  "1000103" -> "1000116"  [ label = "DDG: "] 
  "1000103" -> "1000121"  [ label = "DDG: "] 
  "1000112" -> "1000123"  [ label = "DDG: maxxThree"] 
  "1000103" -> "1000123"  [ label = "DDG: "] 
  "1000125" -> "1000123"  [ label = "DDG: 3"] 
  "1000125" -> "1000123"  [ label = "DDG: a[i]"] 
  "1000103" -> "1000138"  [ label = "DDG: "] 
  "1000103" -> "1000142"  [ label = "DDG: "] 
  "1000103" -> "1000146"  [ label = "DDG: "] 
  "1000103" -> "1000150"  [ label = "DDG: "] 
  "1000116" -> "1000125"  [ label = "DDG: a[i]"] 
  "1000103" -> "1000125"  [ label = "DDG: "] 
  "1000103" -> "1000155"  [ label = "DDG: "] 
  "1000155" -> "1000158"  [ label = "DDG: id"] 
  "1000161" -> "1000158"  [ label = "DDG: id"] 
  "1000103" -> "1000158"  [ label = "DDG: "] 
  "1000107" -> "1000158"  [ label = "DDG: n"] 
  "1000158" -> "1000161"  [ label = "DDG: id"] 
  "1000103" -> "1000161"  [ label = "DDG: "] 
  "1000103" -> "1000165"  [ label = "DDG: "] 
  "1000150" -> "1000212"  [ label = "DDG: violations"] 
  "1000207" -> "1000212"  [ label = "DDG: violations"] 
  "1000103" -> "1000212"  [ label = "DDG: "] 
  "1000218" -> "1000216"  [ label = "DDG: one + two + three"] 
  "1000218" -> "1000216"  [ label = "DDG: minnCoins"] 
  "1000103" -> "1000216"  [ label = "DDG: "] 
  "1000173" -> "1000171"  [ label = "DDG: a[id]"] 
  "1000173" -> "1000171"  [ label = "DDG: f - 2*g"] 
  "1000165" -> "1000203"  [ label = "DDG: poss"] 
  "1000199" -> "1000203"  [ label = "DDG: poss"] 
  "1000103" -> "1000203"  [ label = "DDG: "] 
  "1000103" -> "1000207"  [ label = "DDG: "] 
  "1000131" -> "1000218"  [ label = "DDG: minnCoins"] 
  "1000103" -> "1000218"  [ label = "DDG: "] 
  "1000142" -> "1000218"  [ label = "DDG: two"] 
  "1000146" -> "1000218"  [ label = "DDG: three"] 
  "1000138" -> "1000218"  [ label = "DDG: one"] 
  "1000103" -> "1000171"  [ label = "DDG: "] 
  "1000138" -> "1000220"  [ label = "DDG: one"] 
  "1000103" -> "1000220"  [ label = "DDG: "] 
  "1000142" -> "1000220"  [ label = "DDG: two"] 
  "1000146" -> "1000220"  [ label = "DDG: three"] 
  "1000177" -> "1000173"  [ label = "DDG: 2*g"] 
  "1000177" -> "1000173"  [ label = "DDG: f"] 
  "1000184" -> "1000183"  [ label = "DDG: 0"] 
  "1000184" -> "1000183"  [ label = "DDG: left"] 
  "1000187" -> "1000183"  [ label = "DDG: (left%3) == 0"] 
  "1000187" -> "1000183"  [ label = "DDG: left/3 <= k"] 
  "1000103" -> "1000199"  [ label = "DDG: "] 
  "1000142" -> "1000222"  [ label = "DDG: two"] 
  "1000103" -> "1000222"  [ label = "DDG: "] 
  "1000146" -> "1000222"  [ label = "DDG: three"] 
  "1000103" -> "1000177"  [ label = "DDG: "] 
  "1000179" -> "1000177"  [ label = "DDG: 2"] 
  "1000179" -> "1000177"  [ label = "DDG: g"] 
  "1000171" -> "1000184"  [ label = "DDG: left"] 
  "1000103" -> "1000184"  [ label = "DDG: "] 
  "1000188" -> "1000187"  [ label = "DDG: 0"] 
  "1000188" -> "1000187"  [ label = "DDG: left%3"] 
  "1000193" -> "1000187"  [ label = "DDG: k"] 
  "1000193" -> "1000187"  [ label = "DDG: left/3"] 
  "1000103" -> "1000179"  [ label = "DDG: "] 
  "1000189" -> "1000188"  [ label = "DDG: 3"] 
  "1000189" -> "1000188"  [ label = "DDG: left"] 
  "1000103" -> "1000188"  [ label = "DDG: "] 
  "1000194" -> "1000193"  [ label = "DDG: left"] 
  "1000194" -> "1000193"  [ label = "DDG: 3"] 
  "1000103" -> "1000193"  [ label = "DDG: "] 
  "1000184" -> "1000189"  [ label = "DDG: left"] 
  "1000103" -> "1000189"  [ label = "DDG: "] 
  "1000189" -> "1000194"  [ label = "DDG: left"] 
  "1000103" -> "1000194"  [ label = "DDG: "] 
  "1000158" -> "1000174"  [ label = "CDG: "] 
  "1000158" -> "1000183"  [ label = "CDG: "] 
  "1000158" -> "1000165"  [ label = "CDG: "] 
  "1000158" -> "1000203"  [ label = "CDG: "] 
  "1000158" -> "1000173"  [ label = "CDG: "] 
  "1000158" -> "1000171"  [ label = "CDG: "] 
  "1000158" -> "1000179"  [ label = "CDG: "] 
  "1000158" -> "1000184"  [ label = "CDG: "] 
  "1000158" -> "1000177"  [ label = "CDG: "] 
  "1000212" -> "1000216"  [ label = "CDG: "] 
  "1000212" -> "1000222"  [ label = "CDG: "] 
  "1000212" -> "1000220"  [ label = "CDG: "] 
  "1000212" -> "1000218"  [ label = "CDG: "] 
  "1000203" -> "1000161"  [ label = "CDG: "] 
  "1000203" -> "1000207"  [ label = "CDG: "] 
  "1000203" -> "1000158"  [ label = "CDG: "] 
  "1000183" -> "1000199"  [ label = "CDG: "] 
  "1000184" -> "1000189"  [ label = "CDG: "] 
  "1000184" -> "1000188"  [ label = "CDG: "] 
  "1000184" -> "1000187"  [ label = "CDG: "] 
  "1000188" -> "1000193"  [ label = "CDG: "] 
  "1000188" -> "1000194"  [ label = "CDG: "] 
}
