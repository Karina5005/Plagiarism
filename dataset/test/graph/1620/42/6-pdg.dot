digraph "run_test_case" {  
"1000164" [label = "(METHOD,run_test_case)" ]
"1000296" [label = "(METHOD_RETURN,void)" ]
"1000167" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000171" [label = "(<operator>.arithmeticShiftRight,cin>>v[i])" ]
"1000177" [label = "(ned.pb,ned.pb(mp(3,63)))" ]
"1000181" [label = "(ned.pb,ned.pb(mp(2,21)))" ]
"1000185" [label = "(ned.pb,ned.pb(mp(2,15)))" ]
"1000189" [label = "(ned.pb,ned.pb(mp(1,5)))" ]
"1000193" [label = "(ned.pb,ned.pb(mp(1,3)))" ]
"1000197" [label = "(ned.pb,ned.pb(mp(0,1)))" ]
"1000202" [label = "(<operator>.assignment,ans=1000000000000)" ]
"1000291" [label = "(<operator>.shiftLeft,cout<<ans<<\"\n\")" ]
"1000207" [label = "(<operator>.assignment,cur=0)" ]
"1000211" [label = "(<operator>.assignment,can=1)" ]
"1000178" [label = "(mp,mp(3,63))" ]
"1000182" [label = "(mp,mp(2,21))" ]
"1000186" [label = "(mp,mp(2,15))" ]
"1000190" [label = "(mp,mp(1,5))" ]
"1000194" [label = "(mp,mp(1,3))" ]
"1000198" [label = "(mp,mp(0,1))" ]
"1000216" [label = "(<operator>.assignment,ok=0)" ]
"1000281" [label = "(IDENTIFIER,can,if(can))" ]
"1000282" [label = "(Mi,Mi(ans,cur+ned[i].F))" ]
"1000293" [label = "(<operator>.shiftLeft,ans<<\"\n\")" ]
"1000221" [label = "(<operator>.assignment,k=5)" ]
"1000224" [label = "(<operator>.greaterEqualsThan,k>=0)" ]
"1000227" [label = "(<operator>.postDecrement,k--)" ]
"1000275" [label = "(<operator>.logicalNot,!ok)" ]
"1000277" [label = "(<operator>.assignment,can=0)" ]
"1000284" [label = "(<operator>.addition,cur+ned[i].F)" ]
"1000231" [label = "(<operator>.logicalAnd,!ok&&(ned[i].S&(1<<k))!=0&&(v[j]-k)%3==0&&v[j]>=k)" ]
"1000262" [label = "(<operator>.assignment,ok=1)" ]
"1000265" [label = "(Mx,Mx(cur,(v[j]-k)/3))" ]
"1000232" [label = "(<operator>.logicalNot,!ok)" ]
"1000234" [label = "(<operator>.logicalAnd,(ned[i].S&(1<<k))!=0&&(v[j]-k)%3==0&&v[j]>=k)" ]
"1000235" [label = "(<operator>.notEquals,(ned[i].S&(1<<k))!=0)" ]
"1000246" [label = "(<operator>.logicalAnd,(v[j]-k)%3==0&&v[j]>=k)" ]
"1000267" [label = "(<operator>.division,(v[j]-k)/3)" ]
"1000236" [label = "(<operator>.and,ned[i].S&(1<<k))" ]
"1000247" [label = "(<operator>.equals,(v[j]-k)%3==0)" ]
"1000256" [label = "(<operator>.greaterEqualsThan,v[j]>=k)" ]
"1000268" [label = "(<operator>.subtraction,v[j]-k)" ]
"1000242" [label = "(<operator>.shiftLeft,1<<k)" ]
"1000248" [label = "(<operator>.modulo,(v[j]-k)%3)" ]
"1000249" [label = "(<operator>.subtraction,v[j]-k)" ]
"1000237" [label = "(<operator>.fieldAccess,ned[i].S)" ]
"1000257" [label = "(<operator>.indirectIndexAccess,v[j])" ]
"1000269" [label = "(<operator>.indirectIndexAccess,v[j])" ]
"1000238" [label = "(<operator>.indirectIndexAccess,ned[i])" ]
"1000241" [label = "(FIELD_IDENTIFIER,S,S)" ]
"1000250" [label = "(<operator>.indirectIndexAccess,v[j])" ]
  "1000167" -> "1000296"  [ label = "DDG: n"] 
  "1000167" -> "1000296"  [ label = "DDG: cin>>n"] 
  "1000171" -> "1000296"  [ label = "DDG: cin"] 
  "1000171" -> "1000296"  [ label = "DDG: v[i]"] 
  "1000171" -> "1000296"  [ label = "DDG: cin>>v[i]"] 
  "1000177" -> "1000296"  [ label = "DDG: mp(3,63)"] 
  "1000177" -> "1000296"  [ label = "DDG: ned.pb(mp(3,63))"] 
  "1000181" -> "1000296"  [ label = "DDG: mp(2,21)"] 
  "1000181" -> "1000296"  [ label = "DDG: ned.pb(mp(2,21))"] 
  "1000185" -> "1000296"  [ label = "DDG: mp(2,15)"] 
  "1000185" -> "1000296"  [ label = "DDG: ned.pb(mp(2,15))"] 
  "1000189" -> "1000296"  [ label = "DDG: mp(1,5)"] 
  "1000189" -> "1000296"  [ label = "DDG: ned.pb(mp(1,5))"] 
  "1000193" -> "1000296"  [ label = "DDG: mp(1,3)"] 
  "1000193" -> "1000296"  [ label = "DDG: ned.pb(mp(1,3))"] 
  "1000197" -> "1000296"  [ label = "DDG: mp(0,1)"] 
  "1000197" -> "1000296"  [ label = "DDG: ned.pb(mp(0,1))"] 
  "1000207" -> "1000296"  [ label = "DDG: cur"] 
  "1000211" -> "1000296"  [ label = "DDG: can"] 
  "1000224" -> "1000296"  [ label = "DDG: k"] 
  "1000224" -> "1000296"  [ label = "DDG: k>=0"] 
  "1000275" -> "1000296"  [ label = "DDG: ok"] 
  "1000275" -> "1000296"  [ label = "DDG: !ok"] 
  "1000277" -> "1000296"  [ label = "DDG: can"] 
  "1000284" -> "1000296"  [ label = "DDG: cur"] 
  "1000284" -> "1000296"  [ label = "DDG: ned[i].F"] 
  "1000282" -> "1000296"  [ label = "DDG: cur+ned[i].F"] 
  "1000282" -> "1000296"  [ label = "DDG: Mi(ans,cur+ned[i].F)"] 
  "1000293" -> "1000296"  [ label = "DDG: ans"] 
  "1000291" -> "1000296"  [ label = "DDG: ans<<\"\n\""] 
  "1000291" -> "1000296"  [ label = "DDG: cout<<ans<<\"\n\""] 
  "1000236" -> "1000296"  [ label = "DDG: ned[i].S"] 
  "1000236" -> "1000296"  [ label = "DDG: 1<<k"] 
  "1000235" -> "1000296"  [ label = "DDG: ned[i].S&(1<<k)"] 
  "1000234" -> "1000296"  [ label = "DDG: (ned[i].S&(1<<k))!=0"] 
  "1000249" -> "1000296"  [ label = "DDG: v[j]"] 
  "1000248" -> "1000296"  [ label = "DDG: v[j]-k"] 
  "1000247" -> "1000296"  [ label = "DDG: (v[j]-k)%3"] 
  "1000246" -> "1000296"  [ label = "DDG: (v[j]-k)%3==0"] 
  "1000256" -> "1000296"  [ label = "DDG: v[j]"] 
  "1000246" -> "1000296"  [ label = "DDG: v[j]>=k"] 
  "1000234" -> "1000296"  [ label = "DDG: (v[j]-k)%3==0&&v[j]>=k"] 
  "1000231" -> "1000296"  [ label = "DDG: (ned[i].S&(1<<k))!=0&&(v[j]-k)%3==0&&v[j]>=k"] 
  "1000231" -> "1000296"  [ label = "DDG: !ok&&(ned[i].S&(1<<k))!=0&&(v[j]-k)%3==0&&v[j]>=k"] 
  "1000265" -> "1000296"  [ label = "DDG: cur"] 
  "1000268" -> "1000296"  [ label = "DDG: v[j]"] 
  "1000267" -> "1000296"  [ label = "DDG: v[j]-k"] 
  "1000265" -> "1000296"  [ label = "DDG: (v[j]-k)/3"] 
  "1000265" -> "1000296"  [ label = "DDG: Mx(cur,(v[j]-k)/3)"] 
  "1000291" -> "1000296"  [ label = "DDG: cout"] 
  "1000164" -> "1000202"  [ label = "DDG: "] 
  "1000164" -> "1000167"  [ label = "DDG: "] 
  "1000167" -> "1000171"  [ label = "DDG: cin"] 
  "1000164" -> "1000171"  [ label = "DDG: "] 
  "1000178" -> "1000177"  [ label = "DDG: 3"] 
  "1000178" -> "1000177"  [ label = "DDG: 63"] 
  "1000182" -> "1000181"  [ label = "DDG: 2"] 
  "1000182" -> "1000181"  [ label = "DDG: 21"] 
  "1000186" -> "1000185"  [ label = "DDG: 15"] 
  "1000186" -> "1000185"  [ label = "DDG: 2"] 
  "1000190" -> "1000189"  [ label = "DDG: 1"] 
  "1000190" -> "1000189"  [ label = "DDG: 5"] 
  "1000194" -> "1000193"  [ label = "DDG: 1"] 
  "1000194" -> "1000193"  [ label = "DDG: 3"] 
  "1000198" -> "1000197"  [ label = "DDG: 1"] 
  "1000198" -> "1000197"  [ label = "DDG: 0"] 
  "1000164" -> "1000207"  [ label = "DDG: "] 
  "1000164" -> "1000211"  [ label = "DDG: "] 
  "1000164" -> "1000291"  [ label = "DDG: "] 
  "1000293" -> "1000291"  [ label = "DDG: \"\n\""] 
  "1000293" -> "1000291"  [ label = "DDG: ans"] 
  "1000164" -> "1000178"  [ label = "DDG: "] 
  "1000164" -> "1000182"  [ label = "DDG: "] 
  "1000164" -> "1000186"  [ label = "DDG: "] 
  "1000164" -> "1000190"  [ label = "DDG: "] 
  "1000164" -> "1000194"  [ label = "DDG: "] 
  "1000164" -> "1000198"  [ label = "DDG: "] 
  "1000164" -> "1000216"  [ label = "DDG: "] 
  "1000164" -> "1000281"  [ label = "DDG: "] 
  "1000202" -> "1000293"  [ label = "DDG: ans"] 
  "1000282" -> "1000293"  [ label = "DDG: ans"] 
  "1000164" -> "1000293"  [ label = "DDG: "] 
  "1000164" -> "1000221"  [ label = "DDG: "] 
  "1000164" -> "1000277"  [ label = "DDG: "] 
  "1000202" -> "1000282"  [ label = "DDG: ans"] 
  "1000164" -> "1000282"  [ label = "DDG: "] 
  "1000207" -> "1000282"  [ label = "DDG: cur"] 
  "1000265" -> "1000282"  [ label = "DDG: cur"] 
  "1000221" -> "1000224"  [ label = "DDG: k"] 
  "1000227" -> "1000224"  [ label = "DDG: k"] 
  "1000164" -> "1000224"  [ label = "DDG: "] 
  "1000224" -> "1000227"  [ label = "DDG: k"] 
  "1000242" -> "1000227"  [ label = "DDG: k"] 
  "1000249" -> "1000227"  [ label = "DDG: k"] 
  "1000256" -> "1000227"  [ label = "DDG: k"] 
  "1000268" -> "1000227"  [ label = "DDG: k"] 
  "1000164" -> "1000227"  [ label = "DDG: "] 
  "1000216" -> "1000275"  [ label = "DDG: ok"] 
  "1000232" -> "1000275"  [ label = "DDG: ok"] 
  "1000262" -> "1000275"  [ label = "DDG: ok"] 
  "1000164" -> "1000275"  [ label = "DDG: "] 
  "1000207" -> "1000284"  [ label = "DDG: cur"] 
  "1000265" -> "1000284"  [ label = "DDG: cur"] 
  "1000164" -> "1000284"  [ label = "DDG: "] 
  "1000232" -> "1000231"  [ label = "DDG: ok"] 
  "1000234" -> "1000231"  [ label = "DDG: (ned[i].S&(1<<k))!=0"] 
  "1000234" -> "1000231"  [ label = "DDG: (v[j]-k)%3==0&&v[j]>=k"] 
  "1000164" -> "1000262"  [ label = "DDG: "] 
  "1000216" -> "1000232"  [ label = "DDG: ok"] 
  "1000262" -> "1000232"  [ label = "DDG: ok"] 
  "1000164" -> "1000232"  [ label = "DDG: "] 
  "1000235" -> "1000234"  [ label = "DDG: 0"] 
  "1000235" -> "1000234"  [ label = "DDG: ned[i].S&(1<<k)"] 
  "1000246" -> "1000234"  [ label = "DDG: v[j]>=k"] 
  "1000246" -> "1000234"  [ label = "DDG: (v[j]-k)%3==0"] 
  "1000207" -> "1000265"  [ label = "DDG: cur"] 
  "1000164" -> "1000265"  [ label = "DDG: "] 
  "1000267" -> "1000265"  [ label = "DDG: 3"] 
  "1000267" -> "1000265"  [ label = "DDG: v[j]-k"] 
  "1000236" -> "1000235"  [ label = "DDG: 1<<k"] 
  "1000236" -> "1000235"  [ label = "DDG: ned[i].S"] 
  "1000164" -> "1000235"  [ label = "DDG: "] 
  "1000247" -> "1000246"  [ label = "DDG: 0"] 
  "1000247" -> "1000246"  [ label = "DDG: (v[j]-k)%3"] 
  "1000256" -> "1000246"  [ label = "DDG: k"] 
  "1000256" -> "1000246"  [ label = "DDG: v[j]"] 
  "1000268" -> "1000267"  [ label = "DDG: v[j]"] 
  "1000268" -> "1000267"  [ label = "DDG: k"] 
  "1000164" -> "1000267"  [ label = "DDG: "] 
  "1000242" -> "1000236"  [ label = "DDG: 1"] 
  "1000242" -> "1000236"  [ label = "DDG: k"] 
  "1000248" -> "1000247"  [ label = "DDG: 3"] 
  "1000248" -> "1000247"  [ label = "DDG: v[j]-k"] 
  "1000164" -> "1000247"  [ label = "DDG: "] 
  "1000249" -> "1000256"  [ label = "DDG: v[j]"] 
  "1000249" -> "1000256"  [ label = "DDG: k"] 
  "1000164" -> "1000256"  [ label = "DDG: "] 
  "1000249" -> "1000268"  [ label = "DDG: v[j]"] 
  "1000256" -> "1000268"  [ label = "DDG: v[j]"] 
  "1000224" -> "1000268"  [ label = "DDG: k"] 
  "1000242" -> "1000268"  [ label = "DDG: k"] 
  "1000249" -> "1000268"  [ label = "DDG: k"] 
  "1000256" -> "1000268"  [ label = "DDG: k"] 
  "1000164" -> "1000268"  [ label = "DDG: "] 
  "1000164" -> "1000242"  [ label = "DDG: "] 
  "1000224" -> "1000242"  [ label = "DDG: k"] 
  "1000249" -> "1000248"  [ label = "DDG: k"] 
  "1000249" -> "1000248"  [ label = "DDG: v[j]"] 
  "1000164" -> "1000248"  [ label = "DDG: "] 
  "1000256" -> "1000249"  [ label = "DDG: v[j]"] 
  "1000268" -> "1000249"  [ label = "DDG: v[j]"] 
  "1000242" -> "1000249"  [ label = "DDG: k"] 
  "1000164" -> "1000249"  [ label = "DDG: "] 
  "1000224" -> "1000227"  [ label = "CDG: "] 
  "1000224" -> "1000231"  [ label = "CDG: "] 
  "1000224" -> "1000224"  [ label = "CDG: "] 
  "1000224" -> "1000232"  [ label = "CDG: "] 
  "1000275" -> "1000277"  [ label = "CDG: "] 
  "1000231" -> "1000265"  [ label = "CDG: "] 
  "1000231" -> "1000268"  [ label = "CDG: "] 
  "1000231" -> "1000262"  [ label = "CDG: "] 
  "1000231" -> "1000269"  [ label = "CDG: "] 
  "1000231" -> "1000267"  [ label = "CDG: "] 
  "1000232" -> "1000238"  [ label = "CDG: "] 
  "1000232" -> "1000236"  [ label = "CDG: "] 
  "1000232" -> "1000234"  [ label = "CDG: "] 
  "1000232" -> "1000242"  [ label = "CDG: "] 
  "1000232" -> "1000235"  [ label = "CDG: "] 
  "1000232" -> "1000237"  [ label = "CDG: "] 
  "1000232" -> "1000241"  [ label = "CDG: "] 
  "1000235" -> "1000247"  [ label = "CDG: "] 
  "1000235" -> "1000246"  [ label = "CDG: "] 
  "1000235" -> "1000250"  [ label = "CDG: "] 
  "1000235" -> "1000249"  [ label = "CDG: "] 
  "1000235" -> "1000248"  [ label = "CDG: "] 
  "1000247" -> "1000257"  [ label = "CDG: "] 
  "1000247" -> "1000256"  [ label = "CDG: "] 
}
