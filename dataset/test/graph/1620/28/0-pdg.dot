digraph "main" {  
"1000101" [label = "(METHOD,main)" ]
"1000185" [label = "(METHOD_RETURN,int)" ]
"1000104" [label = "(<operator>.arithmeticShiftRight,cin >> q)" ]
"1000117" [label = "(<operator>.assignment,size = 0)" ]
"1000177" [label = "(<operator>.shiftLeft,cout << value << \" \")" ]
"1000182" [label = "(<operator>.shiftLeft,cout << endl)" ]
"1000108" [label = "(<operator>.lessThan,unordered_map<int)" ]
"1000111" [label = "(<operator>.lessThan,list<int>> values)" ]
"1000121" [label = "(<operator>.postDecrement,q--)" ]
"1000169" [label = "(<operator>.assignment,res[elem] = value.first)" ]
"1000127" [label = "(<operator>.arithmeticShiftRight,cin >> code)" ]
"1000143" [label = "(<operator>.arithmeticShiftRight,cin >> first >> second)" ]
"1000154" [label = "(values[second].splice,values[second].splice(values[second].end(), values[first]))" ]
"1000179" [label = "(<operator>.shiftLeft,value << \" \")" ]
"1000113" [label = "(<operator>.arithmeticShiftRight,int>> values)" ]
"1000131" [label = "(<operator>.equals,code == 1)" ]
"1000149" [label = "(<operator>.equals,values.find(first) == values.end())" ]
"1000160" [label = "(<operator>.notEquals,first != second)" ]
"1000163" [label = "(values.erase,values.erase(first))" ]
"1000135" [label = "(<operator>.arithmeticShiftRight,cin >> first)" ]
"1000138" [label = "(values[first].emplace_back,values[first].emplace_back(size))" ]
"1000140" [label = "(<operator>.postIncrement,size++)" ]
"1000145" [label = "(<operator>.arithmeticShiftRight,first >> second)" ]
"1000150" [label = "(values.find,values.find(first))" ]
"1000155" [label = "(values[second].end,values[second].end())" ]
"1000156" [label = "(<operator>.indirectIndexAccess,values[first])" ]
"1000152" [label = "(values.end,values.end())" ]
  "1000104" -> "1000185"  [ label = "DDG: cin"] 
  "1000104" -> "1000185"  [ label = "DDG: cin >> q"] 
  "1000108" -> "1000185"  [ label = "DDG: unordered_map<int"] 
  "1000113" -> "1000185"  [ label = "DDG: int"] 
  "1000113" -> "1000185"  [ label = "DDG: values"] 
  "1000111" -> "1000185"  [ label = "DDG: int>> values"] 
  "1000111" -> "1000185"  [ label = "DDG: list<int>> values"] 
  "1000117" -> "1000185"  [ label = "DDG: size"] 
  "1000121" -> "1000185"  [ label = "DDG: q"] 
  "1000169" -> "1000185"  [ label = "DDG: res[elem]"] 
  "1000179" -> "1000185"  [ label = "DDG: value"] 
  "1000177" -> "1000185"  [ label = "DDG: value << \" \""] 
  "1000177" -> "1000185"  [ label = "DDG: cout << value << \" \""] 
  "1000182" -> "1000185"  [ label = "DDG: cout"] 
  "1000182" -> "1000185"  [ label = "DDG: cout << endl"] 
  "1000127" -> "1000185"  [ label = "DDG: cin >> code"] 
  "1000131" -> "1000185"  [ label = "DDG: code"] 
  "1000131" -> "1000185"  [ label = "DDG: code == 1"] 
  "1000143" -> "1000185"  [ label = "DDG: cin"] 
  "1000145" -> "1000185"  [ label = "DDG: second"] 
  "1000143" -> "1000185"  [ label = "DDG: first >> second"] 
  "1000143" -> "1000185"  [ label = "DDG: cin >> first >> second"] 
  "1000150" -> "1000185"  [ label = "DDG: first"] 
  "1000149" -> "1000185"  [ label = "DDG: values.find(first)"] 
  "1000149" -> "1000185"  [ label = "DDG: values.end()"] 
  "1000149" -> "1000185"  [ label = "DDG: values.find(first) == values.end()"] 
  "1000154" -> "1000185"  [ label = "DDG: values[second].end()"] 
  "1000154" -> "1000185"  [ label = "DDG: values[first]"] 
  "1000154" -> "1000185"  [ label = "DDG: values[second].splice(values[second].end(), values[first])"] 
  "1000160" -> "1000185"  [ label = "DDG: first"] 
  "1000160" -> "1000185"  [ label = "DDG: second"] 
  "1000160" -> "1000185"  [ label = "DDG: first != second"] 
  "1000163" -> "1000185"  [ label = "DDG: first"] 
  "1000163" -> "1000185"  [ label = "DDG: values.erase(first)"] 
  "1000135" -> "1000185"  [ label = "DDG: cin"] 
  "1000135" -> "1000185"  [ label = "DDG: first"] 
  "1000135" -> "1000185"  [ label = "DDG: cin >> first"] 
  "1000138" -> "1000185"  [ label = "DDG: values[first].emplace_back(size)"] 
  "1000140" -> "1000185"  [ label = "DDG: size"] 
  "1000111" -> "1000185"  [ label = "DDG: list"] 
  "1000108" -> "1000185"  [ label = "DDG: unordered_map"] 
  "1000182" -> "1000185"  [ label = "DDG: endl"] 
  "1000101" -> "1000117"  [ label = "DDG: "] 
  "1000101" -> "1000104"  [ label = "DDG: "] 
  "1000101" -> "1000177"  [ label = "DDG: "] 
  "1000179" -> "1000177"  [ label = "DDG: value"] 
  "1000179" -> "1000177"  [ label = "DDG: \" \""] 
  "1000177" -> "1000182"  [ label = "DDG: cout"] 
  "1000101" -> "1000182"  [ label = "DDG: "] 
  "1000101" -> "1000108"  [ label = "DDG: "] 
  "1000101" -> "1000111"  [ label = "DDG: "] 
  "1000113" -> "1000111"  [ label = "DDG: values"] 
  "1000113" -> "1000111"  [ label = "DDG: int"] 
  "1000104" -> "1000121"  [ label = "DDG: q"] 
  "1000101" -> "1000121"  [ label = "DDG: "] 
  "1000101" -> "1000179"  [ label = "DDG: "] 
  "1000108" -> "1000113"  [ label = "DDG: int"] 
  "1000101" -> "1000113"  [ label = "DDG: "] 
  "1000104" -> "1000127"  [ label = "DDG: cin"] 
  "1000143" -> "1000127"  [ label = "DDG: cin"] 
  "1000135" -> "1000127"  [ label = "DDG: cin"] 
  "1000101" -> "1000127"  [ label = "DDG: "] 
  "1000131" -> "1000127"  [ label = "DDG: code"] 
  "1000127" -> "1000143"  [ label = "DDG: cin"] 
  "1000101" -> "1000143"  [ label = "DDG: "] 
  "1000145" -> "1000143"  [ label = "DDG: first"] 
  "1000145" -> "1000143"  [ label = "DDG: second"] 
  "1000101" -> "1000154"  [ label = "DDG: "] 
  "1000113" -> "1000154"  [ label = "DDG: values"] 
  "1000127" -> "1000131"  [ label = "DDG: code"] 
  "1000101" -> "1000131"  [ label = "DDG: "] 
  "1000150" -> "1000145"  [ label = "DDG: first"] 
  "1000160" -> "1000145"  [ label = "DDG: first"] 
  "1000163" -> "1000145"  [ label = "DDG: first"] 
  "1000135" -> "1000145"  [ label = "DDG: first"] 
  "1000101" -> "1000145"  [ label = "DDG: "] 
  "1000160" -> "1000145"  [ label = "DDG: second"] 
  "1000150" -> "1000149"  [ label = "DDG: first"] 
  "1000101" -> "1000149"  [ label = "DDG: "] 
  "1000150" -> "1000160"  [ label = "DDG: first"] 
  "1000101" -> "1000160"  [ label = "DDG: "] 
  "1000145" -> "1000160"  [ label = "DDG: second"] 
  "1000160" -> "1000163"  [ label = "DDG: first"] 
  "1000101" -> "1000163"  [ label = "DDG: "] 
  "1000127" -> "1000135"  [ label = "DDG: cin"] 
  "1000101" -> "1000135"  [ label = "DDG: "] 
  "1000150" -> "1000135"  [ label = "DDG: first"] 
  "1000160" -> "1000135"  [ label = "DDG: first"] 
  "1000163" -> "1000135"  [ label = "DDG: first"] 
  "1000117" -> "1000138"  [ label = "DDG: size"] 
  "1000140" -> "1000138"  [ label = "DDG: size"] 
  "1000101" -> "1000138"  [ label = "DDG: "] 
  "1000138" -> "1000140"  [ label = "DDG: size"] 
  "1000101" -> "1000140"  [ label = "DDG: "] 
  "1000145" -> "1000150"  [ label = "DDG: first"] 
  "1000101" -> "1000150"  [ label = "DDG: "] 
  "1000121" -> "1000121"  [ label = "CDG: "] 
  "1000121" -> "1000131"  [ label = "CDG: "] 
  "1000121" -> "1000127"  [ label = "CDG: "] 
  "1000131" -> "1000143"  [ label = "CDG: "] 
  "1000131" -> "1000145"  [ label = "CDG: "] 
  "1000131" -> "1000152"  [ label = "CDG: "] 
  "1000131" -> "1000150"  [ label = "CDG: "] 
  "1000131" -> "1000135"  [ label = "CDG: "] 
  "1000131" -> "1000149"  [ label = "CDG: "] 
  "1000131" -> "1000140"  [ label = "CDG: "] 
  "1000131" -> "1000138"  [ label = "CDG: "] 
  "1000149" -> "1000155"  [ label = "CDG: "] 
  "1000149" -> "1000156"  [ label = "CDG: "] 
  "1000149" -> "1000154"  [ label = "CDG: "] 
  "1000149" -> "1000160"  [ label = "CDG: "] 
  "1000160" -> "1000163"  [ label = "CDG: "] 
}
