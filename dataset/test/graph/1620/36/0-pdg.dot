digraph "solve" {  
"1000101" [label = "(METHOD,solve)" ]
"1000150" [label = "(METHOD_RETURN,void)" ]
"1000104" [label = "(<operator>.arithmeticShiftRight,cin >> s)" ]
"1000108" [label = "(<operator>.assignment,cnt = 0)" ]
"1000145" [label = "(<operator>.shiftLeft,cout << \"yes\" << endl)" ]
"1000113" [label = "(<operator>.assignment,i=0)" ]
"1000116" [label = "(<operator>.lessThan,i<s.size())" ]
"1000119" [label = "(<operator>.postIncrement,i++)" ]
"1000135" [label = "(<operator>.equals,cnt == 1)" ]
"1000122" [label = "(<operator>.equals,s[i]==&#39)" ]
"1000128" [label = "(<operator>.and,N&#39)" ]
"1000139" [label = "(<operator>.shiftLeft,cout << \"No\" << endl)" ]
"1000144" [label = "(RETURN,return;,return;)" ]
"1000147" [label = "(<operator>.shiftLeft,\"yes\" << endl)" ]
"1000132" [label = "(<operator>.postIncrement,cnt++)" ]
"1000141" [label = "(<operator>.shiftLeft,\"No\" << endl)" ]
"1000118" [label = "(s.size,s.size())" ]
"1000123" [label = "(<operator>.indirectIndexAccess,s[i])" ]
"1000126" [label = "(<operator>.addressOf,&#39)" ]
  "1000144" -> "1000150"  [ label = "DDG: <RET>"] 
  "1000104" -> "1000150"  [ label = "DDG: s"] 
  "1000104" -> "1000150"  [ label = "DDG: cin >> s"] 
  "1000116" -> "1000150"  [ label = "DDG: i"] 
  "1000116" -> "1000150"  [ label = "DDG: s.size()"] 
  "1000116" -> "1000150"  [ label = "DDG: i<s.size()"] 
  "1000135" -> "1000150"  [ label = "DDG: cnt"] 
  "1000135" -> "1000150"  [ label = "DDG: cnt == 1"] 
  "1000145" -> "1000150"  [ label = "DDG: cout"] 
  "1000147" -> "1000150"  [ label = "DDG: endl"] 
  "1000145" -> "1000150"  [ label = "DDG: \"yes\" << endl"] 
  "1000145" -> "1000150"  [ label = "DDG: cout << \"yes\" << endl"] 
  "1000139" -> "1000150"  [ label = "DDG: cout"] 
  "1000141" -> "1000150"  [ label = "DDG: endl"] 
  "1000139" -> "1000150"  [ label = "DDG: \"No\" << endl"] 
  "1000139" -> "1000150"  [ label = "DDG: cout << \"No\" << endl"] 
  "1000122" -> "1000150"  [ label = "DDG: s[i]"] 
  "1000122" -> "1000150"  [ label = "DDG: &#39"] 
  "1000122" -> "1000150"  [ label = "DDG: s[i]==&#39"] 
  "1000128" -> "1000150"  [ label = "DDG: N&#39"] 
  "1000128" -> "1000150"  [ label = "DDG: N"] 
  "1000104" -> "1000150"  [ label = "DDG: cin"] 
  "1000101" -> "1000108"  [ label = "DDG: "] 
  "1000101" -> "1000104"  [ label = "DDG: "] 
  "1000101" -> "1000113"  [ label = "DDG: "] 
  "1000101" -> "1000145"  [ label = "DDG: "] 
  "1000147" -> "1000145"  [ label = "DDG: \"yes\""] 
  "1000147" -> "1000145"  [ label = "DDG: endl"] 
  "1000113" -> "1000116"  [ label = "DDG: i"] 
  "1000119" -> "1000116"  [ label = "DDG: i"] 
  "1000101" -> "1000116"  [ label = "DDG: "] 
  "1000116" -> "1000119"  [ label = "DDG: i"] 
  "1000101" -> "1000119"  [ label = "DDG: "] 
  "1000108" -> "1000135"  [ label = "DDG: cnt"] 
  "1000132" -> "1000135"  [ label = "DDG: cnt"] 
  "1000101" -> "1000135"  [ label = "DDG: "] 
  "1000101" -> "1000144"  [ label = "DDG: "] 
  "1000101" -> "1000147"  [ label = "DDG: "] 
  "1000104" -> "1000122"  [ label = "DDG: s"] 
  "1000101" -> "1000128"  [ label = "DDG: "] 
  "1000101" -> "1000139"  [ label = "DDG: "] 
  "1000141" -> "1000139"  [ label = "DDG: \"No\""] 
  "1000141" -> "1000139"  [ label = "DDG: endl"] 
  "1000108" -> "1000132"  [ label = "DDG: cnt"] 
  "1000101" -> "1000132"  [ label = "DDG: "] 
  "1000101" -> "1000141"  [ label = "DDG: "] 
  "1000116" -> "1000116"  [ label = "CDG: "] 
  "1000116" -> "1000126"  [ label = "CDG: "] 
  "1000116" -> "1000132"  [ label = "CDG: "] 
  "1000116" -> "1000128"  [ label = "CDG: "] 
  "1000116" -> "1000123"  [ label = "CDG: "] 
  "1000116" -> "1000119"  [ label = "CDG: "] 
  "1000116" -> "1000118"  [ label = "CDG: "] 
  "1000116" -> "1000122"  [ label = "CDG: "] 
  "1000135" -> "1000141"  [ label = "CDG: "] 
  "1000135" -> "1000147"  [ label = "CDG: "] 
  "1000135" -> "1000145"  [ label = "CDG: "] 
  "1000135" -> "1000139"  [ label = "CDG: "] 
  "1000135" -> "1000144"  [ label = "CDG: "] 
}
