digraph "main" {  
"1000101" [label = "(METHOD,main)" ]
"1000159" [label = "(METHOD_RETURN,int)" ]
"1000104" [label = "(scanf,scanf(\"%d\",&t))" ]
"1000157" [label = "(RETURN,return 0;,return 0;)" ]
"1000109" [label = "(<operator>.postDecrement,t--)" ]
"1000158" [label = "(LITERAL,0,return 0;)" ]
"1000113" [label = "(scanf,scanf(\"%d\",&n))" ]
"1000118" [label = "(<operator>.equals,n==1)" ]
"1000121" [label = "(puts,puts(\"9\"))" ]
"1000125" [label = "(printf,printf(\"9\"))" ]
"1000128" [label = "(<operator>.assignment,tn=8)" ]
"1000155" [label = "(puts,puts(\"\"))" ]
"1000133" [label = "(<operator>.assignment,i=2)" ]
"1000136" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000139" [label = "(<operator>.postIncrement,i++)" ]
"1000142" [label = "(printf,printf(\"%d\",tn))" ]
"1000146" [label = "(<operator>.equals,tn==9)" ]
"1000149" [label = "(<operator>.assignment,tn=0)" ]
"1000153" [label = "(<operator>.postIncrement,tn++)" ]
"1000115" [label = "(<operator>.addressOf,&n)" ]
  "1000104" -> "1000159"  [ label = "DDG: &t"] 
  "1000109" -> "1000159"  [ label = "DDG: t"] 
  "1000113" -> "1000159"  [ label = "DDG: &n"] 
  "1000118" -> "1000159"  [ label = "DDG: n"] 
  "1000118" -> "1000159"  [ label = "DDG: n==1"] 
  "1000125" -> "1000159"  [ label = "DDG: printf(\"9\")"] 
  "1000128" -> "1000159"  [ label = "DDG: tn"] 
  "1000136" -> "1000159"  [ label = "DDG: i"] 
  "1000136" -> "1000159"  [ label = "DDG: n"] 
  "1000136" -> "1000159"  [ label = "DDG: i<=n"] 
  "1000155" -> "1000159"  [ label = "DDG: puts(\"\")"] 
  "1000142" -> "1000159"  [ label = "DDG: printf(\"%d\",tn)"] 
  "1000146" -> "1000159"  [ label = "DDG: tn==9"] 
  "1000153" -> "1000159"  [ label = "DDG: tn"] 
  "1000149" -> "1000159"  [ label = "DDG: tn"] 
  "1000121" -> "1000159"  [ label = "DDG: puts(\"9\")"] 
  "1000157" -> "1000159"  [ label = "DDG: <RET>"] 
  "1000101" -> "1000104"  [ label = "DDG: "] 
  "1000158" -> "1000157"  [ label = "DDG: 0"] 
  "1000101" -> "1000157"  [ label = "DDG: "] 
  "1000101" -> "1000158"  [ label = "DDG: "] 
  "1000101" -> "1000109"  [ label = "DDG: "] 
  "1000101" -> "1000113"  [ label = "DDG: "] 
  "1000136" -> "1000118"  [ label = "DDG: n"] 
  "1000101" -> "1000118"  [ label = "DDG: "] 
  "1000101" -> "1000121"  [ label = "DDG: "] 
  "1000101" -> "1000128"  [ label = "DDG: "] 
  "1000101" -> "1000125"  [ label = "DDG: "] 
  "1000101" -> "1000133"  [ label = "DDG: "] 
  "1000101" -> "1000155"  [ label = "DDG: "] 
  "1000133" -> "1000136"  [ label = "DDG: i"] 
  "1000139" -> "1000136"  [ label = "DDG: i"] 
  "1000101" -> "1000136"  [ label = "DDG: "] 
  "1000118" -> "1000136"  [ label = "DDG: n"] 
  "1000136" -> "1000139"  [ label = "DDG: i"] 
  "1000101" -> "1000139"  [ label = "DDG: "] 
  "1000101" -> "1000142"  [ label = "DDG: "] 
  "1000128" -> "1000142"  [ label = "DDG: tn"] 
  "1000153" -> "1000142"  [ label = "DDG: tn"] 
  "1000149" -> "1000142"  [ label = "DDG: tn"] 
  "1000101" -> "1000149"  [ label = "DDG: "] 
  "1000142" -> "1000146"  [ label = "DDG: tn"] 
  "1000101" -> "1000146"  [ label = "DDG: "] 
  "1000146" -> "1000153"  [ label = "DDG: tn"] 
  "1000101" -> "1000153"  [ label = "DDG: "] 
  "1000109" -> "1000113"  [ label = "CDG: "] 
  "1000109" -> "1000109"  [ label = "CDG: "] 
  "1000109" -> "1000115"  [ label = "CDG: "] 
  "1000109" -> "1000118"  [ label = "CDG: "] 
  "1000118" -> "1000121"  [ label = "CDG: "] 
  "1000118" -> "1000125"  [ label = "CDG: "] 
  "1000118" -> "1000128"  [ label = "CDG: "] 
  "1000118" -> "1000155"  [ label = "CDG: "] 
  "1000118" -> "1000133"  [ label = "CDG: "] 
  "1000118" -> "1000136"  [ label = "CDG: "] 
  "1000136" -> "1000142"  [ label = "CDG: "] 
  "1000136" -> "1000139"  [ label = "CDG: "] 
  "1000136" -> "1000146"  [ label = "CDG: "] 
  "1000136" -> "1000136"  [ label = "CDG: "] 
  "1000146" -> "1000153"  [ label = "CDG: "] 
  "1000146" -> "1000149"  [ label = "CDG: "] 
}
