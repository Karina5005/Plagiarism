digraph "solve" {  
"1000440" [label = "(METHOD,solve)" ]
"1000493" [label = "(METHOD_RETURN,void)" ]
"1000443" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000447" [label = "(<operator>.assignment,k=9)" ]
"1000451" [label = "(ans.push_back,ans.push_back(9))" ]
"1000453" [label = "(ans.push_back,ans.push_back(8))" ]
"1000455" [label = "(ans.push_back,ans.push_back(9))" ]
"1000490" [label = "(<operator>.shiftLeft,cout<<endl)" ]
"1000459" [label = "(<operator>.assignment,i=0)" ]
"1000462" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000465" [label = "(<operator>.postIncrement,i++)" ]
"1000476" [label = "(<operator>.assignment,i=0)" ]
"1000479" [label = "(<operator>.lessThan,i<n)" ]
"1000482" [label = "(<operator>.postIncrement,i++)" ]
"1000468" [label = "(ans.push_back,ans.push_back((i+10)%10))" ]
"1000485" [label = "(<operator>.shiftLeft,cout<<ans[i])" ]
"1000469" [label = "(<operator>.modulo,(i+10)%10)" ]
"1000470" [label = "(<operator>.addition,i+10)" ]
"1000487" [label = "(<operator>.indirectIndexAccess,ans[i])" ]
  "1000443" -> "1000493"  [ label = "DDG: cin>>n"] 
  "1000447" -> "1000493"  [ label = "DDG: k"] 
  "1000453" -> "1000493"  [ label = "DDG: ans.push_back(8)"] 
  "1000455" -> "1000493"  [ label = "DDG: ans.push_back(9)"] 
  "1000462" -> "1000493"  [ label = "DDG: i<=n"] 
  "1000479" -> "1000493"  [ label = "DDG: i"] 
  "1000479" -> "1000493"  [ label = "DDG: n"] 
  "1000479" -> "1000493"  [ label = "DDG: i<n"] 
  "1000490" -> "1000493"  [ label = "DDG: cout"] 
  "1000490" -> "1000493"  [ label = "DDG: cout<<endl"] 
  "1000485" -> "1000493"  [ label = "DDG: ans[i]"] 
  "1000485" -> "1000493"  [ label = "DDG: cout<<ans[i]"] 
  "1000469" -> "1000493"  [ label = "DDG: i+10"] 
  "1000468" -> "1000493"  [ label = "DDG: (i+10)%10"] 
  "1000468" -> "1000493"  [ label = "DDG: ans.push_back((i+10)%10)"] 
  "1000443" -> "1000493"  [ label = "DDG: cin"] 
  "1000490" -> "1000493"  [ label = "DDG: endl"] 
  "1000440" -> "1000447"  [ label = "DDG: "] 
  "1000440" -> "1000443"  [ label = "DDG: "] 
  "1000440" -> "1000451"  [ label = "DDG: "] 
  "1000440" -> "1000453"  [ label = "DDG: "] 
  "1000440" -> "1000455"  [ label = "DDG: "] 
  "1000440" -> "1000459"  [ label = "DDG: "] 
  "1000440" -> "1000476"  [ label = "DDG: "] 
  "1000485" -> "1000490"  [ label = "DDG: cout"] 
  "1000440" -> "1000490"  [ label = "DDG: "] 
  "1000459" -> "1000462"  [ label = "DDG: i"] 
  "1000465" -> "1000462"  [ label = "DDG: i"] 
  "1000440" -> "1000462"  [ label = "DDG: "] 
  "1000443" -> "1000462"  [ label = "DDG: n"] 
  "1000440" -> "1000465"  [ label = "DDG: "] 
  "1000462" -> "1000465"  [ label = "DDG: i"] 
  "1000476" -> "1000479"  [ label = "DDG: i"] 
  "1000482" -> "1000479"  [ label = "DDG: i"] 
  "1000440" -> "1000479"  [ label = "DDG: "] 
  "1000462" -> "1000479"  [ label = "DDG: n"] 
  "1000479" -> "1000482"  [ label = "DDG: i"] 
  "1000440" -> "1000482"  [ label = "DDG: "] 
  "1000469" -> "1000468"  [ label = "DDG: 10"] 
  "1000469" -> "1000468"  [ label = "DDG: i+10"] 
  "1000440" -> "1000485"  [ label = "DDG: "] 
  "1000462" -> "1000469"  [ label = "DDG: i"] 
  "1000440" -> "1000469"  [ label = "DDG: "] 
  "1000462" -> "1000470"  [ label = "DDG: i"] 
  "1000440" -> "1000470"  [ label = "DDG: "] 
  "1000462" -> "1000462"  [ label = "CDG: "] 
  "1000462" -> "1000469"  [ label = "CDG: "] 
  "1000462" -> "1000465"  [ label = "CDG: "] 
  "1000462" -> "1000470"  [ label = "CDG: "] 
  "1000462" -> "1000468"  [ label = "CDG: "] 
  "1000479" -> "1000485"  [ label = "CDG: "] 
  "1000479" -> "1000479"  [ label = "CDG: "] 
  "1000479" -> "1000482"  [ label = "CDG: "] 
  "1000479" -> "1000487"  [ label = "CDG: "] 
}
