digraph "solve" {  
"1000381" [label = "(METHOD,solve)" ]
"1000435" [label = "(METHOD_RETURN,void)" ]
"1000384" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000432" [label = "(<operator>.assignment,fin=0)" ]
"1000390" [label = "(<operator>.assignment,i=0)" ]
"1000393" [label = "(<operator>.lessThan,i<n)" ]
"1000396" [label = "(<operator>.postIncrement,i++)" ]
"1000398" [label = "(<operator>.arithmeticShiftRight,cin>>a[i])" ]
"1000406" [label = "(<operator>.assignment,j=0)" ]
"1000409" [label = "(<operator>.lessThan,j<n)" ]
"1000412" [label = "(<operator>.postIncrement,j++)" ]
"1000417" [label = "(<operator>.assignment,i=0)" ]
"1000420" [label = "(<operator>.lessThan,i<61)" ]
"1000423" [label = "(<operator>.postIncrement,i++)" ]
"1000427" [label = "(<operator>.postIncrement,temp[i]++)" ]
"1000400" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000428" [label = "(<operator>.indirectIndexAccess,temp[i])" ]
  "1000384" -> "1000435"  [ label = "DDG: cin"] 
  "1000384" -> "1000435"  [ label = "DDG: cin>>n"] 
  "1000393" -> "1000435"  [ label = "DDG: i"] 
  "1000393" -> "1000435"  [ label = "DDG: i<n"] 
  "1000409" -> "1000435"  [ label = "DDG: j"] 
  "1000409" -> "1000435"  [ label = "DDG: n"] 
  "1000409" -> "1000435"  [ label = "DDG: j<n"] 
  "1000432" -> "1000435"  [ label = "DDG: fin"] 
  "1000420" -> "1000435"  [ label = "DDG: i"] 
  "1000420" -> "1000435"  [ label = "DDG: i<61"] 
  "1000427" -> "1000435"  [ label = "DDG: temp[i]"] 
  "1000398" -> "1000435"  [ label = "DDG: cin"] 
  "1000398" -> "1000435"  [ label = "DDG: a[i]"] 
  "1000398" -> "1000435"  [ label = "DDG: cin>>a[i]"] 
  "1000381" -> "1000432"  [ label = "DDG: "] 
  "1000381" -> "1000384"  [ label = "DDG: "] 
  "1000381" -> "1000390"  [ label = "DDG: "] 
  "1000381" -> "1000406"  [ label = "DDG: "] 
  "1000390" -> "1000393"  [ label = "DDG: i"] 
  "1000396" -> "1000393"  [ label = "DDG: i"] 
  "1000381" -> "1000393"  [ label = "DDG: "] 
  "1000384" -> "1000393"  [ label = "DDG: n"] 
  "1000393" -> "1000396"  [ label = "DDG: i"] 
  "1000381" -> "1000396"  [ label = "DDG: "] 
  "1000384" -> "1000398"  [ label = "DDG: cin"] 
  "1000381" -> "1000398"  [ label = "DDG: "] 
  "1000406" -> "1000409"  [ label = "DDG: j"] 
  "1000412" -> "1000409"  [ label = "DDG: j"] 
  "1000381" -> "1000409"  [ label = "DDG: "] 
  "1000393" -> "1000409"  [ label = "DDG: n"] 
  "1000409" -> "1000412"  [ label = "DDG: j"] 
  "1000381" -> "1000412"  [ label = "DDG: "] 
  "1000381" -> "1000417"  [ label = "DDG: "] 
  "1000417" -> "1000420"  [ label = "DDG: i"] 
  "1000423" -> "1000420"  [ label = "DDG: i"] 
  "1000381" -> "1000420"  [ label = "DDG: "] 
  "1000420" -> "1000423"  [ label = "DDG: i"] 
  "1000381" -> "1000423"  [ label = "DDG: "] 
  "1000393" -> "1000398"  [ label = "CDG: "] 
  "1000393" -> "1000393"  [ label = "CDG: "] 
  "1000393" -> "1000396"  [ label = "CDG: "] 
  "1000393" -> "1000400"  [ label = "CDG: "] 
  "1000409" -> "1000420"  [ label = "CDG: "] 
  "1000409" -> "1000412"  [ label = "CDG: "] 
  "1000409" -> "1000409"  [ label = "CDG: "] 
  "1000409" -> "1000417"  [ label = "CDG: "] 
  "1000420" -> "1000420"  [ label = "CDG: "] 
  "1000420" -> "1000427"  [ label = "CDG: "] 
  "1000420" -> "1000423"  [ label = "CDG: "] 
  "1000420" -> "1000428"  [ label = "CDG: "] 
}
