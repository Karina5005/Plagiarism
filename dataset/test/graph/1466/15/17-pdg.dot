digraph "main" {  
"1000763" [label = "(METHOD,main)" ]
"1000862" [label = "(METHOD_RETURN,int)" ]
"1000765" [label = "(ios::sync_with_stdio,ios::sync_with_stdio(false))" ]
"1000767" [label = "(cin.tie,cin.tie(0))" ]
"1000769" [label = "(freopen,freopen(\"input.txt\", \"r\" ,stdin))" ]
"1000773" [label = "(freopen,freopen(\"output.txt\", \"w\" ,stdout))" ]
"1000778" [label = "(<operator>.assignment,t = 1)" ]
"1000781" [label = "(<operator>.arithmeticShiftRight,cin>>t)" ]
"1000785" [label = "(<operator>.postDecrement,t--)" ]
"1000789" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000857" [label = "(<operator>.shiftLeft,cout<<st.size()<<endl)" ]
"1000796" [label = "(<operator>.assignment,i=0)" ]
"1000799" [label = "(<operator>.lessThan,i<n)" ]
"1000802" [label = "(<operator>.postIncrement,i++)" ]
"1000813" [label = "(<operator>.assignment,i=0)" ]
"1000816" [label = "(<operator>.lessThan,i<n)" ]
"1000819" [label = "(<operator>.postIncrement,i++)" ]
"1000805" [label = "(<operator>.arithmeticShiftRight,cin>>arr[i])" ]
"1000859" [label = "(<operator>.shiftLeft,st.size()<<endl)" ]
"1000823" [label = "(<operator>.equals,mp[arr[i]]==0)" ]
"1000831" [label = "(st.insert,st.insert(arr[i]))" ]
"1000835" [label = "(<operator>.postIncrement,mp[arr[i]]++)" ]
"1000843" [label = "(st.insert,st.insert(arr[i]+1))" ]
"1000849" [label = "(<operator>.postIncrement,mp[arr[i]+1]++)" ]
"1000844" [label = "(<operator>.addition,arr[i]+1)" ]
"1000852" [label = "(<operator>.addition,arr[i]+1)" ]
"1000860" [label = "(st.size,st.size())" ]
"1000807" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000824" [label = "(<operator>.indirectIndexAccess,mp[arr[i]])" ]
"1000826" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000832" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000836" [label = "(<operator>.indirectIndexAccess,mp[arr[i]])" ]
"1000838" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000850" [label = "(<operator>.indirectIndexAccess,mp[arr[i]+1])" ]
"1000845" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000853" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
  "1000765" -> "1000862"  [ label = "DDG: ios::sync_with_stdio(false)"] 
  "1000767" -> "1000862"  [ label = "DDG: cin.tie(0)"] 
  "1000769" -> "1000862"  [ label = "DDG: freopen(\"input.txt\", \"r\" ,stdin)"] 
  "1000773" -> "1000862"  [ label = "DDG: freopen(\"output.txt\", \"w\" ,stdout)"] 
  "1000781" -> "1000862"  [ label = "DDG: cin"] 
  "1000781" -> "1000862"  [ label = "DDG: cin>>t"] 
  "1000785" -> "1000862"  [ label = "DDG: t"] 
  "1000789" -> "1000862"  [ label = "DDG: cin"] 
  "1000789" -> "1000862"  [ label = "DDG: cin>>n"] 
  "1000816" -> "1000862"  [ label = "DDG: i"] 
  "1000816" -> "1000862"  [ label = "DDG: n"] 
  "1000816" -> "1000862"  [ label = "DDG: i<n"] 
  "1000859" -> "1000862"  [ label = "DDG: st.size()"] 
  "1000857" -> "1000862"  [ label = "DDG: st.size()<<endl"] 
  "1000857" -> "1000862"  [ label = "DDG: cout<<st.size()<<endl"] 
  "1000823" -> "1000862"  [ label = "DDG: mp[arr[i]]"] 
  "1000823" -> "1000862"  [ label = "DDG: mp[arr[i]]==0"] 
  "1000843" -> "1000862"  [ label = "DDG: st.insert(arr[i]+1)"] 
  "1000852" -> "1000862"  [ label = "DDG: arr[i]"] 
  "1000849" -> "1000862"  [ label = "DDG: mp[arr[i]+1]"] 
  "1000831" -> "1000862"  [ label = "DDG: arr[i]"] 
  "1000831" -> "1000862"  [ label = "DDG: st.insert(arr[i])"] 
  "1000835" -> "1000862"  [ label = "DDG: mp[arr[i]]"] 
  "1000805" -> "1000862"  [ label = "DDG: cin"] 
  "1000805" -> "1000862"  [ label = "DDG: arr[i]"] 
  "1000805" -> "1000862"  [ label = "DDG: cin>>arr[i]"] 
  "1000857" -> "1000862"  [ label = "DDG: cout"] 
  "1000859" -> "1000862"  [ label = "DDG: endl"] 
  "1000765" -> "1000862"  [ label = "DDG: false"] 
  "1000769" -> "1000862"  [ label = "DDG: stdin"] 
  "1000773" -> "1000862"  [ label = "DDG: stdout"] 
  "1000763" -> "1000778"  [ label = "DDG: "] 
  "1000763" -> "1000765"  [ label = "DDG: "] 
  "1000763" -> "1000767"  [ label = "DDG: "] 
  "1000763" -> "1000769"  [ label = "DDG: "] 
  "1000763" -> "1000773"  [ label = "DDG: "] 
  "1000763" -> "1000781"  [ label = "DDG: "] 
  "1000778" -> "1000781"  [ label = "DDG: t"] 
  "1000781" -> "1000785"  [ label = "DDG: t"] 
  "1000763" -> "1000785"  [ label = "DDG: "] 
  "1000781" -> "1000789"  [ label = "DDG: cin"] 
  "1000805" -> "1000789"  [ label = "DDG: cin"] 
  "1000763" -> "1000789"  [ label = "DDG: "] 
  "1000816" -> "1000789"  [ label = "DDG: n"] 
  "1000763" -> "1000796"  [ label = "DDG: "] 
  "1000763" -> "1000813"  [ label = "DDG: "] 
  "1000763" -> "1000857"  [ label = "DDG: "] 
  "1000859" -> "1000857"  [ label = "DDG: st.size()"] 
  "1000859" -> "1000857"  [ label = "DDG: endl"] 
  "1000796" -> "1000799"  [ label = "DDG: i"] 
  "1000802" -> "1000799"  [ label = "DDG: i"] 
  "1000763" -> "1000799"  [ label = "DDG: "] 
  "1000789" -> "1000799"  [ label = "DDG: n"] 
  "1000799" -> "1000802"  [ label = "DDG: i"] 
  "1000763" -> "1000802"  [ label = "DDG: "] 
  "1000813" -> "1000816"  [ label = "DDG: i"] 
  "1000819" -> "1000816"  [ label = "DDG: i"] 
  "1000763" -> "1000816"  [ label = "DDG: "] 
  "1000799" -> "1000816"  [ label = "DDG: n"] 
  "1000816" -> "1000819"  [ label = "DDG: i"] 
  "1000763" -> "1000819"  [ label = "DDG: "] 
  "1000763" -> "1000859"  [ label = "DDG: "] 
  "1000789" -> "1000805"  [ label = "DDG: cin"] 
  "1000763" -> "1000805"  [ label = "DDG: "] 
  "1000831" -> "1000805"  [ label = "DDG: arr[i]"] 
  "1000835" -> "1000823"  [ label = "DDG: mp[arr[i]]"] 
  "1000763" -> "1000823"  [ label = "DDG: "] 
  "1000805" -> "1000831"  [ label = "DDG: arr[i]"] 
  "1000823" -> "1000835"  [ label = "DDG: mp[arr[i]]"] 
  "1000763" -> "1000843"  [ label = "DDG: "] 
  "1000831" -> "1000843"  [ label = "DDG: arr[i]"] 
  "1000805" -> "1000843"  [ label = "DDG: arr[i]"] 
  "1000831" -> "1000844"  [ label = "DDG: arr[i]"] 
  "1000805" -> "1000844"  [ label = "DDG: arr[i]"] 
  "1000763" -> "1000844"  [ label = "DDG: "] 
  "1000831" -> "1000852"  [ label = "DDG: arr[i]"] 
  "1000805" -> "1000852"  [ label = "DDG: arr[i]"] 
  "1000763" -> "1000852"  [ label = "DDG: "] 
  "1000785" -> "1000859"  [ label = "CDG: "] 
  "1000785" -> "1000785"  [ label = "CDG: "] 
  "1000785" -> "1000789"  [ label = "CDG: "] 
  "1000785" -> "1000799"  [ label = "CDG: "] 
  "1000785" -> "1000816"  [ label = "CDG: "] 
  "1000785" -> "1000796"  [ label = "CDG: "] 
  "1000785" -> "1000860"  [ label = "CDG: "] 
  "1000785" -> "1000813"  [ label = "CDG: "] 
  "1000785" -> "1000857"  [ label = "CDG: "] 
  "1000799" -> "1000807"  [ label = "CDG: "] 
  "1000799" -> "1000802"  [ label = "CDG: "] 
  "1000799" -> "1000799"  [ label = "CDG: "] 
  "1000799" -> "1000805"  [ label = "CDG: "] 
  "1000816" -> "1000819"  [ label = "CDG: "] 
  "1000816" -> "1000823"  [ label = "CDG: "] 
  "1000816" -> "1000816"  [ label = "CDG: "] 
  "1000816" -> "1000824"  [ label = "CDG: "] 
  "1000816" -> "1000826"  [ label = "CDG: "] 
  "1000823" -> "1000850"  [ label = "CDG: "] 
  "1000823" -> "1000832"  [ label = "CDG: "] 
  "1000823" -> "1000849"  [ label = "CDG: "] 
  "1000823" -> "1000853"  [ label = "CDG: "] 
  "1000823" -> "1000836"  [ label = "CDG: "] 
  "1000823" -> "1000838"  [ label = "CDG: "] 
  "1000823" -> "1000845"  [ label = "CDG: "] 
  "1000823" -> "1000831"  [ label = "CDG: "] 
  "1000823" -> "1000835"  [ label = "CDG: "] 
  "1000823" -> "1000844"  [ label = "CDG: "] 
  "1000823" -> "1000852"  [ label = "CDG: "] 
  "1000823" -> "1000843"  [ label = "CDG: "] 
}
