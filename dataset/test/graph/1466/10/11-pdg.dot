digraph "isPalindrome" {  
"1000388" [label = "(METHOD,isPalindrome)" ]
"1000428" [label = "(METHOD_RETURN,bool)" ]
"1000389" [label = "(PARAM,char str[])" ]
"1000392" [label = "(<operator>.assignment,l = 0)" ]
"1000396" [label = "(<operator>.assignment,h = strlen(str) - 1)" ]
"1000403" [label = "(<operator>.assignment,flag = true)" ]
"1000426" [label = "(RETURN,return flag;,return flag;)" ]
"1000407" [label = "(<operator>.greaterThan,h > l)" ]
"1000427" [label = "(IDENTIFIER,flag,return flag;)" ]
"1000398" [label = "(<operator>.subtraction,strlen(str) - 1)" ]
"1000399" [label = "(strlen,strlen(str))" ]
"1000412" [label = "(<operator>.notEquals,str[l++] != str[h--])" ]
"1000422" [label = "(<operator>.assignment,flag = false)" ]
"1000415" [label = "(<operator>.postIncrement,l++)" ]
"1000419" [label = "(<operator>.postDecrement,h--)" ]
"1000413" [label = "(<operator>.indirectIndexAccess,str[l++])" ]
"1000417" [label = "(<operator>.indirectIndexAccess,str[h--])" ]
  "1000426" -> "1000428"  [ label = "DDG: <RET>"] 
  "1000389" -> "1000428"  [ label = "DDG: str"] 
  "1000399" -> "1000428"  [ label = "DDG: str"] 
  "1000398" -> "1000428"  [ label = "DDG: strlen(str)"] 
  "1000396" -> "1000428"  [ label = "DDG: strlen(str) - 1"] 
  "1000403" -> "1000428"  [ label = "DDG: flag"] 
  "1000407" -> "1000428"  [ label = "DDG: h"] 
  "1000407" -> "1000428"  [ label = "DDG: l"] 
  "1000407" -> "1000428"  [ label = "DDG: h > l"] 
  "1000415" -> "1000428"  [ label = "DDG: l"] 
  "1000412" -> "1000428"  [ label = "DDG: str[l++]"] 
  "1000419" -> "1000428"  [ label = "DDG: h"] 
  "1000412" -> "1000428"  [ label = "DDG: str[h--]"] 
  "1000412" -> "1000428"  [ label = "DDG: str[l++] != str[h--]"] 
  "1000422" -> "1000428"  [ label = "DDG: flag"] 
  "1000422" -> "1000428"  [ label = "DDG: false"] 
  "1000403" -> "1000428"  [ label = "DDG: true"] 
  "1000388" -> "1000389"  [ label = "DDG: "] 
  "1000388" -> "1000392"  [ label = "DDG: "] 
  "1000398" -> "1000396"  [ label = "DDG: strlen(str)"] 
  "1000398" -> "1000396"  [ label = "DDG: 1"] 
  "1000388" -> "1000403"  [ label = "DDG: "] 
  "1000427" -> "1000426"  [ label = "DDG: flag"] 
  "1000403" -> "1000426"  [ label = "DDG: flag"] 
  "1000422" -> "1000426"  [ label = "DDG: flag"] 
  "1000388" -> "1000396"  [ label = "DDG: "] 
  "1000388" -> "1000427"  [ label = "DDG: "] 
  "1000399" -> "1000398"  [ label = "DDG: str"] 
  "1000388" -> "1000398"  [ label = "DDG: "] 
  "1000396" -> "1000407"  [ label = "DDG: h"] 
  "1000419" -> "1000407"  [ label = "DDG: h"] 
  "1000388" -> "1000407"  [ label = "DDG: "] 
  "1000392" -> "1000407"  [ label = "DDG: l"] 
  "1000415" -> "1000407"  [ label = "DDG: l"] 
  "1000389" -> "1000399"  [ label = "DDG: str"] 
  "1000388" -> "1000399"  [ label = "DDG: "] 
  "1000399" -> "1000412"  [ label = "DDG: str"] 
  "1000389" -> "1000412"  [ label = "DDG: str"] 
  "1000388" -> "1000422"  [ label = "DDG: "] 
  "1000407" -> "1000415"  [ label = "DDG: l"] 
  "1000388" -> "1000415"  [ label = "DDG: "] 
  "1000407" -> "1000419"  [ label = "DDG: h"] 
  "1000388" -> "1000419"  [ label = "DDG: "] 
  "1000407" -> "1000417"  [ label = "CDG: "] 
  "1000407" -> "1000415"  [ label = "CDG: "] 
  "1000407" -> "1000413"  [ label = "CDG: "] 
  "1000407" -> "1000412"  [ label = "CDG: "] 
  "1000407" -> "1000419"  [ label = "CDG: "] 
  "1000412" -> "1000407"  [ label = "CDG: "] 
  "1000412" -> "1000422"  [ label = "CDG: "] 
}
