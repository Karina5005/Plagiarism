digraph "main" {  
"1000101" [label = "(METHOD,main)" ]
"1000149" [label = "(METHOD_RETURN,int)" ]
"1000103" [label = "(ios_base::sync_with_stdio,ios_base::sync_with_stdio(false))" ]
"1000105" [label = "(cin.tie,cin.tie(NULL))" ]
"1000107" [label = "(ri,ri(t))" ]
"1000147" [label = "(RETURN,return 0;,return 0;)" ]
"1000110" [label = "(<operator>.postDecrement,t--)" ]
"1000148" [label = "(LITERAL,0,return 0;)" ]
"1000113" [label = "(ri,ri(n))" ]
"1000115" [label = "(IDENTIFIER,makearr,)" ]
"1000142" [label = "(<operator>.shiftLeft,cout<<uniq.size()<<\"\n\")" ]
"1000121" [label = "(<operator>.assignment,tmp=arr[j]-arr[i])" ]
"1000138" [label = "(<operator>.postIncrement,apper[tmp]++)" ]
"1000144" [label = "(<operator>.shiftLeft,uniq.size()<<\"\n\")" ]
"1000131" [label = "(<operator>.equals,apper[tmp]==0)" ]
"1000136" [label = "(uniq.pb,uniq.pb(tmp))" ]
"1000123" [label = "(<operator>.subtraction,arr[j]-arr[i])" ]
"1000145" [label = "(uniq.size,uniq.size())" ]
"1000139" [label = "(<operator>.indirectIndexAccess,apper[tmp])" ]
"1000124" [label = "(<operator>.indirectIndexAccess,arr[j])" ]
"1000127" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000132" [label = "(<operator>.indirectIndexAccess,apper[tmp])" ]
  "1000147" -> "1000149"  [ label = "DDG: <RET>"] 
  "1000103" -> "1000149"  [ label = "DDG: ios_base::sync_with_stdio(false)"] 
  "1000105" -> "1000149"  [ label = "DDG: cin.tie(NULL)"] 
  "1000107" -> "1000149"  [ label = "DDG: ri(t)"] 
  "1000110" -> "1000149"  [ label = "DDG: t"] 
  "1000113" -> "1000149"  [ label = "DDG: ri(n)"] 
  "1000121" -> "1000149"  [ label = "DDG: tmp"] 
  "1000123" -> "1000149"  [ label = "DDG: arr[j]"] 
  "1000123" -> "1000149"  [ label = "DDG: arr[i]"] 
  "1000121" -> "1000149"  [ label = "DDG: arr[j]-arr[i]"] 
  "1000131" -> "1000149"  [ label = "DDG: apper[tmp]==0"] 
  "1000136" -> "1000149"  [ label = "DDG: tmp"] 
  "1000136" -> "1000149"  [ label = "DDG: uniq.pb(tmp)"] 
  "1000138" -> "1000149"  [ label = "DDG: apper[tmp]"] 
  "1000144" -> "1000149"  [ label = "DDG: uniq.size()"] 
  "1000142" -> "1000149"  [ label = "DDG: uniq.size()<<\"\n\""] 
  "1000142" -> "1000149"  [ label = "DDG: cout<<uniq.size()<<\"\n\""] 
  "1000142" -> "1000149"  [ label = "DDG: cout"] 
  "1000103" -> "1000149"  [ label = "DDG: false"] 
  "1000113" -> "1000149"  [ label = "DDG: n"] 
  "1000105" -> "1000149"  [ label = "DDG: NULL"] 
  "1000148" -> "1000147"  [ label = "DDG: 0"] 
  "1000101" -> "1000147"  [ label = "DDG: "] 
  "1000101" -> "1000103"  [ label = "DDG: "] 
  "1000101" -> "1000105"  [ label = "DDG: "] 
  "1000101" -> "1000107"  [ label = "DDG: "] 
  "1000101" -> "1000148"  [ label = "DDG: "] 
  "1000107" -> "1000110"  [ label = "DDG: t"] 
  "1000101" -> "1000110"  [ label = "DDG: "] 
  "1000101" -> "1000115"  [ label = "DDG: "] 
  "1000101" -> "1000113"  [ label = "DDG: "] 
  "1000101" -> "1000142"  [ label = "DDG: "] 
  "1000144" -> "1000142"  [ label = "DDG: \"\n\""] 
  "1000144" -> "1000142"  [ label = "DDG: uniq.size()"] 
  "1000123" -> "1000121"  [ label = "DDG: arr[j]"] 
  "1000123" -> "1000121"  [ label = "DDG: arr[i]"] 
  "1000101" -> "1000144"  [ label = "DDG: "] 
  "1000101" -> "1000121"  [ label = "DDG: "] 
  "1000131" -> "1000138"  [ label = "DDG: apper[tmp]"] 
  "1000138" -> "1000131"  [ label = "DDG: apper[tmp]"] 
  "1000101" -> "1000131"  [ label = "DDG: "] 
  "1000121" -> "1000136"  [ label = "DDG: tmp"] 
  "1000101" -> "1000136"  [ label = "DDG: "] 
  "1000110" -> "1000110"  [ label = "CDG: "] 
  "1000110" -> "1000121"  [ label = "CDG: "] 
  "1000110" -> "1000131"  [ label = "CDG: "] 
  "1000110" -> "1000113"  [ label = "CDG: "] 
  "1000110" -> "1000127"  [ label = "CDG: "] 
  "1000110" -> "1000132"  [ label = "CDG: "] 
  "1000110" -> "1000142"  [ label = "CDG: "] 
  "1000110" -> "1000123"  [ label = "CDG: "] 
  "1000110" -> "1000124"  [ label = "CDG: "] 
  "1000110" -> "1000145"  [ label = "CDG: "] 
  "1000110" -> "1000139"  [ label = "CDG: "] 
  "1000110" -> "1000144"  [ label = "CDG: "] 
  "1000110" -> "1000138"  [ label = "CDG: "] 
  "1000131" -> "1000136"  [ label = "CDG: "] 
}
