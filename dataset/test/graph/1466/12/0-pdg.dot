digraph "solve" {  
"1000101" [label = "(METHOD,solve)" ]
"1000149" [label = "(METHOD_RETURN,void)" ]
"1000104" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000108" [label = "(<operator>.arithmeticShiftRight,cin >> a[i])" ]
"1000140" [label = "(<operator>.shiftLeft,cout << cache.size() << &#39)" ]
"1000146" [label = "(<operator>.and,n&#39)" ]
"1000116" [label = "(<operator>.notEquals,cache.find(a[i]) != cache.end())" ]
"1000142" [label = "(<operator>.shiftLeft,cache.size() << &#39)" ]
"1000136" [label = "(cache.insert,cache.insert(a[i]))" ]
"1000117" [label = "(cache.find,cache.find(a[i]))" ]
"1000124" [label = "(<operator>.equals,cache.find(++a[i]) == cache.end())" ]
"1000131" [label = "(cache.insert,cache.insert(a[i]))" ]
"1000125" [label = "(cache.find,cache.find(++a[i]))" ]
"1000126" [label = "(<operator>.preIncrement,++a[i])" ]
"1000137" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000130" [label = "(cache.end,cache.end())" ]
"1000132" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000127" [label = "(<operator>.indirectIndexAccess,a[i])" ]
  "1000104" -> "1000149"  [ label = "DDG: cin >> n"] 
  "1000108" -> "1000149"  [ label = "DDG: cin"] 
  "1000108" -> "1000149"  [ label = "DDG: cin >> a[i]"] 
  "1000116" -> "1000149"  [ label = "DDG: cache.find(a[i])"] 
  "1000116" -> "1000149"  [ label = "DDG: cache.end()"] 
  "1000116" -> "1000149"  [ label = "DDG: cache.find(a[i]) != cache.end()"] 
  "1000136" -> "1000149"  [ label = "DDG: a[i]"] 
  "1000136" -> "1000149"  [ label = "DDG: cache.insert(a[i])"] 
  "1000126" -> "1000149"  [ label = "DDG: a[i]"] 
  "1000124" -> "1000149"  [ label = "DDG: cache.find(++a[i])"] 
  "1000124" -> "1000149"  [ label = "DDG: cache.end()"] 
  "1000124" -> "1000149"  [ label = "DDG: cache.find(++a[i]) == cache.end()"] 
  "1000131" -> "1000149"  [ label = "DDG: a[i]"] 
  "1000131" -> "1000149"  [ label = "DDG: cache.insert(a[i])"] 
  "1000142" -> "1000149"  [ label = "DDG: cache.size()"] 
  "1000142" -> "1000149"  [ label = "DDG: &#39"] 
  "1000140" -> "1000149"  [ label = "DDG: cache.size() << &#39"] 
  "1000140" -> "1000149"  [ label = "DDG: cout << cache.size() << &#39"] 
  "1000146" -> "1000149"  [ label = "DDG: n"] 
  "1000146" -> "1000149"  [ label = "DDG: n&#39"] 
  "1000140" -> "1000149"  [ label = "DDG: cout"] 
  "1000101" -> "1000104"  [ label = "DDG: "] 
  "1000104" -> "1000108"  [ label = "DDG: cin"] 
  "1000101" -> "1000108"  [ label = "DDG: "] 
  "1000101" -> "1000140"  [ label = "DDG: "] 
  "1000142" -> "1000140"  [ label = "DDG: cache.size()"] 
  "1000142" -> "1000140"  [ label = "DDG: &#39"] 
  "1000104" -> "1000146"  [ label = "DDG: n"] 
  "1000101" -> "1000146"  [ label = "DDG: "] 
  "1000101" -> "1000142"  [ label = "DDG: "] 
  "1000117" -> "1000116"  [ label = "DDG: a[i]"] 
  "1000101" -> "1000116"  [ label = "DDG: "] 
  "1000108" -> "1000117"  [ label = "DDG: a[i]"] 
  "1000117" -> "1000136"  [ label = "DDG: a[i]"] 
  "1000101" -> "1000124"  [ label = "DDG: "] 
  "1000126" -> "1000131"  [ label = "DDG: a[i]"] 
  "1000126" -> "1000125"  [ label = "DDG: a[i]"] 
  "1000117" -> "1000126"  [ label = "DDG: a[i]"] 
  "1000116" -> "1000137"  [ label = "CDG: "] 
  "1000116" -> "1000124"  [ label = "CDG: "] 
  "1000116" -> "1000125"  [ label = "CDG: "] 
  "1000116" -> "1000130"  [ label = "CDG: "] 
  "1000116" -> "1000136"  [ label = "CDG: "] 
  "1000116" -> "1000127"  [ label = "CDG: "] 
  "1000116" -> "1000126"  [ label = "CDG: "] 
  "1000124" -> "1000132"  [ label = "CDG: "] 
  "1000124" -> "1000131"  [ label = "CDG: "] 
}
