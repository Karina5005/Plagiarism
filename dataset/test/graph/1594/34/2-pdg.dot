digraph "solve" {  
"1000138" [label = "(METHOD,solve)" ]
"1000299" [label = "(METHOD_RETURN,void)" ]
"1000147" [label = "(v[i].clear,v[i].clear())" ]
"1000174" [label = "(<operator>.assignment,ans = 0)" ]
"1000178" [label = "(<operator>.assignment,OK = 1)" ]
"1000297" [label = "(prin,prin(ans))" ]
"1000143" [label = "(scf,scf(n))" ]
"1000145" [label = "(scf,scf(m))" ]
"1000157" [label = "(<operator>.arithmeticShiftRight,cin>>type)" ]
"1000183" [label = "(<operator>.assignment,i=1)" ]
"1000186" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000189" [label = "(<operator>.postIncrement,i++)" ]
"1000291" [label = "(<operator>.logicalNot,!OK)" ]
"1000293" [label = "(<operator>.assignment,ans = -1)" ]
"1000153" [label = "(scf,scf(i))" ]
"1000155" [label = "(scf,scf(j))" ]
"1000161" [label = "(<operator>.equals,type == \"imposter\")" ]
"1000193" [label = "(<operator>.assignment,group1 = 0)" ]
"1000197" [label = "(<operator>.assignment,group2 = 0)" ]
"1000285" [label = "(<operator>.assignmentPlus,ans+=max(group1,group2))" ]
"1000201" [label = "(<operator>.equals,col[i] == -1)" ]
"1000295" [label = "(<operator>.minus,-1)" ]
"1000208" [label = "(q.push,q.push(i))" ]
"1000210" [label = "(<operator>.assignment,col[i] = 1)" ]
"1000287" [label = "(max,max(group1,group2))" ]
"1000205" [label = "(<operator>.minus,-1)" ]
"1000216" [label = "(<operator>.logicalNot,!q.empty())" ]
"1000220" [label = "(<operator>.assignment,x = q.front())" ]
"1000223" [label = "(<operator>.assignmentPlus,group1+=(col[x]==1))" ]
"1000230" [label = "(<operator>.assignmentPlus,group2+=(col[x]==2))" ]
"1000237" [label = "(q.pop,q.pop())" ]
"1000241" [label = "(<operator>.assignment,ch = it.F)" ]
"1000247" [label = "(<operator>.assignment,type = it.S)" ]
"1000225" [label = "(<operator>.equals,col[x]==1)" ]
"1000232" [label = "(<operator>.equals,col[x]==2)" ]
"1000253" [label = "(<operator>.greaterThan,col[ch]>0)" ]
"1000259" [label = "(<operator>.assignment,OK = 0)" ]
"1000262" [label = "(<operator>.assignment,OK = 0)" ]
"1000267" [label = "(<operator>.assignment,col[ch] = (type==1)? (3 - col[x]): col[x])" ]
"1000283" [label = "(q.push,q.push(ch))" ]
"1000271" [label = "(<operator>.conditional,(type==1)? (3 - col[x]): col[x])" ]
"1000272" [label = "(<operator>.equals,type==1)" ]
"1000275" [label = "(<operator>.subtraction,3 - col[x])" ]
"1000202" [label = "(<operator>.indirectIndexAccess,col[i])" ]
"1000211" [label = "(<operator>.indirectIndexAccess,col[i])" ]
"1000217" [label = "(q.empty,q.empty())" ]
"1000222" [label = "(q.front,q.front())" ]
"1000226" [label = "(<operator>.indirectIndexAccess,col[x])" ]
"1000233" [label = "(<operator>.indirectIndexAccess,col[x])" ]
"1000243" [label = "(<operator>.fieldAccess,it.F)" ]
"1000249" [label = "(<operator>.fieldAccess,it.S)" ]
"1000245" [label = "(FIELD_IDENTIFIER,F,F)" ]
"1000251" [label = "(FIELD_IDENTIFIER,S,S)" ]
"1000254" [label = "(<operator>.indirectIndexAccess,col[ch])" ]
"1000268" [label = "(<operator>.indirectIndexAccess,col[ch])" ]
"1000280" [label = "(<operator>.indirectIndexAccess,col[x])" ]
"1000277" [label = "(<operator>.indirectIndexAccess,col[x])" ]
  "1000143" -> "1000299"  [ label = "DDG: scf(n)"] 
  "1000145" -> "1000299"  [ label = "DDG: m"] 
  "1000145" -> "1000299"  [ label = "DDG: scf(m)"] 
  "1000147" -> "1000299"  [ label = "DDG: v[i].clear()"] 
  "1000153" -> "1000299"  [ label = "DDG: scf(i)"] 
  "1000155" -> "1000299"  [ label = "DDG: j"] 
  "1000155" -> "1000299"  [ label = "DDG: scf(j)"] 
  "1000157" -> "1000299"  [ label = "DDG: cin>>type"] 
  "1000161" -> "1000299"  [ label = "DDG: type"] 
  "1000161" -> "1000299"  [ label = "DDG: type == \"imposter\""] 
  "1000186" -> "1000299"  [ label = "DDG: i"] 
  "1000186" -> "1000299"  [ label = "DDG: n"] 
  "1000186" -> "1000299"  [ label = "DDG: i<=n"] 
  "1000291" -> "1000299"  [ label = "DDG: OK"] 
  "1000291" -> "1000299"  [ label = "DDG: !OK"] 
  "1000293" -> "1000299"  [ label = "DDG: -1"] 
  "1000297" -> "1000299"  [ label = "DDG: ans"] 
  "1000297" -> "1000299"  [ label = "DDG: prin(ans)"] 
  "1000201" -> "1000299"  [ label = "DDG: col[i]"] 
  "1000201" -> "1000299"  [ label = "DDG: -1"] 
  "1000201" -> "1000299"  [ label = "DDG: col[i] == -1"] 
  "1000208" -> "1000299"  [ label = "DDG: q.push(i)"] 
  "1000210" -> "1000299"  [ label = "DDG: col[i]"] 
  "1000216" -> "1000299"  [ label = "DDG: q.empty()"] 
  "1000216" -> "1000299"  [ label = "DDG: !q.empty()"] 
  "1000287" -> "1000299"  [ label = "DDG: group1"] 
  "1000287" -> "1000299"  [ label = "DDG: group2"] 
  "1000285" -> "1000299"  [ label = "DDG: max(group1,group2)"] 
  "1000220" -> "1000299"  [ label = "DDG: x"] 
  "1000220" -> "1000299"  [ label = "DDG: q.front()"] 
  "1000223" -> "1000299"  [ label = "DDG: col[x]==1"] 
  "1000232" -> "1000299"  [ label = "DDG: col[x]"] 
  "1000230" -> "1000299"  [ label = "DDG: col[x]==2"] 
  "1000237" -> "1000299"  [ label = "DDG: q.pop()"] 
  "1000241" -> "1000299"  [ label = "DDG: ch"] 
  "1000241" -> "1000299"  [ label = "DDG: it.F"] 
  "1000247" -> "1000299"  [ label = "DDG: type"] 
  "1000247" -> "1000299"  [ label = "DDG: it.S"] 
  "1000253" -> "1000299"  [ label = "DDG: col[ch]"] 
  "1000253" -> "1000299"  [ label = "DDG: col[ch]>0"] 
  "1000267" -> "1000299"  [ label = "DDG: col[ch]"] 
  "1000272" -> "1000299"  [ label = "DDG: type"] 
  "1000271" -> "1000299"  [ label = "DDG: type==1"] 
  "1000271" -> "1000299"  [ label = "DDG: col[x]"] 
  "1000271" -> "1000299"  [ label = "DDG: 3 - col[x]"] 
  "1000267" -> "1000299"  [ label = "DDG: (type==1)? (3 - col[x]): col[x]"] 
  "1000283" -> "1000299"  [ label = "DDG: ch"] 
  "1000283" -> "1000299"  [ label = "DDG: q.push(ch)"] 
  "1000157" -> "1000299"  [ label = "DDG: cin"] 
  "1000138" -> "1000147"  [ label = "DDG: "] 
  "1000138" -> "1000174"  [ label = "DDG: "] 
  "1000138" -> "1000178"  [ label = "DDG: "] 
  "1000138" -> "1000183"  [ label = "DDG: "] 
  "1000295" -> "1000293"  [ label = "DDG: 1"] 
  "1000174" -> "1000297"  [ label = "DDG: ans"] 
  "1000293" -> "1000297"  [ label = "DDG: ans"] 
  "1000285" -> "1000297"  [ label = "DDG: ans"] 
  "1000138" -> "1000297"  [ label = "DDG: "] 
  "1000138" -> "1000143"  [ label = "DDG: "] 
  "1000138" -> "1000145"  [ label = "DDG: "] 
  "1000138" -> "1000157"  [ label = "DDG: "] 
  "1000183" -> "1000186"  [ label = "DDG: i"] 
  "1000189" -> "1000186"  [ label = "DDG: i"] 
  "1000138" -> "1000186"  [ label = "DDG: "] 
  "1000143" -> "1000186"  [ label = "DDG: n"] 
  "1000186" -> "1000189"  [ label = "DDG: i"] 
  "1000208" -> "1000189"  [ label = "DDG: i"] 
  "1000138" -> "1000189"  [ label = "DDG: "] 
  "1000138" -> "1000193"  [ label = "DDG: "] 
  "1000138" -> "1000197"  [ label = "DDG: "] 
  "1000287" -> "1000285"  [ label = "DDG: group1"] 
  "1000287" -> "1000285"  [ label = "DDG: group2"] 
  "1000178" -> "1000291"  [ label = "DDG: OK"] 
  "1000262" -> "1000291"  [ label = "DDG: OK"] 
  "1000138" -> "1000291"  [ label = "DDG: "] 
  "1000138" -> "1000293"  [ label = "DDG: "] 
  "1000138" -> "1000153"  [ label = "DDG: "] 
  "1000138" -> "1000155"  [ label = "DDG: "] 
  "1000157" -> "1000161"  [ label = "DDG: type"] 
  "1000138" -> "1000161"  [ label = "DDG: "] 
  "1000174" -> "1000285"  [ label = "DDG: ans"] 
  "1000138" -> "1000285"  [ label = "DDG: "] 
  "1000138" -> "1000295"  [ label = "DDG: "] 
  "1000210" -> "1000201"  [ label = "DDG: col[i]"] 
  "1000205" -> "1000201"  [ label = "DDG: 1"] 
  "1000138" -> "1000210"  [ label = "DDG: "] 
  "1000193" -> "1000287"  [ label = "DDG: group1"] 
  "1000223" -> "1000287"  [ label = "DDG: group1"] 
  "1000138" -> "1000287"  [ label = "DDG: "] 
  "1000197" -> "1000287"  [ label = "DDG: group2"] 
  "1000230" -> "1000287"  [ label = "DDG: group2"] 
  "1000138" -> "1000205"  [ label = "DDG: "] 
  "1000186" -> "1000208"  [ label = "DDG: i"] 
  "1000138" -> "1000208"  [ label = "DDG: "] 
  "1000138" -> "1000216"  [ label = "DDG: "] 
  "1000138" -> "1000220"  [ label = "DDG: "] 
  "1000225" -> "1000223"  [ label = "DDG: col[x]"] 
  "1000225" -> "1000223"  [ label = "DDG: 1"] 
  "1000232" -> "1000230"  [ label = "DDG: 2"] 
  "1000232" -> "1000230"  [ label = "DDG: col[x]"] 
  "1000138" -> "1000237"  [ label = "DDG: "] 
  "1000193" -> "1000223"  [ label = "DDG: group1"] 
  "1000138" -> "1000223"  [ label = "DDG: "] 
  "1000197" -> "1000230"  [ label = "DDG: group2"] 
  "1000138" -> "1000230"  [ label = "DDG: "] 
  "1000232" -> "1000225"  [ label = "DDG: col[x]"] 
  "1000275" -> "1000225"  [ label = "DDG: col[x]"] 
  "1000138" -> "1000225"  [ label = "DDG: "] 
  "1000225" -> "1000232"  [ label = "DDG: col[x]"] 
  "1000138" -> "1000232"  [ label = "DDG: "] 
  "1000138" -> "1000241"  [ label = "DDG: "] 
  "1000138" -> "1000247"  [ label = "DDG: "] 
  "1000267" -> "1000253"  [ label = "DDG: col[ch]"] 
  "1000138" -> "1000253"  [ label = "DDG: "] 
  "1000138" -> "1000259"  [ label = "DDG: "] 
  "1000138" -> "1000262"  [ label = "DDG: "] 
  "1000232" -> "1000267"  [ label = "DDG: col[x]"] 
  "1000275" -> "1000267"  [ label = "DDG: col[x]"] 
  "1000275" -> "1000267"  [ label = "DDG: 3"] 
  "1000241" -> "1000283"  [ label = "DDG: ch"] 
  "1000138" -> "1000283"  [ label = "DDG: "] 
  "1000275" -> "1000271"  [ label = "DDG: 3"] 
  "1000275" -> "1000271"  [ label = "DDG: col[x]"] 
  "1000232" -> "1000271"  [ label = "DDG: col[x]"] 
  "1000247" -> "1000272"  [ label = "DDG: type"] 
  "1000138" -> "1000272"  [ label = "DDG: "] 
  "1000138" -> "1000275"  [ label = "DDG: "] 
  "1000232" -> "1000275"  [ label = "DDG: col[x]"] 
  "1000186" -> "1000285"  [ label = "CDG: "] 
  "1000186" -> "1000197"  [ label = "CDG: "] 
  "1000186" -> "1000186"  [ label = "CDG: "] 
  "1000186" -> "1000189"  [ label = "CDG: "] 
  "1000186" -> "1000205"  [ label = "CDG: "] 
  "1000186" -> "1000201"  [ label = "CDG: "] 
  "1000186" -> "1000202"  [ label = "CDG: "] 
  "1000186" -> "1000193"  [ label = "CDG: "] 
  "1000186" -> "1000287"  [ label = "CDG: "] 
  "1000291" -> "1000293"  [ label = "CDG: "] 
  "1000291" -> "1000295"  [ label = "CDG: "] 
  "1000201" -> "1000211"  [ label = "CDG: "] 
  "1000201" -> "1000208"  [ label = "CDG: "] 
  "1000201" -> "1000216"  [ label = "CDG: "] 
  "1000201" -> "1000210"  [ label = "CDG: "] 
  "1000201" -> "1000217"  [ label = "CDG: "] 
  "1000216" -> "1000247"  [ label = "CDG: "] 
  "1000216" -> "1000233"  [ label = "CDG: "] 
  "1000216" -> "1000243"  [ label = "CDG: "] 
  "1000216" -> "1000230"  [ label = "CDG: "] 
  "1000216" -> "1000216"  [ label = "CDG: "] 
  "1000216" -> "1000251"  [ label = "CDG: "] 
  "1000216" -> "1000225"  [ label = "CDG: "] 
  "1000216" -> "1000222"  [ label = "CDG: "] 
  "1000216" -> "1000254"  [ label = "CDG: "] 
  "1000216" -> "1000253"  [ label = "CDG: "] 
  "1000216" -> "1000220"  [ label = "CDG: "] 
  "1000216" -> "1000237"  [ label = "CDG: "] 
  "1000216" -> "1000249"  [ label = "CDG: "] 
  "1000216" -> "1000241"  [ label = "CDG: "] 
  "1000216" -> "1000217"  [ label = "CDG: "] 
  "1000216" -> "1000223"  [ label = "CDG: "] 
  "1000216" -> "1000245"  [ label = "CDG: "] 
  "1000216" -> "1000226"  [ label = "CDG: "] 
  "1000216" -> "1000232"  [ label = "CDG: "] 
  "1000253" -> "1000268"  [ label = "CDG: "] 
  "1000253" -> "1000259"  [ label = "CDG: "] 
  "1000253" -> "1000283"  [ label = "CDG: "] 
  "1000253" -> "1000262"  [ label = "CDG: "] 
  "1000253" -> "1000272"  [ label = "CDG: "] 
  "1000253" -> "1000271"  [ label = "CDG: "] 
  "1000253" -> "1000267"  [ label = "CDG: "] 
  "1000272" -> "1000277"  [ label = "CDG: "] 
  "1000272" -> "1000280"  [ label = "CDG: "] 
  "1000272" -> "1000275"  [ label = "CDG: "] 
}
