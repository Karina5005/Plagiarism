digraph "pre" {  
"1000103" [label = "(METHOD,pre)" ]
"1000144" [label = "(METHOD_RETURN,void)" ]
"1000106" [label = "(<operator>.assignment,n = 1)" ]
"1000109" [label = "(st.insert,st.insert(1))" ]
"1000124" [label = "(<operator>.assignment,n = 1)" ]
"1000112" [label = "(<operator>.lessEqualsThan,n*n <= len)" ]
"1000128" [label = "(<operator>.lessEqualsThan,n*n*n <= len)" ]
"1000118" [label = "(st.insert,st.insert(n*n))" ]
"1000122" [label = "(<operator>.postIncrement,n++)" ]
"1000136" [label = "(st.insert,st.insert(n*n*n))" ]
"1000142" [label = "(<operator>.postIncrement,n++)" ]
"1000113" [label = "(<operator>.multiplication,n*n)" ]
"1000129" [label = "(<operator>.multiplication,n*n*n)" ]
"1000119" [label = "(<operator>.multiplication,n*n)" ]
"1000131" [label = "(<operator>.multiplication,n*n)" ]
"1000137" [label = "(<operator>.multiplication,n*n*n)" ]
"1000139" [label = "(<operator>.multiplication,n*n)" ]
  "1000109" -> "1000144"  [ label = "DDG: st.insert(1)"] 
  "1000112" -> "1000144"  [ label = "DDG: n*n <= len"] 
  "1000129" -> "1000144"  [ label = "DDG: n"] 
  "1000129" -> "1000144"  [ label = "DDG: n*n"] 
  "1000128" -> "1000144"  [ label = "DDG: n*n*n"] 
  "1000128" -> "1000144"  [ label = "DDG: len"] 
  "1000128" -> "1000144"  [ label = "DDG: n*n*n <= len"] 
  "1000136" -> "1000144"  [ label = "DDG: st.insert(n*n*n)"] 
  "1000118" -> "1000144"  [ label = "DDG: st.insert(n*n)"] 
  "1000103" -> "1000106"  [ label = "DDG: "] 
  "1000103" -> "1000124"  [ label = "DDG: "] 
  "1000103" -> "1000109"  [ label = "DDG: "] 
  "1000113" -> "1000112"  [ label = "DDG: n"] 
  "1000103" -> "1000112"  [ label = "DDG: "] 
  "1000129" -> "1000128"  [ label = "DDG: n"] 
  "1000129" -> "1000128"  [ label = "DDG: n*n"] 
  "1000112" -> "1000128"  [ label = "DDG: len"] 
  "1000103" -> "1000128"  [ label = "DDG: "] 
  "1000106" -> "1000113"  [ label = "DDG: n"] 
  "1000122" -> "1000113"  [ label = "DDG: n"] 
  "1000103" -> "1000113"  [ label = "DDG: "] 
  "1000119" -> "1000118"  [ label = "DDG: n"] 
  "1000119" -> "1000122"  [ label = "DDG: n"] 
  "1000103" -> "1000122"  [ label = "DDG: "] 
  "1000131" -> "1000129"  [ label = "DDG: n"] 
  "1000103" -> "1000129"  [ label = "DDG: "] 
  "1000137" -> "1000136"  [ label = "DDG: n*n"] 
  "1000137" -> "1000136"  [ label = "DDG: n"] 
  "1000137" -> "1000142"  [ label = "DDG: n"] 
  "1000103" -> "1000142"  [ label = "DDG: "] 
  "1000113" -> "1000119"  [ label = "DDG: n"] 
  "1000103" -> "1000119"  [ label = "DDG: "] 
  "1000124" -> "1000131"  [ label = "DDG: n"] 
  "1000142" -> "1000131"  [ label = "DDG: n"] 
  "1000103" -> "1000131"  [ label = "DDG: "] 
  "1000139" -> "1000137"  [ label = "DDG: n"] 
  "1000103" -> "1000137"  [ label = "DDG: "] 
  "1000129" -> "1000139"  [ label = "DDG: n"] 
  "1000103" -> "1000139"  [ label = "DDG: "] 
  "1000112" -> "1000112"  [ label = "CDG: "] 
  "1000112" -> "1000113"  [ label = "CDG: "] 
  "1000112" -> "1000119"  [ label = "CDG: "] 
  "1000112" -> "1000118"  [ label = "CDG: "] 
  "1000112" -> "1000122"  [ label = "CDG: "] 
  "1000128" -> "1000131"  [ label = "CDG: "] 
  "1000128" -> "1000142"  [ label = "CDG: "] 
  "1000128" -> "1000128"  [ label = "CDG: "] 
  "1000128" -> "1000137"  [ label = "CDG: "] 
  "1000128" -> "1000129"  [ label = "CDG: "] 
  "1000128" -> "1000139"  [ label = "CDG: "] 
  "1000128" -> "1000136"  [ label = "CDG: "] 
}
