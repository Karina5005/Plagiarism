digraph "solve" {  
"1000276" [label = "(METHOD,solve)" ]
"1000336" [label = "(METHOD_RETURN,void)" ]
"1000282" [label = "(<operator>.assignment,count = 0)" ]
"1000285" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000331" [label = "(<operator>.shiftLeft,cout << s.size() << nline)" ]
"1000291" [label = "(<operator>.assignment,i = 1)" ]
"1000294" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000297" [label = "(<operator>.postIncrement,i++)" ]
"1000300" [label = "(<operator>.assignment,square = i * i)" ]
"1000305" [label = "(<operator>.assignment,cube = pow(i, 3))" ]
"1000333" [label = "(<operator>.shiftLeft,s.size() << nline)" ]
"1000311" [label = "(<operator>.logicalAnd,square > n && cube > n)" ]
"1000320" [label = "(<operator>.lessEqualsThan,square <= n)" ]
"1000323" [label = "(s.insert,s.insert(square))" ]
"1000326" [label = "(<operator>.lessEqualsThan,cube <= n)" ]
"1000329" [label = "(s.insert,s.insert(cube))" ]
"1000302" [label = "(<operator>.multiplication,i * i)" ]
"1000307" [label = "(pow,pow(i, 3))" ]
"1000312" [label = "(<operator>.greaterThan,square > n)" ]
"1000315" [label = "(<operator>.greaterThan,cube > n)" ]
  "1000282" -> "1000336"  [ label = "DDG: count"] 
  "1000285" -> "1000336"  [ label = "DDG: cin >> n"] 
  "1000294" -> "1000336"  [ label = "DDG: i"] 
  "1000294" -> "1000336"  [ label = "DDG: n"] 
  "1000294" -> "1000336"  [ label = "DDG: i <= n"] 
  "1000300" -> "1000336"  [ label = "DDG: i * i"] 
  "1000305" -> "1000336"  [ label = "DDG: cube"] 
  "1000307" -> "1000336"  [ label = "DDG: i"] 
  "1000305" -> "1000336"  [ label = "DDG: pow(i, 3)"] 
  "1000312" -> "1000336"  [ label = "DDG: square"] 
  "1000312" -> "1000336"  [ label = "DDG: n"] 
  "1000311" -> "1000336"  [ label = "DDG: square > n"] 
  "1000315" -> "1000336"  [ label = "DDG: cube"] 
  "1000315" -> "1000336"  [ label = "DDG: n"] 
  "1000311" -> "1000336"  [ label = "DDG: cube > n"] 
  "1000311" -> "1000336"  [ label = "DDG: square > n && cube > n"] 
  "1000320" -> "1000336"  [ label = "DDG: square"] 
  "1000320" -> "1000336"  [ label = "DDG: square <= n"] 
  "1000323" -> "1000336"  [ label = "DDG: square"] 
  "1000323" -> "1000336"  [ label = "DDG: s.insert(square)"] 
  "1000326" -> "1000336"  [ label = "DDG: cube"] 
  "1000326" -> "1000336"  [ label = "DDG: cube <= n"] 
  "1000329" -> "1000336"  [ label = "DDG: cube"] 
  "1000329" -> "1000336"  [ label = "DDG: s.insert(cube)"] 
  "1000333" -> "1000336"  [ label = "DDG: s.size()"] 
  "1000331" -> "1000336"  [ label = "DDG: s.size() << nline"] 
  "1000331" -> "1000336"  [ label = "DDG: cout << s.size() << nline"] 
  "1000331" -> "1000336"  [ label = "DDG: cout"] 
  "1000285" -> "1000336"  [ label = "DDG: cin"] 
  "1000333" -> "1000336"  [ label = "DDG: nline"] 
  "1000276" -> "1000282"  [ label = "DDG: "] 
  "1000276" -> "1000285"  [ label = "DDG: "] 
  "1000276" -> "1000291"  [ label = "DDG: "] 
  "1000276" -> "1000331"  [ label = "DDG: "] 
  "1000333" -> "1000331"  [ label = "DDG: nline"] 
  "1000333" -> "1000331"  [ label = "DDG: s.size()"] 
  "1000291" -> "1000294"  [ label = "DDG: i"] 
  "1000297" -> "1000294"  [ label = "DDG: i"] 
  "1000276" -> "1000294"  [ label = "DDG: "] 
  "1000285" -> "1000294"  [ label = "DDG: n"] 
  "1000326" -> "1000294"  [ label = "DDG: n"] 
  "1000307" -> "1000297"  [ label = "DDG: i"] 
  "1000276" -> "1000297"  [ label = "DDG: "] 
  "1000302" -> "1000300"  [ label = "DDG: i"] 
  "1000307" -> "1000305"  [ label = "DDG: 3"] 
  "1000307" -> "1000305"  [ label = "DDG: i"] 
  "1000276" -> "1000333"  [ label = "DDG: "] 
  "1000276" -> "1000300"  [ label = "DDG: "] 
  "1000276" -> "1000305"  [ label = "DDG: "] 
  "1000294" -> "1000302"  [ label = "DDG: i"] 
  "1000276" -> "1000302"  [ label = "DDG: "] 
  "1000302" -> "1000307"  [ label = "DDG: i"] 
  "1000276" -> "1000307"  [ label = "DDG: "] 
  "1000312" -> "1000311"  [ label = "DDG: n"] 
  "1000312" -> "1000311"  [ label = "DDG: square"] 
  "1000315" -> "1000311"  [ label = "DDG: n"] 
  "1000315" -> "1000311"  [ label = "DDG: cube"] 
  "1000312" -> "1000320"  [ label = "DDG: square"] 
  "1000276" -> "1000320"  [ label = "DDG: "] 
  "1000312" -> "1000320"  [ label = "DDG: n"] 
  "1000315" -> "1000320"  [ label = "DDG: n"] 
  "1000320" -> "1000323"  [ label = "DDG: square"] 
  "1000276" -> "1000323"  [ label = "DDG: "] 
  "1000305" -> "1000326"  [ label = "DDG: cube"] 
  "1000315" -> "1000326"  [ label = "DDG: cube"] 
  "1000276" -> "1000326"  [ label = "DDG: "] 
  "1000320" -> "1000326"  [ label = "DDG: n"] 
  "1000326" -> "1000329"  [ label = "DDG: cube"] 
  "1000276" -> "1000329"  [ label = "DDG: "] 
  "1000300" -> "1000312"  [ label = "DDG: square"] 
  "1000276" -> "1000312"  [ label = "DDG: "] 
  "1000294" -> "1000312"  [ label = "DDG: n"] 
  "1000305" -> "1000315"  [ label = "DDG: cube"] 
  "1000276" -> "1000315"  [ label = "DDG: "] 
  "1000312" -> "1000315"  [ label = "DDG: n"] 
  "1000294" -> "1000305"  [ label = "CDG: "] 
  "1000294" -> "1000300"  [ label = "CDG: "] 
  "1000294" -> "1000311"  [ label = "CDG: "] 
  "1000294" -> "1000312"  [ label = "CDG: "] 
  "1000294" -> "1000307"  [ label = "CDG: "] 
  "1000294" -> "1000302"  [ label = "CDG: "] 
  "1000311" -> "1000294"  [ label = "CDG: "] 
  "1000311" -> "1000326"  [ label = "CDG: "] 
  "1000311" -> "1000297"  [ label = "CDG: "] 
  "1000311" -> "1000320"  [ label = "CDG: "] 
  "1000320" -> "1000323"  [ label = "CDG: "] 
  "1000326" -> "1000329"  [ label = "CDG: "] 
  "1000312" -> "1000315"  [ label = "CDG: "] 
}
