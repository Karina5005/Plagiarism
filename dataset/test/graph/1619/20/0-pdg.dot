digraph "solve" {  
"1000101" [label = "(METHOD,solve)" ]
"1000149" [label = "(METHOD_RETURN,void)" ]
"1000104" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000144" [label = "(<operator>.shiftLeft,cout << s.size() << \"\n\")" ]
"1000110" [label = "(<operator>.assignment,i = 1)" ]
"1000113" [label = "(<operator>.lessEqualsThan,i * i <= n)" ]
"1000118" [label = "(<operator>.postIncrement,i++)" ]
"1000120" [label = "(s.insert,s.insert(i * i))" ]
"1000126" [label = "(<operator>.assignment,i = 1)" ]
"1000129" [label = "(<operator>.lessEqualsThan,i * i * i <= n)" ]
"1000136" [label = "(<operator>.postIncrement,i++)" ]
"1000138" [label = "(s.insert,s.insert(i * i * i))" ]
"1000146" [label = "(<operator>.shiftLeft,s.size() << \"\n\")" ]
"1000114" [label = "(<operator>.multiplication,i * i)" ]
"1000121" [label = "(<operator>.multiplication,i * i)" ]
"1000130" [label = "(<operator>.multiplication,i * i * i)" ]
"1000139" [label = "(<operator>.multiplication,i * i * i)" ]
"1000132" [label = "(<operator>.multiplication,i * i)" ]
"1000141" [label = "(<operator>.multiplication,i * i)" ]
  "1000104" -> "1000149"  [ label = "DDG: cin >> n"] 
  "1000113" -> "1000149"  [ label = "DDG: i * i <= n"] 
  "1000130" -> "1000149"  [ label = "DDG: i"] 
  "1000130" -> "1000149"  [ label = "DDG: i * i"] 
  "1000129" -> "1000149"  [ label = "DDG: i * i * i"] 
  "1000129" -> "1000149"  [ label = "DDG: n"] 
  "1000129" -> "1000149"  [ label = "DDG: i * i * i <= n"] 
  "1000146" -> "1000149"  [ label = "DDG: s.size()"] 
  "1000144" -> "1000149"  [ label = "DDG: s.size() << \"\n\""] 
  "1000144" -> "1000149"  [ label = "DDG: cout << s.size() << \"\n\""] 
  "1000138" -> "1000149"  [ label = "DDG: s.insert(i * i * i)"] 
  "1000120" -> "1000149"  [ label = "DDG: s.insert(i * i)"] 
  "1000144" -> "1000149"  [ label = "DDG: cout"] 
  "1000104" -> "1000149"  [ label = "DDG: cin"] 
  "1000101" -> "1000104"  [ label = "DDG: "] 
  "1000101" -> "1000110"  [ label = "DDG: "] 
  "1000101" -> "1000126"  [ label = "DDG: "] 
  "1000101" -> "1000144"  [ label = "DDG: "] 
  "1000146" -> "1000144"  [ label = "DDG: \"\n\""] 
  "1000146" -> "1000144"  [ label = "DDG: s.size()"] 
  "1000114" -> "1000113"  [ label = "DDG: i"] 
  "1000104" -> "1000113"  [ label = "DDG: n"] 
  "1000101" -> "1000113"  [ label = "DDG: "] 
  "1000121" -> "1000118"  [ label = "DDG: i"] 
  "1000101" -> "1000118"  [ label = "DDG: "] 
  "1000121" -> "1000120"  [ label = "DDG: i"] 
  "1000130" -> "1000129"  [ label = "DDG: i * i"] 
  "1000130" -> "1000129"  [ label = "DDG: i"] 
  "1000113" -> "1000129"  [ label = "DDG: n"] 
  "1000101" -> "1000129"  [ label = "DDG: "] 
  "1000139" -> "1000136"  [ label = "DDG: i"] 
  "1000101" -> "1000136"  [ label = "DDG: "] 
  "1000139" -> "1000138"  [ label = "DDG: i * i"] 
  "1000139" -> "1000138"  [ label = "DDG: i"] 
  "1000101" -> "1000146"  [ label = "DDG: "] 
  "1000110" -> "1000114"  [ label = "DDG: i"] 
  "1000118" -> "1000114"  [ label = "DDG: i"] 
  "1000101" -> "1000114"  [ label = "DDG: "] 
  "1000114" -> "1000121"  [ label = "DDG: i"] 
  "1000101" -> "1000121"  [ label = "DDG: "] 
  "1000132" -> "1000130"  [ label = "DDG: i"] 
  "1000101" -> "1000130"  [ label = "DDG: "] 
  "1000141" -> "1000139"  [ label = "DDG: i"] 
  "1000101" -> "1000139"  [ label = "DDG: "] 
  "1000126" -> "1000132"  [ label = "DDG: i"] 
  "1000136" -> "1000132"  [ label = "DDG: i"] 
  "1000101" -> "1000132"  [ label = "DDG: "] 
  "1000130" -> "1000141"  [ label = "DDG: i"] 
  "1000101" -> "1000141"  [ label = "DDG: "] 
  "1000113" -> "1000121"  [ label = "CDG: "] 
  "1000113" -> "1000120"  [ label = "CDG: "] 
  "1000113" -> "1000113"  [ label = "CDG: "] 
  "1000113" -> "1000114"  [ label = "CDG: "] 
  "1000113" -> "1000118"  [ label = "CDG: "] 
  "1000129" -> "1000132"  [ label = "CDG: "] 
  "1000129" -> "1000141"  [ label = "CDG: "] 
  "1000129" -> "1000129"  [ label = "CDG: "] 
  "1000129" -> "1000130"  [ label = "CDG: "] 
  "1000129" -> "1000139"  [ label = "CDG: "] 
  "1000129" -> "1000136"  [ label = "CDG: "] 
  "1000129" -> "1000138"  [ label = "CDG: "] 
}
