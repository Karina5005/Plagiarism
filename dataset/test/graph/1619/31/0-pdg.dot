digraph "main" {  
"1000102" [label = "(METHOD,main)" ]
"1000162" [label = "(METHOD_RETURN,int)" ]
"1000105" [label = "(<operator>.arithmeticShiftRight,cin >> t)" ]
"1000160" [label = "(RETURN,return 0;,return 0;)" ]
"1000109" [label = "(<operator>.postDecrement,t--)" ]
"1000161" [label = "(LITERAL,0,return 0;)" ]
"1000113" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000155" [label = "(<operator>.shiftLeft,cout << ans.size() << endl)" ]
"1000119" [label = "(<operator>.assignment,i = 1)" ]
"1000122" [label = "(<operator>.lessEqualsThan,i * i  <= n)" ]
"1000127" [label = "(<operator>.preIncrement,++i)" ]
"1000136" [label = "(<operator>.assignment,i = 1)" ]
"1000139" [label = "(<operator>.lessEqualsThan,i * i * i <= n)" ]
"1000146" [label = "(<operator>.preIncrement,++i)" ]
"1000130" [label = "(ans.insert,ans.insert(i * i))" ]
"1000149" [label = "(ans.insert,ans.insert(i * i * i))" ]
"1000157" [label = "(<operator>.shiftLeft,ans.size() << endl)" ]
"1000123" [label = "(<operator>.multiplication,i * i)" ]
"1000140" [label = "(<operator>.multiplication,i * i * i)" ]
"1000131" [label = "(<operator>.multiplication,i * i)" ]
"1000142" [label = "(<operator>.multiplication,i * i)" ]
"1000150" [label = "(<operator>.multiplication,i * i * i)" ]
"1000152" [label = "(<operator>.multiplication,i * i)" ]
"1000158" [label = "(ans.size,ans.size())" ]
  "1000105" -> "1000162"  [ label = "DDG: cin"] 
  "1000105" -> "1000162"  [ label = "DDG: cin >> t"] 
  "1000109" -> "1000162"  [ label = "DDG: t"] 
  "1000113" -> "1000162"  [ label = "DDG: cin"] 
  "1000113" -> "1000162"  [ label = "DDG: cin >> n"] 
  "1000122" -> "1000162"  [ label = "DDG: i * i  <= n"] 
  "1000140" -> "1000162"  [ label = "DDG: i"] 
  "1000140" -> "1000162"  [ label = "DDG: i * i"] 
  "1000139" -> "1000162"  [ label = "DDG: i * i * i"] 
  "1000139" -> "1000162"  [ label = "DDG: n"] 
  "1000139" -> "1000162"  [ label = "DDG: i * i * i <= n"] 
  "1000157" -> "1000162"  [ label = "DDG: ans.size()"] 
  "1000155" -> "1000162"  [ label = "DDG: ans.size() << endl"] 
  "1000155" -> "1000162"  [ label = "DDG: cout << ans.size() << endl"] 
  "1000149" -> "1000162"  [ label = "DDG: ans.insert(i * i * i)"] 
  "1000130" -> "1000162"  [ label = "DDG: ans.insert(i * i)"] 
  "1000160" -> "1000162"  [ label = "DDG: <RET>"] 
  "1000155" -> "1000162"  [ label = "DDG: cout"] 
  "1000157" -> "1000162"  [ label = "DDG: endl"] 
  "1000161" -> "1000160"  [ label = "DDG: 0"] 
  "1000102" -> "1000160"  [ label = "DDG: "] 
  "1000102" -> "1000105"  [ label = "DDG: "] 
  "1000102" -> "1000161"  [ label = "DDG: "] 
  "1000105" -> "1000109"  [ label = "DDG: t"] 
  "1000102" -> "1000109"  [ label = "DDG: "] 
  "1000105" -> "1000113"  [ label = "DDG: cin"] 
  "1000102" -> "1000113"  [ label = "DDG: "] 
  "1000139" -> "1000113"  [ label = "DDG: n"] 
  "1000102" -> "1000119"  [ label = "DDG: "] 
  "1000102" -> "1000136"  [ label = "DDG: "] 
  "1000102" -> "1000155"  [ label = "DDG: "] 
  "1000157" -> "1000155"  [ label = "DDG: endl"] 
  "1000157" -> "1000155"  [ label = "DDG: ans.size()"] 
  "1000123" -> "1000122"  [ label = "DDG: i"] 
  "1000113" -> "1000122"  [ label = "DDG: n"] 
  "1000102" -> "1000122"  [ label = "DDG: "] 
  "1000131" -> "1000127"  [ label = "DDG: i"] 
  "1000102" -> "1000127"  [ label = "DDG: "] 
  "1000140" -> "1000139"  [ label = "DDG: i * i"] 
  "1000140" -> "1000139"  [ label = "DDG: i"] 
  "1000122" -> "1000139"  [ label = "DDG: n"] 
  "1000102" -> "1000139"  [ label = "DDG: "] 
  "1000150" -> "1000146"  [ label = "DDG: i"] 
  "1000102" -> "1000146"  [ label = "DDG: "] 
  "1000102" -> "1000157"  [ label = "DDG: "] 
  "1000119" -> "1000123"  [ label = "DDG: i"] 
  "1000127" -> "1000123"  [ label = "DDG: i"] 
  "1000102" -> "1000123"  [ label = "DDG: "] 
  "1000131" -> "1000130"  [ label = "DDG: i"] 
  "1000142" -> "1000140"  [ label = "DDG: i"] 
  "1000102" -> "1000140"  [ label = "DDG: "] 
  "1000150" -> "1000149"  [ label = "DDG: i"] 
  "1000150" -> "1000149"  [ label = "DDG: i * i"] 
  "1000123" -> "1000131"  [ label = "DDG: i"] 
  "1000102" -> "1000131"  [ label = "DDG: "] 
  "1000136" -> "1000142"  [ label = "DDG: i"] 
  "1000146" -> "1000142"  [ label = "DDG: i"] 
  "1000102" -> "1000142"  [ label = "DDG: "] 
  "1000152" -> "1000150"  [ label = "DDG: i"] 
  "1000102" -> "1000150"  [ label = "DDG: "] 
  "1000140" -> "1000152"  [ label = "DDG: i"] 
  "1000102" -> "1000152"  [ label = "DDG: "] 
  "1000109" -> "1000113"  [ label = "CDG: "] 
  "1000109" -> "1000158"  [ label = "CDG: "] 
  "1000109" -> "1000109"  [ label = "CDG: "] 
  "1000109" -> "1000142"  [ label = "CDG: "] 
  "1000109" -> "1000155"  [ label = "CDG: "] 
  "1000109" -> "1000123"  [ label = "CDG: "] 
  "1000109" -> "1000119"  [ label = "CDG: "] 
  "1000109" -> "1000139"  [ label = "CDG: "] 
  "1000109" -> "1000136"  [ label = "CDG: "] 
  "1000109" -> "1000157"  [ label = "CDG: "] 
  "1000109" -> "1000140"  [ label = "CDG: "] 
  "1000109" -> "1000122"  [ label = "CDG: "] 
  "1000122" -> "1000131"  [ label = "CDG: "] 
  "1000122" -> "1000127"  [ label = "CDG: "] 
  "1000122" -> "1000123"  [ label = "CDG: "] 
  "1000122" -> "1000130"  [ label = "CDG: "] 
  "1000122" -> "1000122"  [ label = "CDG: "] 
  "1000139" -> "1000142"  [ label = "CDG: "] 
  "1000139" -> "1000152"  [ label = "CDG: "] 
  "1000139" -> "1000150"  [ label = "CDG: "] 
  "1000139" -> "1000139"  [ label = "CDG: "] 
  "1000139" -> "1000146"  [ label = "CDG: "] 
  "1000139" -> "1000149"  [ label = "CDG: "] 
  "1000139" -> "1000140"  [ label = "CDG: "] 
}
