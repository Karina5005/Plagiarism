digraph "main" {  
"1000101" [label = "(METHOD,main)" ]
"1000164" [label = "(METHOD_RETURN,int)" ]
"1000103" [label = "(scanf,scanf(\"%d\",&t))" ]
"1000162" [label = "(RETURN,return 0;,return 0;)" ]
"1000108" [label = "(<operator>.postDecrement,t--)" ]
"1000163" [label = "(LITERAL,0,return 0;)" ]
"1000111" [label = "(<operator>.arithmeticShiftRight,cin>>s)" ]
"1000115" [label = "(<operator>.assignment,i=0)" ]
"1000119" [label = "(<operator>.modulo,s.size()%2)" ]
"1000122" [label = "(printf,printf(\"NO\n\"))" ]
"1000127" [label = "(<operator>.assignment,i=0)" ]
"1000130" [label = "(<operator>.lessThan,i<s.size()/2)" ]
"1000135" [label = "(<operator>.postIncrement,i++)" ]
"1000152" [label = "(<operator>.notEquals,i!=(s.size()/2))" ]
"1000157" [label = "(printf,printf(\"NO\n\"))" ]
"1000160" [label = "(printf,printf(\"YES\n\"))" ]
"1000132" [label = "(<operator>.division,s.size()/2)" ]
"1000139" [label = "(<operator>.notEquals,s[i]!=s[s.size()/2+i])" ]
"1000154" [label = "(<operator>.division,s.size()/2)" ]
"1000145" [label = "(<operator>.addition,s.size()/2+i)" ]
"1000146" [label = "(<operator>.division,s.size()/2)" ]
"1000120" [label = "(s.size,s.size())" ]
"1000133" [label = "(s.size,s.size())" ]
"1000155" [label = "(s.size,s.size())" ]
"1000140" [label = "(<operator>.indirectIndexAccess,s[i])" ]
"1000143" [label = "(<operator>.indirectIndexAccess,s[s.size()/2+i])" ]
"1000147" [label = "(s.size,s.size())" ]
  "1000162" -> "1000164"  [ label = "DDG: <RET>"] 
  "1000103" -> "1000164"  [ label = "DDG: &t"] 
  "1000108" -> "1000164"  [ label = "DDG: t"] 
  "1000111" -> "1000164"  [ label = "DDG: s"] 
  "1000111" -> "1000164"  [ label = "DDG: cin>>s"] 
  "1000115" -> "1000164"  [ label = "DDG: i"] 
  "1000119" -> "1000164"  [ label = "DDG: s.size()"] 
  "1000119" -> "1000164"  [ label = "DDG: s.size()%2"] 
  "1000130" -> "1000164"  [ label = "DDG: i<s.size()/2"] 
  "1000139" -> "1000164"  [ label = "DDG: s[i]"] 
  "1000146" -> "1000164"  [ label = "DDG: s.size()"] 
  "1000145" -> "1000164"  [ label = "DDG: s.size()/2"] 
  "1000145" -> "1000164"  [ label = "DDG: i"] 
  "1000139" -> "1000164"  [ label = "DDG: s[s.size()/2+i]"] 
  "1000139" -> "1000164"  [ label = "DDG: s[i]!=s[s.size()/2+i]"] 
  "1000152" -> "1000164"  [ label = "DDG: i"] 
  "1000154" -> "1000164"  [ label = "DDG: s.size()"] 
  "1000152" -> "1000164"  [ label = "DDG: s.size()/2"] 
  "1000152" -> "1000164"  [ label = "DDG: i!=(s.size()/2)"] 
  "1000160" -> "1000164"  [ label = "DDG: printf(\"YES\n\")"] 
  "1000157" -> "1000164"  [ label = "DDG: printf(\"NO\n\")"] 
  "1000122" -> "1000164"  [ label = "DDG: printf(\"NO\n\")"] 
  "1000111" -> "1000164"  [ label = "DDG: cin"] 
  "1000101" -> "1000103"  [ label = "DDG: "] 
  "1000163" -> "1000162"  [ label = "DDG: 0"] 
  "1000101" -> "1000162"  [ label = "DDG: "] 
  "1000101" -> "1000163"  [ label = "DDG: "] 
  "1000101" -> "1000108"  [ label = "DDG: "] 
  "1000101" -> "1000115"  [ label = "DDG: "] 
  "1000101" -> "1000111"  [ label = "DDG: "] 
  "1000139" -> "1000111"  [ label = "DDG: s[i]"] 
  "1000139" -> "1000111"  [ label = "DDG: s[s.size()/2+i]"] 
  "1000101" -> "1000119"  [ label = "DDG: "] 
  "1000101" -> "1000122"  [ label = "DDG: "] 
  "1000101" -> "1000127"  [ label = "DDG: "] 
  "1000127" -> "1000130"  [ label = "DDG: i"] 
  "1000135" -> "1000130"  [ label = "DDG: i"] 
  "1000101" -> "1000130"  [ label = "DDG: "] 
  "1000132" -> "1000130"  [ label = "DDG: s.size()"] 
  "1000132" -> "1000130"  [ label = "DDG: 2"] 
  "1000101" -> "1000135"  [ label = "DDG: "] 
  "1000130" -> "1000135"  [ label = "DDG: i"] 
  "1000130" -> "1000152"  [ label = "DDG: i"] 
  "1000101" -> "1000152"  [ label = "DDG: "] 
  "1000154" -> "1000152"  [ label = "DDG: s.size()"] 
  "1000154" -> "1000152"  [ label = "DDG: 2"] 
  "1000101" -> "1000157"  [ label = "DDG: "] 
  "1000101" -> "1000132"  [ label = "DDG: "] 
  "1000101" -> "1000154"  [ label = "DDG: "] 
  "1000101" -> "1000160"  [ label = "DDG: "] 
  "1000111" -> "1000139"  [ label = "DDG: s"] 
  "1000146" -> "1000145"  [ label = "DDG: 2"] 
  "1000146" -> "1000145"  [ label = "DDG: s.size()"] 
  "1000130" -> "1000145"  [ label = "DDG: i"] 
  "1000101" -> "1000145"  [ label = "DDG: "] 
  "1000101" -> "1000146"  [ label = "DDG: "] 
  "1000108" -> "1000120"  [ label = "CDG: "] 
  "1000108" -> "1000111"  [ label = "CDG: "] 
  "1000108" -> "1000119"  [ label = "CDG: "] 
  "1000108" -> "1000115"  [ label = "CDG: "] 
  "1000119" -> "1000127"  [ label = "CDG: "] 
  "1000119" -> "1000132"  [ label = "CDG: "] 
  "1000119" -> "1000108"  [ label = "CDG: "] 
  "1000119" -> "1000130"  [ label = "CDG: "] 
  "1000119" -> "1000133"  [ label = "CDG: "] 
  "1000119" -> "1000122"  [ label = "CDG: "] 
  "1000130" -> "1000143"  [ label = "CDG: "] 
  "1000130" -> "1000155"  [ label = "CDG: "] 
  "1000130" -> "1000154"  [ label = "CDG: "] 
  "1000130" -> "1000147"  [ label = "CDG: "] 
  "1000130" -> "1000145"  [ label = "CDG: "] 
  "1000130" -> "1000108"  [ label = "CDG: "] 
  "1000130" -> "1000152"  [ label = "CDG: "] 
  "1000130" -> "1000139"  [ label = "CDG: "] 
  "1000130" -> "1000146"  [ label = "CDG: "] 
  "1000130" -> "1000140"  [ label = "CDG: "] 
  "1000152" -> "1000160"  [ label = "CDG: "] 
  "1000152" -> "1000157"  [ label = "CDG: "] 
  "1000139" -> "1000132"  [ label = "CDG: "] 
  "1000139" -> "1000130"  [ label = "CDG: "] 
  "1000139" -> "1000135"  [ label = "CDG: "] 
  "1000139" -> "1000133"  [ label = "CDG: "] 
  "1000139" -> "1000155"  [ label = "CDG: "] 
  "1000139" -> "1000154"  [ label = "CDG: "] 
  "1000139" -> "1000108"  [ label = "CDG: "] 
  "1000139" -> "1000152"  [ label = "CDG: "] 
}
