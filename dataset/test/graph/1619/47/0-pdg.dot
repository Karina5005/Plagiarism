digraph "work" {  
"1000102" [label = "(METHOD,work)" ]
"1000150" [label = "(METHOD_RETURN,void)" ]
"1000105" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000145" [label = "(<operator>.shiftLeft,cout << S.size() << endl)" ]
"1000111" [label = "(<operator>.assignment,i = 1)" ]
"1000114" [label = "(<operator>.lessEqualsThan,i*i <= n)" ]
"1000119" [label = "(<operator>.postIncrement,i++)" ]
"1000121" [label = "(S.insert,S.insert(i*i))" ]
"1000127" [label = "(<operator>.assignment,i = 1)" ]
"1000130" [label = "(<operator>.lessEqualsThan,i*i*i <= n)" ]
"1000137" [label = "(<operator>.postIncrement,i++)" ]
"1000139" [label = "(S.insert,S.insert(i*i*i))" ]
"1000147" [label = "(<operator>.shiftLeft,S.size() << endl)" ]
"1000115" [label = "(<operator>.multiplication,i*i)" ]
"1000122" [label = "(<operator>.multiplication,i*i)" ]
"1000131" [label = "(<operator>.multiplication,i*i*i)" ]
"1000140" [label = "(<operator>.multiplication,i*i*i)" ]
"1000133" [label = "(<operator>.multiplication,i*i)" ]
"1000142" [label = "(<operator>.multiplication,i*i)" ]
  "1000105" -> "1000150"  [ label = "DDG: cin >> n"] 
  "1000114" -> "1000150"  [ label = "DDG: i*i <= n"] 
  "1000131" -> "1000150"  [ label = "DDG: i"] 
  "1000131" -> "1000150"  [ label = "DDG: i*i"] 
  "1000130" -> "1000150"  [ label = "DDG: i*i*i"] 
  "1000130" -> "1000150"  [ label = "DDG: n"] 
  "1000130" -> "1000150"  [ label = "DDG: i*i*i <= n"] 
  "1000147" -> "1000150"  [ label = "DDG: S.size()"] 
  "1000145" -> "1000150"  [ label = "DDG: S.size() << endl"] 
  "1000145" -> "1000150"  [ label = "DDG: cout << S.size() << endl"] 
  "1000139" -> "1000150"  [ label = "DDG: S.insert(i*i*i)"] 
  "1000121" -> "1000150"  [ label = "DDG: S.insert(i*i)"] 
  "1000147" -> "1000150"  [ label = "DDG: endl"] 
  "1000145" -> "1000150"  [ label = "DDG: cout"] 
  "1000105" -> "1000150"  [ label = "DDG: cin"] 
  "1000102" -> "1000105"  [ label = "DDG: "] 
  "1000102" -> "1000111"  [ label = "DDG: "] 
  "1000102" -> "1000127"  [ label = "DDG: "] 
  "1000102" -> "1000145"  [ label = "DDG: "] 
  "1000147" -> "1000145"  [ label = "DDG: S.size()"] 
  "1000147" -> "1000145"  [ label = "DDG: endl"] 
  "1000115" -> "1000114"  [ label = "DDG: i"] 
  "1000105" -> "1000114"  [ label = "DDG: n"] 
  "1000102" -> "1000114"  [ label = "DDG: "] 
  "1000122" -> "1000119"  [ label = "DDG: i"] 
  "1000102" -> "1000119"  [ label = "DDG: "] 
  "1000122" -> "1000121"  [ label = "DDG: i"] 
  "1000131" -> "1000130"  [ label = "DDG: i"] 
  "1000131" -> "1000130"  [ label = "DDG: i*i"] 
  "1000114" -> "1000130"  [ label = "DDG: n"] 
  "1000102" -> "1000130"  [ label = "DDG: "] 
  "1000140" -> "1000137"  [ label = "DDG: i"] 
  "1000102" -> "1000137"  [ label = "DDG: "] 
  "1000140" -> "1000139"  [ label = "DDG: i*i"] 
  "1000140" -> "1000139"  [ label = "DDG: i"] 
  "1000102" -> "1000147"  [ label = "DDG: "] 
  "1000111" -> "1000115"  [ label = "DDG: i"] 
  "1000119" -> "1000115"  [ label = "DDG: i"] 
  "1000102" -> "1000115"  [ label = "DDG: "] 
  "1000115" -> "1000122"  [ label = "DDG: i"] 
  "1000102" -> "1000122"  [ label = "DDG: "] 
  "1000133" -> "1000131"  [ label = "DDG: i"] 
  "1000102" -> "1000131"  [ label = "DDG: "] 
  "1000142" -> "1000140"  [ label = "DDG: i"] 
  "1000102" -> "1000140"  [ label = "DDG: "] 
  "1000127" -> "1000133"  [ label = "DDG: i"] 
  "1000137" -> "1000133"  [ label = "DDG: i"] 
  "1000102" -> "1000133"  [ label = "DDG: "] 
  "1000131" -> "1000142"  [ label = "DDG: i"] 
  "1000102" -> "1000142"  [ label = "DDG: "] 
  "1000114" -> "1000121"  [ label = "CDG: "] 
  "1000114" -> "1000119"  [ label = "CDG: "] 
  "1000114" -> "1000114"  [ label = "CDG: "] 
  "1000114" -> "1000115"  [ label = "CDG: "] 
  "1000114" -> "1000122"  [ label = "CDG: "] 
  "1000130" -> "1000131"  [ label = "CDG: "] 
  "1000130" -> "1000142"  [ label = "CDG: "] 
  "1000130" -> "1000137"  [ label = "CDG: "] 
  "1000130" -> "1000130"  [ label = "CDG: "] 
  "1000130" -> "1000139"  [ label = "CDG: "] 
  "1000130" -> "1000133"  [ label = "CDG: "] 
  "1000130" -> "1000140"  [ label = "CDG: "] 
}
