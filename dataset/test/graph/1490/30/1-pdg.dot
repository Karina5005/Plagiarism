digraph "solve" {  
"1000150" [label = "(METHOD,solve)" ]
"1000262" [label = "(METHOD_RETURN,void)" ]
"1000153" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000173" [label = "(sort,sort(v.begin(), v.end()))" ]
"1000177" [label = "(<operator>.assignment,l = 0)" ]
"1000181" [label = "(<operator>.assignment,r = n - 1)" ]
"1000188" [label = "(<operator>.assignment,ans = -1)" ]
"1000245" [label = "(sort,sort(sol.begin(), sol.end()))" ]
"1000248" [label = "(<operator>.shiftLeft,cout << sol.size() << nline)" ]
"1000254" [label = "(<operator>.shiftLeft,cout << i << \" \")" ]
"1000259" [label = "(<operator>.shiftLeft,cout << nline)" ]
"1000159" [label = "(<operator>.assignment,i = 0)" ]
"1000162" [label = "(<operator>.lessThan,i < n)" ]
"1000165" [label = "(<operator>.postIncrement,i++)" ]
"1000193" [label = "(<operator>.lessEqualsThan,l <= r)" ]
"1000228" [label = "(<operator>.assignment,i = ans)" ]
"1000231" [label = "(<operator>.lessThan,i < n)" ]
"1000234" [label = "(<operator>.postIncrement,i++)" ]
"1000169" [label = "(<operator>.arithmeticShiftRight,cin >> x)" ]
"1000183" [label = "(<operator>.subtraction,n - 1)" ]
"1000190" [label = "(<operator>.minus,-1)" ]
"1000197" [label = "(<operator>.assignment,mid = l - (l - r) / 2)" ]
"1000237" [label = "(sol.push_back,sol.push_back(v[i].second + 1))" ]
"1000250" [label = "(<operator>.shiftLeft,sol.size() << nline)" ]
"1000256" [label = "(<operator>.shiftLeft,i << \" \")" ]
"1000207" [label = "(check,check(v, mid))" ]
"1000199" [label = "(<operator>.subtraction,l - (l - r) / 2)" ]
"1000211" [label = "(<operator>.assignment,ans = mid)" ]
"1000214" [label = "(<operator>.assignment,r = mid - 1)" ]
"1000220" [label = "(<operator>.assignment,l = mid + 1)" ]
"1000238" [label = "(<operator>.addition,v[i].second + 1)" ]
"1000201" [label = "(<operator>.division,(l - r) / 2)" ]
"1000202" [label = "(<operator>.subtraction,l - r)" ]
"1000216" [label = "(<operator>.subtraction,mid - 1)" ]
"1000222" [label = "(<operator>.addition,mid + 1)" ]
"1000239" [label = "(<operator>.fieldAccess,v[i].second)" ]
"1000240" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000243" [label = "(FIELD_IDENTIFIER,second,second)" ]
  "1000153" -> "1000262"  [ label = "DDG: cin"] 
  "1000153" -> "1000262"  [ label = "DDG: cin >> n"] 
  "1000173" -> "1000262"  [ label = "DDG: v.begin()"] 
  "1000173" -> "1000262"  [ label = "DDG: v.end()"] 
  "1000173" -> "1000262"  [ label = "DDG: sort(v.begin(), v.end())"] 
  "1000181" -> "1000262"  [ label = "DDG: n - 1"] 
  "1000188" -> "1000262"  [ label = "DDG: -1"] 
  "1000193" -> "1000262"  [ label = "DDG: l"] 
  "1000193" -> "1000262"  [ label = "DDG: r"] 
  "1000193" -> "1000262"  [ label = "DDG: l <= r"] 
  "1000228" -> "1000262"  [ label = "DDG: ans"] 
  "1000231" -> "1000262"  [ label = "DDG: n"] 
  "1000231" -> "1000262"  [ label = "DDG: i < n"] 
  "1000245" -> "1000262"  [ label = "DDG: sol.begin()"] 
  "1000245" -> "1000262"  [ label = "DDG: sol.end()"] 
  "1000245" -> "1000262"  [ label = "DDG: sort(sol.begin(), sol.end())"] 
  "1000250" -> "1000262"  [ label = "DDG: sol.size()"] 
  "1000248" -> "1000262"  [ label = "DDG: sol.size() << nline"] 
  "1000248" -> "1000262"  [ label = "DDG: cout << sol.size() << nline"] 
  "1000256" -> "1000262"  [ label = "DDG: i"] 
  "1000254" -> "1000262"  [ label = "DDG: i << \" \""] 
  "1000254" -> "1000262"  [ label = "DDG: cout << i << \" \""] 
  "1000259" -> "1000262"  [ label = "DDG: cout"] 
  "1000259" -> "1000262"  [ label = "DDG: nline"] 
  "1000259" -> "1000262"  [ label = "DDG: cout << nline"] 
  "1000237" -> "1000262"  [ label = "DDG: v[i].second + 1"] 
  "1000237" -> "1000262"  [ label = "DDG: sol.push_back(v[i].second + 1)"] 
  "1000201" -> "1000262"  [ label = "DDG: l - r"] 
  "1000199" -> "1000262"  [ label = "DDG: (l - r) / 2"] 
  "1000197" -> "1000262"  [ label = "DDG: l - (l - r) / 2"] 
  "1000207" -> "1000262"  [ label = "DDG: v"] 
  "1000207" -> "1000262"  [ label = "DDG: check(v, mid)"] 
  "1000222" -> "1000262"  [ label = "DDG: mid"] 
  "1000220" -> "1000262"  [ label = "DDG: mid + 1"] 
  "1000216" -> "1000262"  [ label = "DDG: mid"] 
  "1000214" -> "1000262"  [ label = "DDG: mid - 1"] 
  "1000169" -> "1000262"  [ label = "DDG: cin"] 
  "1000169" -> "1000262"  [ label = "DDG: x"] 
  "1000169" -> "1000262"  [ label = "DDG: cin >> x"] 
  "1000150" -> "1000177"  [ label = "DDG: "] 
  "1000183" -> "1000181"  [ label = "DDG: n"] 
  "1000183" -> "1000181"  [ label = "DDG: 1"] 
  "1000190" -> "1000188"  [ label = "DDG: 1"] 
  "1000150" -> "1000153"  [ label = "DDG: "] 
  "1000150" -> "1000159"  [ label = "DDG: "] 
  "1000150" -> "1000173"  [ label = "DDG: "] 
  "1000150" -> "1000181"  [ label = "DDG: "] 
  "1000150" -> "1000188"  [ label = "DDG: "] 
  "1000188" -> "1000228"  [ label = "DDG: ans"] 
  "1000211" -> "1000228"  [ label = "DDG: ans"] 
  "1000150" -> "1000228"  [ label = "DDG: "] 
  "1000150" -> "1000245"  [ label = "DDG: "] 
  "1000150" -> "1000248"  [ label = "DDG: "] 
  "1000250" -> "1000248"  [ label = "DDG: nline"] 
  "1000250" -> "1000248"  [ label = "DDG: sol.size()"] 
  "1000248" -> "1000254"  [ label = "DDG: cout"] 
  "1000150" -> "1000254"  [ label = "DDG: "] 
  "1000256" -> "1000254"  [ label = "DDG: \" \""] 
  "1000256" -> "1000254"  [ label = "DDG: i"] 
  "1000254" -> "1000259"  [ label = "DDG: cout"] 
  "1000150" -> "1000259"  [ label = "DDG: "] 
  "1000250" -> "1000259"  [ label = "DDG: nline"] 
  "1000159" -> "1000162"  [ label = "DDG: i"] 
  "1000165" -> "1000162"  [ label = "DDG: i"] 
  "1000150" -> "1000162"  [ label = "DDG: "] 
  "1000153" -> "1000162"  [ label = "DDG: n"] 
  "1000162" -> "1000165"  [ label = "DDG: i"] 
  "1000150" -> "1000165"  [ label = "DDG: "] 
  "1000162" -> "1000183"  [ label = "DDG: n"] 
  "1000150" -> "1000183"  [ label = "DDG: "] 
  "1000150" -> "1000190"  [ label = "DDG: "] 
  "1000177" -> "1000193"  [ label = "DDG: l"] 
  "1000199" -> "1000193"  [ label = "DDG: l"] 
  "1000220" -> "1000193"  [ label = "DDG: l"] 
  "1000150" -> "1000193"  [ label = "DDG: "] 
  "1000181" -> "1000193"  [ label = "DDG: r"] 
  "1000202" -> "1000193"  [ label = "DDG: r"] 
  "1000214" -> "1000193"  [ label = "DDG: r"] 
  "1000199" -> "1000197"  [ label = "DDG: (l - r) / 2"] 
  "1000199" -> "1000197"  [ label = "DDG: l"] 
  "1000228" -> "1000231"  [ label = "DDG: i"] 
  "1000234" -> "1000231"  [ label = "DDG: i"] 
  "1000150" -> "1000231"  [ label = "DDG: "] 
  "1000183" -> "1000231"  [ label = "DDG: n"] 
  "1000231" -> "1000234"  [ label = "DDG: i"] 
  "1000150" -> "1000234"  [ label = "DDG: "] 
  "1000150" -> "1000250"  [ label = "DDG: "] 
  "1000231" -> "1000256"  [ label = "DDG: i"] 
  "1000150" -> "1000256"  [ label = "DDG: "] 
  "1000153" -> "1000169"  [ label = "DDG: cin"] 
  "1000150" -> "1000169"  [ label = "DDG: "] 
  "1000150" -> "1000197"  [ label = "DDG: "] 
  "1000150" -> "1000237"  [ label = "DDG: "] 
  "1000202" -> "1000199"  [ label = "DDG: l"] 
  "1000150" -> "1000199"  [ label = "DDG: "] 
  "1000201" -> "1000199"  [ label = "DDG: l - r"] 
  "1000201" -> "1000199"  [ label = "DDG: 2"] 
  "1000150" -> "1000207"  [ label = "DDG: "] 
  "1000197" -> "1000207"  [ label = "DDG: mid"] 
  "1000207" -> "1000211"  [ label = "DDG: mid"] 
  "1000150" -> "1000211"  [ label = "DDG: "] 
  "1000216" -> "1000214"  [ label = "DDG: 1"] 
  "1000216" -> "1000214"  [ label = "DDG: mid"] 
  "1000207" -> "1000220"  [ label = "DDG: mid"] 
  "1000150" -> "1000220"  [ label = "DDG: "] 
  "1000150" -> "1000238"  [ label = "DDG: "] 
  "1000202" -> "1000201"  [ label = "DDG: l"] 
  "1000202" -> "1000201"  [ label = "DDG: r"] 
  "1000150" -> "1000201"  [ label = "DDG: "] 
  "1000150" -> "1000214"  [ label = "DDG: "] 
  "1000193" -> "1000202"  [ label = "DDG: l"] 
  "1000150" -> "1000202"  [ label = "DDG: "] 
  "1000193" -> "1000202"  [ label = "DDG: r"] 
  "1000150" -> "1000216"  [ label = "DDG: "] 
  "1000207" -> "1000216"  [ label = "DDG: mid"] 
  "1000207" -> "1000222"  [ label = "DDG: mid"] 
  "1000150" -> "1000222"  [ label = "DDG: "] 
  "1000162" -> "1000165"  [ label = "CDG: "] 
  "1000162" -> "1000169"  [ label = "CDG: "] 
  "1000162" -> "1000162"  [ label = "CDG: "] 
  "1000193" -> "1000199"  [ label = "CDG: "] 
  "1000193" -> "1000197"  [ label = "CDG: "] 
  "1000193" -> "1000207"  [ label = "CDG: "] 
  "1000193" -> "1000201"  [ label = "CDG: "] 
  "1000193" -> "1000202"  [ label = "CDG: "] 
  "1000193" -> "1000193"  [ label = "CDG: "] 
  "1000231" -> "1000239"  [ label = "CDG: "] 
  "1000231" -> "1000238"  [ label = "CDG: "] 
  "1000231" -> "1000243"  [ label = "CDG: "] 
  "1000231" -> "1000234"  [ label = "CDG: "] 
  "1000231" -> "1000237"  [ label = "CDG: "] 
  "1000231" -> "1000231"  [ label = "CDG: "] 
  "1000231" -> "1000240"  [ label = "CDG: "] 
  "1000207" -> "1000211"  [ label = "CDG: "] 
  "1000207" -> "1000216"  [ label = "CDG: "] 
  "1000207" -> "1000222"  [ label = "CDG: "] 
  "1000207" -> "1000220"  [ label = "CDG: "] 
  "1000207" -> "1000214"  [ label = "CDG: "] 
}
