digraph "solve" {  
"1000271" [label = "(METHOD,solve)" ]
"1000341" [label = "(METHOD_RETURN,int)" ]
"1000274" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000277" [label = "(arr,arr(a,n))" ]
"1000280" [label = "(sort,sort(a))" ]
"1000283" [label = "(a.pb,a.pb(0))" ]
"1000286" [label = "(<operator>.assignment,c=0)" ]
"1000290" [label = "(<operator>.assignment,sum=0)" ]
"1000294" [label = "(<operator>.assignment,ans=n)" ]
"1000319" [label = "(sort,sort(p))" ]
"1000339" [label = "(RETURN,return ans;,return ans;)" ]
"1000298" [label = "(<operator>.postIncrement,c++)" ]
"1000323" [label = "(<operator>.assignment,k=(sum-(p[i]*(p.size()-i))))" ]
"1000334" [label = "(<operator>.assignment,ans=min(ans,k))" ]
"1000340" [label = "(IDENTIFIER,ans,return ans;)" ]
"1000301" [label = "(<operator>.notEquals,a[i]!=a[i+1])" ]
"1000311" [label = "(<operator>.assignmentPlus,sum+=c)" ]
"1000314" [label = "(p.pb,p.pb(c))" ]
"1000316" [label = "(<operator>.assignment,c=0)" ]
"1000325" [label = "(<operator>.subtraction,sum-(p[i]*(p.size()-i)))" ]
"1000336" [label = "(min,min(ans,k))" ]
"1000327" [label = "(<operator>.multiplication,p[i]*(p.size()-i))" ]
"1000307" [label = "(<operator>.addition,i+1)" ]
"1000331" [label = "(<operator>.subtraction,p.size()-i)" ]
  "1000339" -> "1000341"  [ label = "DDG: <RET>"] 
  "1000274" -> "1000341"  [ label = "DDG: cin>>n"] 
  "1000277" -> "1000341"  [ label = "DDG: arr(a,n)"] 
  "1000280" -> "1000341"  [ label = "DDG: a"] 
  "1000280" -> "1000341"  [ label = "DDG: sort(a)"] 
  "1000283" -> "1000341"  [ label = "DDG: a.pb(0)"] 
  "1000294" -> "1000341"  [ label = "DDG: n"] 
  "1000298" -> "1000341"  [ label = "DDG: c"] 
  "1000301" -> "1000341"  [ label = "DDG: a[i]"] 
  "1000301" -> "1000341"  [ label = "DDG: a[i+1]"] 
  "1000301" -> "1000341"  [ label = "DDG: a[i]!=a[i+1]"] 
  "1000314" -> "1000341"  [ label = "DDG: p.pb(c)"] 
  "1000316" -> "1000341"  [ label = "DDG: c"] 
  "1000319" -> "1000341"  [ label = "DDG: p"] 
  "1000319" -> "1000341"  [ label = "DDG: sort(p)"] 
  "1000325" -> "1000341"  [ label = "DDG: sum"] 
  "1000327" -> "1000341"  [ label = "DDG: p[i]"] 
  "1000331" -> "1000341"  [ label = "DDG: p.size()"] 
  "1000331" -> "1000341"  [ label = "DDG: i"] 
  "1000327" -> "1000341"  [ label = "DDG: p.size()-i"] 
  "1000325" -> "1000341"  [ label = "DDG: p[i]*(p.size()-i)"] 
  "1000323" -> "1000341"  [ label = "DDG: sum-(p[i]*(p.size()-i))"] 
  "1000334" -> "1000341"  [ label = "DDG: ans"] 
  "1000336" -> "1000341"  [ label = "DDG: k"] 
  "1000334" -> "1000341"  [ label = "DDG: min(ans,k)"] 
  "1000274" -> "1000341"  [ label = "DDG: cin"] 
  "1000271" -> "1000286"  [ label = "DDG: "] 
  "1000271" -> "1000290"  [ label = "DDG: "] 
  "1000277" -> "1000294"  [ label = "DDG: n"] 
  "1000271" -> "1000294"  [ label = "DDG: "] 
  "1000340" -> "1000339"  [ label = "DDG: ans"] 
  "1000334" -> "1000339"  [ label = "DDG: ans"] 
  "1000271" -> "1000274"  [ label = "DDG: "] 
  "1000271" -> "1000277"  [ label = "DDG: "] 
  "1000274" -> "1000277"  [ label = "DDG: n"] 
  "1000277" -> "1000280"  [ label = "DDG: a"] 
  "1000271" -> "1000280"  [ label = "DDG: "] 
  "1000271" -> "1000283"  [ label = "DDG: "] 
  "1000271" -> "1000319"  [ label = "DDG: "] 
  "1000325" -> "1000323"  [ label = "DDG: sum"] 
  "1000325" -> "1000323"  [ label = "DDG: p[i]*(p.size()-i)"] 
  "1000336" -> "1000334"  [ label = "DDG: ans"] 
  "1000336" -> "1000334"  [ label = "DDG: k"] 
  "1000271" -> "1000340"  [ label = "DDG: "] 
  "1000286" -> "1000298"  [ label = "DDG: c"] 
  "1000271" -> "1000298"  [ label = "DDG: "] 
  "1000271" -> "1000323"  [ label = "DDG: "] 
  "1000271" -> "1000334"  [ label = "DDG: "] 
  "1000280" -> "1000301"  [ label = "DDG: a"] 
  "1000298" -> "1000311"  [ label = "DDG: c"] 
  "1000271" -> "1000311"  [ label = "DDG: "] 
  "1000271" -> "1000316"  [ label = "DDG: "] 
  "1000290" -> "1000325"  [ label = "DDG: sum"] 
  "1000311" -> "1000325"  [ label = "DDG: sum"] 
  "1000271" -> "1000325"  [ label = "DDG: "] 
  "1000327" -> "1000325"  [ label = "DDG: p[i]"] 
  "1000327" -> "1000325"  [ label = "DDG: p.size()-i"] 
  "1000294" -> "1000336"  [ label = "DDG: ans"] 
  "1000271" -> "1000336"  [ label = "DDG: "] 
  "1000323" -> "1000336"  [ label = "DDG: k"] 
  "1000290" -> "1000311"  [ label = "DDG: sum"] 
  "1000271" -> "1000314"  [ label = "DDG: "] 
  "1000298" -> "1000314"  [ label = "DDG: c"] 
  "1000319" -> "1000327"  [ label = "DDG: p"] 
  "1000331" -> "1000327"  [ label = "DDG: i"] 
  "1000331" -> "1000327"  [ label = "DDG: p.size()"] 
  "1000271" -> "1000307"  [ label = "DDG: "] 
  "1000271" -> "1000331"  [ label = "DDG: "] 
  "1000301" -> "1000316"  [ label = "CDG: "] 
  "1000301" -> "1000314"  [ label = "CDG: "] 
  "1000301" -> "1000311"  [ label = "CDG: "] 
}
