digraph "solve" {  
"1000342" [label = "(METHOD,solve)" ]
"1000492" [label = "(METHOD_RETURN,void)" ]
"1000345" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000349" [label = "(<operator>.arithmeticShiftRight,cin>>v)" ]
"1000353" [label = "(<operator>.assignment,temp = v)" ]
"1000356" [label = "(sort,sort(all(v)))" ]
"1000360" [label = "(<operator>.assignment,pref[0] = v[0])" ]
"1000367" [label = "(<operator>.assignment,pref[i] = pref[i - 1] + v[i])" ]
"1000487" [label = "(<operator>.shiftLeft,cout<<ans<<nl)" ]
"1000382" [label = "(<operator>.assignment,sum = pref[id])" ]
"1000388" [label = "(<operator>.assignment,j = id + 1)" ]
"1000401" [label = "(RETURN,return j == n;,return j == n;)" ]
"1000411" [label = "(<operator>.assignment,mn = inf)" ]
"1000357" [label = "(all,all(v))" ]
"1000371" [label = "(<operator>.addition,pref[i - 1] + v[i])" ]
"1000394" [label = "(<operator>.assignmentPlus,sum += v[j])" ]
"1000399" [label = "(<operator>.postIncrement,j++)" ]
"1000402" [label = "(<operator>.equals,j == n)" ]
"1000390" [label = "(<operator>.addition,id + 1)" ]
"1000374" [label = "(<operator>.subtraction,i - 1)" ]
"1000425" [label = "(<operator>.lessEqualsThan,low <= high)" ]
"1000465" [label = "(<operator>.lessThan,i<n)" ]
"1000468" [label = "(<operator>.postIncrement,i++)" ]
"1000430" [label = "(<operator>.assignment,mid = (low + high)/2)" ]
"1000432" [label = "(<operator>.division,(low + high)/2)" ]
"1000438" [label = "(is_winning,is_winning(mid))" ]
"1000472" [label = "(<operator>.greaterEqualsThan,temp[i] >= mn)" ]
"1000477" [label = "(ans.pb,ans.pb(i + 1))" ]
"1000433" [label = "(<operator>.addition,low + high)" ]
"1000441" [label = "(<operator>.assignment,high = mid - 1)" ]
"1000446" [label = "(<operator>.assignment,mn = min(mn, v[mid]))" ]
"1000454" [label = "(<operator>.assignment,low = mid + 1)" ]
"1000473" [label = "(<operator>.indirectIndexAccess,temp[i])" ]
"1000478" [label = "(<operator>.addition,i + 1)" ]
"1000443" [label = "(<operator>.subtraction,mid - 1)" ]
"1000448" [label = "(min,min(mn, v[mid]))" ]
"1000456" [label = "(<operator>.addition,mid + 1)" ]
"1000450" [label = "(<operator>.indirectIndexAccess,v[mid])" ]
  "1000345" -> "1000492"  [ label = "DDG: cin>>n"] 
  "1000349" -> "1000492"  [ label = "DDG: cin"] 
  "1000349" -> "1000492"  [ label = "DDG: cin>>v"] 
  "1000353" -> "1000492"  [ label = "DDG: temp"] 
  "1000357" -> "1000492"  [ label = "DDG: v"] 
  "1000356" -> "1000492"  [ label = "DDG: all(v)"] 
  "1000356" -> "1000492"  [ label = "DDG: sort(all(v))"] 
  "1000360" -> "1000492"  [ label = "DDG: pref[0]"] 
  "1000360" -> "1000492"  [ label = "DDG: v[0]"] 
  "1000367" -> "1000492"  [ label = "DDG: pref[i]"] 
  "1000374" -> "1000492"  [ label = "DDG: i"] 
  "1000371" -> "1000492"  [ label = "DDG: pref[i - 1]"] 
  "1000371" -> "1000492"  [ label = "DDG: v[i]"] 
  "1000367" -> "1000492"  [ label = "DDG: pref[i - 1] + v[i]"] 
  "1000382" -> "1000492"  [ label = "DDG: pref[id]"] 
  "1000390" -> "1000492"  [ label = "DDG: id"] 
  "1000388" -> "1000492"  [ label = "DDG: id + 1"] 
  "1000394" -> "1000492"  [ label = "DDG: sum"] 
  "1000394" -> "1000492"  [ label = "DDG: v[j]"] 
  "1000402" -> "1000492"  [ label = "DDG: j"] 
  "1000402" -> "1000492"  [ label = "DDG: n"] 
  "1000402" -> "1000492"  [ label = "DDG: j == n"] 
  "1000487" -> "1000492"  [ label = "DDG: cout<<ans<<nl"] 
  "1000487" -> "1000492"  [ label = "DDG: cout"] 
  "1000487" -> "1000492"  [ label = "DDG: ans<<nl"] 
  "1000401" -> "1000492"  [ label = "DDG: <RET>"] 
  "1000411" -> "1000492"  [ label = "DDG: inf"] 
  "1000349" -> "1000353"  [ label = "DDG: v"] 
  "1000342" -> "1000353"  [ label = "DDG: "] 
  "1000357" -> "1000360"  [ label = "DDG: v"] 
  "1000357" -> "1000367"  [ label = "DDG: v"] 
  "1000342" -> "1000345"  [ label = "DDG: "] 
  "1000345" -> "1000349"  [ label = "DDG: cin"] 
  "1000342" -> "1000349"  [ label = "DDG: "] 
  "1000357" -> "1000356"  [ label = "DDG: v"] 
  "1000342" -> "1000388"  [ label = "DDG: "] 
  "1000402" -> "1000401"  [ label = "DDG: j == n"] 
  "1000342" -> "1000357"  [ label = "DDG: "] 
  "1000349" -> "1000357"  [ label = "DDG: v"] 
  "1000357" -> "1000371"  [ label = "DDG: v"] 
  "1000342" -> "1000382"  [ label = "DDG: "] 
  "1000357" -> "1000394"  [ label = "DDG: v"] 
  "1000342" -> "1000390"  [ label = "DDG: "] 
  "1000382" -> "1000394"  [ label = "DDG: sum"] 
  "1000342" -> "1000394"  [ label = "DDG: "] 
  "1000388" -> "1000399"  [ label = "DDG: j"] 
  "1000342" -> "1000399"  [ label = "DDG: "] 
  "1000399" -> "1000402"  [ label = "DDG: j"] 
  "1000342" -> "1000402"  [ label = "DDG: "] 
  "1000345" -> "1000402"  [ label = "DDG: n"] 
  "1000342" -> "1000374"  [ label = "DDG: "] 
  "1000425" -> "1000430"  [ label = "CDG: "] 
  "1000425" -> "1000425"  [ label = "CDG: "] 
  "1000425" -> "1000438"  [ label = "CDG: "] 
  "1000425" -> "1000432"  [ label = "CDG: "] 
  "1000425" -> "1000433"  [ label = "CDG: "] 
  "1000465" -> "1000465"  [ label = "CDG: "] 
  "1000465" -> "1000473"  [ label = "CDG: "] 
  "1000465" -> "1000468"  [ label = "CDG: "] 
  "1000465" -> "1000472"  [ label = "CDG: "] 
  "1000438" -> "1000446"  [ label = "CDG: "] 
  "1000438" -> "1000450"  [ label = "CDG: "] 
  "1000438" -> "1000454"  [ label = "CDG: "] 
  "1000438" -> "1000456"  [ label = "CDG: "] 
  "1000438" -> "1000441"  [ label = "CDG: "] 
  "1000438" -> "1000443"  [ label = "CDG: "] 
  "1000438" -> "1000448"  [ label = "CDG: "] 
  "1000472" -> "1000477"  [ label = "CDG: "] 
  "1000472" -> "1000478"  [ label = "CDG: "] 
}
