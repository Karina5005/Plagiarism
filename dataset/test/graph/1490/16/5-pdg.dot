digraph "solve" {  
"1000175" [label = "(METHOD,solve)" ]
"1000410" [label = "(METHOD_RETURN,void)" ]
"1000179" [label = "(<operator>.arithmeticShiftRight,cin>>n>>m)" ]
"1000187" [label = "(<operator>.assignment,i=0)" ]
"1000190" [label = "(<operator>.lessThan,i<n)" ]
"1000193" [label = "(<operator>.postIncrement,i++)" ]
"1000195" [label = "(<operator>.arithmeticShiftRight,cin>>a[i])" ]
"1000203" [label = "(<operator>.assignment,pref[0] = 0)" ]
"1000208" [label = "(<operator>.assignment,pref_mx[0] = 0)" ]
"1000215" [label = "(<operator>.assignment,i=1)" ]
"1000218" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000221" [label = "(<operator>.postIncrement,i++)" ]
"1000264" [label = "(<operator>.assignment,full_cycles = min(t/n, (x+pref[n]-1)/pref[n]))" ]
"1000282" [label = "(<operator>.assignment,rem = t%n)" ]
"1000317" [label = "(RETURN,return false;,return false;)" ]
"1000181" [label = "(<operator>.arithmeticShiftRight,n>>m)" ]
"1000224" [label = "(<operator>.assignment,pref[i] = pref[i-1] + a[i-1])" ]
"1000239" [label = "(<operator>.assignment,pref_mx[i] = max(pref_mx[i-1], pref[i]))" ]
"1000254" [label = "(<operator>.lessEqualsThan,t <= n)" ]
"1000257" [label = "(RETURN,return pref_mx[t] >= x;,return pref_mx[t] >= x;)" ]
"1000288" [label = "(<operator>.greaterEqualsThan,pref[n]*full_cycles + pref_mx[rem] >= x)" ]
"1000299" [label = "(RETURN,return true;,return true;)" ]
"1000302" [label = "(<operator>.greaterEqualsThan,pref[n]*(full_cycles - 1) + pref_mx[n] >= x)" ]
"1000315" [label = "(RETURN,return true;,return true;)" ]
"1000318" [label = "(IDENTIFIER,false,return false;)" ]
"1000258" [label = "(<operator>.greaterEqualsThan,pref_mx[t] >= x)" ]
"1000266" [label = "(min,min(t/n, (x+pref[n]-1)/pref[n]))" ]
"1000284" [label = "(<operator>.modulo,t%n)" ]
"1000300" [label = "(IDENTIFIER,true,return true;)" ]
"1000316" [label = "(IDENTIFIER,true,return true;)" ]
"1000228" [label = "(<operator>.addition,pref[i-1] + a[i-1])" ]
"1000243" [label = "(max,max(pref_mx[i-1], pref[i]))" ]
"1000267" [label = "(<operator>.division,t/n)" ]
"1000270" [label = "(<operator>.division,(x+pref[n]-1)/pref[n])" ]
"1000289" [label = "(<operator>.addition,pref[n]*full_cycles + pref_mx[rem])" ]
"1000303" [label = "(<operator>.addition,pref[n]*(full_cycles - 1) + pref_mx[n])" ]
"1000271" [label = "(<operator>.addition,x+pref[n]-1)" ]
"1000290" [label = "(<operator>.multiplication,pref[n]*full_cycles)" ]
"1000304" [label = "(<operator>.multiplication,pref[n]*(full_cycles - 1))" ]
"1000231" [label = "(<operator>.subtraction,i-1)" ]
"1000236" [label = "(<operator>.subtraction,i-1)" ]
"1000246" [label = "(<operator>.subtraction,i-1)" ]
"1000273" [label = "(<operator>.subtraction,pref[n]-1)" ]
"1000308" [label = "(<operator>.subtraction,full_cycles - 1)" ]
"1000320" [label = "(<operator>.postDecrement,m--)" ]
"1000197" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000324" [label = "(<operator>.arithmeticShiftRight,cin>>x)" ]
"1000348" [label = "(<operator>.assignment,l = 1)" ]
"1000352" [label = "(<operator>.assignment,r = 1e17)" ]
"1000366" [label = "(<operator>.assignment,ans = r)" ]
"1000402" [label = "(<operator>.shiftLeft,cout<<ans-1<<\" \")" ]
"1000225" [label = "(<operator>.indirectIndexAccess,pref[i])" ]
"1000240" [label = "(<operator>.indirectIndexAccess,pref_mx[i])" ]
"1000328" [label = "(<operator>.logicalAnd,x > pref_mx[n] && pref[n] <= 0)" ]
"1000356" [label = "(<operator>.lessEqualsThan,pref[n] <= 0)" ]
"1000361" [label = "(<operator>.assignment,r = n)" ]
"1000370" [label = "(<operator>.lessEqualsThan,l <= r)" ]
"1000404" [label = "(<operator>.shiftLeft,ans-1<<\" \")" ]
"1000229" [label = "(<operator>.indirectIndexAccess,pref[i-1])" ]
"1000234" [label = "(<operator>.indirectIndexAccess,a[i-1])" ]
"1000244" [label = "(<operator>.indirectIndexAccess,pref_mx[i-1])" ]
"1000249" [label = "(<operator>.indirectIndexAccess,pref[i])" ]
"1000259" [label = "(<operator>.indirectIndexAccess,pref_mx[t])" ]
"1000278" [label = "(<operator>.indirectIndexAccess,pref[n])" ]
"1000295" [label = "(<operator>.indirectIndexAccess,pref_mx[rem])" ]
"1000311" [label = "(<operator>.indirectIndexAccess,pref_mx[n])" ]
"1000329" [label = "(<operator>.greaterThan,x > pref_mx[n])" ]
"1000334" [label = "(<operator>.lessEqualsThan,pref[n] <= 0)" ]
"1000340" [label = "(<operator>.shiftLeft,cout<<-1<<\" \")" ]
"1000357" [label = "(<operator>.indirectIndexAccess,pref[n])" ]
"1000374" [label = "(<operator>.assignment,mid = l + (r-l)/2)" ]
"1000405" [label = "(<operator>.subtraction,ans-1)" ]
"1000291" [label = "(<operator>.indirectIndexAccess,pref[n])" ]
"1000305" [label = "(<operator>.indirectIndexAccess,pref[n])" ]
"1000331" [label = "(<operator>.indirectIndexAccess,pref_mx[n])" ]
"1000335" [label = "(<operator>.indirectIndexAccess,pref[n])" ]
"1000342" [label = "(<operator>.shiftLeft,-1<<\" \")" ]
"1000376" [label = "(<operator>.addition,l + (r-l)/2)" ]
"1000384" [label = "(check,check(mid, x))" ]
"1000274" [label = "(<operator>.indirectIndexAccess,pref[n])" ]
"1000343" [label = "(<operator>.minus,-1)" ]
"1000378" [label = "(<operator>.division,(r-l)/2)" ]
"1000388" [label = "(<operator>.assignment,ans = mid)" ]
"1000391" [label = "(<operator>.assignment,r = mid-1)" ]
"1000397" [label = "(<operator>.assignment,l = mid+1)" ]
"1000379" [label = "(<operator>.subtraction,r-l)" ]
"1000393" [label = "(<operator>.subtraction,mid-1)" ]
"1000399" [label = "(<operator>.addition,mid+1)" ]
  "1000299" -> "1000410"  [ label = "DDG: <RET>"] 
  "1000257" -> "1000410"  [ label = "DDG: <RET>"] 
  "1000317" -> "1000410"  [ label = "DDG: <RET>"] 
  "1000179" -> "1000410"  [ label = "DDG: cin"] 
  "1000181" -> "1000410"  [ label = "DDG: m"] 
  "1000179" -> "1000410"  [ label = "DDG: n>>m"] 
  "1000179" -> "1000410"  [ label = "DDG: cin>>n>>m"] 
  "1000190" -> "1000410"  [ label = "DDG: i<n"] 
  "1000203" -> "1000410"  [ label = "DDG: pref[0]"] 
  "1000208" -> "1000410"  [ label = "DDG: pref_mx[0]"] 
  "1000218" -> "1000410"  [ label = "DDG: i"] 
  "1000218" -> "1000410"  [ label = "DDG: i<=n"] 
  "1000254" -> "1000410"  [ label = "DDG: t"] 
  "1000254" -> "1000410"  [ label = "DDG: n"] 
  "1000254" -> "1000410"  [ label = "DDG: t <= n"] 
  "1000266" -> "1000410"  [ label = "DDG: t/n"] 
  "1000271" -> "1000410"  [ label = "DDG: pref[n]-1"] 
  "1000270" -> "1000410"  [ label = "DDG: x+pref[n]-1"] 
  "1000266" -> "1000410"  [ label = "DDG: (x+pref[n]-1)/pref[n]"] 
  "1000264" -> "1000410"  [ label = "DDG: min(t/n, (x+pref[n]-1)/pref[n])"] 
  "1000282" -> "1000410"  [ label = "DDG: rem"] 
  "1000284" -> "1000410"  [ label = "DDG: t"] 
  "1000284" -> "1000410"  [ label = "DDG: n"] 
  "1000282" -> "1000410"  [ label = "DDG: t%n"] 
  "1000290" -> "1000410"  [ label = "DDG: pref[n]"] 
  "1000290" -> "1000410"  [ label = "DDG: full_cycles"] 
  "1000289" -> "1000410"  [ label = "DDG: pref[n]*full_cycles"] 
  "1000289" -> "1000410"  [ label = "DDG: pref_mx[rem]"] 
  "1000288" -> "1000410"  [ label = "DDG: pref[n]*full_cycles + pref_mx[rem]"] 
  "1000288" -> "1000410"  [ label = "DDG: x"] 
  "1000288" -> "1000410"  [ label = "DDG: pref[n]*full_cycles + pref_mx[rem] >= x"] 
  "1000304" -> "1000410"  [ label = "DDG: pref[n]"] 
  "1000308" -> "1000410"  [ label = "DDG: full_cycles"] 
  "1000304" -> "1000410"  [ label = "DDG: full_cycles - 1"] 
  "1000303" -> "1000410"  [ label = "DDG: pref[n]*(full_cycles - 1)"] 
  "1000303" -> "1000410"  [ label = "DDG: pref_mx[n]"] 
  "1000302" -> "1000410"  [ label = "DDG: pref[n]*(full_cycles - 1) + pref_mx[n]"] 
  "1000302" -> "1000410"  [ label = "DDG: x"] 
  "1000302" -> "1000410"  [ label = "DDG: pref[n]*(full_cycles - 1) + pref_mx[n] >= x"] 
  "1000258" -> "1000410"  [ label = "DDG: pref_mx[t]"] 
  "1000258" -> "1000410"  [ label = "DDG: x"] 
  "1000258" -> "1000410"  [ label = "DDG: pref_mx[t] >= x"] 
  "1000228" -> "1000410"  [ label = "DDG: pref[i-1]"] 
  "1000228" -> "1000410"  [ label = "DDG: a[i-1]"] 
  "1000224" -> "1000410"  [ label = "DDG: pref[i-1] + a[i-1]"] 
  "1000239" -> "1000410"  [ label = "DDG: pref_mx[i]"] 
  "1000243" -> "1000410"  [ label = "DDG: pref_mx[i-1]"] 
  "1000243" -> "1000410"  [ label = "DDG: pref[i]"] 
  "1000239" -> "1000410"  [ label = "DDG: max(pref_mx[i-1], pref[i])"] 
  "1000195" -> "1000410"  [ label = "DDG: cin"] 
  "1000195" -> "1000410"  [ label = "DDG: a[i]"] 
  "1000195" -> "1000410"  [ label = "DDG: cin>>a[i]"] 
  "1000315" -> "1000410"  [ label = "DDG: <RET>"] 
  "1000175" -> "1000179"  [ label = "DDG: "] 
  "1000181" -> "1000179"  [ label = "DDG: n"] 
  "1000181" -> "1000179"  [ label = "DDG: m"] 
  "1000175" -> "1000187"  [ label = "DDG: "] 
  "1000175" -> "1000203"  [ label = "DDG: "] 
  "1000175" -> "1000208"  [ label = "DDG: "] 
  "1000175" -> "1000215"  [ label = "DDG: "] 
  "1000266" -> "1000264"  [ label = "DDG: (x+pref[n]-1)/pref[n]"] 
  "1000266" -> "1000264"  [ label = "DDG: t/n"] 
  "1000284" -> "1000282"  [ label = "DDG: n"] 
  "1000284" -> "1000282"  [ label = "DDG: t"] 
  "1000318" -> "1000317"  [ label = "DDG: false"] 
  "1000175" -> "1000317"  [ label = "DDG: "] 
  "1000175" -> "1000181"  [ label = "DDG: "] 
  "1000187" -> "1000190"  [ label = "DDG: i"] 
  "1000193" -> "1000190"  [ label = "DDG: i"] 
  "1000175" -> "1000190"  [ label = "DDG: "] 
  "1000181" -> "1000190"  [ label = "DDG: n"] 
  "1000190" -> "1000193"  [ label = "DDG: i"] 
  "1000175" -> "1000193"  [ label = "DDG: "] 
  "1000179" -> "1000195"  [ label = "DDG: cin"] 
  "1000175" -> "1000195"  [ label = "DDG: "] 
  "1000215" -> "1000218"  [ label = "DDG: i"] 
  "1000221" -> "1000218"  [ label = "DDG: i"] 
  "1000175" -> "1000218"  [ label = "DDG: "] 
  "1000190" -> "1000218"  [ label = "DDG: n"] 
  "1000246" -> "1000221"  [ label = "DDG: i"] 
  "1000175" -> "1000221"  [ label = "DDG: "] 
  "1000243" -> "1000239"  [ label = "DDG: pref_mx[i-1]"] 
  "1000243" -> "1000239"  [ label = "DDG: pref[i]"] 
  "1000258" -> "1000257"  [ label = "DDG: pref_mx[t] >= x"] 
  "1000175" -> "1000264"  [ label = "DDG: "] 
  "1000175" -> "1000282"  [ label = "DDG: "] 
  "1000300" -> "1000299"  [ label = "DDG: true"] 
  "1000175" -> "1000299"  [ label = "DDG: "] 
  "1000316" -> "1000315"  [ label = "DDG: true"] 
  "1000175" -> "1000315"  [ label = "DDG: "] 
  "1000175" -> "1000318"  [ label = "DDG: "] 
  "1000175" -> "1000254"  [ label = "DDG: "] 
  "1000218" -> "1000254"  [ label = "DDG: n"] 
  "1000267" -> "1000266"  [ label = "DDG: n"] 
  "1000267" -> "1000266"  [ label = "DDG: t"] 
  "1000270" -> "1000266"  [ label = "DDG: pref[n]"] 
  "1000270" -> "1000266"  [ label = "DDG: x+pref[n]-1"] 
  "1000267" -> "1000284"  [ label = "DDG: t"] 
  "1000175" -> "1000284"  [ label = "DDG: "] 
  "1000267" -> "1000284"  [ label = "DDG: n"] 
  "1000290" -> "1000288"  [ label = "DDG: full_cycles"] 
  "1000290" -> "1000288"  [ label = "DDG: pref[n]"] 
  "1000175" -> "1000288"  [ label = "DDG: "] 
  "1000175" -> "1000300"  [ label = "DDG: "] 
  "1000304" -> "1000302"  [ label = "DDG: full_cycles - 1"] 
  "1000304" -> "1000302"  [ label = "DDG: pref[n]"] 
  "1000288" -> "1000302"  [ label = "DDG: x"] 
  "1000175" -> "1000302"  [ label = "DDG: "] 
  "1000175" -> "1000316"  [ label = "DDG: "] 
  "1000224" -> "1000243"  [ label = "DDG: pref[i]"] 
  "1000175" -> "1000258"  [ label = "DDG: "] 
  "1000254" -> "1000267"  [ label = "DDG: t"] 
  "1000175" -> "1000267"  [ label = "DDG: "] 
  "1000254" -> "1000267"  [ label = "DDG: n"] 
  "1000273" -> "1000270"  [ label = "DDG: pref[n]"] 
  "1000273" -> "1000270"  [ label = "DDG: 1"] 
  "1000175" -> "1000270"  [ label = "DDG: "] 
  "1000290" -> "1000289"  [ label = "DDG: full_cycles"] 
  "1000290" -> "1000289"  [ label = "DDG: pref[n]"] 
  "1000304" -> "1000303"  [ label = "DDG: full_cycles - 1"] 
  "1000304" -> "1000303"  [ label = "DDG: pref[n]"] 
  "1000175" -> "1000271"  [ label = "DDG: "] 
  "1000273" -> "1000271"  [ label = "DDG: pref[n]"] 
  "1000273" -> "1000271"  [ label = "DDG: 1"] 
  "1000270" -> "1000290"  [ label = "DDG: pref[n]"] 
  "1000264" -> "1000290"  [ label = "DDG: full_cycles"] 
  "1000175" -> "1000290"  [ label = "DDG: "] 
  "1000290" -> "1000304"  [ label = "DDG: pref[n]"] 
  "1000308" -> "1000304"  [ label = "DDG: 1"] 
  "1000308" -> "1000304"  [ label = "DDG: full_cycles"] 
  "1000218" -> "1000231"  [ label = "DDG: i"] 
  "1000175" -> "1000231"  [ label = "DDG: "] 
  "1000231" -> "1000236"  [ label = "DDG: i"] 
  "1000175" -> "1000236"  [ label = "DDG: "] 
  "1000236" -> "1000246"  [ label = "DDG: i"] 
  "1000175" -> "1000246"  [ label = "DDG: "] 
  "1000175" -> "1000273"  [ label = "DDG: "] 
  "1000290" -> "1000308"  [ label = "DDG: full_cycles"] 
  "1000175" -> "1000308"  [ label = "DDG: "] 
  "1000190" -> "1000197"  [ label = "CDG: "] 
  "1000190" -> "1000190"  [ label = "CDG: "] 
  "1000190" -> "1000195"  [ label = "CDG: "] 
  "1000190" -> "1000193"  [ label = "CDG: "] 
  "1000218" -> "1000221"  [ label = "CDG: "] 
  "1000218" -> "1000243"  [ label = "CDG: "] 
  "1000218" -> "1000244"  [ label = "CDG: "] 
  "1000218" -> "1000236"  [ label = "CDG: "] 
  "1000218" -> "1000224"  [ label = "CDG: "] 
  "1000218" -> "1000240"  [ label = "CDG: "] 
  "1000218" -> "1000239"  [ label = "CDG: "] 
  "1000218" -> "1000246"  [ label = "CDG: "] 
  "1000218" -> "1000229"  [ label = "CDG: "] 
  "1000218" -> "1000234"  [ label = "CDG: "] 
  "1000218" -> "1000225"  [ label = "CDG: "] 
  "1000218" -> "1000249"  [ label = "CDG: "] 
  "1000218" -> "1000218"  [ label = "CDG: "] 
  "1000218" -> "1000231"  [ label = "CDG: "] 
  "1000218" -> "1000228"  [ label = "CDG: "] 
  "1000320" -> "1000329"  [ label = "CDG: "] 
  "1000320" -> "1000320"  [ label = "CDG: "] 
  "1000320" -> "1000324"  [ label = "CDG: "] 
  "1000320" -> "1000328"  [ label = "CDG: "] 
  "1000320" -> "1000331"  [ label = "CDG: "] 
  "1000254" -> "1000258"  [ label = "CDG: "] 
  "1000254" -> "1000291"  [ label = "CDG: "] 
  "1000254" -> "1000274"  [ label = "CDG: "] 
  "1000254" -> "1000259"  [ label = "CDG: "] 
  "1000254" -> "1000282"  [ label = "CDG: "] 
  "1000254" -> "1000284"  [ label = "CDG: "] 
  "1000254" -> "1000289"  [ label = "CDG: "] 
  "1000254" -> "1000273"  [ label = "CDG: "] 
  "1000254" -> "1000295"  [ label = "CDG: "] 
  "1000254" -> "1000288"  [ label = "CDG: "] 
  "1000254" -> "1000270"  [ label = "CDG: "] 
  "1000254" -> "1000290"  [ label = "CDG: "] 
  "1000254" -> "1000266"  [ label = "CDG: "] 
  "1000254" -> "1000271"  [ label = "CDG: "] 
  "1000254" -> "1000267"  [ label = "CDG: "] 
  "1000254" -> "1000257"  [ label = "CDG: "] 
  "1000254" -> "1000278"  [ label = "CDG: "] 
  "1000254" -> "1000264"  [ label = "CDG: "] 
  "1000288" -> "1000305"  [ label = "CDG: "] 
  "1000288" -> "1000302"  [ label = "CDG: "] 
  "1000288" -> "1000308"  [ label = "CDG: "] 
  "1000288" -> "1000304"  [ label = "CDG: "] 
  "1000288" -> "1000311"  [ label = "CDG: "] 
  "1000288" -> "1000303"  [ label = "CDG: "] 
  "1000288" -> "1000299"  [ label = "CDG: "] 
  "1000302" -> "1000315"  [ label = "CDG: "] 
  "1000302" -> "1000317"  [ label = "CDG: "] 
  "1000328" -> "1000370"  [ label = "CDG: "] 
  "1000328" -> "1000404"  [ label = "CDG: "] 
  "1000328" -> "1000405"  [ label = "CDG: "] 
  "1000328" -> "1000357"  [ label = "CDG: "] 
  "1000328" -> "1000402"  [ label = "CDG: "] 
  "1000328" -> "1000348"  [ label = "CDG: "] 
  "1000328" -> "1000352"  [ label = "CDG: "] 
  "1000328" -> "1000342"  [ label = "CDG: "] 
  "1000328" -> "1000340"  [ label = "CDG: "] 
  "1000328" -> "1000356"  [ label = "CDG: "] 
  "1000328" -> "1000366"  [ label = "CDG: "] 
  "1000328" -> "1000343"  [ label = "CDG: "] 
  "1000356" -> "1000361"  [ label = "CDG: "] 
  "1000370" -> "1000379"  [ label = "CDG: "] 
  "1000370" -> "1000370"  [ label = "CDG: "] 
  "1000370" -> "1000376"  [ label = "CDG: "] 
  "1000370" -> "1000378"  [ label = "CDG: "] 
  "1000370" -> "1000384"  [ label = "CDG: "] 
  "1000370" -> "1000374"  [ label = "CDG: "] 
  "1000329" -> "1000334"  [ label = "CDG: "] 
  "1000329" -> "1000335"  [ label = "CDG: "] 
  "1000384" -> "1000388"  [ label = "CDG: "] 
  "1000384" -> "1000397"  [ label = "CDG: "] 
  "1000384" -> "1000391"  [ label = "CDG: "] 
  "1000384" -> "1000399"  [ label = "CDG: "] 
  "1000384" -> "1000393"  [ label = "CDG: "] 
}
