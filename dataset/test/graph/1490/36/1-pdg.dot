digraph "solve" {  
"1000144" [label = "(METHOD,solve)" ]
"1000258" [label = "(METHOD_RETURN,void)" ]
"1000148" [label = "(<operator>.assignment,tot=0)" ]
"1000151" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000182" [label = "(sort,sort(all(v)))" ]
"1000186" [label = "(ans.pb,ans.pb(v[n-1].second))" ]
"1000194" [label = "(<operator>.assignmentMinus,tot-=v[n-1].first)" ]
"1000241" [label = "(sort,sort(all(ans)))" ]
"1000244" [label = "(<operator>.shiftLeft,cout<<ans.size()<<nl)" ]
"1000250" [label = "(<operator>.shiftLeft,cout<<it<<\" \")" ]
"1000255" [label = "(<operator>.shiftLeft,cout<<nl)" ]
"1000155" [label = "(<operator>.lessThan,vector<pair<int)" ]
"1000160" [label = "(<operator>.arithmeticShiftRight,int>>v)" ]
"1000165" [label = "(<operator>.assignment,i=0)" ]
"1000168" [label = "(<operator>.lessThan,i<n)" ]
"1000171" [label = "(<operator>.postIncrement,i++)" ]
"1000205" [label = "(<operator>.assignment,i=n-2)" ]
"1000210" [label = "(<operator>.greaterEqualsThan,i>=0)" ]
"1000213" [label = "(<operator>.postDecrement,i--)" ]
"1000175" [label = "(<operator>.arithmeticShiftRight,cin>>x)" ]
"1000178" [label = "(<operator>.assignmentPlus,tot+=x)" ]
"1000183" [label = "(all,all(v))" ]
"1000234" [label = "(<operator>.assignmentMinus,tot-=v[i].first)" ]
"1000242" [label = "(all,all(ans))" ]
"1000246" [label = "(<operator>.shiftLeft,ans.size()<<nl)" ]
"1000252" [label = "(<operator>.shiftLeft,it<<\" \")" ]
"1000157" [label = "(<operator>.lessThan,pair<int)" ]
"1000207" [label = "(<operator>.subtraction,n-2)" ]
"1000217" [label = "(<operator>.greaterEqualsThan,tot>=v[i+1].first)" ]
"1000226" [label = "(ans.pb,ans.pb(v[i].second))" ]
"1000190" [label = "(<operator>.subtraction,n-1)" ]
"1000199" [label = "(<operator>.subtraction,n-1)" ]
"1000222" [label = "(<operator>.addition,i+1)" ]
"1000236" [label = "(<operator>.fieldAccess,v[i].first)" ]
"1000219" [label = "(<operator>.fieldAccess,v[i+1].first)" ]
"1000227" [label = "(<operator>.fieldAccess,v[i].second)" ]
"1000237" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000240" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1000220" [label = "(<operator>.indirectIndexAccess,v[i+1])" ]
"1000225" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1000228" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000231" [label = "(FIELD_IDENTIFIER,second,second)" ]
  "1000151" -> "1000258"  [ label = "DDG: cin"] 
  "1000151" -> "1000258"  [ label = "DDG: cin>>n"] 
  "1000155" -> "1000258"  [ label = "DDG: pair<int"] 
  "1000155" -> "1000258"  [ label = "DDG: vector<pair<int"] 
  "1000160" -> "1000258"  [ label = "DDG: int"] 
  "1000160" -> "1000258"  [ label = "DDG: int>>v"] 
  "1000168" -> "1000258"  [ label = "DDG: i<n"] 
  "1000183" -> "1000258"  [ label = "DDG: v"] 
  "1000182" -> "1000258"  [ label = "DDG: all(v)"] 
  "1000182" -> "1000258"  [ label = "DDG: sort(all(v))"] 
  "1000186" -> "1000258"  [ label = "DDG: ans.pb(v[n-1].second)"] 
  "1000194" -> "1000258"  [ label = "DDG: tot"] 
  "1000207" -> "1000258"  [ label = "DDG: n"] 
  "1000205" -> "1000258"  [ label = "DDG: n-2"] 
  "1000210" -> "1000258"  [ label = "DDG: i"] 
  "1000210" -> "1000258"  [ label = "DDG: i>=0"] 
  "1000217" -> "1000258"  [ label = "DDG: tot"] 
  "1000222" -> "1000258"  [ label = "DDG: i"] 
  "1000217" -> "1000258"  [ label = "DDG: v[i+1].first"] 
  "1000217" -> "1000258"  [ label = "DDG: tot>=v[i+1].first"] 
  "1000242" -> "1000258"  [ label = "DDG: ans"] 
  "1000241" -> "1000258"  [ label = "DDG: all(ans)"] 
  "1000241" -> "1000258"  [ label = "DDG: sort(all(ans))"] 
  "1000246" -> "1000258"  [ label = "DDG: ans.size()"] 
  "1000244" -> "1000258"  [ label = "DDG: ans.size()<<nl"] 
  "1000244" -> "1000258"  [ label = "DDG: cout<<ans.size()<<nl"] 
  "1000250" -> "1000258"  [ label = "DDG: it<<\" \""] 
  "1000250" -> "1000258"  [ label = "DDG: cout<<it<<\" \""] 
  "1000255" -> "1000258"  [ label = "DDG: cout"] 
  "1000255" -> "1000258"  [ label = "DDG: nl"] 
  "1000255" -> "1000258"  [ label = "DDG: cout<<nl"] 
  "1000226" -> "1000258"  [ label = "DDG: ans.pb(v[i].second)"] 
  "1000234" -> "1000258"  [ label = "DDG: tot"] 
  "1000175" -> "1000258"  [ label = "DDG: cin"] 
  "1000175" -> "1000258"  [ label = "DDG: cin>>x"] 
  "1000178" -> "1000258"  [ label = "DDG: x"] 
  "1000252" -> "1000258"  [ label = "DDG: it"] 
  "1000155" -> "1000258"  [ label = "DDG: vector"] 
  "1000157" -> "1000258"  [ label = "DDG: pair"] 
  "1000144" -> "1000148"  [ label = "DDG: "] 
  "1000144" -> "1000151"  [ label = "DDG: "] 
  "1000144" -> "1000165"  [ label = "DDG: "] 
  "1000183" -> "1000182"  [ label = "DDG: v"] 
  "1000148" -> "1000194"  [ label = "DDG: tot"] 
  "1000178" -> "1000194"  [ label = "DDG: tot"] 
  "1000144" -> "1000194"  [ label = "DDG: "] 
  "1000207" -> "1000205"  [ label = "DDG: 2"] 
  "1000207" -> "1000205"  [ label = "DDG: n"] 
  "1000242" -> "1000241"  [ label = "DDG: ans"] 
  "1000144" -> "1000244"  [ label = "DDG: "] 
  "1000246" -> "1000244"  [ label = "DDG: ans.size()"] 
  "1000246" -> "1000244"  [ label = "DDG: nl"] 
  "1000244" -> "1000250"  [ label = "DDG: cout"] 
  "1000144" -> "1000250"  [ label = "DDG: "] 
  "1000252" -> "1000250"  [ label = "DDG: \" \""] 
  "1000252" -> "1000250"  [ label = "DDG: it"] 
  "1000250" -> "1000255"  [ label = "DDG: cout"] 
  "1000144" -> "1000255"  [ label = "DDG: "] 
  "1000246" -> "1000255"  [ label = "DDG: nl"] 
  "1000144" -> "1000155"  [ label = "DDG: "] 
  "1000157" -> "1000155"  [ label = "DDG: int"] 
  "1000157" -> "1000155"  [ label = "DDG: pair"] 
  "1000157" -> "1000160"  [ label = "DDG: int"] 
  "1000144" -> "1000160"  [ label = "DDG: "] 
  "1000165" -> "1000168"  [ label = "DDG: i"] 
  "1000171" -> "1000168"  [ label = "DDG: i"] 
  "1000144" -> "1000168"  [ label = "DDG: "] 
  "1000151" -> "1000168"  [ label = "DDG: n"] 
  "1000168" -> "1000171"  [ label = "DDG: i"] 
  "1000144" -> "1000171"  [ label = "DDG: "] 
  "1000175" -> "1000178"  [ label = "DDG: x"] 
  "1000144" -> "1000178"  [ label = "DDG: "] 
  "1000160" -> "1000183"  [ label = "DDG: v"] 
  "1000144" -> "1000183"  [ label = "DDG: "] 
  "1000144" -> "1000205"  [ label = "DDG: "] 
  "1000205" -> "1000210"  [ label = "DDG: i"] 
  "1000213" -> "1000210"  [ label = "DDG: i"] 
  "1000144" -> "1000210"  [ label = "DDG: "] 
  "1000144" -> "1000213"  [ label = "DDG: "] 
  "1000210" -> "1000213"  [ label = "DDG: i"] 
  "1000144" -> "1000242"  [ label = "DDG: "] 
  "1000144" -> "1000246"  [ label = "DDG: "] 
  "1000144" -> "1000252"  [ label = "DDG: "] 
  "1000144" -> "1000157"  [ label = "DDG: "] 
  "1000151" -> "1000175"  [ label = "DDG: cin"] 
  "1000144" -> "1000175"  [ label = "DDG: "] 
  "1000148" -> "1000178"  [ label = "DDG: tot"] 
  "1000199" -> "1000207"  [ label = "DDG: n"] 
  "1000144" -> "1000207"  [ label = "DDG: "] 
  "1000217" -> "1000234"  [ label = "DDG: tot"] 
  "1000144" -> "1000234"  [ label = "DDG: "] 
  "1000168" -> "1000190"  [ label = "DDG: n"] 
  "1000144" -> "1000190"  [ label = "DDG: "] 
  "1000190" -> "1000199"  [ label = "DDG: n"] 
  "1000144" -> "1000199"  [ label = "DDG: "] 
  "1000194" -> "1000217"  [ label = "DDG: tot"] 
  "1000234" -> "1000217"  [ label = "DDG: tot"] 
  "1000144" -> "1000217"  [ label = "DDG: "] 
  "1000210" -> "1000222"  [ label = "DDG: i"] 
  "1000144" -> "1000222"  [ label = "DDG: "] 
  "1000168" -> "1000168"  [ label = "CDG: "] 
  "1000168" -> "1000178"  [ label = "CDG: "] 
  "1000168" -> "1000175"  [ label = "CDG: "] 
  "1000168" -> "1000171"  [ label = "CDG: "] 
  "1000210" -> "1000225"  [ label = "CDG: "] 
  "1000210" -> "1000222"  [ label = "CDG: "] 
  "1000210" -> "1000220"  [ label = "CDG: "] 
  "1000210" -> "1000217"  [ label = "CDG: "] 
  "1000210" -> "1000219"  [ label = "CDG: "] 
  "1000217" -> "1000210"  [ label = "CDG: "] 
  "1000217" -> "1000236"  [ label = "CDG: "] 
  "1000217" -> "1000234"  [ label = "CDG: "] 
  "1000217" -> "1000237"  [ label = "CDG: "] 
  "1000217" -> "1000231"  [ label = "CDG: "] 
  "1000217" -> "1000213"  [ label = "CDG: "] 
  "1000217" -> "1000227"  [ label = "CDG: "] 
  "1000217" -> "1000240"  [ label = "CDG: "] 
  "1000217" -> "1000226"  [ label = "CDG: "] 
  "1000217" -> "1000228"  [ label = "CDG: "] 
}
