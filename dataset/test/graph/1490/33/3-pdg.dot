digraph "solve" {  
"1000233" [label = "(METHOD,solve)" ]
"1000311" [label = "(METHOD_RETURN,void)" ]
"1000236" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000240" [label = "(<operator>.arithmeticShiftRight,cin>>a[i])" ]
"1000246" [label = "(<operator>.assignment,numdist=0)" ]
"1000270" [label = "(<operator>.assignment,k=0)" ]
"1000274" [label = "(dp.push_back,dp.push_back(i.second))" ]
"1000278" [label = "(sort,sort(dp.begin(), dp.end()))" ]
"1000282" [label = "(<operator>.assignment,ans = n)" ]
"1000286" [label = "(<operator>.assignment,it=1)" ]
"1000306" [label = "(<operator>.shiftLeft,cout<<ans<<endl)" ]
"1000262" [label = "(<operator>.postIncrement,m[a[i]]++)" ]
"1000290" [label = "(<operator>.assignment,ans = min(ans, n-(dp[i]*(int(dp.size())-i))))" ]
"1000304" [label = "(<operator>.postIncrement,it++)" ]
"1000253" [label = "(<operator>.equals,m[a[i]]==0)" ]
"1000260" [label = "(<operator>.postIncrement,numdist++)" ]
"1000308" [label = "(<operator>.shiftLeft,ans<<endl)" ]
"1000292" [label = "(min,min(ans, n-(dp[i]*(int(dp.size())-i))))" ]
"1000294" [label = "(<operator>.subtraction,n-(dp[i]*(int(dp.size())-i)))" ]
"1000296" [label = "(<operator>.multiplication,dp[i]*(int(dp.size())-i))" ]
"1000300" [label = "(<operator>.subtraction,int(dp.size())-i)" ]
"1000301" [label = "(int,int(dp.size()))" ]
  "1000236" -> "1000311"  [ label = "DDG: cin>>n"] 
  "1000240" -> "1000311"  [ label = "DDG: cin"] 
  "1000240" -> "1000311"  [ label = "DDG: a[i]"] 
  "1000240" -> "1000311"  [ label = "DDG: cin>>a[i]"] 
  "1000246" -> "1000311"  [ label = "DDG: numdist"] 
  "1000253" -> "1000311"  [ label = "DDG: m[a[i]]==0"] 
  "1000260" -> "1000311"  [ label = "DDG: numdist"] 
  "1000262" -> "1000311"  [ label = "DDG: m[a[i]]"] 
  "1000270" -> "1000311"  [ label = "DDG: k"] 
  "1000274" -> "1000311"  [ label = "DDG: dp.push_back(i.second)"] 
  "1000278" -> "1000311"  [ label = "DDG: dp.begin()"] 
  "1000278" -> "1000311"  [ label = "DDG: dp.end()"] 
  "1000278" -> "1000311"  [ label = "DDG: sort(dp.begin(), dp.end())"] 
  "1000294" -> "1000311"  [ label = "DDG: n"] 
  "1000296" -> "1000311"  [ label = "DDG: dp[i]"] 
  "1000301" -> "1000311"  [ label = "DDG: dp.size()"] 
  "1000300" -> "1000311"  [ label = "DDG: int(dp.size())"] 
  "1000300" -> "1000311"  [ label = "DDG: i"] 
  "1000296" -> "1000311"  [ label = "DDG: int(dp.size())-i"] 
  "1000294" -> "1000311"  [ label = "DDG: dp[i]*(int(dp.size())-i)"] 
  "1000292" -> "1000311"  [ label = "DDG: n-(dp[i]*(int(dp.size())-i))"] 
  "1000290" -> "1000311"  [ label = "DDG: min(ans, n-(dp[i]*(int(dp.size())-i)))"] 
  "1000304" -> "1000311"  [ label = "DDG: it"] 
  "1000308" -> "1000311"  [ label = "DDG: ans"] 
  "1000306" -> "1000311"  [ label = "DDG: ans<<endl"] 
  "1000306" -> "1000311"  [ label = "DDG: cout<<ans<<endl"] 
  "1000308" -> "1000311"  [ label = "DDG: endl"] 
  "1000306" -> "1000311"  [ label = "DDG: cout"] 
  "1000233" -> "1000246"  [ label = "DDG: "] 
  "1000233" -> "1000270"  [ label = "DDG: "] 
  "1000236" -> "1000282"  [ label = "DDG: n"] 
  "1000233" -> "1000282"  [ label = "DDG: "] 
  "1000233" -> "1000286"  [ label = "DDG: "] 
  "1000233" -> "1000236"  [ label = "DDG: "] 
  "1000236" -> "1000240"  [ label = "DDG: cin"] 
  "1000233" -> "1000240"  [ label = "DDG: "] 
  "1000233" -> "1000278"  [ label = "DDG: "] 
  "1000292" -> "1000290"  [ label = "DDG: n-(dp[i]*(int(dp.size())-i))"] 
  "1000292" -> "1000290"  [ label = "DDG: ans"] 
  "1000233" -> "1000306"  [ label = "DDG: "] 
  "1000308" -> "1000306"  [ label = "DDG: endl"] 
  "1000308" -> "1000306"  [ label = "DDG: ans"] 
  "1000253" -> "1000262"  [ label = "DDG: m[a[i]]"] 
  "1000233" -> "1000290"  [ label = "DDG: "] 
  "1000286" -> "1000304"  [ label = "DDG: it"] 
  "1000233" -> "1000304"  [ label = "DDG: "] 
  "1000290" -> "1000308"  [ label = "DDG: ans"] 
  "1000233" -> "1000308"  [ label = "DDG: "] 
  "1000233" -> "1000253"  [ label = "DDG: "] 
  "1000246" -> "1000260"  [ label = "DDG: numdist"] 
  "1000233" -> "1000260"  [ label = "DDG: "] 
  "1000282" -> "1000292"  [ label = "DDG: ans"] 
  "1000233" -> "1000292"  [ label = "DDG: "] 
  "1000294" -> "1000292"  [ label = "DDG: n"] 
  "1000294" -> "1000292"  [ label = "DDG: dp[i]*(int(dp.size())-i)"] 
  "1000233" -> "1000294"  [ label = "DDG: "] 
  "1000236" -> "1000294"  [ label = "DDG: n"] 
  "1000296" -> "1000294"  [ label = "DDG: dp[i]"] 
  "1000296" -> "1000294"  [ label = "DDG: int(dp.size())-i"] 
  "1000300" -> "1000296"  [ label = "DDG: i"] 
  "1000300" -> "1000296"  [ label = "DDG: int(dp.size())"] 
  "1000301" -> "1000300"  [ label = "DDG: dp.size()"] 
  "1000274" -> "1000300"  [ label = "DDG: i.second"] 
  "1000233" -> "1000300"  [ label = "DDG: "] 
  "1000233" -> "1000301"  [ label = "DDG: "] 
  "1000253" -> "1000260"  [ label = "CDG: "] 
}
