digraph "main" {  
"1000209" [label = "(METHOD,main)" ]
"1000233" [label = "(METHOD_RETURN,int)" ]
"1000211" [label = "(IDENTIFIER,IOS,)" ]
"1000213" [label = "(<operator>.assignment,number_of_test_cases = 1)" ]
"1000216" [label = "(<operator>.arithmeticShiftRight,cin >> number_of_test_cases)" ]
"1000231" [label = "(RETURN,return 0;,return 0;)" ]
"1000221" [label = "(<operator>.assignment,test_case_number = 1)" ]
"1000224" [label = "(<operator>.lessEqualsThan,test_case_number <= number_of_test_cases)" ]
"1000227" [label = "(<operator>.preIncrement,++test_case_number)" ]
"1000232" [label = "(LITERAL,0,return 0;)" ]
"1000230" [label = "(solve_test_case,solve_test_case())" ]
  "1000216" -> "1000233"  [ label = "DDG: cin >> number_of_test_cases"] 
  "1000224" -> "1000233"  [ label = "DDG: test_case_number"] 
  "1000224" -> "1000233"  [ label = "DDG: number_of_test_cases"] 
  "1000224" -> "1000233"  [ label = "DDG: test_case_number <= number_of_test_cases"] 
  "1000230" -> "1000233"  [ label = "DDG: solve_test_case()"] 
  "1000231" -> "1000233"  [ label = "DDG: <RET>"] 
  "1000216" -> "1000233"  [ label = "DDG: cin"] 
  "1000209" -> "1000211"  [ label = "DDG: "] 
  "1000209" -> "1000213"  [ label = "DDG: "] 
  "1000232" -> "1000231"  [ label = "DDG: 0"] 
  "1000209" -> "1000231"  [ label = "DDG: "] 
  "1000209" -> "1000216"  [ label = "DDG: "] 
  "1000213" -> "1000216"  [ label = "DDG: number_of_test_cases"] 
  "1000209" -> "1000221"  [ label = "DDG: "] 
  "1000209" -> "1000232"  [ label = "DDG: "] 
  "1000221" -> "1000224"  [ label = "DDG: test_case_number"] 
  "1000227" -> "1000224"  [ label = "DDG: test_case_number"] 
  "1000209" -> "1000224"  [ label = "DDG: "] 
  "1000216" -> "1000224"  [ label = "DDG: number_of_test_cases"] 
  "1000224" -> "1000227"  [ label = "DDG: test_case_number"] 
  "1000209" -> "1000227"  [ label = "DDG: "] 
  "1000209" -> "1000230"  [ label = "DDG: "] 
  "1000224" -> "1000230"  [ label = "CDG: "] 
  "1000224" -> "1000224"  [ label = "CDG: "] 
  "1000224" -> "1000227"  [ label = "CDG: "] 
}
