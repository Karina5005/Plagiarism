digraph "main" {  
"1000585" [label = "(METHOD,main)" ]
"1000643" [label = "(METHOD_RETURN,int)" ]
"1000588" [label = "(scanf,scanf(\"%d\",&q))" ]
"1000641" [label = "(RETURN,return 0;,return 0;)" ]
"1000593" [label = "(<operator>.postDecrement,q--)" ]
"1000642" [label = "(LITERAL,0,return 0;)" ]
"1000596" [label = "(scanf,scanf(\"%d %d\",&n,&m))" ]
"1000602" [label = "(scanf,scanf(\"%s %s\",s+1,t+1))" ]
"1000630" [label = "(build,build(1,1,n))" ]
"1000612" [label = "(<operator>.assignment,i=1)" ]
"1000615" [label = "(<operator>.lessEqualsThan,i<=m)" ]
"1000618" [label = "(<operator>.postIncrement,i++)" ]
"1000620" [label = "(scanf,scanf(\"%d %d\",&a[i],&b[i]))" ]
"1000635" [label = "(solve,solve())" ]
"1000636" [label = "(puts,puts(\"YES\"))" ]
"1000604" [label = "(<operator>.addition,s+1)" ]
"1000607" [label = "(<operator>.addition,t+1)" ]
"1000639" [label = "(puts,puts(\"NO\"))" ]
"1000598" [label = "(<operator>.addressOf,&n)" ]
"1000600" [label = "(<operator>.addressOf,&m)" ]
"1000622" [label = "(<operator>.addressOf,&a[i])" ]
"1000626" [label = "(<operator>.addressOf,&b[i])" ]
"1000623" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000627" [label = "(<operator>.indirectIndexAccess,b[i])" ]
  "1000641" -> "1000643"  [ label = "DDG: <RET>"] 
  "1000588" -> "1000643"  [ label = "DDG: &q"] 
  "1000593" -> "1000643"  [ label = "DDG: q"] 
  "1000596" -> "1000643"  [ label = "DDG: &n"] 
  "1000596" -> "1000643"  [ label = "DDG: &m"] 
  "1000602" -> "1000643"  [ label = "DDG: s+1"] 
  "1000602" -> "1000643"  [ label = "DDG: t+1"] 
  "1000615" -> "1000643"  [ label = "DDG: i"] 
  "1000615" -> "1000643"  [ label = "DDG: m"] 
  "1000615" -> "1000643"  [ label = "DDG: i<=m"] 
  "1000630" -> "1000643"  [ label = "DDG: n"] 
  "1000630" -> "1000643"  [ label = "DDG: build(1,1,n)"] 
  "1000635" -> "1000643"  [ label = "DDG: solve()"] 
  "1000639" -> "1000643"  [ label = "DDG: puts(\"NO\")"] 
  "1000636" -> "1000643"  [ label = "DDG: puts(\"YES\")"] 
  "1000620" -> "1000643"  [ label = "DDG: &a[i]"] 
  "1000620" -> "1000643"  [ label = "DDG: &b[i]"] 
  "1000604" -> "1000643"  [ label = "DDG: s"] 
  "1000607" -> "1000643"  [ label = "DDG: t"] 
  "1000585" -> "1000588"  [ label = "DDG: "] 
  "1000642" -> "1000641"  [ label = "DDG: 0"] 
  "1000585" -> "1000641"  [ label = "DDG: "] 
  "1000585" -> "1000642"  [ label = "DDG: "] 
  "1000585" -> "1000593"  [ label = "DDG: "] 
  "1000585" -> "1000596"  [ label = "DDG: "] 
  "1000585" -> "1000602"  [ label = "DDG: "] 
  "1000585" -> "1000612"  [ label = "DDG: "] 
  "1000585" -> "1000620"  [ label = "DDG: "] 
  "1000585" -> "1000630"  [ label = "DDG: "] 
  "1000585" -> "1000635"  [ label = "DDG: "] 
  "1000585" -> "1000604"  [ label = "DDG: "] 
  "1000585" -> "1000607"  [ label = "DDG: "] 
  "1000612" -> "1000615"  [ label = "DDG: i"] 
  "1000618" -> "1000615"  [ label = "DDG: i"] 
  "1000585" -> "1000615"  [ label = "DDG: "] 
  "1000615" -> "1000618"  [ label = "DDG: i"] 
  "1000585" -> "1000618"  [ label = "DDG: "] 
  "1000585" -> "1000636"  [ label = "DDG: "] 
  "1000585" -> "1000639"  [ label = "DDG: "] 
  "1000593" -> "1000600"  [ label = "CDG: "] 
  "1000593" -> "1000598"  [ label = "CDG: "] 
  "1000593" -> "1000602"  [ label = "CDG: "] 
  "1000593" -> "1000593"  [ label = "CDG: "] 
  "1000593" -> "1000596"  [ label = "CDG: "] 
  "1000593" -> "1000612"  [ label = "CDG: "] 
  "1000593" -> "1000635"  [ label = "CDG: "] 
  "1000593" -> "1000604"  [ label = "CDG: "] 
  "1000593" -> "1000615"  [ label = "CDG: "] 
  "1000593" -> "1000607"  [ label = "CDG: "] 
  "1000593" -> "1000630"  [ label = "CDG: "] 
  "1000615" -> "1000618"  [ label = "CDG: "] 
  "1000615" -> "1000620"  [ label = "CDG: "] 
  "1000615" -> "1000626"  [ label = "CDG: "] 
  "1000615" -> "1000627"  [ label = "CDG: "] 
  "1000615" -> "1000623"  [ label = "CDG: "] 
  "1000615" -> "1000615"  [ label = "CDG: "] 
  "1000615" -> "1000622"  [ label = "CDG: "] 
  "1000635" -> "1000639"  [ label = "CDG: "] 
  "1000635" -> "1000636"  [ label = "CDG: "] 
}
