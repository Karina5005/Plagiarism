digraph "ncr" {  
"1000613" [label = "(METHOD,ncr)" ]
"1000668" [label = "(METHOD_RETURN,ll)" ]
"1000614" [label = "(PARAM,ll n)" ]
"1000615" [label = "(PARAM,ll k)" ]
"1000618" [label = "(memset,memset(C, 0, sizeof(C)))" ]
"1000623" [label = "(<operator>.assignment,C[0] = 1)" ]
"1000664" [label = "(RETURN,return C[k];,return C[k];)" ]
"1000630" [label = "(<operator>.assignment,i = 1)" ]
"1000633" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000636" [label = "(<operator>.postIncrement,i++)" ]
"1000621" [label = "(<operator>.sizeOf,sizeof(C))" ]
"1000641" [label = "(<operator>.assignment,j = min(i, k))" ]
"1000646" [label = "(<operator>.greaterThan,j > 0)" ]
"1000649" [label = "(<operator>.postDecrement,j--)" ]
"1000651" [label = "(<operator>.assignment,C[j] = C[j] + C[j - 1])" ]
"1000643" [label = "(min,min(i, k))" ]
"1000655" [label = "(<operator>.addition,C[j] + C[j - 1])" ]
"1000661" [label = "(<operator>.subtraction,j - 1)" ]
"1000652" [label = "(<operator>.indirectIndexAccess,C[j])" ]
"1000656" [label = "(<operator>.indirectIndexAccess,C[j])" ]
"1000659" [label = "(<operator>.indirectIndexAccess,C[j - 1])" ]
  "1000614" -> "1000668"  [ label = "DDG: n"] 
  "1000615" -> "1000668"  [ label = "DDG: k"] 
  "1000618" -> "1000668"  [ label = "DDG: C"] 
  "1000618" -> "1000668"  [ label = "DDG: memset(C, 0, sizeof(C))"] 
  "1000623" -> "1000668"  [ label = "DDG: C[0]"] 
  "1000633" -> "1000668"  [ label = "DDG: i"] 
  "1000633" -> "1000668"  [ label = "DDG: n"] 
  "1000633" -> "1000668"  [ label = "DDG: i <= n"] 
  "1000643" -> "1000668"  [ label = "DDG: k"] 
  "1000641" -> "1000668"  [ label = "DDG: min(i, k)"] 
  "1000646" -> "1000668"  [ label = "DDG: j"] 
  "1000646" -> "1000668"  [ label = "DDG: j > 0"] 
  "1000651" -> "1000668"  [ label = "DDG: C[j]"] 
  "1000655" -> "1000668"  [ label = "DDG: C[j - 1]"] 
  "1000651" -> "1000668"  [ label = "DDG: C[j] + C[j - 1]"] 
  "1000664" -> "1000668"  [ label = "DDG: <RET>"] 
  "1000613" -> "1000614"  [ label = "DDG: "] 
  "1000613" -> "1000615"  [ label = "DDG: "] 
  "1000613" -> "1000623"  [ label = "DDG: "] 
  "1000618" -> "1000664"  [ label = "DDG: C"] 
  "1000613" -> "1000618"  [ label = "DDG: "] 
  "1000613" -> "1000630"  [ label = "DDG: "] 
  "1000613" -> "1000621"  [ label = "DDG: "] 
  "1000630" -> "1000633"  [ label = "DDG: i"] 
  "1000636" -> "1000633"  [ label = "DDG: i"] 
  "1000613" -> "1000633"  [ label = "DDG: "] 
  "1000614" -> "1000633"  [ label = "DDG: n"] 
  "1000643" -> "1000636"  [ label = "DDG: i"] 
  "1000613" -> "1000636"  [ label = "DDG: "] 
  "1000643" -> "1000641"  [ label = "DDG: i"] 
  "1000643" -> "1000641"  [ label = "DDG: k"] 
  "1000618" -> "1000651"  [ label = "DDG: C"] 
  "1000613" -> "1000641"  [ label = "DDG: "] 
  "1000641" -> "1000646"  [ label = "DDG: j"] 
  "1000649" -> "1000646"  [ label = "DDG: j"] 
  "1000613" -> "1000646"  [ label = "DDG: "] 
  "1000661" -> "1000649"  [ label = "DDG: j"] 
  "1000613" -> "1000649"  [ label = "DDG: "] 
  "1000633" -> "1000643"  [ label = "DDG: i"] 
  "1000613" -> "1000643"  [ label = "DDG: "] 
  "1000615" -> "1000643"  [ label = "DDG: k"] 
  "1000618" -> "1000655"  [ label = "DDG: C"] 
  "1000651" -> "1000655"  [ label = "DDG: C[j]"] 
  "1000646" -> "1000661"  [ label = "DDG: j"] 
  "1000613" -> "1000661"  [ label = "DDG: "] 
  "1000633" -> "1000633"  [ label = "CDG: "] 
  "1000633" -> "1000643"  [ label = "CDG: "] 
  "1000633" -> "1000646"  [ label = "CDG: "] 
  "1000633" -> "1000641"  [ label = "CDG: "] 
  "1000633" -> "1000636"  [ label = "CDG: "] 
  "1000646" -> "1000656"  [ label = "CDG: "] 
  "1000646" -> "1000649"  [ label = "CDG: "] 
  "1000646" -> "1000646"  [ label = "CDG: "] 
  "1000646" -> "1000659"  [ label = "CDG: "] 
  "1000646" -> "1000661"  [ label = "CDG: "] 
  "1000646" -> "1000652"  [ label = "CDG: "] 
  "1000646" -> "1000651"  [ label = "CDG: "] 
  "1000646" -> "1000655"  [ label = "CDG: "] 
}
