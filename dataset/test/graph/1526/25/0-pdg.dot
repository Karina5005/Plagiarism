digraph "busted" {  
"1000103" [label = "(METHOD,busted)" ]
"1000138" [label = "(METHOD_RETURN,void)" ]
"1000106" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000134" [label = "(<operator>.shiftLeft,cout << \"NO\n\")" ]
"1000137" [label = "(RETURN,return;,return;)" ]
"1000110" [label = "(<operator>.greaterThan,n > 0)" ]
"1000131" [label = "(<operator>.assignmentMinus,n -= 111)" ]
"1000115" [label = "(<operator>.logicalOr,n % 11 == 0 || n % 111 ==  0)" ]
"1000127" [label = "(<operator>.shiftLeft,cout << \"YES\n\")" ]
"1000130" [label = "(RETURN,return;,return;)" ]
"1000116" [label = "(<operator>.equals,n % 11 == 0)" ]
"1000121" [label = "(<operator>.equals,n % 111 ==  0)" ]
"1000117" [label = "(<operator>.modulo,n % 11)" ]
"1000122" [label = "(<operator>.modulo,n % 111)" ]
  "1000137" -> "1000138"  [ label = "DDG: <RET>"] 
  "1000106" -> "1000138"  [ label = "DDG: cin >> n"] 
  "1000110" -> "1000138"  [ label = "DDG: n"] 
  "1000110" -> "1000138"  [ label = "DDG: n > 0"] 
  "1000134" -> "1000138"  [ label = "DDG: cout"] 
  "1000134" -> "1000138"  [ label = "DDG: cout << \"NO\n\""] 
  "1000117" -> "1000138"  [ label = "DDG: n"] 
  "1000116" -> "1000138"  [ label = "DDG: n % 11"] 
  "1000115" -> "1000138"  [ label = "DDG: n % 11 == 0"] 
  "1000122" -> "1000138"  [ label = "DDG: n"] 
  "1000121" -> "1000138"  [ label = "DDG: n % 111"] 
  "1000115" -> "1000138"  [ label = "DDG: n % 111 ==  0"] 
  "1000115" -> "1000138"  [ label = "DDG: n % 11 == 0 || n % 111 ==  0"] 
  "1000127" -> "1000138"  [ label = "DDG: cout"] 
  "1000127" -> "1000138"  [ label = "DDG: cout << \"YES\n\""] 
  "1000130" -> "1000138"  [ label = "DDG: <RET>"] 
  "1000106" -> "1000138"  [ label = "DDG: cin"] 
  "1000103" -> "1000137"  [ label = "DDG: "] 
  "1000103" -> "1000106"  [ label = "DDG: "] 
  "1000103" -> "1000134"  [ label = "DDG: "] 
  "1000106" -> "1000110"  [ label = "DDG: n"] 
  "1000131" -> "1000110"  [ label = "DDG: n"] 
  "1000103" -> "1000110"  [ label = "DDG: "] 
  "1000103" -> "1000131"  [ label = "DDG: "] 
  "1000117" -> "1000131"  [ label = "DDG: n"] 
  "1000122" -> "1000131"  [ label = "DDG: n"] 
  "1000116" -> "1000115"  [ label = "DDG: 0"] 
  "1000116" -> "1000115"  [ label = "DDG: n % 11"] 
  "1000121" -> "1000115"  [ label = "DDG: 0"] 
  "1000121" -> "1000115"  [ label = "DDG: n % 111"] 
  "1000103" -> "1000130"  [ label = "DDG: "] 
  "1000117" -> "1000116"  [ label = "DDG: n"] 
  "1000117" -> "1000116"  [ label = "DDG: 11"] 
  "1000103" -> "1000116"  [ label = "DDG: "] 
  "1000122" -> "1000121"  [ label = "DDG: n"] 
  "1000122" -> "1000121"  [ label = "DDG: 111"] 
  "1000103" -> "1000121"  [ label = "DDG: "] 
  "1000103" -> "1000127"  [ label = "DDG: "] 
  "1000110" -> "1000117"  [ label = "DDG: n"] 
  "1000103" -> "1000117"  [ label = "DDG: "] 
  "1000117" -> "1000122"  [ label = "DDG: n"] 
  "1000103" -> "1000122"  [ label = "DDG: "] 
  "1000110" -> "1000116"  [ label = "CDG: "] 
  "1000110" -> "1000117"  [ label = "CDG: "] 
  "1000110" -> "1000137"  [ label = "CDG: "] 
  "1000110" -> "1000115"  [ label = "CDG: "] 
  "1000110" -> "1000134"  [ label = "CDG: "] 
  "1000115" -> "1000110"  [ label = "CDG: "] 
  "1000115" -> "1000131"  [ label = "CDG: "] 
  "1000115" -> "1000127"  [ label = "CDG: "] 
  "1000115" -> "1000130"  [ label = "CDG: "] 
  "1000116" -> "1000121"  [ label = "CDG: "] 
  "1000116" -> "1000122"  [ label = "CDG: "] 
}
