digraph "GCD" {  
"1000232" [label = "(METHOD,GCD)" ]
"1000258" [label = "(METHOD_RETURN,int)" ]
"1000233" [label = "(PARAM,vector<int>& arr)" ]
"1000234" [label = "(PARAM,int n)" ]
"1000237" [label = "(<operator>.assignment,res = 0)" ]
"1000242" [label = "(<operator>.assignment,i=0)" ]
"1000245" [label = "(<operator>.lessThan,i<n)" ]
"1000248" [label = "(<operator>.postIncrement,i++)" ]
"1000251" [label = "(<operator>.assignment,res = gcd(res, arr[i]))" ]
"1000253" [label = "(gcd,gcd(res, arr[i]))" ]
"1000255" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
  "1000233" -> "1000258"  [ label = "DDG: arr"] 
  "1000234" -> "1000258"  [ label = "DDG: n"] 
  "1000237" -> "1000258"  [ label = "DDG: res"] 
  "1000245" -> "1000258"  [ label = "DDG: i"] 
  "1000245" -> "1000258"  [ label = "DDG: n"] 
  "1000245" -> "1000258"  [ label = "DDG: i<n"] 
  "1000251" -> "1000258"  [ label = "DDG: res"] 
  "1000253" -> "1000258"  [ label = "DDG: arr[i]"] 
  "1000251" -> "1000258"  [ label = "DDG: gcd(res, arr[i])"] 
  "1000232" -> "1000233"  [ label = "DDG: "] 
  "1000232" -> "1000234"  [ label = "DDG: "] 
  "1000232" -> "1000237"  [ label = "DDG: "] 
  "1000232" -> "1000242"  [ label = "DDG: "] 
  "1000242" -> "1000245"  [ label = "DDG: i"] 
  "1000248" -> "1000245"  [ label = "DDG: i"] 
  "1000232" -> "1000245"  [ label = "DDG: "] 
  "1000234" -> "1000245"  [ label = "DDG: n"] 
  "1000245" -> "1000248"  [ label = "DDG: i"] 
  "1000232" -> "1000248"  [ label = "DDG: "] 
  "1000253" -> "1000251"  [ label = "DDG: arr[i]"] 
  "1000253" -> "1000251"  [ label = "DDG: res"] 
  "1000232" -> "1000251"  [ label = "DDG: "] 
  "1000237" -> "1000253"  [ label = "DDG: res"] 
  "1000251" -> "1000253"  [ label = "DDG: res"] 
  "1000232" -> "1000253"  [ label = "DDG: "] 
  "1000233" -> "1000253"  [ label = "DDG: arr"] 
  "1000245" -> "1000248"  [ label = "CDG: "] 
  "1000245" -> "1000255"  [ label = "CDG: "] 
  "1000245" -> "1000253"  [ label = "CDG: "] 
  "1000245" -> "1000245"  [ label = "CDG: "] 
  "1000245" -> "1000251"  [ label = "CDG: "] 
}
