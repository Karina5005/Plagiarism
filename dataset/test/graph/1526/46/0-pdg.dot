digraph "solve" {  
"1000101" [label = "(METHOD,solve)" ]
"1000130" [label = "(METHOD_RETURN,bool)" ]
"1000102" [label = "(PARAM,int n)" ]
"1000112" [label = "(<operator>.assignment,greater_than = ceil((n*10) / 111.0))" ]
"1000121" [label = "(<operator>.assignment,lower_than = n / 11)" ]
"1000126" [label = "(RETURN,return lower_than >= greater_than;,return lower_than >= greater_than;)" ]
"1000105" [label = "(<operator>.lessThan,n < 11)" ]
"1000127" [label = "(<operator>.greaterEqualsThan,lower_than >= greater_than)" ]
"1000109" [label = "(RETURN,return false;,return false;)" ]
"1000114" [label = "(ceil,ceil((n*10) / 111.0))" ]
"1000123" [label = "(<operator>.division,n / 11)" ]
"1000110" [label = "(IDENTIFIER,false,return false;)" ]
"1000115" [label = "(<operator>.division,(n*10) / 111.0)" ]
"1000116" [label = "(<operator>.multiplication,n*10)" ]
  "1000126" -> "1000130"  [ label = "DDG: <RET>"] 
  "1000102" -> "1000130"  [ label = "DDG: n"] 
  "1000105" -> "1000130"  [ label = "DDG: n"] 
  "1000105" -> "1000130"  [ label = "DDG: n < 11"] 
  "1000115" -> "1000130"  [ label = "DDG: n*10"] 
  "1000114" -> "1000130"  [ label = "DDG: (n*10) / 111.0"] 
  "1000112" -> "1000130"  [ label = "DDG: ceil((n*10) / 111.0)"] 
  "1000123" -> "1000130"  [ label = "DDG: n"] 
  "1000121" -> "1000130"  [ label = "DDG: n / 11"] 
  "1000127" -> "1000130"  [ label = "DDG: lower_than"] 
  "1000127" -> "1000130"  [ label = "DDG: greater_than"] 
  "1000127" -> "1000130"  [ label = "DDG: lower_than >= greater_than"] 
  "1000109" -> "1000130"  [ label = "DDG: <RET>"] 
  "1000101" -> "1000102"  [ label = "DDG: "] 
  "1000114" -> "1000112"  [ label = "DDG: (n*10) / 111.0"] 
  "1000123" -> "1000121"  [ label = "DDG: n"] 
  "1000123" -> "1000121"  [ label = "DDG: 11"] 
  "1000127" -> "1000126"  [ label = "DDG: lower_than >= greater_than"] 
  "1000101" -> "1000112"  [ label = "DDG: "] 
  "1000101" -> "1000121"  [ label = "DDG: "] 
  "1000102" -> "1000105"  [ label = "DDG: n"] 
  "1000101" -> "1000105"  [ label = "DDG: "] 
  "1000110" -> "1000109"  [ label = "DDG: false"] 
  "1000101" -> "1000109"  [ label = "DDG: "] 
  "1000115" -> "1000114"  [ label = "DDG: n*10"] 
  "1000115" -> "1000114"  [ label = "DDG: 111.0"] 
  "1000116" -> "1000123"  [ label = "DDG: n"] 
  "1000102" -> "1000123"  [ label = "DDG: n"] 
  "1000101" -> "1000123"  [ label = "DDG: "] 
  "1000121" -> "1000127"  [ label = "DDG: lower_than"] 
  "1000101" -> "1000127"  [ label = "DDG: "] 
  "1000112" -> "1000127"  [ label = "DDG: greater_than"] 
  "1000101" -> "1000110"  [ label = "DDG: "] 
  "1000116" -> "1000115"  [ label = "DDG: n"] 
  "1000116" -> "1000115"  [ label = "DDG: 10"] 
  "1000101" -> "1000115"  [ label = "DDG: "] 
  "1000105" -> "1000116"  [ label = "DDG: n"] 
  "1000102" -> "1000116"  [ label = "DDG: n"] 
  "1000101" -> "1000116"  [ label = "DDG: "] 
  "1000105" -> "1000109"  [ label = "CDG: "] 
  "1000105" -> "1000112"  [ label = "CDG: "] 
  "1000105" -> "1000121"  [ label = "CDG: "] 
  "1000105" -> "1000123"  [ label = "CDG: "] 
  "1000105" -> "1000116"  [ label = "CDG: "] 
  "1000105" -> "1000114"  [ label = "CDG: "] 
  "1000105" -> "1000115"  [ label = "CDG: "] 
  "1000105" -> "1000127"  [ label = "CDG: "] 
  "1000105" -> "1000126"  [ label = "CDG: "] 
}
