digraph "PRIME_FACTOR" {  
"1000464" [label = "(METHOD,PRIME_FACTOR)" ]
"1000501" [label = "(METHOD_RETURN,vector<int>)" ]
"1000465" [label = "(PARAM,int n)" ]
"1000499" [label = "(RETURN,return f;,return f;)" ]
"1000470" [label = "(<operator>.assignment,i = 2)" ]
"1000473" [label = "(<operator>.lessEqualsThan,i * i <= n)" ]
"1000478" [label = "(<operator>.postIncrement,i++)" ]
"1000494" [label = "(<operator>.greaterThan,n > 1)" ]
"1000497" [label = "(f.push_back,f.push_back(n))" ]
"1000500" [label = "(IDENTIFIER,f,return f;)" ]
"1000474" [label = "(<operator>.multiplication,i * i)" ]
"1000482" [label = "(<operator>.equals,n % i == 0)" ]
"1000488" [label = "(f.push_back,f.push_back(i))" ]
"1000490" [label = "(<operator>.assignmentDivision,n /= i)" ]
"1000483" [label = "(<operator>.modulo,n % i)" ]
  "1000499" -> "1000501"  [ label = "DDG: <RET>"] 
  "1000465" -> "1000501"  [ label = "DDG: n"] 
  "1000474" -> "1000501"  [ label = "DDG: i"] 
  "1000473" -> "1000501"  [ label = "DDG: i * i"] 
  "1000473" -> "1000501"  [ label = "DDG: i * i <= n"] 
  "1000494" -> "1000501"  [ label = "DDG: n"] 
  "1000494" -> "1000501"  [ label = "DDG: n > 1"] 
  "1000497" -> "1000501"  [ label = "DDG: n"] 
  "1000497" -> "1000501"  [ label = "DDG: f.push_back(n)"] 
  "1000482" -> "1000501"  [ label = "DDG: n % i"] 
  "1000482" -> "1000501"  [ label = "DDG: n % i == 0"] 
  "1000488" -> "1000501"  [ label = "DDG: f.push_back(i)"] 
  "1000464" -> "1000465"  [ label = "DDG: "] 
  "1000500" -> "1000499"  [ label = "DDG: f"] 
  "1000464" -> "1000499"  [ label = "DDG: "] 
  "1000464" -> "1000470"  [ label = "DDG: "] 
  "1000464" -> "1000500"  [ label = "DDG: "] 
  "1000474" -> "1000473"  [ label = "DDG: i"] 
  "1000483" -> "1000473"  [ label = "DDG: n"] 
  "1000465" -> "1000473"  [ label = "DDG: n"] 
  "1000464" -> "1000473"  [ label = "DDG: "] 
  "1000483" -> "1000478"  [ label = "DDG: i"] 
  "1000464" -> "1000478"  [ label = "DDG: "] 
  "1000473" -> "1000494"  [ label = "DDG: n"] 
  "1000465" -> "1000494"  [ label = "DDG: n"] 
  "1000464" -> "1000494"  [ label = "DDG: "] 
  "1000494" -> "1000497"  [ label = "DDG: n"] 
  "1000465" -> "1000497"  [ label = "DDG: n"] 
  "1000464" -> "1000497"  [ label = "DDG: "] 
  "1000470" -> "1000474"  [ label = "DDG: i"] 
  "1000478" -> "1000474"  [ label = "DDG: i"] 
  "1000464" -> "1000474"  [ label = "DDG: "] 
  "1000483" -> "1000482"  [ label = "DDG: n"] 
  "1000483" -> "1000482"  [ label = "DDG: i"] 
  "1000464" -> "1000482"  [ label = "DDG: "] 
  "1000488" -> "1000490"  [ label = "DDG: i"] 
  "1000464" -> "1000490"  [ label = "DDG: "] 
  "1000473" -> "1000483"  [ label = "DDG: n"] 
  "1000490" -> "1000483"  [ label = "DDG: n"] 
  "1000465" -> "1000483"  [ label = "DDG: n"] 
  "1000464" -> "1000483"  [ label = "DDG: "] 
  "1000474" -> "1000483"  [ label = "DDG: i"] 
  "1000488" -> "1000483"  [ label = "DDG: i"] 
  "1000483" -> "1000488"  [ label = "DDG: i"] 
  "1000464" -> "1000488"  [ label = "DDG: "] 
  "1000483" -> "1000490"  [ label = "DDG: n"] 
  "1000465" -> "1000490"  [ label = "DDG: n"] 
  "1000473" -> "1000478"  [ label = "CDG: "] 
  "1000473" -> "1000482"  [ label = "CDG: "] 
  "1000473" -> "1000483"  [ label = "CDG: "] 
  "1000473" -> "1000474"  [ label = "CDG: "] 
  "1000473" -> "1000473"  [ label = "CDG: "] 
  "1000494" -> "1000497"  [ label = "CDG: "] 
  "1000482" -> "1000488"  [ label = "CDG: "] 
  "1000482" -> "1000490"  [ label = "CDG: "] 
  "1000482" -> "1000482"  [ label = "CDG: "] 
  "1000482" -> "1000483"  [ label = "CDG: "] 
}
