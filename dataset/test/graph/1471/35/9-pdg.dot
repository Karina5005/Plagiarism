digraph "numSquares" {  
"1000408" [label = "(METHOD,numSquares)" ]
"1000466" [label = "(METHOD_RETURN,int)" ]
"1000409" [label = "(PARAM,int n)" ]
"1000437" [label = "(<operator>.assignment,sqrt_n = (int)(sqrt(n)))" ]
"1000464" [label = "(RETURN,return 3;,return 3;)" ]
"1000412" [label = "(isPerfect,isPerfect(n))" ]
"1000418" [label = "(<operator>.equals,(n & 3) == 0)" ]
"1000428" [label = "(<operator>.equals,(n & 7) == 7)" ]
"1000445" [label = "(<operator>.assignment,i = 1)" ]
"1000448" [label = "(<operator>.lessEqualsThan,i <= sqrt_n)" ]
"1000451" [label = "(<operator>.postIncrement,i++)" ]
"1000465" [label = "(LITERAL,3,return 3;)" ]
"1000415" [label = "(RETURN,return 1;,return 1;)" ]
"1000424" [label = "(<operators>.assignmentArithmeticShiftRight,n >>= 2)" ]
"1000434" [label = "(RETURN,return 4;,return 4;)" ]
"1000439" [label = "(<operator>.cast,(int)(sqrt(n)))" ]
"1000416" [label = "(LITERAL,1,return 1;)" ]
"1000419" [label = "(<operator>.and,n & 3)" ]
"1000429" [label = "(<operator>.and,n & 7)" ]
"1000435" [label = "(LITERAL,4,return 4;)" ]
"1000441" [label = "(sqrt,sqrt(n))" ]
"1000455" [label = "(isPerfect,isPerfect(n - i * i))" ]
"1000462" [label = "(RETURN,return 2;,return 2;)" ]
"1000456" [label = "(<operator>.subtraction,n - i * i)" ]
"1000463" [label = "(LITERAL,2,return 2;)" ]
"1000458" [label = "(<operator>.multiplication,i * i)" ]
"1000440" [label = "(UNKNOWN,int,int)" ]
  "1000434" -> "1000466"  [ label = "DDG: <RET>"] 
  "1000409" -> "1000466"  [ label = "DDG: n"] 
  "1000412" -> "1000466"  [ label = "DDG: n"] 
  "1000412" -> "1000466"  [ label = "DDG: isPerfect(n)"] 
  "1000418" -> "1000466"  [ label = "DDG: n & 3"] 
  "1000418" -> "1000466"  [ label = "DDG: (n & 3) == 0"] 
  "1000429" -> "1000466"  [ label = "DDG: n"] 
  "1000428" -> "1000466"  [ label = "DDG: n & 7"] 
  "1000428" -> "1000466"  [ label = "DDG: (n & 7) == 7"] 
  "1000441" -> "1000466"  [ label = "DDG: n"] 
  "1000439" -> "1000466"  [ label = "DDG: sqrt(n)"] 
  "1000437" -> "1000466"  [ label = "DDG: (int)(sqrt(n))"] 
  "1000448" -> "1000466"  [ label = "DDG: i"] 
  "1000448" -> "1000466"  [ label = "DDG: sqrt_n"] 
  "1000448" -> "1000466"  [ label = "DDG: i <= sqrt_n"] 
  "1000456" -> "1000466"  [ label = "DDG: n"] 
  "1000458" -> "1000466"  [ label = "DDG: i"] 
  "1000456" -> "1000466"  [ label = "DDG: i * i"] 
  "1000455" -> "1000466"  [ label = "DDG: n - i * i"] 
  "1000455" -> "1000466"  [ label = "DDG: isPerfect(n - i * i)"] 
  "1000424" -> "1000466"  [ label = "DDG: n >>= 2"] 
  "1000464" -> "1000466"  [ label = "DDG: <RET>"] 
  "1000415" -> "1000466"  [ label = "DDG: <RET>"] 
  "1000462" -> "1000466"  [ label = "DDG: <RET>"] 
  "1000408" -> "1000409"  [ label = "DDG: "] 
  "1000439" -> "1000437"  [ label = "DDG: sqrt(n)"] 
  "1000465" -> "1000464"  [ label = "DDG: 3"] 
  "1000408" -> "1000464"  [ label = "DDG: "] 
  "1000408" -> "1000437"  [ label = "DDG: "] 
  "1000408" -> "1000445"  [ label = "DDG: "] 
  "1000408" -> "1000465"  [ label = "DDG: "] 
  "1000409" -> "1000412"  [ label = "DDG: n"] 
  "1000408" -> "1000412"  [ label = "DDG: "] 
  "1000416" -> "1000415"  [ label = "DDG: 1"] 
  "1000408" -> "1000415"  [ label = "DDG: "] 
  "1000419" -> "1000418"  [ label = "DDG: n"] 
  "1000419" -> "1000418"  [ label = "DDG: 3"] 
  "1000408" -> "1000418"  [ label = "DDG: "] 
  "1000429" -> "1000428"  [ label = "DDG: n"] 
  "1000429" -> "1000428"  [ label = "DDG: 7"] 
  "1000408" -> "1000428"  [ label = "DDG: "] 
  "1000435" -> "1000434"  [ label = "DDG: 4"] 
  "1000408" -> "1000434"  [ label = "DDG: "] 
  "1000441" -> "1000439"  [ label = "DDG: n"] 
  "1000445" -> "1000448"  [ label = "DDG: i"] 
  "1000451" -> "1000448"  [ label = "DDG: i"] 
  "1000408" -> "1000448"  [ label = "DDG: "] 
  "1000437" -> "1000448"  [ label = "DDG: sqrt_n"] 
  "1000458" -> "1000451"  [ label = "DDG: i"] 
  "1000408" -> "1000451"  [ label = "DDG: "] 
  "1000408" -> "1000416"  [ label = "DDG: "] 
  "1000412" -> "1000419"  [ label = "DDG: n"] 
  "1000424" -> "1000419"  [ label = "DDG: n"] 
  "1000409" -> "1000419"  [ label = "DDG: n"] 
  "1000408" -> "1000419"  [ label = "DDG: "] 
  "1000419" -> "1000424"  [ label = "DDG: n"] 
  "1000409" -> "1000424"  [ label = "DDG: n"] 
  "1000408" -> "1000424"  [ label = "DDG: "] 
  "1000419" -> "1000429"  [ label = "DDG: n"] 
  "1000409" -> "1000429"  [ label = "DDG: n"] 
  "1000408" -> "1000429"  [ label = "DDG: "] 
  "1000408" -> "1000435"  [ label = "DDG: "] 
  "1000429" -> "1000441"  [ label = "DDG: n"] 
  "1000409" -> "1000441"  [ label = "DDG: n"] 
  "1000408" -> "1000441"  [ label = "DDG: "] 
  "1000456" -> "1000455"  [ label = "DDG: n"] 
  "1000456" -> "1000455"  [ label = "DDG: i * i"] 
  "1000463" -> "1000462"  [ label = "DDG: 2"] 
  "1000408" -> "1000462"  [ label = "DDG: "] 
  "1000441" -> "1000456"  [ label = "DDG: n"] 
  "1000409" -> "1000456"  [ label = "DDG: n"] 
  "1000408" -> "1000456"  [ label = "DDG: "] 
  "1000458" -> "1000456"  [ label = "DDG: i"] 
  "1000408" -> "1000463"  [ label = "DDG: "] 
  "1000448" -> "1000458"  [ label = "DDG: i"] 
  "1000408" -> "1000458"  [ label = "DDG: "] 
  "1000412" -> "1000429"  [ label = "CDG: "] 
  "1000412" -> "1000419"  [ label = "CDG: "] 
  "1000412" -> "1000415"  [ label = "CDG: "] 
  "1000412" -> "1000428"  [ label = "CDG: "] 
  "1000412" -> "1000418"  [ label = "CDG: "] 
  "1000418" -> "1000424"  [ label = "CDG: "] 
  "1000418" -> "1000419"  [ label = "CDG: "] 
  "1000418" -> "1000418"  [ label = "CDG: "] 
  "1000428" -> "1000445"  [ label = "CDG: "] 
  "1000428" -> "1000440"  [ label = "CDG: "] 
  "1000428" -> "1000441"  [ label = "CDG: "] 
  "1000428" -> "1000437"  [ label = "CDG: "] 
  "1000428" -> "1000434"  [ label = "CDG: "] 
  "1000428" -> "1000439"  [ label = "CDG: "] 
  "1000428" -> "1000448"  [ label = "CDG: "] 
  "1000448" -> "1000456"  [ label = "CDG: "] 
  "1000448" -> "1000455"  [ label = "CDG: "] 
  "1000448" -> "1000458"  [ label = "CDG: "] 
  "1000448" -> "1000464"  [ label = "CDG: "] 
  "1000455" -> "1000451"  [ label = "CDG: "] 
  "1000455" -> "1000462"  [ label = "CDG: "] 
  "1000455" -> "1000448"  [ label = "CDG: "] 
}
