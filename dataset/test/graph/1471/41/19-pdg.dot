digraph "main" {  
"1000789" [label = "(METHOD,main)" ]
"1000847" [label = "(METHOD_RETURN,int)" ]
"1000791" [label = "(ios_base::sync_with_stdio,ios_base::sync_with_stdio(false))" ]
"1000793" [label = "(cin.tie,cin.tie(NULL))" ]
"1000795" [label = "(freopen,freopen(\"input1.txt\", \"r\", stdin))" ]
"1000799" [label = "(freopen,freopen(\"output1.txt\", \"w\", stdout))" ]
"1000804" [label = "(<operator>.arithmeticShiftRight,cin>>TESTS)" ]
"1000807" [label = "(memset,memset(isprime , 1 , sizeof(isprime)))" ]
"1000812" [label = "(sshhhh,sshhhh())" ]
"1000845" [label = "(RETURN,return 0;,return 0;)" ]
"1000815" [label = "(<operator>.assignment,i=2)" ]
"1000818" [label = "(<operator>.lessEqualsThan,i<=(int)1e6)" ]
"1000823" [label = "(<operator>.postIncrement,i++)" ]
"1000835" [label = "(<operator>.assignment,i=1)" ]
"1000838" [label = "(<operator>.lessEqualsThan,i<=TESTS)" ]
"1000841" [label = "(<operator>.postIncrement,i++)" ]
"1000846" [label = "(LITERAL,0,return 0;)" ]
"1000810" [label = "(<operator>.sizeOf,sizeof(isprime))" ]
"1000844" [label = "(solve,solve())" ]
"1000820" [label = "(<operator>.cast,(int)1e6)" ]
"1000831" [label = "(prime.insert,prime.insert(i))" ]
"1000821" [label = "(UNKNOWN,int,int)" ]
"1000827" [label = "(<operator>.indirectIndexAccess,isprime[i])" ]
  "1000791" -> "1000847"  [ label = "DDG: ios_base::sync_with_stdio(false)"] 
  "1000793" -> "1000847"  [ label = "DDG: cin.tie(NULL)"] 
  "1000795" -> "1000847"  [ label = "DDG: freopen(\"input1.txt\", \"r\", stdin)"] 
  "1000799" -> "1000847"  [ label = "DDG: freopen(\"output1.txt\", \"w\", stdout)"] 
  "1000804" -> "1000847"  [ label = "DDG: cin>>TESTS"] 
  "1000807" -> "1000847"  [ label = "DDG: isprime"] 
  "1000807" -> "1000847"  [ label = "DDG: memset(isprime , 1 , sizeof(isprime))"] 
  "1000812" -> "1000847"  [ label = "DDG: sshhhh()"] 
  "1000818" -> "1000847"  [ label = "DDG: (int)1e6"] 
  "1000818" -> "1000847"  [ label = "DDG: i<=(int)1e6"] 
  "1000838" -> "1000847"  [ label = "DDG: i"] 
  "1000838" -> "1000847"  [ label = "DDG: TESTS"] 
  "1000838" -> "1000847"  [ label = "DDG: i<=TESTS"] 
  "1000844" -> "1000847"  [ label = "DDG: solve()"] 
  "1000831" -> "1000847"  [ label = "DDG: prime.insert(i)"] 
  "1000845" -> "1000847"  [ label = "DDG: <RET>"] 
  "1000795" -> "1000847"  [ label = "DDG: stdin"] 
  "1000793" -> "1000847"  [ label = "DDG: NULL"] 
  "1000791" -> "1000847"  [ label = "DDG: false"] 
  "1000799" -> "1000847"  [ label = "DDG: stdout"] 
  "1000804" -> "1000847"  [ label = "DDG: cin"] 
  "1000789" -> "1000812"  [ label = "DDG: "] 
  "1000846" -> "1000845"  [ label = "DDG: 0"] 
  "1000789" -> "1000845"  [ label = "DDG: "] 
  "1000789" -> "1000791"  [ label = "DDG: "] 
  "1000789" -> "1000793"  [ label = "DDG: "] 
  "1000789" -> "1000795"  [ label = "DDG: "] 
  "1000789" -> "1000799"  [ label = "DDG: "] 
  "1000789" -> "1000804"  [ label = "DDG: "] 
  "1000789" -> "1000807"  [ label = "DDG: "] 
  "1000789" -> "1000815"  [ label = "DDG: "] 
  "1000789" -> "1000835"  [ label = "DDG: "] 
  "1000789" -> "1000846"  [ label = "DDG: "] 
  "1000789" -> "1000810"  [ label = "DDG: "] 
  "1000815" -> "1000818"  [ label = "DDG: i"] 
  "1000823" -> "1000818"  [ label = "DDG: i"] 
  "1000789" -> "1000818"  [ label = "DDG: "] 
  "1000820" -> "1000818"  [ label = "DDG: 1e6"] 
  "1000818" -> "1000823"  [ label = "DDG: i"] 
  "1000831" -> "1000823"  [ label = "DDG: i"] 
  "1000789" -> "1000823"  [ label = "DDG: "] 
  "1000835" -> "1000838"  [ label = "DDG: i"] 
  "1000841" -> "1000838"  [ label = "DDG: i"] 
  "1000789" -> "1000838"  [ label = "DDG: "] 
  "1000804" -> "1000838"  [ label = "DDG: TESTS"] 
  "1000838" -> "1000841"  [ label = "DDG: i"] 
  "1000789" -> "1000841"  [ label = "DDG: "] 
  "1000789" -> "1000844"  [ label = "DDG: "] 
  "1000789" -> "1000820"  [ label = "DDG: "] 
  "1000818" -> "1000831"  [ label = "DDG: i"] 
  "1000789" -> "1000831"  [ label = "DDG: "] 
  "1000818" -> "1000820"  [ label = "CDG: "] 
  "1000818" -> "1000821"  [ label = "CDG: "] 
  "1000818" -> "1000823"  [ label = "CDG: "] 
  "1000818" -> "1000827"  [ label = "CDG: "] 
  "1000818" -> "1000818"  [ label = "CDG: "] 
  "1000838" -> "1000844"  [ label = "CDG: "] 
  "1000838" -> "1000838"  [ label = "CDG: "] 
  "1000838" -> "1000841"  [ label = "CDG: "] 
  "1000827" -> "1000831"  [ label = "CDG: "] 
}
