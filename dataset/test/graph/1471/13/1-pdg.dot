digraph "main" {  
"1000200" [label = "(METHOD,main)" ]
"1000225" [label = "(METHOD_RETURN,signed)" ]
"1000202" [label = "(ios_base::sync_with_stdio,ios_base::sync_with_stdio(false))" ]
"1000204" [label = "(cin.tie,cin.tie(0))" ]
"1000206" [label = "(cout.tie,cout.tie(0))" ]
"1000209" [label = "(<operator>.assignment,testcases = 1)" ]
"1000212" [label = "(<operator>.arithmeticShiftRight,cin >> testcases)" ]
"1000223" [label = "(RETURN,return 0 ;,return 0 ;)" ]
"1000216" [label = "(<operator>.postDecrement,testcases --)" ]
"1000224" [label = "(LITERAL,0,return 0 ;)" ]
"1000219" [label = "(solve,solve( ))" ]
"1000220" [label = "(<operator>.shiftLeft,cout << \"\n\")" ]
  "1000223" -> "1000225"  [ label = "DDG: <RET>"] 
  "1000202" -> "1000225"  [ label = "DDG: ios_base::sync_with_stdio(false)"] 
  "1000204" -> "1000225"  [ label = "DDG: cin.tie(0)"] 
  "1000206" -> "1000225"  [ label = "DDG: cout.tie(0)"] 
  "1000212" -> "1000225"  [ label = "DDG: cin >> testcases"] 
  "1000216" -> "1000225"  [ label = "DDG: testcases"] 
  "1000219" -> "1000225"  [ label = "DDG: solve( )"] 
  "1000220" -> "1000225"  [ label = "DDG: cout << \"\n\""] 
  "1000212" -> "1000225"  [ label = "DDG: cin"] 
  "1000220" -> "1000225"  [ label = "DDG: cout"] 
  "1000202" -> "1000225"  [ label = "DDG: false"] 
  "1000200" -> "1000209"  [ label = "DDG: "] 
  "1000224" -> "1000223"  [ label = "DDG: 0"] 
  "1000200" -> "1000223"  [ label = "DDG: "] 
  "1000200" -> "1000202"  [ label = "DDG: "] 
  "1000200" -> "1000204"  [ label = "DDG: "] 
  "1000200" -> "1000206"  [ label = "DDG: "] 
  "1000200" -> "1000212"  [ label = "DDG: "] 
  "1000209" -> "1000212"  [ label = "DDG: testcases"] 
  "1000200" -> "1000224"  [ label = "DDG: "] 
  "1000212" -> "1000216"  [ label = "DDG: testcases"] 
  "1000200" -> "1000216"  [ label = "DDG: "] 
  "1000200" -> "1000219"  [ label = "DDG: "] 
  "1000200" -> "1000220"  [ label = "DDG: "] 
  "1000216" -> "1000216"  [ label = "CDG: "] 
  "1000216" -> "1000220"  [ label = "CDG: "] 
  "1000216" -> "1000219"  [ label = "CDG: "] 
}
