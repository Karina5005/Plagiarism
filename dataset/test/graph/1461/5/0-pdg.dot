digraph "solve" {  
"1000109" [label = "(METHOD,solve)" ]
"1000282" [label = "(METHOD_RETURN,void)" ]
"1000111" [label = "(<operator>.shiftLeft,cout << setprecision(10) << fixed)" ]
"1000119" [label = "(<operator>.arithmeticShiftRight,cin >> n >> m)" ]
"1000151" [label = "(sort,sort(all(a)))" ]
"1000273" [label = "(<operator>.shiftLeft,cout << ans << &#39)" ]
"1000279" [label = "(<operator>.and,n&#39)" ]
"1000128" [label = "(<operator>.assignment,i=0)" ]
"1000131" [label = "(<operator>.lessThan,i<n)" ]
"1000134" [label = "(<operator>.postIncrement,i++)" ]
"1000156" [label = "(<operator>.assignment,i=0)" ]
"1000159" [label = "(<operator>.lessThan,i<n)" ]
"1000162" [label = "(<operator>.postIncrement,i++)" ]
"1000164" [label = "(<operator>.assignment,dp[i]=(i>0?dp[i-1]:0)+(i!=a[i].S))" ]
"1000190" [label = "(<operator>.assignment,i=0)" ]
"1000193" [label = "(<operator>.lessThan,i<m)" ]
"1000196" [label = "(<operator>.postIncrement,i++)" ]
"1000113" [label = "(<operator>.shiftLeft,setprecision(10) << fixed)" ]
"1000121" [label = "(<operator>.arithmeticShiftRight,n >> m)" ]
"1000137" [label = "(<operator>.arithmeticShiftRight,cin >> a[i].F)" ]
"1000144" [label = "(<operator>.assignment,a[i].S=i)" ]
"1000152" [label = "(all,all(a))" ]
"1000201" [label = "(<operator>.arithmeticShiftRight,cin >> ri >> p)" ]
"1000275" [label = "(<operator>.shiftLeft,ans << &#39)" ]
"1000114" [label = "(setprecision,setprecision(10))" ]
"1000168" [label = "(<operator>.addition,(i>0?dp[i-1]:0)+(i!=a[i].S))" ]
"1000207" [label = "(<operator>.logicalAnd,!(dp.back()-dp[ri-1]) && dp[ri-1]>0)" ]
"1000169" [label = "(<operator>.conditional,i>0?dp[i-1]:0)" ]
"1000179" [label = "(<operator>.notEquals,i!=a[i].S)" ]
"1000203" [label = "(<operator>.arithmeticShiftRight,ri >> p)" ]
"1000224" [label = "(<operator>.assignmentPlus,ans+=np*p)" ]
"1000229" [label = "(<operator>.assignmentMultiplication,np*=(1.0-p))" ]
"1000170" [label = "(<operator>.greaterThan,i>0)" ]
"1000208" [label = "(<operator>.logicalNot,!(dp.back()-dp[ri-1]))" ]
"1000216" [label = "(<operator>.greaterThan,dp[ri-1]>0)" ]
"1000236" [label = "(<operator>.logicalAnd,!(dp.back()-dp[ri-1]) && !dp[ri-1])" ]
"1000175" [label = "(<operator>.subtraction,i-1)" ]
"1000209" [label = "(<operator>.subtraction,dp.back()-dp[ri-1])" ]
"1000226" [label = "(<operator>.multiplication,np*p)" ]
"1000231" [label = "(<operator>.subtraction,1.0-p)" ]
"1000252" [label = "(<operator>.assignment,ans=1.0)" ]
"1000269" [label = "(<operator>.and,n&#39)" ]
"1000219" [label = "(<operator>.subtraction,ri-1)" ]
"1000237" [label = "(<operator>.logicalNot,!(dp.back()-dp[ri-1]))" ]
"1000245" [label = "(<operator>.logicalNot,!dp[ri-1])" ]
"1000257" [label = "(<operator>.assignment,j=i)" ]
"1000260" [label = "(<operator>.lessThan,j<m)" ]
"1000263" [label = "(<operator>.postIncrement,j++)" ]
"1000266" [label = "(IDENTIFIER,NUMERIC_LIMIT,)" ]
"1000213" [label = "(<operator>.subtraction,ri-1)" ]
"1000238" [label = "(<operator>.subtraction,dp.back()-dp[ri-1])" ]
"1000248" [label = "(<operator>.subtraction,ri-1)" ]
"1000242" [label = "(<operator>.subtraction,ri-1)" ]
"1000165" [label = "(<operator>.indirectIndexAccess,dp[i])" ]
"1000139" [label = "(<operator>.fieldAccess,a[i].F)" ]
"1000145" [label = "(<operator>.fieldAccess,a[i].S)" ]
"1000140" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000143" [label = "(FIELD_IDENTIFIER,F,F)" ]
"1000146" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000149" [label = "(FIELD_IDENTIFIER,S,S)" ]
"1000173" [label = "(<operator>.indirectIndexAccess,dp[i-1])" ]
"1000181" [label = "(<operator>.fieldAccess,a[i].S)" ]
"1000182" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000185" [label = "(FIELD_IDENTIFIER,S,S)" ]
"1000217" [label = "(<operator>.indirectIndexAccess,dp[ri-1])" ]
"1000210" [label = "(dp.back,dp.back())" ]
"1000211" [label = "(<operator>.indirectIndexAccess,dp[ri-1])" ]
"1000246" [label = "(<operator>.indirectIndexAccess,dp[ri-1])" ]
"1000267" [label = "(<operator>.addressOf,&#39)" ]
"1000239" [label = "(dp.back,dp.back())" ]
"1000240" [label = "(<operator>.indirectIndexAccess,dp[ri-1])" ]
  "1000113" -> "1000282"  [ label = "DDG: setprecision(10)"] 
  "1000111" -> "1000282"  [ label = "DDG: setprecision(10) << fixed"] 
  "1000111" -> "1000282"  [ label = "DDG: cout << setprecision(10) << fixed"] 
  "1000119" -> "1000282"  [ label = "DDG: cin"] 
  "1000119" -> "1000282"  [ label = "DDG: n >> m"] 
  "1000119" -> "1000282"  [ label = "DDG: cin >> n >> m"] 
  "1000152" -> "1000282"  [ label = "DDG: a"] 
  "1000151" -> "1000282"  [ label = "DDG: all(a)"] 
  "1000151" -> "1000282"  [ label = "DDG: sort(all(a))"] 
  "1000159" -> "1000282"  [ label = "DDG: i<n"] 
  "1000193" -> "1000282"  [ label = "DDG: i"] 
  "1000193" -> "1000282"  [ label = "DDG: m"] 
  "1000193" -> "1000282"  [ label = "DDG: i<m"] 
  "1000201" -> "1000282"  [ label = "DDG: cin"] 
  "1000203" -> "1000282"  [ label = "DDG: p"] 
  "1000201" -> "1000282"  [ label = "DDG: ri >> p"] 
  "1000201" -> "1000282"  [ label = "DDG: cin >> ri >> p"] 
  "1000209" -> "1000282"  [ label = "DDG: dp.back()"] 
  "1000213" -> "1000282"  [ label = "DDG: ri"] 
  "1000209" -> "1000282"  [ label = "DDG: dp[ri-1]"] 
  "1000208" -> "1000282"  [ label = "DDG: dp.back()-dp[ri-1]"] 
  "1000207" -> "1000282"  [ label = "DDG: !(dp.back()-dp[ri-1])"] 
  "1000219" -> "1000282"  [ label = "DDG: ri"] 
  "1000216" -> "1000282"  [ label = "DDG: dp[ri-1]"] 
  "1000207" -> "1000282"  [ label = "DDG: dp[ri-1]>0"] 
  "1000207" -> "1000282"  [ label = "DDG: !(dp.back()-dp[ri-1]) && dp[ri-1]>0"] 
  "1000238" -> "1000282"  [ label = "DDG: dp.back()"] 
  "1000242" -> "1000282"  [ label = "DDG: ri"] 
  "1000238" -> "1000282"  [ label = "DDG: dp[ri-1]"] 
  "1000237" -> "1000282"  [ label = "DDG: dp.back()-dp[ri-1]"] 
  "1000236" -> "1000282"  [ label = "DDG: !(dp.back()-dp[ri-1])"] 
  "1000248" -> "1000282"  [ label = "DDG: ri"] 
  "1000245" -> "1000282"  [ label = "DDG: dp[ri-1]"] 
  "1000236" -> "1000282"  [ label = "DDG: !dp[ri-1]"] 
  "1000236" -> "1000282"  [ label = "DDG: !(dp.back()-dp[ri-1]) && !dp[ri-1]"] 
  "1000257" -> "1000282"  [ label = "DDG: i"] 
  "1000260" -> "1000282"  [ label = "DDG: j"] 
  "1000260" -> "1000282"  [ label = "DDG: m"] 
  "1000260" -> "1000282"  [ label = "DDG: j<m"] 
  "1000273" -> "1000282"  [ label = "DDG: cout"] 
  "1000275" -> "1000282"  [ label = "DDG: ans"] 
  "1000275" -> "1000282"  [ label = "DDG: &#39"] 
  "1000273" -> "1000282"  [ label = "DDG: ans << &#39"] 
  "1000273" -> "1000282"  [ label = "DDG: cout << ans << &#39"] 
  "1000279" -> "1000282"  [ label = "DDG: n"] 
  "1000279" -> "1000282"  [ label = "DDG: n&#39"] 
  "1000224" -> "1000282"  [ label = "DDG: np*p"] 
  "1000229" -> "1000282"  [ label = "DDG: np"] 
  "1000231" -> "1000282"  [ label = "DDG: p"] 
  "1000229" -> "1000282"  [ label = "DDG: 1.0-p"] 
  "1000164" -> "1000282"  [ label = "DDG: dp[i]"] 
  "1000169" -> "1000282"  [ label = "DDG: i>0"] 
  "1000169" -> "1000282"  [ label = "DDG: dp[i-1]"] 
  "1000168" -> "1000282"  [ label = "DDG: i>0?dp[i-1]:0"] 
  "1000168" -> "1000282"  [ label = "DDG: i!=a[i].S"] 
  "1000164" -> "1000282"  [ label = "DDG: (i>0?dp[i-1]:0)+(i!=a[i].S)"] 
  "1000137" -> "1000282"  [ label = "DDG: cin"] 
  "1000137" -> "1000282"  [ label = "DDG: cin >> a[i].F"] 
  "1000113" -> "1000282"  [ label = "DDG: fixed"] 
  "1000109" -> "1000111"  [ label = "DDG: "] 
  "1000113" -> "1000111"  [ label = "DDG: fixed"] 
  "1000113" -> "1000111"  [ label = "DDG: setprecision(10)"] 
  "1000109" -> "1000119"  [ label = "DDG: "] 
  "1000121" -> "1000119"  [ label = "DDG: m"] 
  "1000121" -> "1000119"  [ label = "DDG: n"] 
  "1000109" -> "1000128"  [ label = "DDG: "] 
  "1000152" -> "1000151"  [ label = "DDG: a"] 
  "1000109" -> "1000156"  [ label = "DDG: "] 
  "1000179" -> "1000164"  [ label = "DDG: i"] 
  "1000179" -> "1000164"  [ label = "DDG: a[i].S"] 
  "1000109" -> "1000164"  [ label = "DDG: "] 
  "1000109" -> "1000190"  [ label = "DDG: "] 
  "1000111" -> "1000273"  [ label = "DDG: cout"] 
  "1000109" -> "1000273"  [ label = "DDG: "] 
  "1000275" -> "1000273"  [ label = "DDG: ans"] 
  "1000275" -> "1000273"  [ label = "DDG: &#39"] 
  "1000159" -> "1000279"  [ label = "DDG: n"] 
  "1000269" -> "1000279"  [ label = "DDG: n"] 
  "1000109" -> "1000279"  [ label = "DDG: "] 
  "1000114" -> "1000113"  [ label = "DDG: 10"] 
  "1000109" -> "1000113"  [ label = "DDG: "] 
  "1000109" -> "1000121"  [ label = "DDG: "] 
  "1000128" -> "1000131"  [ label = "DDG: i"] 
  "1000134" -> "1000131"  [ label = "DDG: i"] 
  "1000109" -> "1000131"  [ label = "DDG: "] 
  "1000121" -> "1000131"  [ label = "DDG: n"] 
  "1000109" -> "1000134"  [ label = "DDG: "] 
  "1000131" -> "1000134"  [ label = "DDG: i"] 
  "1000131" -> "1000144"  [ label = "DDG: i"] 
  "1000109" -> "1000144"  [ label = "DDG: "] 
  "1000109" -> "1000152"  [ label = "DDG: "] 
  "1000156" -> "1000159"  [ label = "DDG: i"] 
  "1000162" -> "1000159"  [ label = "DDG: i"] 
  "1000109" -> "1000159"  [ label = "DDG: "] 
  "1000131" -> "1000159"  [ label = "DDG: n"] 
  "1000179" -> "1000162"  [ label = "DDG: i"] 
  "1000109" -> "1000162"  [ label = "DDG: "] 
  "1000190" -> "1000193"  [ label = "DDG: i"] 
  "1000196" -> "1000193"  [ label = "DDG: i"] 
  "1000109" -> "1000193"  [ label = "DDG: "] 
  "1000121" -> "1000193"  [ label = "DDG: m"] 
  "1000193" -> "1000196"  [ label = "DDG: i"] 
  "1000109" -> "1000196"  [ label = "DDG: "] 
  "1000252" -> "1000275"  [ label = "DDG: ans"] 
  "1000224" -> "1000275"  [ label = "DDG: ans"] 
  "1000109" -> "1000275"  [ label = "DDG: "] 
  "1000109" -> "1000114"  [ label = "DDG: "] 
  "1000119" -> "1000137"  [ label = "DDG: cin"] 
  "1000109" -> "1000137"  [ label = "DDG: "] 
  "1000109" -> "1000168"  [ label = "DDG: "] 
  "1000179" -> "1000168"  [ label = "DDG: i"] 
  "1000179" -> "1000168"  [ label = "DDG: a[i].S"] 
  "1000119" -> "1000201"  [ label = "DDG: cin"] 
  "1000137" -> "1000201"  [ label = "DDG: cin"] 
  "1000109" -> "1000201"  [ label = "DDG: "] 
  "1000203" -> "1000201"  [ label = "DDG: p"] 
  "1000203" -> "1000201"  [ label = "DDG: ri"] 
  "1000109" -> "1000169"  [ label = "DDG: "] 
  "1000170" -> "1000179"  [ label = "DDG: i"] 
  "1000175" -> "1000179"  [ label = "DDG: i"] 
  "1000109" -> "1000179"  [ label = "DDG: "] 
  "1000213" -> "1000203"  [ label = "DDG: ri"] 
  "1000219" -> "1000203"  [ label = "DDG: ri"] 
  "1000242" -> "1000203"  [ label = "DDG: ri"] 
  "1000248" -> "1000203"  [ label = "DDG: ri"] 
  "1000109" -> "1000203"  [ label = "DDG: "] 
  "1000231" -> "1000203"  [ label = "DDG: p"] 
  "1000208" -> "1000207"  [ label = "DDG: dp.back()-dp[ri-1]"] 
  "1000216" -> "1000207"  [ label = "DDG: 0"] 
  "1000216" -> "1000207"  [ label = "DDG: dp[ri-1]"] 
  "1000226" -> "1000224"  [ label = "DDG: np"] 
  "1000226" -> "1000224"  [ label = "DDG: p"] 
  "1000231" -> "1000229"  [ label = "DDG: p"] 
  "1000231" -> "1000229"  [ label = "DDG: 1.0"] 
  "1000159" -> "1000170"  [ label = "DDG: i"] 
  "1000109" -> "1000170"  [ label = "DDG: "] 
  "1000209" -> "1000208"  [ label = "DDG: dp.back()"] 
  "1000209" -> "1000208"  [ label = "DDG: dp[ri-1]"] 
  "1000209" -> "1000216"  [ label = "DDG: dp[ri-1]"] 
  "1000109" -> "1000216"  [ label = "DDG: "] 
  "1000109" -> "1000224"  [ label = "DDG: "] 
  "1000226" -> "1000229"  [ label = "DDG: np"] 
  "1000109" -> "1000229"  [ label = "DDG: "] 
  "1000170" -> "1000175"  [ label = "DDG: i"] 
  "1000109" -> "1000175"  [ label = "DDG: "] 
  "1000109" -> "1000209"  [ label = "DDG: "] 
  "1000216" -> "1000209"  [ label = "DDG: dp[ri-1]"] 
  "1000238" -> "1000209"  [ label = "DDG: dp[ri-1]"] 
  "1000245" -> "1000209"  [ label = "DDG: dp[ri-1]"] 
  "1000229" -> "1000226"  [ label = "DDG: np"] 
  "1000109" -> "1000226"  [ label = "DDG: "] 
  "1000203" -> "1000226"  [ label = "DDG: p"] 
  "1000109" -> "1000231"  [ label = "DDG: "] 
  "1000226" -> "1000231"  [ label = "DDG: p"] 
  "1000237" -> "1000236"  [ label = "DDG: dp.back()-dp[ri-1]"] 
  "1000245" -> "1000236"  [ label = "DDG: dp[ri-1]"] 
  "1000109" -> "1000252"  [ label = "DDG: "] 
  "1000213" -> "1000219"  [ label = "DDG: ri"] 
  "1000109" -> "1000219"  [ label = "DDG: "] 
  "1000238" -> "1000237"  [ label = "DDG: dp.back()"] 
  "1000238" -> "1000237"  [ label = "DDG: dp[ri-1]"] 
  "1000238" -> "1000245"  [ label = "DDG: dp[ri-1]"] 
  "1000193" -> "1000257"  [ label = "DDG: i"] 
  "1000109" -> "1000257"  [ label = "DDG: "] 
  "1000109" -> "1000266"  [ label = "DDG: "] 
  "1000159" -> "1000269"  [ label = "DDG: n"] 
  "1000109" -> "1000269"  [ label = "DDG: "] 
  "1000203" -> "1000213"  [ label = "DDG: ri"] 
  "1000109" -> "1000213"  [ label = "DDG: "] 
  "1000109" -> "1000238"  [ label = "DDG: "] 
  "1000209" -> "1000238"  [ label = "DDG: dp[ri-1]"] 
  "1000216" -> "1000238"  [ label = "DDG: dp[ri-1]"] 
  "1000257" -> "1000260"  [ label = "DDG: j"] 
  "1000263" -> "1000260"  [ label = "DDG: j"] 
  "1000109" -> "1000260"  [ label = "DDG: "] 
  "1000193" -> "1000260"  [ label = "DDG: m"] 
  "1000260" -> "1000263"  [ label = "DDG: j"] 
  "1000109" -> "1000263"  [ label = "DDG: "] 
  "1000242" -> "1000248"  [ label = "DDG: ri"] 
  "1000109" -> "1000248"  [ label = "DDG: "] 
  "1000213" -> "1000242"  [ label = "DDG: ri"] 
  "1000219" -> "1000242"  [ label = "DDG: ri"] 
  "1000109" -> "1000242"  [ label = "DDG: "] 
  "1000131" -> "1000139"  [ label = "CDG: "] 
  "1000131" -> "1000144"  [ label = "CDG: "] 
  "1000131" -> "1000149"  [ label = "CDG: "] 
  "1000131" -> "1000145"  [ label = "CDG: "] 
  "1000131" -> "1000146"  [ label = "CDG: "] 
  "1000131" -> "1000131"  [ label = "CDG: "] 
  "1000131" -> "1000143"  [ label = "CDG: "] 
  "1000131" -> "1000137"  [ label = "CDG: "] 
  "1000131" -> "1000140"  [ label = "CDG: "] 
  "1000131" -> "1000134"  [ label = "CDG: "] 
  "1000159" -> "1000164"  [ label = "CDG: "] 
  "1000159" -> "1000182"  [ label = "CDG: "] 
  "1000159" -> "1000165"  [ label = "CDG: "] 
  "1000159" -> "1000179"  [ label = "CDG: "] 
  "1000159" -> "1000185"  [ label = "CDG: "] 
  "1000159" -> "1000169"  [ label = "CDG: "] 
  "1000159" -> "1000168"  [ label = "CDG: "] 
  "1000159" -> "1000159"  [ label = "CDG: "] 
  "1000159" -> "1000170"  [ label = "CDG: "] 
  "1000159" -> "1000162"  [ label = "CDG: "] 
  "1000159" -> "1000181"  [ label = "CDG: "] 
  "1000193" -> "1000211"  [ label = "CDG: "] 
  "1000193" -> "1000208"  [ label = "CDG: "] 
  "1000193" -> "1000210"  [ label = "CDG: "] 
  "1000193" -> "1000201"  [ label = "CDG: "] 
  "1000193" -> "1000213"  [ label = "CDG: "] 
  "1000193" -> "1000207"  [ label = "CDG: "] 
  "1000193" -> "1000203"  [ label = "CDG: "] 
  "1000193" -> "1000209"  [ label = "CDG: "] 
  "1000207" -> "1000238"  [ label = "CDG: "] 
  "1000207" -> "1000236"  [ label = "CDG: "] 
  "1000207" -> "1000242"  [ label = "CDG: "] 
  "1000207" -> "1000224"  [ label = "CDG: "] 
  "1000207" -> "1000240"  [ label = "CDG: "] 
  "1000207" -> "1000226"  [ label = "CDG: "] 
  "1000207" -> "1000239"  [ label = "CDG: "] 
  "1000207" -> "1000229"  [ label = "CDG: "] 
  "1000207" -> "1000196"  [ label = "CDG: "] 
  "1000207" -> "1000237"  [ label = "CDG: "] 
  "1000207" -> "1000231"  [ label = "CDG: "] 
  "1000207" -> "1000193"  [ label = "CDG: "] 
  "1000170" -> "1000175"  [ label = "CDG: "] 
  "1000170" -> "1000173"  [ label = "CDG: "] 
  "1000208" -> "1000216"  [ label = "CDG: "] 
  "1000208" -> "1000219"  [ label = "CDG: "] 
  "1000208" -> "1000217"  [ label = "CDG: "] 
  "1000236" -> "1000260"  [ label = "CDG: "] 
  "1000236" -> "1000269"  [ label = "CDG: "] 
  "1000236" -> "1000196"  [ label = "CDG: "] 
  "1000236" -> "1000252"  [ label = "CDG: "] 
  "1000236" -> "1000267"  [ label = "CDG: "] 
  "1000236" -> "1000257"  [ label = "CDG: "] 
  "1000236" -> "1000193"  [ label = "CDG: "] 
  "1000237" -> "1000248"  [ label = "CDG: "] 
  "1000237" -> "1000245"  [ label = "CDG: "] 
  "1000237" -> "1000246"  [ label = "CDG: "] 
  "1000260" -> "1000260"  [ label = "CDG: "] 
  "1000260" -> "1000263"  [ label = "CDG: "] 
}
