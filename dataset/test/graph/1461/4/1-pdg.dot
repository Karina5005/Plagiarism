digraph "solve" {  
"1000186" [label = "(METHOD,solve)" ]
"1000275" [label = "(METHOD_RETURN,void)" ]
"1000190" [label = "(<operator>.arithmeticShiftRight,cin>>n>>q)" ]
"1000211" [label = "(sort,sort(v.begin(),v.end()))" ]
"1000244" [label = "(find,find(v,prefix,0,n-1,s))" ]
"1000198" [label = "(<operator>.assignment,i=0)" ]
"1000201" [label = "(<operator>.lessThan,i<n)" ]
"1000204" [label = "(<operator>.postIncrement,i++)" ]
"1000206" [label = "(<operator>.arithmeticShiftRight,cin>>v[i])" ]
"1000217" [label = "(<operator>.assignment,i=0)" ]
"1000220" [label = "(<operator>.lessThan,i<n)" ]
"1000223" [label = "(<operator>.postIncrement,i++)" ]
"1000225" [label = "(<operator>.assignment,prefix[i]=(i==0?0:prefix[i-1])+v[i])" ]
"1000253" [label = "(<operator>.postDecrement,q--)" ]
"1000192" [label = "(<operator>.arithmeticShiftRight,n>>q)" ]
"1000248" [label = "(<operator>.subtraction,n-1)" ]
"1000257" [label = "(<operator>.arithmeticShiftRight,cin>>no)" ]
"1000272" [label = "(<operator>.shiftLeft,cout<<\"\n\")" ]
"1000229" [label = "(<operator>.addition,(i==0?0:prefix[i-1])+v[i])" ]
"1000261" [label = "(<operator>.notEquals,s.find(no)!=s.end())" ]
"1000265" [label = "(<operator>.shiftLeft,cout<<\"YES\")" ]
"1000230" [label = "(<operator>.conditional,i==0?0:prefix[i-1])" ]
"1000269" [label = "(<operator>.shiftLeft,cout<<\"NO\")" ]
"1000231" [label = "(<operator>.equals,i==0)" ]
"1000262" [label = "(s.find,s.find(no))" ]
"1000237" [label = "(<operator>.subtraction,i-1)" ]
"1000208" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000226" [label = "(<operator>.indirectIndexAccess,prefix[i])" ]
"1000240" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000235" [label = "(<operator>.indirectIndexAccess,prefix[i-1])" ]
"1000264" [label = "(s.end,s.end())" ]
  "1000190" -> "1000275"  [ label = "DDG: cin"] 
  "1000190" -> "1000275"  [ label = "DDG: n>>q"] 
  "1000190" -> "1000275"  [ label = "DDG: cin>>n>>q"] 
  "1000211" -> "1000275"  [ label = "DDG: v.begin()"] 
  "1000211" -> "1000275"  [ label = "DDG: v.end()"] 
  "1000211" -> "1000275"  [ label = "DDG: sort(v.begin(),v.end())"] 
  "1000220" -> "1000275"  [ label = "DDG: i"] 
  "1000220" -> "1000275"  [ label = "DDG: i<n"] 
  "1000244" -> "1000275"  [ label = "DDG: v"] 
  "1000244" -> "1000275"  [ label = "DDG: prefix"] 
  "1000248" -> "1000275"  [ label = "DDG: n"] 
  "1000244" -> "1000275"  [ label = "DDG: n-1"] 
  "1000244" -> "1000275"  [ label = "DDG: s"] 
  "1000244" -> "1000275"  [ label = "DDG: find(v,prefix,0,n-1,s)"] 
  "1000253" -> "1000275"  [ label = "DDG: q"] 
  "1000257" -> "1000275"  [ label = "DDG: cin"] 
  "1000257" -> "1000275"  [ label = "DDG: cin>>no"] 
  "1000262" -> "1000275"  [ label = "DDG: no"] 
  "1000261" -> "1000275"  [ label = "DDG: s.find(no)"] 
  "1000261" -> "1000275"  [ label = "DDG: s.end()"] 
  "1000261" -> "1000275"  [ label = "DDG: s.find(no)!=s.end()"] 
  "1000269" -> "1000275"  [ label = "DDG: cout<<\"NO\""] 
  "1000265" -> "1000275"  [ label = "DDG: cout<<\"YES\""] 
  "1000272" -> "1000275"  [ label = "DDG: cout"] 
  "1000272" -> "1000275"  [ label = "DDG: cout<<\"\n\""] 
  "1000225" -> "1000275"  [ label = "DDG: prefix[i]"] 
  "1000230" -> "1000275"  [ label = "DDG: i==0"] 
  "1000230" -> "1000275"  [ label = "DDG: prefix[i-1]"] 
  "1000229" -> "1000275"  [ label = "DDG: i==0?0:prefix[i-1]"] 
  "1000229" -> "1000275"  [ label = "DDG: v[i]"] 
  "1000225" -> "1000275"  [ label = "DDG: (i==0?0:prefix[i-1])+v[i]"] 
  "1000206" -> "1000275"  [ label = "DDG: cin"] 
  "1000206" -> "1000275"  [ label = "DDG: v[i]"] 
  "1000206" -> "1000275"  [ label = "DDG: cin>>v[i]"] 
  "1000186" -> "1000190"  [ label = "DDG: "] 
  "1000192" -> "1000190"  [ label = "DDG: n"] 
  "1000192" -> "1000190"  [ label = "DDG: q"] 
  "1000186" -> "1000198"  [ label = "DDG: "] 
  "1000186" -> "1000211"  [ label = "DDG: "] 
  "1000186" -> "1000217"  [ label = "DDG: "] 
  "1000186" -> "1000225"  [ label = "DDG: "] 
  "1000206" -> "1000225"  [ label = "DDG: v[i]"] 
  "1000206" -> "1000244"  [ label = "DDG: v[i]"] 
  "1000186" -> "1000244"  [ label = "DDG: "] 
  "1000248" -> "1000244"  [ label = "DDG: 1"] 
  "1000248" -> "1000244"  [ label = "DDG: n"] 
  "1000225" -> "1000244"  [ label = "DDG: prefix[i]"] 
  "1000186" -> "1000192"  [ label = "DDG: "] 
  "1000198" -> "1000201"  [ label = "DDG: i"] 
  "1000204" -> "1000201"  [ label = "DDG: i"] 
  "1000186" -> "1000201"  [ label = "DDG: "] 
  "1000192" -> "1000201"  [ label = "DDG: n"] 
  "1000201" -> "1000204"  [ label = "DDG: i"] 
  "1000186" -> "1000204"  [ label = "DDG: "] 
  "1000190" -> "1000206"  [ label = "DDG: cin"] 
  "1000186" -> "1000206"  [ label = "DDG: "] 
  "1000217" -> "1000220"  [ label = "DDG: i"] 
  "1000223" -> "1000220"  [ label = "DDG: i"] 
  "1000186" -> "1000220"  [ label = "DDG: "] 
  "1000201" -> "1000220"  [ label = "DDG: n"] 
  "1000231" -> "1000223"  [ label = "DDG: i"] 
  "1000237" -> "1000223"  [ label = "DDG: i"] 
  "1000186" -> "1000223"  [ label = "DDG: "] 
  "1000220" -> "1000248"  [ label = "DDG: n"] 
  "1000186" -> "1000248"  [ label = "DDG: "] 
  "1000192" -> "1000253"  [ label = "DDG: q"] 
  "1000186" -> "1000253"  [ label = "DDG: "] 
  "1000186" -> "1000229"  [ label = "DDG: "] 
  "1000206" -> "1000229"  [ label = "DDG: v[i]"] 
  "1000190" -> "1000257"  [ label = "DDG: cin"] 
  "1000206" -> "1000257"  [ label = "DDG: cin"] 
  "1000186" -> "1000257"  [ label = "DDG: "] 
  "1000262" -> "1000257"  [ label = "DDG: no"] 
  "1000269" -> "1000272"  [ label = "DDG: cout"] 
  "1000265" -> "1000272"  [ label = "DDG: cout"] 
  "1000186" -> "1000272"  [ label = "DDG: "] 
  "1000186" -> "1000230"  [ label = "DDG: "] 
  "1000262" -> "1000261"  [ label = "DDG: no"] 
  "1000186" -> "1000261"  [ label = "DDG: "] 
  "1000272" -> "1000265"  [ label = "DDG: cout"] 
  "1000186" -> "1000265"  [ label = "DDG: "] 
  "1000220" -> "1000231"  [ label = "DDG: i"] 
  "1000186" -> "1000231"  [ label = "DDG: "] 
  "1000257" -> "1000262"  [ label = "DDG: no"] 
  "1000186" -> "1000262"  [ label = "DDG: "] 
  "1000272" -> "1000269"  [ label = "DDG: cout"] 
  "1000186" -> "1000269"  [ label = "DDG: "] 
  "1000231" -> "1000237"  [ label = "DDG: i"] 
  "1000186" -> "1000237"  [ label = "DDG: "] 
  "1000201" -> "1000208"  [ label = "CDG: "] 
  "1000201" -> "1000204"  [ label = "CDG: "] 
  "1000201" -> "1000206"  [ label = "CDG: "] 
  "1000201" -> "1000201"  [ label = "CDG: "] 
  "1000220" -> "1000229"  [ label = "CDG: "] 
  "1000220" -> "1000230"  [ label = "CDG: "] 
  "1000220" -> "1000225"  [ label = "CDG: "] 
  "1000220" -> "1000220"  [ label = "CDG: "] 
  "1000220" -> "1000231"  [ label = "CDG: "] 
  "1000220" -> "1000240"  [ label = "CDG: "] 
  "1000220" -> "1000223"  [ label = "CDG: "] 
  "1000220" -> "1000226"  [ label = "CDG: "] 
  "1000253" -> "1000262"  [ label = "CDG: "] 
  "1000253" -> "1000272"  [ label = "CDG: "] 
  "1000253" -> "1000253"  [ label = "CDG: "] 
  "1000253" -> "1000261"  [ label = "CDG: "] 
  "1000253" -> "1000257"  [ label = "CDG: "] 
  "1000253" -> "1000264"  [ label = "CDG: "] 
  "1000261" -> "1000265"  [ label = "CDG: "] 
  "1000261" -> "1000269"  [ label = "CDG: "] 
  "1000231" -> "1000235"  [ label = "CDG: "] 
  "1000231" -> "1000237"  [ label = "CDG: "] 
}
