digraph "main" {  
"1000221" [label = "(METHOD,main)" ]
"1000307" [label = "(METHOD_RETURN,int)" ]
"1000223" [label = "(ios_base::sync_with_stdio,ios_base::sync_with_stdio(0))" ]
"1000225" [label = "(cin.tie,cin.tie(0))" ]
"1000227" [label = "(cout.tie,cout.tie(0))" ]
"1000231" [label = "(<operator>.arithmeticShiftRight,n >> q)" ]
"1000248" [label = "(sort,sort(v.begin(), v.end()))" ]
"1000251" [label = "(<operator>.assignment,pref[0]=v[0])" ]
"1000283" [label = "(cont,cont(0, n-1, v, pref, cek))" ]
"1000291" [label = "(sort,sort(cek.begin(), cek.end()))" ]
"1000238" [label = "(<operator>.assignment,i=0)" ]
"1000241" [label = "(<operator>.lessThan,i<n)" ]
"1000244" [label = "(<operator>.postIncrement,i++)" ]
"1000260" [label = "(<operator>.assignment,i=1)" ]
"1000263" [label = "(<operator>.lessThan,i<n)" ]
"1000266" [label = "(<operator>.postIncrement,i++)" ]
"1000295" [label = "(<operator>.postDecrement,q--)" ]
"1000269" [label = "(<operator>.assignment,pref[i]=v[i]+pref[i-1])" ]
"1000285" [label = "(<operator>.subtraction,n-1)" ]
"1000305" [label = "(IDENTIFIER,dh,)" ]
"1000306" [label = "(IDENTIFIER,dh,)" ]
"1000300" [label = "(binary_search,binary_search(cek.begin(), cek.end(), a))" ]
"1000273" [label = "(<operator>.addition,v[i]+pref[i-1])" ]
"1000279" [label = "(<operator>.subtraction,i-1)" ]
"1000270" [label = "(<operator>.indirectIndexAccess,pref[i])" ]
"1000274" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000277" [label = "(<operator>.indirectIndexAccess,pref[i-1])" ]
"1000301" [label = "(cek.begin,cek.begin())" ]
"1000302" [label = "(cek.end,cek.end())" ]
  "1000223" -> "1000307"  [ label = "DDG: ios_base::sync_with_stdio(0)"] 
  "1000225" -> "1000307"  [ label = "DDG: cin.tie(0)"] 
  "1000227" -> "1000307"  [ label = "DDG: cout.tie(0)"] 
  "1000231" -> "1000307"  [ label = "DDG: n >> q"] 
  "1000248" -> "1000307"  [ label = "DDG: v.begin()"] 
  "1000248" -> "1000307"  [ label = "DDG: v.end()"] 
  "1000248" -> "1000307"  [ label = "DDG: sort(v.begin(), v.end())"] 
  "1000251" -> "1000307"  [ label = "DDG: pref[0]"] 
  "1000251" -> "1000307"  [ label = "DDG: v[0]"] 
  "1000263" -> "1000307"  [ label = "DDG: i"] 
  "1000263" -> "1000307"  [ label = "DDG: i<n"] 
  "1000285" -> "1000307"  [ label = "DDG: n"] 
  "1000283" -> "1000307"  [ label = "DDG: n-1"] 
  "1000283" -> "1000307"  [ label = "DDG: v"] 
  "1000283" -> "1000307"  [ label = "DDG: pref"] 
  "1000283" -> "1000307"  [ label = "DDG: cek"] 
  "1000283" -> "1000307"  [ label = "DDG: cont(0, n-1, v, pref, cek)"] 
  "1000291" -> "1000307"  [ label = "DDG: cek.begin()"] 
  "1000291" -> "1000307"  [ label = "DDG: cek.end()"] 
  "1000291" -> "1000307"  [ label = "DDG: sort(cek.begin(), cek.end())"] 
  "1000295" -> "1000307"  [ label = "DDG: q"] 
  "1000300" -> "1000307"  [ label = "DDG: cek.begin()"] 
  "1000300" -> "1000307"  [ label = "DDG: cek.end()"] 
  "1000300" -> "1000307"  [ label = "DDG: a"] 
  "1000300" -> "1000307"  [ label = "DDG: binary_search(cek.begin(), cek.end(), a)"] 
  "1000269" -> "1000307"  [ label = "DDG: pref[i]"] 
  "1000273" -> "1000307"  [ label = "DDG: v[i]"] 
  "1000273" -> "1000307"  [ label = "DDG: pref[i-1]"] 
  "1000269" -> "1000307"  [ label = "DDG: v[i]+pref[i-1]"] 
  "1000221" -> "1000223"  [ label = "DDG: "] 
  "1000221" -> "1000225"  [ label = "DDG: "] 
  "1000221" -> "1000227"  [ label = "DDG: "] 
  "1000221" -> "1000231"  [ label = "DDG: "] 
  "1000221" -> "1000238"  [ label = "DDG: "] 
  "1000221" -> "1000248"  [ label = "DDG: "] 
  "1000221" -> "1000260"  [ label = "DDG: "] 
  "1000221" -> "1000283"  [ label = "DDG: "] 
  "1000285" -> "1000283"  [ label = "DDG: 1"] 
  "1000285" -> "1000283"  [ label = "DDG: n"] 
  "1000251" -> "1000283"  [ label = "DDG: pref[0]"] 
  "1000269" -> "1000283"  [ label = "DDG: pref[i]"] 
  "1000221" -> "1000291"  [ label = "DDG: "] 
  "1000238" -> "1000241"  [ label = "DDG: i"] 
  "1000244" -> "1000241"  [ label = "DDG: i"] 
  "1000221" -> "1000241"  [ label = "DDG: "] 
  "1000231" -> "1000241"  [ label = "DDG: n"] 
  "1000241" -> "1000244"  [ label = "DDG: i"] 
  "1000221" -> "1000244"  [ label = "DDG: "] 
  "1000260" -> "1000263"  [ label = "DDG: i"] 
  "1000266" -> "1000263"  [ label = "DDG: i"] 
  "1000221" -> "1000263"  [ label = "DDG: "] 
  "1000241" -> "1000263"  [ label = "DDG: n"] 
  "1000279" -> "1000266"  [ label = "DDG: i"] 
  "1000221" -> "1000266"  [ label = "DDG: "] 
  "1000263" -> "1000285"  [ label = "DDG: n"] 
  "1000221" -> "1000285"  [ label = "DDG: "] 
  "1000231" -> "1000295"  [ label = "DDG: q"] 
  "1000221" -> "1000295"  [ label = "DDG: "] 
  "1000221" -> "1000305"  [ label = "DDG: "] 
  "1000221" -> "1000306"  [ label = "DDG: "] 
  "1000221" -> "1000300"  [ label = "DDG: "] 
  "1000263" -> "1000279"  [ label = "DDG: i"] 
  "1000221" -> "1000279"  [ label = "DDG: "] 
  "1000241" -> "1000241"  [ label = "CDG: "] 
  "1000241" -> "1000244"  [ label = "CDG: "] 
  "1000263" -> "1000269"  [ label = "CDG: "] 
  "1000263" -> "1000273"  [ label = "CDG: "] 
  "1000263" -> "1000263"  [ label = "CDG: "] 
  "1000263" -> "1000270"  [ label = "CDG: "] 
  "1000263" -> "1000274"  [ label = "CDG: "] 
  "1000263" -> "1000279"  [ label = "CDG: "] 
  "1000263" -> "1000277"  [ label = "CDG: "] 
  "1000263" -> "1000266"  [ label = "CDG: "] 
  "1000295" -> "1000300"  [ label = "CDG: "] 
  "1000295" -> "1000301"  [ label = "CDG: "] 
  "1000295" -> "1000302"  [ label = "CDG: "] 
  "1000295" -> "1000295"  [ label = "CDG: "] 
}
