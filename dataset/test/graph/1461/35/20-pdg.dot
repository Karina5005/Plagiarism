digraph "find_all_primes" {  
"1000735" [label = "(METHOD,find_all_primes)" ]
"1000789" [label = "(METHOD_RETURN,vector<bool>)" ]
"1000736" [label = "(PARAM,int n)" ]
"1000787" [label = "(RETURN,return is_prime;,return is_prime;)" ]
"1000740" [label = "(<operator>.assignment,is_prime[0]=false)" ]
"1000745" [label = "(<operator>.assignment,is_prime[1]=false)" ]
"1000752" [label = "(<operator>.assignment,i=2)" ]
"1000755" [label = "(<operator>.lessEqualsThan,i*i<=n)" ]
"1000760" [label = "(<operator>.postIncrement,i++)" ]
"1000788" [label = "(IDENTIFIER,is_prime,return is_prime;)" ]
"1000756" [label = "(<operator>.multiplication,i*i)" ]
"1000770" [label = "(<operator>.assignment,j=i*i)" ]
"1000775" [label = "(<operator>.lessEqualsThan,j<=n)" ]
"1000778" [label = "(<operator>.assignmentPlus,j+=i)" ]
"1000782" [label = "(<operator>.assignment,is_prime[j]=false)" ]
"1000772" [label = "(<operator>.multiplication,i*i)" ]
"1000764" [label = "(<operator>.indirectIndexAccess,is_prime[i])" ]
"1000783" [label = "(<operator>.indirectIndexAccess,is_prime[j])" ]
  "1000736" -> "1000789"  [ label = "DDG: n"] 
  "1000740" -> "1000789"  [ label = "DDG: is_prime[0]"] 
  "1000745" -> "1000789"  [ label = "DDG: is_prime[1]"] 
  "1000745" -> "1000789"  [ label = "DDG: false"] 
  "1000756" -> "1000789"  [ label = "DDG: i"] 
  "1000755" -> "1000789"  [ label = "DDG: i*i"] 
  "1000755" -> "1000789"  [ label = "DDG: n"] 
  "1000755" -> "1000789"  [ label = "DDG: i*i<=n"] 
  "1000775" -> "1000789"  [ label = "DDG: j"] 
  "1000775" -> "1000789"  [ label = "DDG: j<=n"] 
  "1000782" -> "1000789"  [ label = "DDG: is_prime[j]"] 
  "1000782" -> "1000789"  [ label = "DDG: false"] 
  "1000787" -> "1000789"  [ label = "DDG: <RET>"] 
  "1000735" -> "1000736"  [ label = "DDG: "] 
  "1000788" -> "1000787"  [ label = "DDG: is_prime"] 
  "1000740" -> "1000787"  [ label = "DDG: is_prime[0]"] 
  "1000745" -> "1000787"  [ label = "DDG: is_prime[1]"] 
  "1000782" -> "1000787"  [ label = "DDG: is_prime[j]"] 
  "1000735" -> "1000740"  [ label = "DDG: "] 
  "1000735" -> "1000745"  [ label = "DDG: "] 
  "1000735" -> "1000752"  [ label = "DDG: "] 
  "1000735" -> "1000788"  [ label = "DDG: "] 
  "1000756" -> "1000755"  [ label = "DDG: i"] 
  "1000775" -> "1000755"  [ label = "DDG: n"] 
  "1000736" -> "1000755"  [ label = "DDG: n"] 
  "1000735" -> "1000755"  [ label = "DDG: "] 
  "1000756" -> "1000760"  [ label = "DDG: i"] 
  "1000772" -> "1000760"  [ label = "DDG: i"] 
  "1000735" -> "1000760"  [ label = "DDG: "] 
  "1000752" -> "1000756"  [ label = "DDG: i"] 
  "1000760" -> "1000756"  [ label = "DDG: i"] 
  "1000735" -> "1000756"  [ label = "DDG: "] 
  "1000772" -> "1000770"  [ label = "DDG: i"] 
  "1000772" -> "1000778"  [ label = "DDG: i"] 
  "1000735" -> "1000778"  [ label = "DDG: "] 
  "1000735" -> "1000770"  [ label = "DDG: "] 
  "1000770" -> "1000775"  [ label = "DDG: j"] 
  "1000778" -> "1000775"  [ label = "DDG: j"] 
  "1000735" -> "1000775"  [ label = "DDG: "] 
  "1000755" -> "1000775"  [ label = "DDG: n"] 
  "1000736" -> "1000775"  [ label = "DDG: n"] 
  "1000775" -> "1000778"  [ label = "DDG: j"] 
  "1000735" -> "1000782"  [ label = "DDG: "] 
  "1000756" -> "1000772"  [ label = "DDG: i"] 
  "1000735" -> "1000772"  [ label = "DDG: "] 
  "1000755" -> "1000760"  [ label = "CDG: "] 
  "1000755" -> "1000764"  [ label = "CDG: "] 
  "1000755" -> "1000755"  [ label = "CDG: "] 
  "1000755" -> "1000756"  [ label = "CDG: "] 
  "1000764" -> "1000775"  [ label = "CDG: "] 
  "1000764" -> "1000770"  [ label = "CDG: "] 
  "1000764" -> "1000772"  [ label = "CDG: "] 
  "1000775" -> "1000775"  [ label = "CDG: "] 
  "1000775" -> "1000778"  [ label = "CDG: "] 
  "1000775" -> "1000783"  [ label = "CDG: "] 
  "1000775" -> "1000782"  [ label = "CDG: "] 
}
