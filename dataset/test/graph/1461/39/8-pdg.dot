digraph "solve" {  
"1000284" [label = "(METHOD,solve)" ]
"1000338" [label = "(METHOD_RETURN,void)" ]
"1000286" [label = "(st.clear,st.clear())" ]
"1000289" [label = "(<operator>.arithmeticShiftRight,cin >> n >> q)" ]
"1000309" [label = "(sort,sort(A, A + n))" ]
"1000314" [label = "(go,go(0, n - 1))" ]
"1000296" [label = "(<operator>.assignment,i = 0)" ]
"1000299" [label = "(<operator>.lessThan,i < n)" ]
"1000302" [label = "(<operator>.postIncrement,i++)" ]
"1000304" [label = "(<operator>.arithmeticShiftRight,cin >> A[i])" ]
"1000320" [label = "(<operator>.postDecrement,q--)" ]
"1000291" [label = "(<operator>.arithmeticShiftRight,n >> q)" ]
"1000311" [label = "(<operator>.addition,A + n)" ]
"1000316" [label = "(<operator>.subtraction,n - 1)" ]
"1000324" [label = "(<operator>.arithmeticShiftRight,cin >> s)" ]
"1000327" [label = "(<operator>.shiftLeft,cout << (st.find(s) != st.end() ? \"Yes\" : \"No\") << \"\n\")" ]
"1000329" [label = "(<operator>.shiftLeft,(st.find(s) != st.end() ? \"Yes\" : \"No\") << \"\n\")" ]
"1000330" [label = "(<operator>.conditional,st.find(s) != st.end() ? \"Yes\" : \"No\")" ]
"1000331" [label = "(<operator>.notEquals,st.find(s) != st.end())" ]
"1000332" [label = "(st.find,st.find(s))" ]
"1000306" [label = "(<operator>.indirectIndexAccess,A[i])" ]
"1000334" [label = "(st.end,st.end())" ]
  "1000286" -> "1000338"  [ label = "DDG: st.clear()"] 
  "1000289" -> "1000338"  [ label = "DDG: cin"] 
  "1000289" -> "1000338"  [ label = "DDG: n >> q"] 
  "1000289" -> "1000338"  [ label = "DDG: cin >> n >> q"] 
  "1000299" -> "1000338"  [ label = "DDG: i"] 
  "1000299" -> "1000338"  [ label = "DDG: i < n"] 
  "1000309" -> "1000338"  [ label = "DDG: A"] 
  "1000309" -> "1000338"  [ label = "DDG: A + n"] 
  "1000309" -> "1000338"  [ label = "DDG: sort(A, A + n)"] 
  "1000316" -> "1000338"  [ label = "DDG: n"] 
  "1000314" -> "1000338"  [ label = "DDG: n - 1"] 
  "1000314" -> "1000338"  [ label = "DDG: go(0, n - 1)"] 
  "1000320" -> "1000338"  [ label = "DDG: q"] 
  "1000324" -> "1000338"  [ label = "DDG: cin"] 
  "1000324" -> "1000338"  [ label = "DDG: cin >> s"] 
  "1000332" -> "1000338"  [ label = "DDG: s"] 
  "1000331" -> "1000338"  [ label = "DDG: st.find(s)"] 
  "1000331" -> "1000338"  [ label = "DDG: st.end()"] 
  "1000330" -> "1000338"  [ label = "DDG: st.find(s) != st.end()"] 
  "1000329" -> "1000338"  [ label = "DDG: st.find(s) != st.end() ? \"Yes\" : \"No\""] 
  "1000327" -> "1000338"  [ label = "DDG: (st.find(s) != st.end() ? \"Yes\" : \"No\") << \"\n\""] 
  "1000327" -> "1000338"  [ label = "DDG: cout << (st.find(s) != st.end() ? \"Yes\" : \"No\") << \"\n\""] 
  "1000304" -> "1000338"  [ label = "DDG: cin"] 
  "1000304" -> "1000338"  [ label = "DDG: A[i]"] 
  "1000304" -> "1000338"  [ label = "DDG: cin >> A[i]"] 
  "1000327" -> "1000338"  [ label = "DDG: cout"] 
  "1000284" -> "1000286"  [ label = "DDG: "] 
  "1000284" -> "1000289"  [ label = "DDG: "] 
  "1000291" -> "1000289"  [ label = "DDG: q"] 
  "1000291" -> "1000289"  [ label = "DDG: n"] 
  "1000284" -> "1000296"  [ label = "DDG: "] 
  "1000304" -> "1000309"  [ label = "DDG: A[i]"] 
  "1000284" -> "1000309"  [ label = "DDG: "] 
  "1000299" -> "1000309"  [ label = "DDG: n"] 
  "1000284" -> "1000314"  [ label = "DDG: "] 
  "1000316" -> "1000314"  [ label = "DDG: 1"] 
  "1000316" -> "1000314"  [ label = "DDG: n"] 
  "1000284" -> "1000291"  [ label = "DDG: "] 
  "1000296" -> "1000299"  [ label = "DDG: i"] 
  "1000302" -> "1000299"  [ label = "DDG: i"] 
  "1000284" -> "1000299"  [ label = "DDG: "] 
  "1000291" -> "1000299"  [ label = "DDG: n"] 
  "1000299" -> "1000302"  [ label = "DDG: i"] 
  "1000284" -> "1000302"  [ label = "DDG: "] 
  "1000289" -> "1000304"  [ label = "DDG: cin"] 
  "1000284" -> "1000304"  [ label = "DDG: "] 
  "1000304" -> "1000311"  [ label = "DDG: A[i]"] 
  "1000284" -> "1000311"  [ label = "DDG: "] 
  "1000299" -> "1000311"  [ label = "DDG: n"] 
  "1000284" -> "1000316"  [ label = "DDG: "] 
  "1000299" -> "1000316"  [ label = "DDG: n"] 
  "1000291" -> "1000320"  [ label = "DDG: q"] 
  "1000284" -> "1000320"  [ label = "DDG: "] 
  "1000289" -> "1000324"  [ label = "DDG: cin"] 
  "1000304" -> "1000324"  [ label = "DDG: cin"] 
  "1000284" -> "1000324"  [ label = "DDG: "] 
  "1000332" -> "1000324"  [ label = "DDG: s"] 
  "1000284" -> "1000327"  [ label = "DDG: "] 
  "1000329" -> "1000327"  [ label = "DDG: \"\n\""] 
  "1000329" -> "1000327"  [ label = "DDG: st.find(s) != st.end() ? \"Yes\" : \"No\""] 
  "1000284" -> "1000329"  [ label = "DDG: "] 
  "1000284" -> "1000330"  [ label = "DDG: "] 
  "1000332" -> "1000331"  [ label = "DDG: s"] 
  "1000284" -> "1000331"  [ label = "DDG: "] 
  "1000324" -> "1000332"  [ label = "DDG: s"] 
  "1000284" -> "1000332"  [ label = "DDG: "] 
  "1000299" -> "1000299"  [ label = "CDG: "] 
  "1000299" -> "1000304"  [ label = "CDG: "] 
  "1000299" -> "1000302"  [ label = "CDG: "] 
  "1000299" -> "1000306"  [ label = "CDG: "] 
  "1000320" -> "1000330"  [ label = "CDG: "] 
  "1000320" -> "1000329"  [ label = "CDG: "] 
  "1000320" -> "1000331"  [ label = "CDG: "] 
  "1000320" -> "1000332"  [ label = "CDG: "] 
  "1000320" -> "1000327"  [ label = "CDG: "] 
  "1000320" -> "1000334"  [ label = "CDG: "] 
  "1000320" -> "1000320"  [ label = "CDG: "] 
  "1000320" -> "1000324"  [ label = "CDG: "] 
}
