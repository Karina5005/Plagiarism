digraph "solve" {  
"1000307" [label = "(METHOD,solve)" ]
"1000361" [label = "(METHOD_RETURN,void)" ]
"1000309" [label = "(st.clear,st.clear())" ]
"1000312" [label = "(<operator>.arithmeticShiftRight,cin >> n >> q)" ]
"1000332" [label = "(sort,sort(A, A + n))" ]
"1000337" [label = "(go,go(0, n - 1))" ]
"1000319" [label = "(<operator>.assignment,i = 0)" ]
"1000322" [label = "(<operator>.lessThan,i < n)" ]
"1000325" [label = "(<operator>.postIncrement,i++)" ]
"1000327" [label = "(<operator>.arithmeticShiftRight,cin >> A[i])" ]
"1000343" [label = "(<operator>.postDecrement,q--)" ]
"1000314" [label = "(<operator>.arithmeticShiftRight,n >> q)" ]
"1000334" [label = "(<operator>.addition,A + n)" ]
"1000339" [label = "(<operator>.subtraction,n - 1)" ]
"1000347" [label = "(<operator>.arithmeticShiftRight,cin >> s)" ]
"1000350" [label = "(<operator>.shiftLeft,cout << (st.find(s) != st.end() ? \"Yes\" : \"No\") << \"\n\")" ]
"1000352" [label = "(<operator>.shiftLeft,(st.find(s) != st.end() ? \"Yes\" : \"No\") << \"\n\")" ]
"1000353" [label = "(<operator>.conditional,st.find(s) != st.end() ? \"Yes\" : \"No\")" ]
"1000354" [label = "(<operator>.notEquals,st.find(s) != st.end())" ]
"1000355" [label = "(st.find,st.find(s))" ]
"1000329" [label = "(<operator>.indirectIndexAccess,A[i])" ]
"1000357" [label = "(st.end,st.end())" ]
  "1000309" -> "1000361"  [ label = "DDG: st.clear()"] 
  "1000312" -> "1000361"  [ label = "DDG: cin"] 
  "1000312" -> "1000361"  [ label = "DDG: n >> q"] 
  "1000312" -> "1000361"  [ label = "DDG: cin >> n >> q"] 
  "1000322" -> "1000361"  [ label = "DDG: i"] 
  "1000322" -> "1000361"  [ label = "DDG: i < n"] 
  "1000332" -> "1000361"  [ label = "DDG: A"] 
  "1000332" -> "1000361"  [ label = "DDG: A + n"] 
  "1000332" -> "1000361"  [ label = "DDG: sort(A, A + n)"] 
  "1000339" -> "1000361"  [ label = "DDG: n"] 
  "1000337" -> "1000361"  [ label = "DDG: n - 1"] 
  "1000337" -> "1000361"  [ label = "DDG: go(0, n - 1)"] 
  "1000343" -> "1000361"  [ label = "DDG: q"] 
  "1000347" -> "1000361"  [ label = "DDG: cin"] 
  "1000347" -> "1000361"  [ label = "DDG: cin >> s"] 
  "1000355" -> "1000361"  [ label = "DDG: s"] 
  "1000354" -> "1000361"  [ label = "DDG: st.find(s)"] 
  "1000354" -> "1000361"  [ label = "DDG: st.end()"] 
  "1000353" -> "1000361"  [ label = "DDG: st.find(s) != st.end()"] 
  "1000352" -> "1000361"  [ label = "DDG: st.find(s) != st.end() ? \"Yes\" : \"No\""] 
  "1000350" -> "1000361"  [ label = "DDG: (st.find(s) != st.end() ? \"Yes\" : \"No\") << \"\n\""] 
  "1000350" -> "1000361"  [ label = "DDG: cout << (st.find(s) != st.end() ? \"Yes\" : \"No\") << \"\n\""] 
  "1000327" -> "1000361"  [ label = "DDG: cin"] 
  "1000327" -> "1000361"  [ label = "DDG: A[i]"] 
  "1000327" -> "1000361"  [ label = "DDG: cin >> A[i]"] 
  "1000350" -> "1000361"  [ label = "DDG: cout"] 
  "1000307" -> "1000309"  [ label = "DDG: "] 
  "1000307" -> "1000312"  [ label = "DDG: "] 
  "1000314" -> "1000312"  [ label = "DDG: q"] 
  "1000314" -> "1000312"  [ label = "DDG: n"] 
  "1000307" -> "1000319"  [ label = "DDG: "] 
  "1000327" -> "1000332"  [ label = "DDG: A[i]"] 
  "1000307" -> "1000332"  [ label = "DDG: "] 
  "1000322" -> "1000332"  [ label = "DDG: n"] 
  "1000307" -> "1000337"  [ label = "DDG: "] 
  "1000339" -> "1000337"  [ label = "DDG: 1"] 
  "1000339" -> "1000337"  [ label = "DDG: n"] 
  "1000307" -> "1000314"  [ label = "DDG: "] 
  "1000319" -> "1000322"  [ label = "DDG: i"] 
  "1000325" -> "1000322"  [ label = "DDG: i"] 
  "1000307" -> "1000322"  [ label = "DDG: "] 
  "1000314" -> "1000322"  [ label = "DDG: n"] 
  "1000322" -> "1000325"  [ label = "DDG: i"] 
  "1000307" -> "1000325"  [ label = "DDG: "] 
  "1000312" -> "1000327"  [ label = "DDG: cin"] 
  "1000307" -> "1000327"  [ label = "DDG: "] 
  "1000327" -> "1000334"  [ label = "DDG: A[i]"] 
  "1000307" -> "1000334"  [ label = "DDG: "] 
  "1000322" -> "1000334"  [ label = "DDG: n"] 
  "1000307" -> "1000339"  [ label = "DDG: "] 
  "1000322" -> "1000339"  [ label = "DDG: n"] 
  "1000314" -> "1000343"  [ label = "DDG: q"] 
  "1000307" -> "1000343"  [ label = "DDG: "] 
  "1000312" -> "1000347"  [ label = "DDG: cin"] 
  "1000327" -> "1000347"  [ label = "DDG: cin"] 
  "1000307" -> "1000347"  [ label = "DDG: "] 
  "1000355" -> "1000347"  [ label = "DDG: s"] 
  "1000307" -> "1000350"  [ label = "DDG: "] 
  "1000352" -> "1000350"  [ label = "DDG: \"\n\""] 
  "1000352" -> "1000350"  [ label = "DDG: st.find(s) != st.end() ? \"Yes\" : \"No\""] 
  "1000307" -> "1000352"  [ label = "DDG: "] 
  "1000307" -> "1000353"  [ label = "DDG: "] 
  "1000355" -> "1000354"  [ label = "DDG: s"] 
  "1000307" -> "1000354"  [ label = "DDG: "] 
  "1000347" -> "1000355"  [ label = "DDG: s"] 
  "1000307" -> "1000355"  [ label = "DDG: "] 
  "1000322" -> "1000329"  [ label = "CDG: "] 
  "1000322" -> "1000327"  [ label = "CDG: "] 
  "1000322" -> "1000325"  [ label = "CDG: "] 
  "1000322" -> "1000322"  [ label = "CDG: "] 
  "1000343" -> "1000357"  [ label = "CDG: "] 
  "1000343" -> "1000350"  [ label = "CDG: "] 
  "1000343" -> "1000355"  [ label = "CDG: "] 
  "1000343" -> "1000347"  [ label = "CDG: "] 
  "1000343" -> "1000343"  [ label = "CDG: "] 
  "1000343" -> "1000352"  [ label = "CDG: "] 
  "1000343" -> "1000354"  [ label = "CDG: "] 
  "1000343" -> "1000353"  [ label = "CDG: "] 
}
