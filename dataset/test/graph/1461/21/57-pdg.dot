digraph "power" {  
"1000945" [label = "(METHOD,power)" ]
"1000985" [label = "(METHOD_RETURN,Modular<T>)" ]
"1000946" [label = "(PARAM,const Modular<T>& a)" ]
"1000947" [label = "(PARAM,const U& b)" ]
"1000949" [label = "(assert,assert(b >= 0))" ]
"1000954" [label = "(<operator>.assignment,x = a)" ]
"1000958" [label = "(<operator>.assignment,res = 1)" ]
"1000962" [label = "(<operator>.assignment,p = b)" ]
"1000983" [label = "(RETURN,return res;,return res;)" ]
"1000966" [label = "(<operator>.greaterThan,p > 0)" ]
"1000984" [label = "(IDENTIFIER,res,return res;)" ]
"1000950" [label = "(<operator>.greaterEqualsThan,b >= 0)" ]
"1000977" [label = "(<operator>.assignmentMultiplication,x *= x)" ]
"1000980" [label = "(<operators>.assignmentArithmeticShiftRight,p >>= 1)" ]
"1000971" [label = "(<operator>.and,p & 1)" ]
"1000974" [label = "(<operator>.assignmentMultiplication,res *= x)" ]
  "1000946" -> "1000985"  [ label = "DDG: a"] 
  "1000947" -> "1000985"  [ label = "DDG: b"] 
  "1000949" -> "1000985"  [ label = "DDG: b >= 0"] 
  "1000949" -> "1000985"  [ label = "DDG: assert(b >= 0)"] 
  "1000954" -> "1000985"  [ label = "DDG: x"] 
  "1000954" -> "1000985"  [ label = "DDG: a"] 
  "1000958" -> "1000985"  [ label = "DDG: res"] 
  "1000962" -> "1000985"  [ label = "DDG: b"] 
  "1000966" -> "1000985"  [ label = "DDG: p"] 
  "1000966" -> "1000985"  [ label = "DDG: p > 0"] 
  "1000971" -> "1000985"  [ label = "DDG: p & 1"] 
  "1000974" -> "1000985"  [ label = "DDG: res"] 
  "1000977" -> "1000985"  [ label = "DDG: x"] 
  "1000980" -> "1000985"  [ label = "DDG: p >>= 1"] 
  "1000983" -> "1000985"  [ label = "DDG: <RET>"] 
  "1000945" -> "1000946"  [ label = "DDG: "] 
  "1000945" -> "1000947"  [ label = "DDG: "] 
  "1000946" -> "1000954"  [ label = "DDG: a"] 
  "1000945" -> "1000954"  [ label = "DDG: "] 
  "1000945" -> "1000958"  [ label = "DDG: "] 
  "1000950" -> "1000962"  [ label = "DDG: b"] 
  "1000947" -> "1000962"  [ label = "DDG: b"] 
  "1000945" -> "1000962"  [ label = "DDG: "] 
  "1000984" -> "1000983"  [ label = "DDG: res"] 
  "1000958" -> "1000983"  [ label = "DDG: res"] 
  "1000974" -> "1000983"  [ label = "DDG: res"] 
  "1000950" -> "1000949"  [ label = "DDG: 0"] 
  "1000950" -> "1000949"  [ label = "DDG: b"] 
  "1000945" -> "1000984"  [ label = "DDG: "] 
  "1000947" -> "1000950"  [ label = "DDG: b"] 
  "1000945" -> "1000950"  [ label = "DDG: "] 
  "1000962" -> "1000966"  [ label = "DDG: p"] 
  "1000980" -> "1000966"  [ label = "DDG: p"] 
  "1000945" -> "1000966"  [ label = "DDG: "] 
  "1000954" -> "1000977"  [ label = "DDG: x"] 
  "1000945" -> "1000977"  [ label = "DDG: "] 
  "1000954" -> "1000974"  [ label = "DDG: x"] 
  "1000977" -> "1000974"  [ label = "DDG: x"] 
  "1000945" -> "1000974"  [ label = "DDG: "] 
  "1000971" -> "1000980"  [ label = "DDG: p"] 
  "1000945" -> "1000980"  [ label = "DDG: "] 
  "1000966" -> "1000971"  [ label = "DDG: p"] 
  "1000945" -> "1000971"  [ label = "DDG: "] 
  "1000958" -> "1000974"  [ label = "DDG: res"] 
  "1000966" -> "1000971"  [ label = "CDG: "] 
  "1000966" -> "1000980"  [ label = "CDG: "] 
  "1000966" -> "1000977"  [ label = "CDG: "] 
  "1000966" -> "1000966"  [ label = "CDG: "] 
  "1000971" -> "1000974"  [ label = "CDG: "] 
}
