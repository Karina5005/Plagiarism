digraph "isprime" {  
"1000202" [label = "(METHOD,isprime)" ]
"1000232" [label = "(METHOD_RETURN,lli)" ]
"1000203" [label = "(PARAM,lli n)" ]
"1000230" [label = "(RETURN,return 1;,return 1;)" ]
"1000206" [label = "(<operator>.equals,n==1)" ]
"1000209" [label = "(RETURN,return 0;,return 0;)" ]
"1000213" [label = "(<operator>.assignment,i=2)" ]
"1000216" [label = "(<operator>.lessEqualsThan,i<=sqrt(n))" ]
"1000220" [label = "(<operator>.postIncrement,i++)" ]
"1000231" [label = "(LITERAL,1,return 1;)" ]
"1000210" [label = "(LITERAL,0,return 0;)" ]
"1000223" [label = "(<operator>.equals,n%i==0)" ]
"1000228" [label = "(RETURN,return 0;,return 0;)" ]
"1000218" [label = "(sqrt,sqrt(n))" ]
"1000229" [label = "(LITERAL,0,return 0;)" ]
"1000224" [label = "(<operator>.modulo,n%i)" ]
  "1000230" -> "1000232"  [ label = "DDG: <RET>"] 
  "1000203" -> "1000232"  [ label = "DDG: n"] 
  "1000206" -> "1000232"  [ label = "DDG: n"] 
  "1000206" -> "1000232"  [ label = "DDG: n==1"] 
  "1000216" -> "1000232"  [ label = "DDG: i"] 
  "1000218" -> "1000232"  [ label = "DDG: n"] 
  "1000216" -> "1000232"  [ label = "DDG: sqrt(n)"] 
  "1000216" -> "1000232"  [ label = "DDG: i<=sqrt(n)"] 
  "1000224" -> "1000232"  [ label = "DDG: n"] 
  "1000224" -> "1000232"  [ label = "DDG: i"] 
  "1000223" -> "1000232"  [ label = "DDG: n%i"] 
  "1000223" -> "1000232"  [ label = "DDG: n%i==0"] 
  "1000228" -> "1000232"  [ label = "DDG: <RET>"] 
  "1000209" -> "1000232"  [ label = "DDG: <RET>"] 
  "1000202" -> "1000203"  [ label = "DDG: "] 
  "1000231" -> "1000230"  [ label = "DDG: 1"] 
  "1000202" -> "1000230"  [ label = "DDG: "] 
  "1000210" -> "1000209"  [ label = "DDG: 0"] 
  "1000202" -> "1000209"  [ label = "DDG: "] 
  "1000202" -> "1000213"  [ label = "DDG: "] 
  "1000202" -> "1000231"  [ label = "DDG: "] 
  "1000203" -> "1000206"  [ label = "DDG: n"] 
  "1000202" -> "1000206"  [ label = "DDG: "] 
  "1000202" -> "1000210"  [ label = "DDG: "] 
  "1000213" -> "1000216"  [ label = "DDG: i"] 
  "1000220" -> "1000216"  [ label = "DDG: i"] 
  "1000202" -> "1000216"  [ label = "DDG: "] 
  "1000218" -> "1000216"  [ label = "DDG: n"] 
  "1000224" -> "1000220"  [ label = "DDG: i"] 
  "1000202" -> "1000220"  [ label = "DDG: "] 
  "1000229" -> "1000228"  [ label = "DDG: 0"] 
  "1000202" -> "1000228"  [ label = "DDG: "] 
  "1000206" -> "1000218"  [ label = "DDG: n"] 
  "1000224" -> "1000218"  [ label = "DDG: n"] 
  "1000203" -> "1000218"  [ label = "DDG: n"] 
  "1000202" -> "1000218"  [ label = "DDG: "] 
  "1000224" -> "1000223"  [ label = "DDG: i"] 
  "1000224" -> "1000223"  [ label = "DDG: n"] 
  "1000202" -> "1000223"  [ label = "DDG: "] 
  "1000202" -> "1000229"  [ label = "DDG: "] 
  "1000218" -> "1000224"  [ label = "DDG: n"] 
  "1000203" -> "1000224"  [ label = "DDG: n"] 
  "1000202" -> "1000224"  [ label = "DDG: "] 
  "1000216" -> "1000224"  [ label = "DDG: i"] 
  "1000206" -> "1000218"  [ label = "CDG: "] 
  "1000206" -> "1000213"  [ label = "CDG: "] 
  "1000206" -> "1000209"  [ label = "CDG: "] 
  "1000206" -> "1000216"  [ label = "CDG: "] 
  "1000216" -> "1000224"  [ label = "CDG: "] 
  "1000216" -> "1000223"  [ label = "CDG: "] 
  "1000216" -> "1000230"  [ label = "CDG: "] 
  "1000223" -> "1000218"  [ label = "CDG: "] 
  "1000223" -> "1000216"  [ label = "CDG: "] 
  "1000223" -> "1000220"  [ label = "CDG: "] 
  "1000223" -> "1000228"  [ label = "CDG: "] 
}
