digraph "solve" {  
"1000229" [label = "(METHOD,solve)" ]
"1000268" [label = "(METHOD_RETURN,void)" ]
"1000232" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000236" [label = "(<operator>.assignment,it = mp.upper_bound(n))" ]
"1000265" [label = "(<operator>.and,n&#39)" ]
"1000241" [label = "(<operator>.equals,it == mp.begin())" ]
"1000244" [label = "(<operator>.shiftLeft,cout << 0 << &#39)" ]
"1000238" [label = "(mp.upper_bound,mp.upper_bound(n))" ]
"1000246" [label = "(<operator>.shiftLeft,0 << &#39)" ]
"1000252" [label = "(<operator>.postDecrement,it--)" ]
"1000254" [label = "(<operator>.shiftLeft,cout << it->second << &#39)" ]
"1000262" [label = "(<operator>.and,n&#39)" ]
"1000256" [label = "(<operator>.shiftLeft,it->second << &#39)" ]
"1000248" [label = "(<operator>.addressOf,&#39)" ]
"1000257" [label = "(<operator>.indirectFieldAccess,it->second)" ]
"1000260" [label = "(<operator>.addressOf,&#39)" ]
"1000259" [label = "(FIELD_IDENTIFIER,second,second)" ]
  "1000232" -> "1000268"  [ label = "DDG: cin >> n"] 
  "1000236" -> "1000268"  [ label = "DDG: mp.upper_bound(n)"] 
  "1000241" -> "1000268"  [ label = "DDG: it"] 
  "1000241" -> "1000268"  [ label = "DDG: mp.begin()"] 
  "1000241" -> "1000268"  [ label = "DDG: it == mp.begin()"] 
  "1000252" -> "1000268"  [ label = "DDG: it"] 
  "1000254" -> "1000268"  [ label = "DDG: cout"] 
  "1000256" -> "1000268"  [ label = "DDG: it->second"] 
  "1000256" -> "1000268"  [ label = "DDG: &#39"] 
  "1000254" -> "1000268"  [ label = "DDG: it->second << &#39"] 
  "1000254" -> "1000268"  [ label = "DDG: cout << it->second << &#39"] 
  "1000244" -> "1000268"  [ label = "DDG: cout"] 
  "1000246" -> "1000268"  [ label = "DDG: &#39"] 
  "1000244" -> "1000268"  [ label = "DDG: 0 << &#39"] 
  "1000244" -> "1000268"  [ label = "DDG: cout << 0 << &#39"] 
  "1000265" -> "1000268"  [ label = "DDG: n"] 
  "1000265" -> "1000268"  [ label = "DDG: n&#39"] 
  "1000232" -> "1000268"  [ label = "DDG: cin"] 
  "1000238" -> "1000236"  [ label = "DDG: n"] 
  "1000229" -> "1000232"  [ label = "DDG: "] 
  "1000229" -> "1000236"  [ label = "DDG: "] 
  "1000238" -> "1000265"  [ label = "DDG: n"] 
  "1000262" -> "1000265"  [ label = "DDG: n"] 
  "1000229" -> "1000265"  [ label = "DDG: "] 
  "1000232" -> "1000238"  [ label = "DDG: n"] 
  "1000229" -> "1000238"  [ label = "DDG: "] 
  "1000236" -> "1000241"  [ label = "DDG: it"] 
  "1000229" -> "1000241"  [ label = "DDG: "] 
  "1000229" -> "1000244"  [ label = "DDG: "] 
  "1000246" -> "1000244"  [ label = "DDG: 0"] 
  "1000246" -> "1000244"  [ label = "DDG: &#39"] 
  "1000229" -> "1000246"  [ label = "DDG: "] 
  "1000241" -> "1000252"  [ label = "DDG: it"] 
  "1000229" -> "1000252"  [ label = "DDG: "] 
  "1000229" -> "1000254"  [ label = "DDG: "] 
  "1000256" -> "1000254"  [ label = "DDG: &#39"] 
  "1000256" -> "1000254"  [ label = "DDG: it->second"] 
  "1000238" -> "1000262"  [ label = "DDG: n"] 
  "1000229" -> "1000262"  [ label = "DDG: "] 
  "1000241" -> "1000248"  [ label = "CDG: "] 
  "1000241" -> "1000262"  [ label = "CDG: "] 
  "1000241" -> "1000260"  [ label = "CDG: "] 
  "1000241" -> "1000256"  [ label = "CDG: "] 
  "1000241" -> "1000254"  [ label = "CDG: "] 
  "1000241" -> "1000244"  [ label = "CDG: "] 
  "1000241" -> "1000246"  [ label = "CDG: "] 
  "1000241" -> "1000252"  [ label = "CDG: "] 
  "1000241" -> "1000259"  [ label = "CDG: "] 
  "1000241" -> "1000257"  [ label = "CDG: "] 
}
