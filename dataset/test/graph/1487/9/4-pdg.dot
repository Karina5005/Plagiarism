digraph "main" {  
"1000269" [label = "(METHOD,main)" ]
"1000346" [label = "(METHOD_RETURN,int)" ]
"1000271" [label = "(ios_base::sync_with_stdio,ios_base::sync_with_stdio(false))" ]
"1000273" [label = "(cin.tie,cin.tie(0))" ]
"1000320" [label = "(<operator>.assignment,pre = 0)" ]
"1000336" [label = "(<operator>.arithmeticShiftRight,cin >> T)" ]
"1000344" [label = "(RETURN,return 0;,return 0;)" ]
"1000277" [label = "(<operator>.assignment,i = 3)" ]
"1000280" [label = "(<operator>.lessEqualsThan,i * i <= 2e9)" ]
"1000285" [label = "(<operator>.assignmentPlus,i += 2)" ]
"1000325" [label = "(<operator>.assignmentPlus,x.second += pre)" ]
"1000330" [label = "(<operator>.assignment,pre = x.second)" ]
"1000340" [label = "(<operator>.postDecrement,T--)" ]
"1000345" [label = "(LITERAL,0,return 0;)" ]
"1000290" [label = "(<operator>.assignment,b = (i * i - 1) / 2)" ]
"1000300" [label = "(<operator>.assignment,c = i * i - b)" ]
"1000343" [label = "(solve,solve())" ]
"1000281" [label = "(<operator>.multiplication,i * i)" ]
"1000308" [label = "(<operator>.logicalAnd,b >= i && c >= b)" ]
"1000315" [label = "(<operator>.postIncrement,mp[c]++)" ]
"1000292" [label = "(<operator>.division,(i * i - 1) / 2)" ]
"1000302" [label = "(<operator>.subtraction,i * i - b)" ]
"1000293" [label = "(<operator>.subtraction,i * i - 1)" ]
"1000303" [label = "(<operator>.multiplication,i * i)" ]
"1000309" [label = "(<operator>.greaterEqualsThan,b >= i)" ]
"1000312" [label = "(<operator>.greaterEqualsThan,c >= b)" ]
"1000294" [label = "(<operator>.multiplication,i * i)" ]
"1000316" [label = "(<operator>.indirectIndexAccess,mp[c])" ]
  "1000271" -> "1000346"  [ label = "DDG: ios_base::sync_with_stdio(false)"] 
  "1000273" -> "1000346"  [ label = "DDG: cin.tie(0)"] 
  "1000281" -> "1000346"  [ label = "DDG: i"] 
  "1000280" -> "1000346"  [ label = "DDG: i * i"] 
  "1000280" -> "1000346"  [ label = "DDG: i * i <= 2e9"] 
  "1000330" -> "1000346"  [ label = "DDG: pre"] 
  "1000330" -> "1000346"  [ label = "DDG: x.second"] 
  "1000336" -> "1000346"  [ label = "DDG: cin >> T"] 
  "1000340" -> "1000346"  [ label = "DDG: T"] 
  "1000343" -> "1000346"  [ label = "DDG: solve()"] 
  "1000292" -> "1000346"  [ label = "DDG: i * i - 1"] 
  "1000290" -> "1000346"  [ label = "DDG: (i * i - 1) / 2"] 
  "1000300" -> "1000346"  [ label = "DDG: c"] 
  "1000300" -> "1000346"  [ label = "DDG: i * i - b"] 
  "1000309" -> "1000346"  [ label = "DDG: b"] 
  "1000308" -> "1000346"  [ label = "DDG: b >= i"] 
  "1000312" -> "1000346"  [ label = "DDG: c"] 
  "1000312" -> "1000346"  [ label = "DDG: b"] 
  "1000308" -> "1000346"  [ label = "DDG: c >= b"] 
  "1000308" -> "1000346"  [ label = "DDG: b >= i && c >= b"] 
  "1000315" -> "1000346"  [ label = "DDG: mp[c]"] 
  "1000344" -> "1000346"  [ label = "DDG: <RET>"] 
  "1000271" -> "1000346"  [ label = "DDG: false"] 
  "1000336" -> "1000346"  [ label = "DDG: cin"] 
  "1000269" -> "1000320"  [ label = "DDG: "] 
  "1000345" -> "1000344"  [ label = "DDG: 0"] 
  "1000269" -> "1000344"  [ label = "DDG: "] 
  "1000269" -> "1000271"  [ label = "DDG: "] 
  "1000269" -> "1000273"  [ label = "DDG: "] 
  "1000269" -> "1000277"  [ label = "DDG: "] 
  "1000269" -> "1000285"  [ label = "DDG: "] 
  "1000320" -> "1000325"  [ label = "DDG: pre"] 
  "1000269" -> "1000325"  [ label = "DDG: "] 
  "1000325" -> "1000330"  [ label = "DDG: x.second"] 
  "1000269" -> "1000336"  [ label = "DDG: "] 
  "1000269" -> "1000345"  [ label = "DDG: "] 
  "1000281" -> "1000280"  [ label = "DDG: i"] 
  "1000269" -> "1000280"  [ label = "DDG: "] 
  "1000309" -> "1000285"  [ label = "DDG: i"] 
  "1000292" -> "1000290"  [ label = "DDG: 2"] 
  "1000292" -> "1000290"  [ label = "DDG: i * i - 1"] 
  "1000302" -> "1000300"  [ label = "DDG: i * i"] 
  "1000302" -> "1000300"  [ label = "DDG: b"] 
  "1000269" -> "1000330"  [ label = "DDG: "] 
  "1000336" -> "1000340"  [ label = "DDG: T"] 
  "1000269" -> "1000340"  [ label = "DDG: "] 
  "1000269" -> "1000343"  [ label = "DDG: "] 
  "1000277" -> "1000281"  [ label = "DDG: i"] 
  "1000285" -> "1000281"  [ label = "DDG: i"] 
  "1000269" -> "1000281"  [ label = "DDG: "] 
  "1000269" -> "1000290"  [ label = "DDG: "] 
  "1000269" -> "1000300"  [ label = "DDG: "] 
  "1000293" -> "1000292"  [ label = "DDG: 1"] 
  "1000293" -> "1000292"  [ label = "DDG: i * i"] 
  "1000269" -> "1000292"  [ label = "DDG: "] 
  "1000303" -> "1000302"  [ label = "DDG: i"] 
  "1000290" -> "1000302"  [ label = "DDG: b"] 
  "1000269" -> "1000302"  [ label = "DDG: "] 
  "1000309" -> "1000308"  [ label = "DDG: b"] 
  "1000309" -> "1000308"  [ label = "DDG: i"] 
  "1000312" -> "1000308"  [ label = "DDG: b"] 
  "1000312" -> "1000308"  [ label = "DDG: c"] 
  "1000294" -> "1000293"  [ label = "DDG: i"] 
  "1000269" -> "1000293"  [ label = "DDG: "] 
  "1000294" -> "1000303"  [ label = "DDG: i"] 
  "1000269" -> "1000303"  [ label = "DDG: "] 
  "1000302" -> "1000309"  [ label = "DDG: b"] 
  "1000269" -> "1000309"  [ label = "DDG: "] 
  "1000303" -> "1000309"  [ label = "DDG: i"] 
  "1000300" -> "1000312"  [ label = "DDG: c"] 
  "1000269" -> "1000312"  [ label = "DDG: "] 
  "1000309" -> "1000312"  [ label = "DDG: b"] 
  "1000281" -> "1000294"  [ label = "DDG: i"] 
  "1000269" -> "1000294"  [ label = "DDG: "] 
  "1000280" -> "1000309"  [ label = "CDG: "] 
  "1000280" -> "1000294"  [ label = "CDG: "] 
  "1000280" -> "1000281"  [ label = "CDG: "] 
  "1000280" -> "1000303"  [ label = "CDG: "] 
  "1000280" -> "1000285"  [ label = "CDG: "] 
  "1000280" -> "1000308"  [ label = "CDG: "] 
  "1000280" -> "1000280"  [ label = "CDG: "] 
  "1000280" -> "1000293"  [ label = "CDG: "] 
  "1000280" -> "1000300"  [ label = "CDG: "] 
  "1000280" -> "1000302"  [ label = "CDG: "] 
  "1000280" -> "1000290"  [ label = "CDG: "] 
  "1000280" -> "1000292"  [ label = "CDG: "] 
  "1000340" -> "1000340"  [ label = "CDG: "] 
  "1000340" -> "1000343"  [ label = "CDG: "] 
  "1000308" -> "1000316"  [ label = "CDG: "] 
  "1000308" -> "1000315"  [ label = "CDG: "] 
  "1000309" -> "1000312"  [ label = "CDG: "] 
}
