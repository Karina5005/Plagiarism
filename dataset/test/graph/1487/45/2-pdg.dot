digraph "soln" {  
"1000161" [label = "(METHOD,soln)" ]
"1000206" [label = "(METHOD_RETURN,void)" ]
"1000166" [label = "(<operator>.assignment,ans=0)" ]
"1000171" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000174" [label = "(<operator>.assignment,lim = sqrt(2*n-1))" ]
"1000194" [label = "(<operator>.assignmentPlus,ans += lim/2 - 1)" ]
"1000201" [label = "(<operator>.shiftLeft,cout<<ans<<endl)" ]
"1000183" [label = "(<operator>.equals,lim%2==1)" ]
"1000176" [label = "(sqrt,sqrt(2*n-1))" ]
"1000189" [label = "(<operator>.assignment,ans = 1)" ]
"1000192" [label = "(<operator>.postDecrement,lim--)" ]
"1000196" [label = "(<operator>.subtraction,lim/2 - 1)" ]
"1000203" [label = "(<operator>.shiftLeft,ans<<endl)" ]
"1000177" [label = "(<operator>.subtraction,2*n-1)" ]
"1000184" [label = "(<operator>.modulo,lim%2)" ]
"1000197" [label = "(<operator>.division,lim/2)" ]
"1000178" [label = "(<operator>.multiplication,2*n)" ]
  "1000171" -> "1000206"  [ label = "DDG: cin>>n"] 
  "1000178" -> "1000206"  [ label = "DDG: n"] 
  "1000177" -> "1000206"  [ label = "DDG: 2*n"] 
  "1000176" -> "1000206"  [ label = "DDG: 2*n-1"] 
  "1000174" -> "1000206"  [ label = "DDG: sqrt(2*n-1)"] 
  "1000183" -> "1000206"  [ label = "DDG: lim%2"] 
  "1000183" -> "1000206"  [ label = "DDG: lim%2==1"] 
  "1000197" -> "1000206"  [ label = "DDG: lim"] 
  "1000196" -> "1000206"  [ label = "DDG: lim/2"] 
  "1000194" -> "1000206"  [ label = "DDG: lim/2 - 1"] 
  "1000203" -> "1000206"  [ label = "DDG: ans"] 
  "1000201" -> "1000206"  [ label = "DDG: ans<<endl"] 
  "1000201" -> "1000206"  [ label = "DDG: cout<<ans<<endl"] 
  "1000201" -> "1000206"  [ label = "DDG: cout"] 
  "1000203" -> "1000206"  [ label = "DDG: endl"] 
  "1000171" -> "1000206"  [ label = "DDG: cin"] 
  "1000161" -> "1000166"  [ label = "DDG: "] 
  "1000176" -> "1000174"  [ label = "DDG: 2*n-1"] 
  "1000196" -> "1000194"  [ label = "DDG: 1"] 
  "1000196" -> "1000194"  [ label = "DDG: lim/2"] 
  "1000161" -> "1000171"  [ label = "DDG: "] 
  "1000161" -> "1000174"  [ label = "DDG: "] 
  "1000166" -> "1000194"  [ label = "DDG: ans"] 
  "1000189" -> "1000194"  [ label = "DDG: ans"] 
  "1000161" -> "1000194"  [ label = "DDG: "] 
  "1000161" -> "1000201"  [ label = "DDG: "] 
  "1000203" -> "1000201"  [ label = "DDG: endl"] 
  "1000203" -> "1000201"  [ label = "DDG: ans"] 
  "1000177" -> "1000176"  [ label = "DDG: 2*n"] 
  "1000177" -> "1000176"  [ label = "DDG: 1"] 
  "1000184" -> "1000183"  [ label = "DDG: 2"] 
  "1000184" -> "1000183"  [ label = "DDG: lim"] 
  "1000161" -> "1000183"  [ label = "DDG: "] 
  "1000161" -> "1000189"  [ label = "DDG: "] 
  "1000197" -> "1000196"  [ label = "DDG: 2"] 
  "1000197" -> "1000196"  [ label = "DDG: lim"] 
  "1000161" -> "1000196"  [ label = "DDG: "] 
  "1000194" -> "1000203"  [ label = "DDG: ans"] 
  "1000161" -> "1000203"  [ label = "DDG: "] 
  "1000178" -> "1000177"  [ label = "DDG: 2"] 
  "1000178" -> "1000177"  [ label = "DDG: n"] 
  "1000161" -> "1000177"  [ label = "DDG: "] 
  "1000174" -> "1000184"  [ label = "DDG: lim"] 
  "1000161" -> "1000184"  [ label = "DDG: "] 
  "1000184" -> "1000192"  [ label = "DDG: lim"] 
  "1000161" -> "1000192"  [ label = "DDG: "] 
  "1000184" -> "1000197"  [ label = "DDG: lim"] 
  "1000192" -> "1000197"  [ label = "DDG: lim"] 
  "1000161" -> "1000197"  [ label = "DDG: "] 
  "1000161" -> "1000178"  [ label = "DDG: "] 
  "1000171" -> "1000178"  [ label = "DDG: n"] 
  "1000183" -> "1000192"  [ label = "CDG: "] 
  "1000183" -> "1000189"  [ label = "CDG: "] 
}
