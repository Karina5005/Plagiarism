digraph "read" {  
"1000113" [label = "(METHOD,read)" ]
"1000171" [label = "(METHOD_RETURN,LL)" ]
"1000116" [label = "(<operator>.assignment,x=0)" ]
"1000120" [label = "(<operator>.assignment,t=1)" ]
"1000167" [label = "(RETURN,return x*t;,return x*t;)" ]
"1000125" [label = "(<operator>.logicalOr,(ch=getchar())<'0'||ch>'9')" ]
"1000143" [label = "(<operator>.logicalAnd,ch>='0'&&ch<='9')" ]
"1000168" [label = "(<operator>.multiplication,x*t)" ]
"1000135" [label = "(<operator>.equals,ch=='-')" ]
"1000138" [label = "(<operator>.assignment,t=-1)" ]
"1000151" [label = "(<operator>.assignment,x=(x<<3)+(x<<1)+ch-'0')" ]
"1000164" [label = "(<operator>.assignment,ch=getchar())" ]
"1000126" [label = "(<operator>.lessThan,(ch=getchar())<'0')" ]
"1000131" [label = "(<operator>.greaterThan,ch>'9')" ]
"1000144" [label = "(<operator>.greaterEqualsThan,ch>='0')" ]
"1000147" [label = "(<operator>.lessEqualsThan,ch<='9')" ]
"1000127" [label = "(<operator>.assignment,ch=getchar())" ]
"1000140" [label = "(<operator>.minus,-1)" ]
"1000153" [label = "(<operator>.addition,(x<<3)+(x<<1)+ch-'0')" ]
"1000154" [label = "(<operator>.shiftLeft,x<<3)" ]
"1000157" [label = "(<operator>.addition,(x<<1)+ch-'0')" ]
"1000158" [label = "(<operator>.shiftLeft,x<<1)" ]
"1000161" [label = "(<operator>.subtraction,ch-'0')" ]
"1000166" [label = "(getchar,getchar())" ]
"1000129" [label = "(getchar,getchar())" ]
  "1000127" -> "1000171"  [ label = "DDG: getchar()"] 
  "1000125" -> "1000171"  [ label = "DDG: (ch=getchar())<'0'"] 
  "1000125" -> "1000171"  [ label = "DDG: ch>'9'"] 
  "1000125" -> "1000171"  [ label = "DDG: (ch=getchar())<'0'||ch>'9'"] 
  "1000144" -> "1000171"  [ label = "DDG: ch"] 
  "1000143" -> "1000171"  [ label = "DDG: ch>='0'"] 
  "1000147" -> "1000171"  [ label = "DDG: ch"] 
  "1000143" -> "1000171"  [ label = "DDG: ch<='9'"] 
  "1000143" -> "1000171"  [ label = "DDG: ch>='0'&&ch<='9'"] 
  "1000168" -> "1000171"  [ label = "DDG: x"] 
  "1000168" -> "1000171"  [ label = "DDG: t"] 
  "1000168" -> "1000171"  [ label = "DDG: x*t"] 
  "1000153" -> "1000171"  [ label = "DDG: x<<3"] 
  "1000157" -> "1000171"  [ label = "DDG: x<<1"] 
  "1000157" -> "1000171"  [ label = "DDG: ch-'0'"] 
  "1000153" -> "1000171"  [ label = "DDG: (x<<1)+ch-'0'"] 
  "1000151" -> "1000171"  [ label = "DDG: (x<<3)+(x<<1)+ch-'0'"] 
  "1000164" -> "1000171"  [ label = "DDG: getchar()"] 
  "1000135" -> "1000171"  [ label = "DDG: ch=='-'"] 
  "1000138" -> "1000171"  [ label = "DDG: -1"] 
  "1000167" -> "1000171"  [ label = "DDG: <RET>"] 
  "1000113" -> "1000116"  [ label = "DDG: "] 
  "1000113" -> "1000120"  [ label = "DDG: "] 
  "1000168" -> "1000167"  [ label = "DDG: x*t"] 
  "1000126" -> "1000125"  [ label = "DDG: '0'"] 
  "1000131" -> "1000125"  [ label = "DDG: ch"] 
  "1000131" -> "1000125"  [ label = "DDG: '9'"] 
  "1000140" -> "1000138"  [ label = "DDG: 1"] 
  "1000144" -> "1000143"  [ label = "DDG: '0'"] 
  "1000144" -> "1000143"  [ label = "DDG: ch"] 
  "1000147" -> "1000143"  [ label = "DDG: ch"] 
  "1000147" -> "1000143"  [ label = "DDG: '9'"] 
  "1000154" -> "1000151"  [ label = "DDG: x"] 
  "1000154" -> "1000151"  [ label = "DDG: 3"] 
  "1000161" -> "1000151"  [ label = "DDG: '0'"] 
  "1000161" -> "1000151"  [ label = "DDG: ch"] 
  "1000158" -> "1000151"  [ label = "DDG: 1"] 
  "1000158" -> "1000151"  [ label = "DDG: x"] 
  "1000113" -> "1000164"  [ label = "DDG: "] 
  "1000116" -> "1000168"  [ label = "DDG: x"] 
  "1000151" -> "1000168"  [ label = "DDG: x"] 
  "1000113" -> "1000168"  [ label = "DDG: "] 
  "1000120" -> "1000168"  [ label = "DDG: t"] 
  "1000138" -> "1000168"  [ label = "DDG: t"] 
  "1000127" -> "1000126"  [ label = "DDG: ch"] 
  "1000113" -> "1000126"  [ label = "DDG: "] 
  "1000127" -> "1000131"  [ label = "DDG: ch"] 
  "1000113" -> "1000131"  [ label = "DDG: "] 
  "1000127" -> "1000135"  [ label = "DDG: ch"] 
  "1000131" -> "1000135"  [ label = "DDG: ch"] 
  "1000113" -> "1000135"  [ label = "DDG: "] 
  "1000113" -> "1000138"  [ label = "DDG: "] 
  "1000127" -> "1000144"  [ label = "DDG: ch"] 
  "1000131" -> "1000144"  [ label = "DDG: ch"] 
  "1000164" -> "1000144"  [ label = "DDG: ch"] 
  "1000113" -> "1000144"  [ label = "DDG: "] 
  "1000144" -> "1000147"  [ label = "DDG: ch"] 
  "1000113" -> "1000147"  [ label = "DDG: "] 
  "1000113" -> "1000151"  [ label = "DDG: "] 
  "1000113" -> "1000127"  [ label = "DDG: "] 
  "1000113" -> "1000140"  [ label = "DDG: "] 
  "1000154" -> "1000153"  [ label = "DDG: x"] 
  "1000154" -> "1000153"  [ label = "DDG: 3"] 
  "1000161" -> "1000153"  [ label = "DDG: '0'"] 
  "1000161" -> "1000153"  [ label = "DDG: ch"] 
  "1000158" -> "1000153"  [ label = "DDG: 1"] 
  "1000158" -> "1000153"  [ label = "DDG: x"] 
  "1000116" -> "1000154"  [ label = "DDG: x"] 
  "1000151" -> "1000154"  [ label = "DDG: x"] 
  "1000113" -> "1000154"  [ label = "DDG: "] 
  "1000158" -> "1000157"  [ label = "DDG: 1"] 
  "1000158" -> "1000157"  [ label = "DDG: x"] 
  "1000161" -> "1000157"  [ label = "DDG: '0'"] 
  "1000161" -> "1000157"  [ label = "DDG: ch"] 
  "1000154" -> "1000158"  [ label = "DDG: x"] 
  "1000113" -> "1000158"  [ label = "DDG: "] 
  "1000144" -> "1000161"  [ label = "DDG: ch"] 
  "1000147" -> "1000161"  [ label = "DDG: ch"] 
  "1000113" -> "1000161"  [ label = "DDG: "] 
  "1000125" -> "1000125"  [ label = "CDG: "] 
  "1000125" -> "1000127"  [ label = "CDG: "] 
  "1000125" -> "1000126"  [ label = "CDG: "] 
  "1000125" -> "1000129"  [ label = "CDG: "] 
  "1000125" -> "1000135"  [ label = "CDG: "] 
  "1000143" -> "1000153"  [ label = "CDG: "] 
  "1000143" -> "1000164"  [ label = "CDG: "] 
  "1000143" -> "1000143"  [ label = "CDG: "] 
  "1000143" -> "1000158"  [ label = "CDG: "] 
  "1000143" -> "1000154"  [ label = "CDG: "] 
  "1000143" -> "1000161"  [ label = "CDG: "] 
  "1000143" -> "1000151"  [ label = "CDG: "] 
  "1000143" -> "1000166"  [ label = "CDG: "] 
  "1000143" -> "1000144"  [ label = "CDG: "] 
  "1000143" -> "1000157"  [ label = "CDG: "] 
  "1000126" -> "1000131"  [ label = "CDG: "] 
  "1000135" -> "1000140"  [ label = "CDG: "] 
  "1000135" -> "1000138"  [ label = "CDG: "] 
  "1000144" -> "1000147"  [ label = "CDG: "] 
}
