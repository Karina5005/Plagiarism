digraph "solve" {  
"1000109" [label = "(METHOD,solve)" ]
"1000161" [label = "(METHOD_RETURN,void)" ]
"1000112" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000116" [label = "(<operator>.arithmeticShiftRight,cin>>grid[0]>>grid[1])" ]
"1000157" [label = "(<operator>.shiftLeft,cout<<\"YES\n\")" ]
"1000160" [label = "(RETURN,return;,return;)" ]
"1000127" [label = "(<operator>.assignment,c = 0)" ]
"1000130" [label = "(<operator>.lessThan,c < n)" ]
"1000133" [label = "(<operator>.postIncrement,c++)" ]
"1000118" [label = "(<operator>.arithmeticShiftRight,grid[0]>>grid[1])" ]
"1000137" [label = "(<operator>.logicalAnd,grid[0][c] == '1' && grid[1][c] == '1')" ]
"1000153" [label = "(<operator>.shiftLeft,cout<<\"NO\n\")" ]
"1000156" [label = "(RETURN,return;,return;)" ]
"1000138" [label = "(<operator>.equals,grid[0][c] == '1')" ]
"1000145" [label = "(<operator>.equals,grid[1][c] == '1')" ]
"1000139" [label = "(<operator>.indirectIndexAccess,grid[0][c])" ]
"1000146" [label = "(<operator>.indirectIndexAccess,grid[1][c])" ]
"1000140" [label = "(<operator>.indirectIndexAccess,grid[0])" ]
"1000147" [label = "(<operator>.indirectIndexAccess,grid[1])" ]
  "1000112" -> "1000161"  [ label = "DDG: cin>>n"] 
  "1000116" -> "1000161"  [ label = "DDG: cin"] 
  "1000118" -> "1000161"  [ label = "DDG: grid[0]"] 
  "1000118" -> "1000161"  [ label = "DDG: grid[1]"] 
  "1000116" -> "1000161"  [ label = "DDG: grid[0]>>grid[1]"] 
  "1000116" -> "1000161"  [ label = "DDG: cin>>grid[0]>>grid[1]"] 
  "1000130" -> "1000161"  [ label = "DDG: c"] 
  "1000130" -> "1000161"  [ label = "DDG: n"] 
  "1000130" -> "1000161"  [ label = "DDG: c < n"] 
  "1000157" -> "1000161"  [ label = "DDG: cout"] 
  "1000157" -> "1000161"  [ label = "DDG: cout<<\"YES\n\""] 
  "1000138" -> "1000161"  [ label = "DDG: grid[0][c]"] 
  "1000137" -> "1000161"  [ label = "DDG: grid[0][c] == '1'"] 
  "1000145" -> "1000161"  [ label = "DDG: grid[1][c]"] 
  "1000137" -> "1000161"  [ label = "DDG: grid[1][c] == '1'"] 
  "1000137" -> "1000161"  [ label = "DDG: grid[0][c] == '1' && grid[1][c] == '1'"] 
  "1000153" -> "1000161"  [ label = "DDG: cout"] 
  "1000153" -> "1000161"  [ label = "DDG: cout<<\"NO\n\""] 
  "1000160" -> "1000161"  [ label = "DDG: <RET>"] 
  "1000156" -> "1000161"  [ label = "DDG: <RET>"] 
  "1000109" -> "1000160"  [ label = "DDG: "] 
  "1000109" -> "1000112"  [ label = "DDG: "] 
  "1000112" -> "1000116"  [ label = "DDG: cin"] 
  "1000109" -> "1000116"  [ label = "DDG: "] 
  "1000118" -> "1000116"  [ label = "DDG: grid[0]"] 
  "1000118" -> "1000116"  [ label = "DDG: grid[1]"] 
  "1000109" -> "1000127"  [ label = "DDG: "] 
  "1000109" -> "1000157"  [ label = "DDG: "] 
  "1000127" -> "1000130"  [ label = "DDG: c"] 
  "1000133" -> "1000130"  [ label = "DDG: c"] 
  "1000109" -> "1000130"  [ label = "DDG: "] 
  "1000112" -> "1000130"  [ label = "DDG: n"] 
  "1000130" -> "1000133"  [ label = "DDG: c"] 
  "1000109" -> "1000133"  [ label = "DDG: "] 
  "1000138" -> "1000137"  [ label = "DDG: '1'"] 
  "1000138" -> "1000137"  [ label = "DDG: grid[0][c]"] 
  "1000145" -> "1000137"  [ label = "DDG: grid[1][c]"] 
  "1000145" -> "1000137"  [ label = "DDG: '1'"] 
  "1000109" -> "1000156"  [ label = "DDG: "] 
  "1000109" -> "1000138"  [ label = "DDG: "] 
  "1000109" -> "1000145"  [ label = "DDG: "] 
  "1000109" -> "1000153"  [ label = "DDG: "] 
  "1000130" -> "1000137"  [ label = "CDG: "] 
  "1000130" -> "1000160"  [ label = "CDG: "] 
  "1000130" -> "1000139"  [ label = "CDG: "] 
  "1000130" -> "1000157"  [ label = "CDG: "] 
  "1000130" -> "1000140"  [ label = "CDG: "] 
  "1000130" -> "1000138"  [ label = "CDG: "] 
  "1000137" -> "1000153"  [ label = "CDG: "] 
  "1000137" -> "1000156"  [ label = "CDG: "] 
  "1000137" -> "1000130"  [ label = "CDG: "] 
  "1000137" -> "1000133"  [ label = "CDG: "] 
  "1000138" -> "1000147"  [ label = "CDG: "] 
  "1000138" -> "1000145"  [ label = "CDG: "] 
  "1000138" -> "1000146"  [ label = "CDG: "] 
}
