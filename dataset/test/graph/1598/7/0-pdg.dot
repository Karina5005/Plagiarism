digraph "testCase" {  
"1000101" [label = "(METHOD,testCase)" ]
"1000152" [label = "(METHOD_RETURN,void)" ]
"1000104" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000108" [label = "(<operator>.arithmeticShiftRight,cin >> arr[0] >> arr[1])" ]
"1000149" [label = "(<operator>.shiftLeft,cout << \"YES\n\")" ]
"1000119" [label = "(<operator>.assignment,i = 0)" ]
"1000122" [label = "(<operator>.lessThan,i < n)" ]
"1000125" [label = "(<operator>.postIncrement,i++)" ]
"1000110" [label = "(<operator>.arithmeticShiftRight,arr[0] >> arr[1])" ]
"1000129" [label = "(<operator>.logicalAnd,arr[0][i] == '1' && arr[1][i] == '1')" ]
"1000145" [label = "(<operator>.shiftLeft,cout << \"NO\n\")" ]
"1000148" [label = "(RETURN,return;,return;)" ]
"1000130" [label = "(<operator>.equals,arr[0][i] == '1')" ]
"1000137" [label = "(<operator>.equals,arr[1][i] == '1')" ]
"1000131" [label = "(<operator>.indirectIndexAccess,arr[0][i])" ]
"1000138" [label = "(<operator>.indirectIndexAccess,arr[1][i])" ]
"1000132" [label = "(<operator>.indirectIndexAccess,arr[0])" ]
"1000139" [label = "(<operator>.indirectIndexAccess,arr[1])" ]
  "1000104" -> "1000152"  [ label = "DDG: cin >> n"] 
  "1000108" -> "1000152"  [ label = "DDG: cin"] 
  "1000110" -> "1000152"  [ label = "DDG: arr[0]"] 
  "1000110" -> "1000152"  [ label = "DDG: arr[1]"] 
  "1000108" -> "1000152"  [ label = "DDG: arr[0] >> arr[1]"] 
  "1000108" -> "1000152"  [ label = "DDG: cin >> arr[0] >> arr[1]"] 
  "1000122" -> "1000152"  [ label = "DDG: i"] 
  "1000122" -> "1000152"  [ label = "DDG: n"] 
  "1000122" -> "1000152"  [ label = "DDG: i < n"] 
  "1000149" -> "1000152"  [ label = "DDG: cout"] 
  "1000149" -> "1000152"  [ label = "DDG: cout << \"YES\n\""] 
  "1000130" -> "1000152"  [ label = "DDG: arr[0][i]"] 
  "1000129" -> "1000152"  [ label = "DDG: arr[0][i] == '1'"] 
  "1000137" -> "1000152"  [ label = "DDG: arr[1][i]"] 
  "1000129" -> "1000152"  [ label = "DDG: arr[1][i] == '1'"] 
  "1000129" -> "1000152"  [ label = "DDG: arr[0][i] == '1' && arr[1][i] == '1'"] 
  "1000145" -> "1000152"  [ label = "DDG: cout"] 
  "1000145" -> "1000152"  [ label = "DDG: cout << \"NO\n\""] 
  "1000148" -> "1000152"  [ label = "DDG: <RET>"] 
  "1000101" -> "1000104"  [ label = "DDG: "] 
  "1000104" -> "1000108"  [ label = "DDG: cin"] 
  "1000101" -> "1000108"  [ label = "DDG: "] 
  "1000110" -> "1000108"  [ label = "DDG: arr[0]"] 
  "1000110" -> "1000108"  [ label = "DDG: arr[1]"] 
  "1000101" -> "1000119"  [ label = "DDG: "] 
  "1000101" -> "1000149"  [ label = "DDG: "] 
  "1000119" -> "1000122"  [ label = "DDG: i"] 
  "1000125" -> "1000122"  [ label = "DDG: i"] 
  "1000101" -> "1000122"  [ label = "DDG: "] 
  "1000104" -> "1000122"  [ label = "DDG: n"] 
  "1000122" -> "1000125"  [ label = "DDG: i"] 
  "1000101" -> "1000125"  [ label = "DDG: "] 
  "1000130" -> "1000129"  [ label = "DDG: '1'"] 
  "1000130" -> "1000129"  [ label = "DDG: arr[0][i]"] 
  "1000137" -> "1000129"  [ label = "DDG: '1'"] 
  "1000137" -> "1000129"  [ label = "DDG: arr[1][i]"] 
  "1000101" -> "1000148"  [ label = "DDG: "] 
  "1000101" -> "1000130"  [ label = "DDG: "] 
  "1000101" -> "1000137"  [ label = "DDG: "] 
  "1000101" -> "1000145"  [ label = "DDG: "] 
  "1000122" -> "1000131"  [ label = "CDG: "] 
  "1000122" -> "1000132"  [ label = "CDG: "] 
  "1000122" -> "1000129"  [ label = "CDG: "] 
  "1000122" -> "1000130"  [ label = "CDG: "] 
  "1000122" -> "1000149"  [ label = "CDG: "] 
  "1000129" -> "1000125"  [ label = "CDG: "] 
  "1000129" -> "1000145"  [ label = "CDG: "] 
  "1000129" -> "1000148"  [ label = "CDG: "] 
  "1000129" -> "1000122"  [ label = "CDG: "] 
  "1000130" -> "1000137"  [ label = "CDG: "] 
  "1000130" -> "1000139"  [ label = "CDG: "] 
  "1000130" -> "1000138"  [ label = "CDG: "] 
}
