digraph "solve" {  
"1000101" [label = "(METHOD,solve)" ]
"1000161" [label = "(METHOD_RETURN,void)" ]
"1000104" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000109" [label = "(<operator>.assignment,f = 0)" ]
"1000112" [label = "(<operator>.arithmeticShiftRight,cin >> l[0] >> l[1])" ]
"1000123" [label = "(<operator>.assignment,i = 0)" ]
"1000126" [label = "(<operator>.lessThan,i < n)" ]
"1000129" [label = "(<operator>.postIncrement,i++)" ]
"1000151" [label = "(<operator>.equals,f==0)" ]
"1000154" [label = "(<operator>.shiftLeft,cout << \"YES\n\")" ]
"1000114" [label = "(<operator>.arithmeticShiftRight,l[0] >> l[1])" ]
"1000132" [label = "(<operator>.logicalAnd,l[0][i]=='1' && l[1][i]=='1')" ]
"1000147" [label = "(<operator>.assignment,f = 1)" ]
"1000158" [label = "(<operator>.shiftLeft,cout << \"NO\n\")" ]
"1000133" [label = "(<operator>.equals,l[0][i]=='1')" ]
"1000140" [label = "(<operator>.equals,l[1][i]=='1')" ]
"1000134" [label = "(<operator>.indirectIndexAccess,l[0][i])" ]
"1000141" [label = "(<operator>.indirectIndexAccess,l[1][i])" ]
"1000135" [label = "(<operator>.indirectIndexAccess,l[0])" ]
"1000142" [label = "(<operator>.indirectIndexAccess,l[1])" ]
  "1000104" -> "1000161"  [ label = "DDG: cin >> n"] 
  "1000112" -> "1000161"  [ label = "DDG: cin"] 
  "1000114" -> "1000161"  [ label = "DDG: l[0]"] 
  "1000114" -> "1000161"  [ label = "DDG: l[1]"] 
  "1000112" -> "1000161"  [ label = "DDG: l[0] >> l[1]"] 
  "1000112" -> "1000161"  [ label = "DDG: cin >> l[0] >> l[1]"] 
  "1000126" -> "1000161"  [ label = "DDG: i"] 
  "1000126" -> "1000161"  [ label = "DDG: n"] 
  "1000126" -> "1000161"  [ label = "DDG: i < n"] 
  "1000151" -> "1000161"  [ label = "DDG: f"] 
  "1000151" -> "1000161"  [ label = "DDG: f==0"] 
  "1000158" -> "1000161"  [ label = "DDG: cout"] 
  "1000158" -> "1000161"  [ label = "DDG: cout << \"NO\n\""] 
  "1000154" -> "1000161"  [ label = "DDG: cout"] 
  "1000154" -> "1000161"  [ label = "DDG: cout << \"YES\n\""] 
  "1000133" -> "1000161"  [ label = "DDG: l[0][i]"] 
  "1000132" -> "1000161"  [ label = "DDG: l[0][i]=='1'"] 
  "1000140" -> "1000161"  [ label = "DDG: l[1][i]"] 
  "1000132" -> "1000161"  [ label = "DDG: l[1][i]=='1'"] 
  "1000132" -> "1000161"  [ label = "DDG: l[0][i]=='1' && l[1][i]=='1'"] 
  "1000101" -> "1000109"  [ label = "DDG: "] 
  "1000101" -> "1000104"  [ label = "DDG: "] 
  "1000104" -> "1000112"  [ label = "DDG: cin"] 
  "1000101" -> "1000112"  [ label = "DDG: "] 
  "1000114" -> "1000112"  [ label = "DDG: l[0]"] 
  "1000114" -> "1000112"  [ label = "DDG: l[1]"] 
  "1000101" -> "1000123"  [ label = "DDG: "] 
  "1000123" -> "1000126"  [ label = "DDG: i"] 
  "1000129" -> "1000126"  [ label = "DDG: i"] 
  "1000101" -> "1000126"  [ label = "DDG: "] 
  "1000104" -> "1000126"  [ label = "DDG: n"] 
  "1000126" -> "1000129"  [ label = "DDG: i"] 
  "1000101" -> "1000129"  [ label = "DDG: "] 
  "1000101" -> "1000147"  [ label = "DDG: "] 
  "1000109" -> "1000151"  [ label = "DDG: f"] 
  "1000147" -> "1000151"  [ label = "DDG: f"] 
  "1000101" -> "1000151"  [ label = "DDG: "] 
  "1000101" -> "1000154"  [ label = "DDG: "] 
  "1000133" -> "1000132"  [ label = "DDG: '1'"] 
  "1000133" -> "1000132"  [ label = "DDG: l[0][i]"] 
  "1000140" -> "1000132"  [ label = "DDG: l[1][i]"] 
  "1000140" -> "1000132"  [ label = "DDG: '1'"] 
  "1000101" -> "1000158"  [ label = "DDG: "] 
  "1000101" -> "1000133"  [ label = "DDG: "] 
  "1000101" -> "1000140"  [ label = "DDG: "] 
  "1000126" -> "1000126"  [ label = "CDG: "] 
  "1000126" -> "1000132"  [ label = "CDG: "] 
  "1000126" -> "1000129"  [ label = "CDG: "] 
  "1000126" -> "1000135"  [ label = "CDG: "] 
  "1000126" -> "1000133"  [ label = "CDG: "] 
  "1000126" -> "1000134"  [ label = "CDG: "] 
  "1000151" -> "1000158"  [ label = "CDG: "] 
  "1000151" -> "1000154"  [ label = "CDG: "] 
  "1000132" -> "1000147"  [ label = "CDG: "] 
  "1000133" -> "1000142"  [ label = "CDG: "] 
  "1000133" -> "1000141"  [ label = "CDG: "] 
  "1000133" -> "1000140"  [ label = "CDG: "] 
}
