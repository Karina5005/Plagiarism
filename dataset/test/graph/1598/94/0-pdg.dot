digraph "main" {  
"1000101" [label = "(METHOD,main)" ]
"1000275" [label = "(METHOD_RETURN,int)" ]
"1000102" [label = "(PARAM,void)" ]
"1000120" [label = "(<operator>.arithmeticShiftRight,cin >> t)" ]
"1000110" [label = "(<operator>.lessThan,vector<pair<int)" ]
"1000124" [label = "(<operator>.postDecrement,t--)" ]
"1000116" [label = "(<operator>.arithmeticShiftRight,int>> topic)" ]
"1000119" [label = "(IDENTIFIER,difficulty,)" ]
"1000127" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000130" [label = "(topic.resize,topic.resize(n))" ]
"1000132" [label = "(<operator>.assignment,difficulty = topic)" ]
"1000135" [label = "(<operator>.multiplication,L * n * (n - 1) * (n - 2) / 6)" ]
"1000194" [label = "(sort,sort(topic.begin(), topic.end()))" ]
"1000197" [label = "(sort,sort(difficulty.begin(), difficulty.end()))" ]
"1000270" [label = "(<operator>.shiftLeft,cout << ans << '\n')" ]
"1000112" [label = "(<operator>.lessThan,pair<int)" ]
"1000150" [label = "(<operator>.assignment,i = 0)" ]
"1000153" [label = "(<operator>.lessThan,i < n)" ]
"1000156" [label = "(<operator>.preIncrement,++i)" ]
"1000202" [label = "(<operator>.assignment,i = 0)" ]
"1000205" [label = "(<operator>.lessThan,i < n)" ]
"1000208" [label = "(<operator>.preIncrement,++i)" ]
"1000137" [label = "(<operator>.multiplication,n * (n - 1) * (n - 2) / 6)" ]
"1000159" [label = "(<operator>.arithmeticShiftRight,cin >> topic[i].first >> topic[i].second)" ]
"1000172" [label = "(<operator>.assignment,difficulty[i].first = topic[i].second)" ]
"1000183" [label = "(<operator>.assignment,difficulty[i].second = topic[i].first)" ]
"1000211" [label = "(<operator>.assignment,topic_2 = upper_bound(topic.begin(), topic.end(), make_pair(topic[i].first + 1, 0)) - lower_bound(topic.begin(), topic.end(), make_pair(topic[i].first, 0)) - 1)" ]
"1000238" [label = "(<operator>.assignment,difficulty_2 = upper_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second + 1, 0)) - lower_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second, 0)) - 1)" ]
"1000265" [label = "(<operator>.assignmentMinus,ans -= (topic_2 * difficulty_2))" ]
"1000272" [label = "(<operator>.shiftLeft,ans << '\n')" ]
"1000139" [label = "(<operator>.multiplication,(n - 1) * (n - 2) / 6)" ]
"1000140" [label = "(<operator>.subtraction,n - 1)" ]
"1000143" [label = "(<operator>.division,(n - 2) / 6)" ]
"1000161" [label = "(<operator>.arithmeticShiftRight,topic[i].first >> topic[i].second)" ]
"1000213" [label = "(<operator>.subtraction,upper_bound(topic.begin(), topic.end(), make_pair(topic[i].first + 1, 0)) - lower_bound(topic.begin(), topic.end(), make_pair(topic[i].first, 0)) - 1)" ]
"1000240" [label = "(<operator>.subtraction,upper_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second + 1, 0)) - lower_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second, 0)) - 1)" ]
"1000267" [label = "(<operator>.multiplication,topic_2 * difficulty_2)" ]
"1000144" [label = "(<operator>.subtraction,n - 2)" ]
"1000214" [label = "(upper_bound,upper_bound(topic.begin(), topic.end(), make_pair(topic[i].first + 1, 0)))" ]
"1000226" [label = "(<operator>.subtraction,lower_bound(topic.begin(), topic.end(), make_pair(topic[i].first, 0)) - 1)" ]
"1000241" [label = "(upper_bound,upper_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second + 1, 0)))" ]
"1000253" [label = "(<operator>.subtraction,lower_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second, 0)) - 1)" ]
"1000217" [label = "(make_pair,make_pair(topic[i].first + 1, 0))" ]
"1000227" [label = "(lower_bound,lower_bound(topic.begin(), topic.end(), make_pair(topic[i].first, 0)))" ]
"1000244" [label = "(make_pair,make_pair(topic[i].second + 1, 0))" ]
"1000254" [label = "(lower_bound,lower_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second, 0)))" ]
"1000218" [label = "(<operator>.addition,topic[i].first + 1)" ]
"1000230" [label = "(make_pair,make_pair(topic[i].first, 0))" ]
"1000245" [label = "(<operator>.addition,topic[i].second + 1)" ]
"1000257" [label = "(make_pair,make_pair(topic[i].second, 0))" ]
"1000195" [label = "(topic.begin,topic.begin())" ]
"1000196" [label = "(topic.end,topic.end())" ]
"1000198" [label = "(difficulty.begin,difficulty.begin())" ]
"1000199" [label = "(difficulty.end,difficulty.end())" ]
"1000173" [label = "(<operator>.fieldAccess,difficulty[i].first)" ]
"1000178" [label = "(<operator>.fieldAccess,topic[i].second)" ]
"1000184" [label = "(<operator>.fieldAccess,difficulty[i].second)" ]
"1000189" [label = "(<operator>.fieldAccess,topic[i].first)" ]
"1000162" [label = "(<operator>.fieldAccess,topic[i].first)" ]
"1000167" [label = "(<operator>.fieldAccess,topic[i].second)" ]
"1000174" [label = "(<operator>.indirectIndexAccess,difficulty[i])" ]
"1000177" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1000179" [label = "(<operator>.indirectIndexAccess,topic[i])" ]
"1000182" [label = "(FIELD_IDENTIFIER,second,second)" ]
"1000185" [label = "(<operator>.indirectIndexAccess,difficulty[i])" ]
"1000188" [label = "(FIELD_IDENTIFIER,second,second)" ]
"1000190" [label = "(<operator>.indirectIndexAccess,topic[i])" ]
"1000193" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1000163" [label = "(<operator>.indirectIndexAccess,topic[i])" ]
"1000166" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1000168" [label = "(<operator>.indirectIndexAccess,topic[i])" ]
"1000171" [label = "(FIELD_IDENTIFIER,second,second)" ]
"1000215" [label = "(topic.begin,topic.begin())" ]
"1000216" [label = "(topic.end,topic.end())" ]
"1000242" [label = "(difficulty.begin,difficulty.begin())" ]
"1000243" [label = "(difficulty.end,difficulty.end())" ]
"1000228" [label = "(topic.begin,topic.begin())" ]
"1000229" [label = "(topic.end,topic.end())" ]
"1000255" [label = "(difficulty.begin,difficulty.begin())" ]
"1000256" [label = "(difficulty.end,difficulty.end())" ]
"1000219" [label = "(<operator>.fieldAccess,topic[i].first)" ]
"1000231" [label = "(<operator>.fieldAccess,topic[i].first)" ]
"1000246" [label = "(<operator>.fieldAccess,topic[i].second)" ]
"1000258" [label = "(<operator>.fieldAccess,topic[i].second)" ]
"1000220" [label = "(<operator>.indirectIndexAccess,topic[i])" ]
"1000223" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1000232" [label = "(<operator>.indirectIndexAccess,topic[i])" ]
"1000235" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1000247" [label = "(<operator>.indirectIndexAccess,topic[i])" ]
"1000250" [label = "(FIELD_IDENTIFIER,second,second)" ]
"1000259" [label = "(<operator>.indirectIndexAccess,topic[i])" ]
"1000262" [label = "(FIELD_IDENTIFIER,second,second)" ]
  "1000102" -> "1000275"  [ label = "DDG: <anonymous>"] 
  "1000110" -> "1000275"  [ label = "DDG: pair<int"] 
  "1000110" -> "1000275"  [ label = "DDG: vector<pair<int"] 
  "1000116" -> "1000275"  [ label = "DDG: int"] 
  "1000116" -> "1000275"  [ label = "DDG: topic"] 
  "1000116" -> "1000275"  [ label = "DDG: int>> topic"] 
  "1000120" -> "1000275"  [ label = "DDG: cin"] 
  "1000120" -> "1000275"  [ label = "DDG: cin >> t"] 
  "1000124" -> "1000275"  [ label = "DDG: t"] 
  "1000127" -> "1000275"  [ label = "DDG: cin"] 
  "1000127" -> "1000275"  [ label = "DDG: cin >> n"] 
  "1000130" -> "1000275"  [ label = "DDG: topic.resize(n)"] 
  "1000132" -> "1000275"  [ label = "DDG: difficulty"] 
  "1000132" -> "1000275"  [ label = "DDG: topic"] 
  "1000139" -> "1000275"  [ label = "DDG: n - 1"] 
  "1000143" -> "1000275"  [ label = "DDG: n - 2"] 
  "1000139" -> "1000275"  [ label = "DDG: (n - 2) / 6"] 
  "1000137" -> "1000275"  [ label = "DDG: (n - 1) * (n - 2) / 6"] 
  "1000135" -> "1000275"  [ label = "DDG: n * (n - 1) * (n - 2) / 6"] 
  "1000135" -> "1000275"  [ label = "DDG: L * n * (n - 1) * (n - 2) / 6"] 
  "1000194" -> "1000275"  [ label = "DDG: topic.begin()"] 
  "1000194" -> "1000275"  [ label = "DDG: topic.end()"] 
  "1000194" -> "1000275"  [ label = "DDG: sort(topic.begin(), topic.end())"] 
  "1000197" -> "1000275"  [ label = "DDG: difficulty.begin()"] 
  "1000197" -> "1000275"  [ label = "DDG: difficulty.end()"] 
  "1000197" -> "1000275"  [ label = "DDG: sort(difficulty.begin(), difficulty.end())"] 
  "1000205" -> "1000275"  [ label = "DDG: i"] 
  "1000205" -> "1000275"  [ label = "DDG: n"] 
  "1000205" -> "1000275"  [ label = "DDG: i < n"] 
  "1000272" -> "1000275"  [ label = "DDG: ans"] 
  "1000270" -> "1000275"  [ label = "DDG: ans << '\n'"] 
  "1000270" -> "1000275"  [ label = "DDG: cout << ans << '\n'"] 
  "1000217" -> "1000275"  [ label = "DDG: topic[i].first + 1"] 
  "1000214" -> "1000275"  [ label = "DDG: make_pair(topic[i].first + 1, 0)"] 
  "1000213" -> "1000275"  [ label = "DDG: upper_bound(topic.begin(), topic.end(), make_pair(topic[i].first + 1, 0))"] 
  "1000227" -> "1000275"  [ label = "DDG: topic.begin()"] 
  "1000227" -> "1000275"  [ label = "DDG: topic.end()"] 
  "1000230" -> "1000275"  [ label = "DDG: topic[i].first"] 
  "1000227" -> "1000275"  [ label = "DDG: make_pair(topic[i].first, 0)"] 
  "1000226" -> "1000275"  [ label = "DDG: lower_bound(topic.begin(), topic.end(), make_pair(topic[i].first, 0))"] 
  "1000213" -> "1000275"  [ label = "DDG: lower_bound(topic.begin(), topic.end(), make_pair(topic[i].first, 0)) - 1"] 
  "1000211" -> "1000275"  [ label = "DDG: upper_bound(topic.begin(), topic.end(), make_pair(topic[i].first + 1, 0)) - lower_bound(topic.begin(), topic.end(), make_pair(topic[i].first, 0)) - 1"] 
  "1000244" -> "1000275"  [ label = "DDG: topic[i].second + 1"] 
  "1000241" -> "1000275"  [ label = "DDG: make_pair(topic[i].second + 1, 0)"] 
  "1000240" -> "1000275"  [ label = "DDG: upper_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second + 1, 0))"] 
  "1000254" -> "1000275"  [ label = "DDG: difficulty.begin()"] 
  "1000254" -> "1000275"  [ label = "DDG: difficulty.end()"] 
  "1000257" -> "1000275"  [ label = "DDG: topic[i].second"] 
  "1000254" -> "1000275"  [ label = "DDG: make_pair(topic[i].second, 0)"] 
  "1000253" -> "1000275"  [ label = "DDG: lower_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second, 0))"] 
  "1000240" -> "1000275"  [ label = "DDG: lower_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second, 0)) - 1"] 
  "1000238" -> "1000275"  [ label = "DDG: upper_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second + 1, 0)) - lower_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second, 0)) - 1"] 
  "1000267" -> "1000275"  [ label = "DDG: topic_2"] 
  "1000267" -> "1000275"  [ label = "DDG: difficulty_2"] 
  "1000265" -> "1000275"  [ label = "DDG: topic_2 * difficulty_2"] 
  "1000159" -> "1000275"  [ label = "DDG: cin"] 
  "1000159" -> "1000275"  [ label = "DDG: topic[i].first >> topic[i].second"] 
  "1000159" -> "1000275"  [ label = "DDG: cin >> topic[i].first >> topic[i].second"] 
  "1000172" -> "1000275"  [ label = "DDG: difficulty[i].first"] 
  "1000172" -> "1000275"  [ label = "DDG: topic[i].second"] 
  "1000183" -> "1000275"  [ label = "DDG: difficulty[i].second"] 
  "1000183" -> "1000275"  [ label = "DDG: topic[i].first"] 
  "1000112" -> "1000275"  [ label = "DDG: pair"] 
  "1000110" -> "1000275"  [ label = "DDG: vector"] 
  "1000135" -> "1000275"  [ label = "DDG: L"] 
  "1000270" -> "1000275"  [ label = "DDG: cout"] 
  "1000101" -> "1000102"  [ label = "DDG: "] 
  "1000101" -> "1000120"  [ label = "DDG: "] 
  "1000101" -> "1000110"  [ label = "DDG: "] 
  "1000112" -> "1000110"  [ label = "DDG: pair"] 
  "1000112" -> "1000110"  [ label = "DDG: int"] 
  "1000101" -> "1000119"  [ label = "DDG: "] 
  "1000120" -> "1000124"  [ label = "DDG: t"] 
  "1000101" -> "1000124"  [ label = "DDG: "] 
  "1000116" -> "1000132"  [ label = "DDG: topic"] 
  "1000101" -> "1000132"  [ label = "DDG: "] 
  "1000101" -> "1000112"  [ label = "DDG: "] 
  "1000112" -> "1000116"  [ label = "DDG: int"] 
  "1000101" -> "1000116"  [ label = "DDG: "] 
  "1000120" -> "1000127"  [ label = "DDG: cin"] 
  "1000159" -> "1000127"  [ label = "DDG: cin"] 
  "1000101" -> "1000127"  [ label = "DDG: "] 
  "1000205" -> "1000127"  [ label = "DDG: n"] 
  "1000127" -> "1000130"  [ label = "DDG: n"] 
  "1000101" -> "1000130"  [ label = "DDG: "] 
  "1000101" -> "1000135"  [ label = "DDG: "] 
  "1000137" -> "1000135"  [ label = "DDG: (n - 1) * (n - 2) / 6"] 
  "1000137" -> "1000135"  [ label = "DDG: n"] 
  "1000101" -> "1000150"  [ label = "DDG: "] 
  "1000101" -> "1000194"  [ label = "DDG: "] 
  "1000101" -> "1000197"  [ label = "DDG: "] 
  "1000101" -> "1000202"  [ label = "DDG: "] 
  "1000101" -> "1000270"  [ label = "DDG: "] 
  "1000272" -> "1000270"  [ label = "DDG: ans"] 
  "1000272" -> "1000270"  [ label = "DDG: '\n'"] 
  "1000144" -> "1000137"  [ label = "DDG: n"] 
  "1000101" -> "1000137"  [ label = "DDG: "] 
  "1000139" -> "1000137"  [ label = "DDG: (n - 2) / 6"] 
  "1000139" -> "1000137"  [ label = "DDG: n - 1"] 
  "1000150" -> "1000153"  [ label = "DDG: i"] 
  "1000156" -> "1000153"  [ label = "DDG: i"] 
  "1000101" -> "1000153"  [ label = "DDG: "] 
  "1000137" -> "1000153"  [ label = "DDG: n"] 
  "1000153" -> "1000156"  [ label = "DDG: i"] 
  "1000101" -> "1000156"  [ label = "DDG: "] 
  "1000161" -> "1000172"  [ label = "DDG: topic[i].second"] 
  "1000161" -> "1000183"  [ label = "DDG: topic[i].first"] 
  "1000202" -> "1000205"  [ label = "DDG: i"] 
  "1000208" -> "1000205"  [ label = "DDG: i"] 
  "1000101" -> "1000205"  [ label = "DDG: "] 
  "1000153" -> "1000205"  [ label = "DDG: n"] 
  "1000205" -> "1000208"  [ label = "DDG: i"] 
  "1000101" -> "1000208"  [ label = "DDG: "] 
  "1000213" -> "1000211"  [ label = "DDG: lower_bound(topic.begin(), topic.end(), make_pair(topic[i].first, 0)) - 1"] 
  "1000213" -> "1000211"  [ label = "DDG: upper_bound(topic.begin(), topic.end(), make_pair(topic[i].first + 1, 0))"] 
  "1000240" -> "1000238"  [ label = "DDG: lower_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second, 0)) - 1"] 
  "1000240" -> "1000238"  [ label = "DDG: upper_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second + 1, 0))"] 
  "1000267" -> "1000265"  [ label = "DDG: difficulty_2"] 
  "1000267" -> "1000265"  [ label = "DDG: topic_2"] 
  "1000265" -> "1000272"  [ label = "DDG: ans"] 
  "1000101" -> "1000272"  [ label = "DDG: "] 
  "1000140" -> "1000139"  [ label = "DDG: 1"] 
  "1000140" -> "1000139"  [ label = "DDG: n"] 
  "1000143" -> "1000139"  [ label = "DDG: 6"] 
  "1000143" -> "1000139"  [ label = "DDG: n - 2"] 
  "1000127" -> "1000159"  [ label = "DDG: cin"] 
  "1000101" -> "1000159"  [ label = "DDG: "] 
  "1000161" -> "1000159"  [ label = "DDG: topic[i].first"] 
  "1000161" -> "1000159"  [ label = "DDG: topic[i].second"] 
  "1000101" -> "1000211"  [ label = "DDG: "] 
  "1000101" -> "1000238"  [ label = "DDG: "] 
  "1000272" -> "1000265"  [ label = "DDG: ans"] 
  "1000101" -> "1000265"  [ label = "DDG: "] 
  "1000130" -> "1000140"  [ label = "DDG: n"] 
  "1000101" -> "1000140"  [ label = "DDG: "] 
  "1000144" -> "1000143"  [ label = "DDG: 2"] 
  "1000144" -> "1000143"  [ label = "DDG: n"] 
  "1000101" -> "1000143"  [ label = "DDG: "] 
  "1000230" -> "1000161"  [ label = "DDG: topic[i].first"] 
  "1000257" -> "1000161"  [ label = "DDG: topic[i].second"] 
  "1000214" -> "1000213"  [ label = "DDG: topic.begin()"] 
  "1000214" -> "1000213"  [ label = "DDG: topic.end()"] 
  "1000214" -> "1000213"  [ label = "DDG: make_pair(topic[i].first + 1, 0)"] 
  "1000226" -> "1000213"  [ label = "DDG: lower_bound(topic.begin(), topic.end(), make_pair(topic[i].first, 0))"] 
  "1000226" -> "1000213"  [ label = "DDG: 1"] 
  "1000241" -> "1000240"  [ label = "DDG: difficulty.end()"] 
  "1000241" -> "1000240"  [ label = "DDG: difficulty.begin()"] 
  "1000241" -> "1000240"  [ label = "DDG: make_pair(topic[i].second + 1, 0)"] 
  "1000253" -> "1000240"  [ label = "DDG: lower_bound(difficulty.begin(), difficulty.end(), make_pair(topic[i].second, 0))"] 
  "1000253" -> "1000240"  [ label = "DDG: 1"] 
  "1000211" -> "1000267"  [ label = "DDG: topic_2"] 
  "1000101" -> "1000267"  [ label = "DDG: "] 
  "1000238" -> "1000267"  [ label = "DDG: difficulty_2"] 
  "1000140" -> "1000144"  [ label = "DDG: n"] 
  "1000101" -> "1000144"  [ label = "DDG: "] 
  "1000101" -> "1000214"  [ label = "DDG: "] 
  "1000217" -> "1000214"  [ label = "DDG: topic[i].first + 1"] 
  "1000217" -> "1000214"  [ label = "DDG: 0"] 
  "1000227" -> "1000226"  [ label = "DDG: make_pair(topic[i].first, 0)"] 
  "1000227" -> "1000226"  [ label = "DDG: topic.begin()"] 
  "1000227" -> "1000226"  [ label = "DDG: topic.end()"] 
  "1000101" -> "1000226"  [ label = "DDG: "] 
  "1000101" -> "1000241"  [ label = "DDG: "] 
  "1000244" -> "1000241"  [ label = "DDG: topic[i].second + 1"] 
  "1000244" -> "1000241"  [ label = "DDG: 0"] 
  "1000254" -> "1000253"  [ label = "DDG: difficulty.end()"] 
  "1000254" -> "1000253"  [ label = "DDG: difficulty.begin()"] 
  "1000254" -> "1000253"  [ label = "DDG: make_pair(topic[i].second, 0)"] 
  "1000101" -> "1000253"  [ label = "DDG: "] 
  "1000101" -> "1000217"  [ label = "DDG: "] 
  "1000230" -> "1000217"  [ label = "DDG: topic[i].first"] 
  "1000161" -> "1000217"  [ label = "DDG: topic[i].first"] 
  "1000101" -> "1000227"  [ label = "DDG: "] 
  "1000230" -> "1000227"  [ label = "DDG: topic[i].first"] 
  "1000230" -> "1000227"  [ label = "DDG: 0"] 
  "1000257" -> "1000244"  [ label = "DDG: topic[i].second"] 
  "1000161" -> "1000244"  [ label = "DDG: topic[i].second"] 
  "1000101" -> "1000244"  [ label = "DDG: "] 
  "1000101" -> "1000254"  [ label = "DDG: "] 
  "1000257" -> "1000254"  [ label = "DDG: 0"] 
  "1000257" -> "1000254"  [ label = "DDG: topic[i].second"] 
  "1000230" -> "1000218"  [ label = "DDG: topic[i].first"] 
  "1000161" -> "1000218"  [ label = "DDG: topic[i].first"] 
  "1000101" -> "1000218"  [ label = "DDG: "] 
  "1000161" -> "1000230"  [ label = "DDG: topic[i].first"] 
  "1000101" -> "1000230"  [ label = "DDG: "] 
  "1000257" -> "1000245"  [ label = "DDG: topic[i].second"] 
  "1000161" -> "1000245"  [ label = "DDG: topic[i].second"] 
  "1000101" -> "1000245"  [ label = "DDG: "] 
  "1000161" -> "1000257"  [ label = "DDG: topic[i].second"] 
  "1000101" -> "1000257"  [ label = "DDG: "] 
  "1000124" -> "1000127"  [ label = "CDG: "] 
  "1000124" -> "1000199"  [ label = "CDG: "] 
  "1000124" -> "1000197"  [ label = "CDG: "] 
  "1000124" -> "1000150"  [ label = "CDG: "] 
  "1000124" -> "1000139"  [ label = "CDG: "] 
  "1000124" -> "1000144"  [ label = "CDG: "] 
  "1000124" -> "1000132"  [ label = "CDG: "] 
  "1000124" -> "1000194"  [ label = "CDG: "] 
  "1000124" -> "1000130"  [ label = "CDG: "] 
  "1000124" -> "1000270"  [ label = "CDG: "] 
  "1000124" -> "1000198"  [ label = "CDG: "] 
  "1000124" -> "1000153"  [ label = "CDG: "] 
  "1000124" -> "1000195"  [ label = "CDG: "] 
  "1000124" -> "1000135"  [ label = "CDG: "] 
  "1000124" -> "1000196"  [ label = "CDG: "] 
  "1000124" -> "1000272"  [ label = "CDG: "] 
  "1000124" -> "1000143"  [ label = "CDG: "] 
  "1000124" -> "1000205"  [ label = "CDG: "] 
  "1000124" -> "1000202"  [ label = "CDG: "] 
  "1000124" -> "1000137"  [ label = "CDG: "] 
  "1000124" -> "1000124"  [ label = "CDG: "] 
  "1000124" -> "1000140"  [ label = "CDG: "] 
  "1000153" -> "1000174"  [ label = "CDG: "] 
  "1000153" -> "1000156"  [ label = "CDG: "] 
  "1000153" -> "1000161"  [ label = "CDG: "] 
  "1000153" -> "1000182"  [ label = "CDG: "] 
  "1000153" -> "1000166"  [ label = "CDG: "] 
  "1000153" -> "1000183"  [ label = "CDG: "] 
  "1000153" -> "1000188"  [ label = "CDG: "] 
  "1000153" -> "1000190"  [ label = "CDG: "] 
  "1000153" -> "1000167"  [ label = "CDG: "] 
  "1000153" -> "1000179"  [ label = "CDG: "] 
  "1000153" -> "1000185"  [ label = "CDG: "] 
  "1000153" -> "1000153"  [ label = "CDG: "] 
  "1000153" -> "1000172"  [ label = "CDG: "] 
  "1000153" -> "1000189"  [ label = "CDG: "] 
  "1000153" -> "1000163"  [ label = "CDG: "] 
  "1000153" -> "1000168"  [ label = "CDG: "] 
  "1000153" -> "1000178"  [ label = "CDG: "] 
  "1000153" -> "1000159"  [ label = "CDG: "] 
  "1000153" -> "1000173"  [ label = "CDG: "] 
  "1000153" -> "1000171"  [ label = "CDG: "] 
  "1000153" -> "1000193"  [ label = "CDG: "] 
  "1000153" -> "1000184"  [ label = "CDG: "] 
  "1000153" -> "1000177"  [ label = "CDG: "] 
  "1000153" -> "1000162"  [ label = "CDG: "] 
  "1000205" -> "1000258"  [ label = "CDG: "] 
  "1000205" -> "1000211"  [ label = "CDG: "] 
  "1000205" -> "1000238"  [ label = "CDG: "] 
  "1000205" -> "1000208"  [ label = "CDG: "] 
  "1000205" -> "1000227"  [ label = "CDG: "] 
  "1000205" -> "1000255"  [ label = "CDG: "] 
  "1000205" -> "1000243"  [ label = "CDG: "] 
  "1000205" -> "1000244"  [ label = "CDG: "] 
  "1000205" -> "1000216"  [ label = "CDG: "] 
  "1000205" -> "1000259"  [ label = "CDG: "] 
  "1000205" -> "1000219"  [ label = "CDG: "] 
  "1000205" -> "1000254"  [ label = "CDG: "] 
  "1000205" -> "1000242"  [ label = "CDG: "] 
  "1000205" -> "1000235"  [ label = "CDG: "] 
  "1000205" -> "1000220"  [ label = "CDG: "] 
  "1000205" -> "1000214"  [ label = "CDG: "] 
  "1000205" -> "1000250"  [ label = "CDG: "] 
  "1000205" -> "1000240"  [ label = "CDG: "] 
  "1000205" -> "1000217"  [ label = "CDG: "] 
  "1000205" -> "1000245"  [ label = "CDG: "] 
  "1000205" -> "1000226"  [ label = "CDG: "] 
  "1000205" -> "1000232"  [ label = "CDG: "] 
  "1000205" -> "1000247"  [ label = "CDG: "] 
  "1000205" -> "1000246"  [ label = "CDG: "] 
  "1000205" -> "1000265"  [ label = "CDG: "] 
  "1000205" -> "1000213"  [ label = "CDG: "] 
  "1000205" -> "1000229"  [ label = "CDG: "] 
  "1000205" -> "1000230"  [ label = "CDG: "] 
  "1000205" -> "1000215"  [ label = "CDG: "] 
  "1000205" -> "1000262"  [ label = "CDG: "] 
  "1000205" -> "1000253"  [ label = "CDG: "] 
  "1000205" -> "1000267"  [ label = "CDG: "] 
  "1000205" -> "1000205"  [ label = "CDG: "] 
  "1000205" -> "1000257"  [ label = "CDG: "] 
  "1000205" -> "1000218"  [ label = "CDG: "] 
  "1000205" -> "1000231"  [ label = "CDG: "] 
  "1000205" -> "1000241"  [ label = "CDG: "] 
  "1000205" -> "1000256"  [ label = "CDG: "] 
  "1000205" -> "1000223"  [ label = "CDG: "] 
  "1000205" -> "1000228"  [ label = "CDG: "] 
}
