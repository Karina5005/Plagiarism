digraph "main" {  
"1000102" [label = "(METHOD,main)" ]
"1000171" [label = "(METHOD_RETURN,int)" ]
"1000112" [label = "(<operator>.arithmeticShiftRight,cin>>t)" ]
"1000169" [label = "(RETURN,return 0;,return 0;)" ]
"1000116" [label = "(<operator>.postDecrement,t--)" ]
"1000170" [label = "(LITERAL,0,return 0;)" ]
"1000119" [label = "(<operator>.arithmeticShiftRight,cin>>n>>s>>c)" ]
"1000126" [label = "(<operator>.assignment,cn=0)" ]
"1000130" [label = "(<operator>.assignment,i=0)" ]
"1000133" [label = "(<operator>.lessThan,i<n)" ]
"1000136" [label = "(<operator>.postIncrement,i++)" ]
"1000155" [label = "(<operator>.greaterThan,cn>0)" ]
"1000158" [label = "(<operator>.shiftLeft,cout<<\"NO\"<<endl)" ]
"1000121" [label = "(<operator>.arithmeticShiftRight,n>>s>>c)" ]
"1000164" [label = "(<operator>.shiftLeft,cout<<\"YES\"<<endl)" ]
"1000123" [label = "(<operator>.arithmeticShiftRight,s>>c)" ]
"1000140" [label = "(<operator>.logicalAnd,s[i]=='1' && c[i]=='1')" ]
"1000160" [label = "(<operator>.shiftLeft,\"NO\"<<endl)" ]
"1000152" [label = "(<operator>.postIncrement,cn++)" ]
"1000166" [label = "(<operator>.shiftLeft,\"YES\"<<endl)" ]
"1000141" [label = "(<operator>.equals,s[i]=='1')" ]
"1000146" [label = "(<operator>.equals,c[i]=='1')" ]
"1000142" [label = "(<operator>.indirectIndexAccess,s[i])" ]
"1000147" [label = "(<operator>.indirectIndexAccess,c[i])" ]
  "1000169" -> "1000171"  [ label = "DDG: <RET>"] 
  "1000112" -> "1000171"  [ label = "DDG: cin"] 
  "1000112" -> "1000171"  [ label = "DDG: cin>>t"] 
  "1000116" -> "1000171"  [ label = "DDG: t"] 
  "1000119" -> "1000171"  [ label = "DDG: cin"] 
  "1000123" -> "1000171"  [ label = "DDG: s"] 
  "1000123" -> "1000171"  [ label = "DDG: c"] 
  "1000121" -> "1000171"  [ label = "DDG: s>>c"] 
  "1000119" -> "1000171"  [ label = "DDG: n>>s>>c"] 
  "1000119" -> "1000171"  [ label = "DDG: cin>>n>>s>>c"] 
  "1000133" -> "1000171"  [ label = "DDG: i"] 
  "1000133" -> "1000171"  [ label = "DDG: n"] 
  "1000133" -> "1000171"  [ label = "DDG: i<n"] 
  "1000155" -> "1000171"  [ label = "DDG: cn"] 
  "1000155" -> "1000171"  [ label = "DDG: cn>0"] 
  "1000164" -> "1000171"  [ label = "DDG: cout"] 
  "1000166" -> "1000171"  [ label = "DDG: endl"] 
  "1000164" -> "1000171"  [ label = "DDG: \"YES\"<<endl"] 
  "1000164" -> "1000171"  [ label = "DDG: cout<<\"YES\"<<endl"] 
  "1000158" -> "1000171"  [ label = "DDG: cout"] 
  "1000160" -> "1000171"  [ label = "DDG: endl"] 
  "1000158" -> "1000171"  [ label = "DDG: \"NO\"<<endl"] 
  "1000158" -> "1000171"  [ label = "DDG: cout<<\"NO\"<<endl"] 
  "1000141" -> "1000171"  [ label = "DDG: s[i]"] 
  "1000140" -> "1000171"  [ label = "DDG: s[i]=='1'"] 
  "1000146" -> "1000171"  [ label = "DDG: c[i]"] 
  "1000140" -> "1000171"  [ label = "DDG: c[i]=='1'"] 
  "1000140" -> "1000171"  [ label = "DDG: s[i]=='1' && c[i]=='1'"] 
  "1000170" -> "1000169"  [ label = "DDG: 0"] 
  "1000102" -> "1000169"  [ label = "DDG: "] 
  "1000102" -> "1000112"  [ label = "DDG: "] 
  "1000102" -> "1000170"  [ label = "DDG: "] 
  "1000112" -> "1000116"  [ label = "DDG: t"] 
  "1000102" -> "1000116"  [ label = "DDG: "] 
  "1000102" -> "1000126"  [ label = "DDG: "] 
  "1000112" -> "1000119"  [ label = "DDG: cin"] 
  "1000102" -> "1000119"  [ label = "DDG: "] 
  "1000121" -> "1000119"  [ label = "DDG: s>>c"] 
  "1000121" -> "1000119"  [ label = "DDG: n"] 
  "1000102" -> "1000130"  [ label = "DDG: "] 
  "1000133" -> "1000121"  [ label = "DDG: n"] 
  "1000102" -> "1000121"  [ label = "DDG: "] 
  "1000123" -> "1000121"  [ label = "DDG: s"] 
  "1000123" -> "1000121"  [ label = "DDG: c"] 
  "1000130" -> "1000133"  [ label = "DDG: i"] 
  "1000136" -> "1000133"  [ label = "DDG: i"] 
  "1000102" -> "1000133"  [ label = "DDG: "] 
  "1000121" -> "1000133"  [ label = "DDG: n"] 
  "1000133" -> "1000136"  [ label = "DDG: i"] 
  "1000102" -> "1000136"  [ label = "DDG: "] 
  "1000126" -> "1000155"  [ label = "DDG: cn"] 
  "1000152" -> "1000155"  [ label = "DDG: cn"] 
  "1000102" -> "1000155"  [ label = "DDG: "] 
  "1000164" -> "1000158"  [ label = "DDG: cout"] 
  "1000102" -> "1000158"  [ label = "DDG: "] 
  "1000160" -> "1000158"  [ label = "DDG: endl"] 
  "1000160" -> "1000158"  [ label = "DDG: \"NO\""] 
  "1000141" -> "1000123"  [ label = "DDG: s[i]"] 
  "1000102" -> "1000123"  [ label = "DDG: "] 
  "1000146" -> "1000123"  [ label = "DDG: c[i]"] 
  "1000102" -> "1000160"  [ label = "DDG: "] 
  "1000166" -> "1000160"  [ label = "DDG: endl"] 
  "1000158" -> "1000164"  [ label = "DDG: cout"] 
  "1000102" -> "1000164"  [ label = "DDG: "] 
  "1000166" -> "1000164"  [ label = "DDG: endl"] 
  "1000166" -> "1000164"  [ label = "DDG: \"YES\""] 
  "1000141" -> "1000140"  [ label = "DDG: s[i]"] 
  "1000141" -> "1000140"  [ label = "DDG: '1'"] 
  "1000146" -> "1000140"  [ label = "DDG: c[i]"] 
  "1000146" -> "1000140"  [ label = "DDG: '1'"] 
  "1000102" -> "1000166"  [ label = "DDG: "] 
  "1000160" -> "1000166"  [ label = "DDG: endl"] 
  "1000123" -> "1000141"  [ label = "DDG: s"] 
  "1000102" -> "1000141"  [ label = "DDG: "] 
  "1000123" -> "1000146"  [ label = "DDG: c"] 
  "1000102" -> "1000146"  [ label = "DDG: "] 
  "1000126" -> "1000152"  [ label = "DDG: cn"] 
  "1000102" -> "1000152"  [ label = "DDG: "] 
  "1000116" -> "1000121"  [ label = "CDG: "] 
  "1000116" -> "1000116"  [ label = "CDG: "] 
  "1000116" -> "1000126"  [ label = "CDG: "] 
  "1000116" -> "1000155"  [ label = "CDG: "] 
  "1000116" -> "1000123"  [ label = "CDG: "] 
  "1000116" -> "1000119"  [ label = "CDG: "] 
  "1000116" -> "1000130"  [ label = "CDG: "] 
  "1000116" -> "1000133"  [ label = "CDG: "] 
  "1000133" -> "1000142"  [ label = "CDG: "] 
  "1000133" -> "1000141"  [ label = "CDG: "] 
  "1000133" -> "1000133"  [ label = "CDG: "] 
  "1000133" -> "1000136"  [ label = "CDG: "] 
  "1000133" -> "1000140"  [ label = "CDG: "] 
  "1000155" -> "1000164"  [ label = "CDG: "] 
  "1000155" -> "1000158"  [ label = "CDG: "] 
  "1000155" -> "1000160"  [ label = "CDG: "] 
  "1000155" -> "1000166"  [ label = "CDG: "] 
  "1000140" -> "1000152"  [ label = "CDG: "] 
  "1000141" -> "1000147"  [ label = "CDG: "] 
  "1000141" -> "1000146"  [ label = "CDG: "] 
}
