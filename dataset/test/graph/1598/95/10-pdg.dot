digraph "solve" {  
"1000319" [label = "(METHOD,solve)" ]
"1000362" [label = "(METHOD_RETURN,void)" ]
"1000322" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000326" [label = "(<operator>.arithmeticShiftRight,cin >> s)" ]
"1000330" [label = "(<operator>.arithmeticShiftRight,cin >> t)" ]
"1000361" [label = "(IDENTIFIER,cyes,)" ]
"1000335" [label = "(<operator>.assignment,i = 0)" ]
"1000338" [label = "(<operator>.lessThan,i < n)" ]
"1000341" [label = "(<operator>.postIncrement,i++)" ]
"1000345" [label = "(<operator>.logicalAnd,s[i] == '1' && s[i] == t[i])" ]
"1000359" [label = "(IDENTIFIER,cno,)" ]
"1000360" [label = "(RETURN,return;,return;)" ]
"1000346" [label = "(<operator>.equals,s[i] == '1')" ]
"1000351" [label = "(<operator>.equals,s[i] == t[i])" ]
"1000347" [label = "(<operator>.indirectIndexAccess,s[i])" ]
"1000352" [label = "(<operator>.indirectIndexAccess,s[i])" ]
"1000355" [label = "(<operator>.indirectIndexAccess,t[i])" ]
  "1000322" -> "1000362"  [ label = "DDG: cin >> n"] 
  "1000326" -> "1000362"  [ label = "DDG: s"] 
  "1000326" -> "1000362"  [ label = "DDG: cin >> s"] 
  "1000330" -> "1000362"  [ label = "DDG: cin"] 
  "1000330" -> "1000362"  [ label = "DDG: t"] 
  "1000330" -> "1000362"  [ label = "DDG: cin >> t"] 
  "1000338" -> "1000362"  [ label = "DDG: i"] 
  "1000338" -> "1000362"  [ label = "DDG: n"] 
  "1000338" -> "1000362"  [ label = "DDG: i < n"] 
  "1000346" -> "1000362"  [ label = "DDG: s[i]"] 
  "1000345" -> "1000362"  [ label = "DDG: s[i] == '1'"] 
  "1000351" -> "1000362"  [ label = "DDG: s[i]"] 
  "1000351" -> "1000362"  [ label = "DDG: t[i]"] 
  "1000345" -> "1000362"  [ label = "DDG: s[i] == t[i]"] 
  "1000345" -> "1000362"  [ label = "DDG: s[i] == '1' && s[i] == t[i]"] 
  "1000360" -> "1000362"  [ label = "DDG: <RET>"] 
  "1000319" -> "1000361"  [ label = "DDG: "] 
  "1000319" -> "1000322"  [ label = "DDG: "] 
  "1000322" -> "1000326"  [ label = "DDG: cin"] 
  "1000319" -> "1000326"  [ label = "DDG: "] 
  "1000326" -> "1000330"  [ label = "DDG: cin"] 
  "1000319" -> "1000330"  [ label = "DDG: "] 
  "1000319" -> "1000335"  [ label = "DDG: "] 
  "1000335" -> "1000338"  [ label = "DDG: i"] 
  "1000341" -> "1000338"  [ label = "DDG: i"] 
  "1000319" -> "1000338"  [ label = "DDG: "] 
  "1000322" -> "1000338"  [ label = "DDG: n"] 
  "1000338" -> "1000341"  [ label = "DDG: i"] 
  "1000319" -> "1000341"  [ label = "DDG: "] 
  "1000346" -> "1000345"  [ label = "DDG: s[i]"] 
  "1000346" -> "1000345"  [ label = "DDG: '1'"] 
  "1000351" -> "1000345"  [ label = "DDG: t[i]"] 
  "1000351" -> "1000345"  [ label = "DDG: s[i]"] 
  "1000319" -> "1000359"  [ label = "DDG: "] 
  "1000319" -> "1000360"  [ label = "DDG: "] 
  "1000326" -> "1000346"  [ label = "DDG: s"] 
  "1000351" -> "1000346"  [ label = "DDG: s[i]"] 
  "1000319" -> "1000346"  [ label = "DDG: "] 
  "1000326" -> "1000351"  [ label = "DDG: s"] 
  "1000346" -> "1000351"  [ label = "DDG: s[i]"] 
  "1000330" -> "1000351"  [ label = "DDG: t"] 
  "1000338" -> "1000346"  [ label = "CDG: "] 
  "1000338" -> "1000345"  [ label = "CDG: "] 
  "1000338" -> "1000347"  [ label = "CDG: "] 
  "1000345" -> "1000341"  [ label = "CDG: "] 
  "1000345" -> "1000360"  [ label = "CDG: "] 
  "1000345" -> "1000338"  [ label = "CDG: "] 
  "1000346" -> "1000351"  [ label = "CDG: "] 
  "1000346" -> "1000355"  [ label = "CDG: "] 
  "1000346" -> "1000352"  [ label = "CDG: "] 
}
