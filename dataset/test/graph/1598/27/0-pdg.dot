digraph "main" {  
"1000101" [label = "(METHOD,main)" ]
"1000197" [label = "(METHOD_RETURN,int)" ]
"1000104" [label = "(scanf,scanf(\"%d\", &t))" ]
"1000109" [label = "(<operator>.postDecrement,t--)" ]
"1000113" [label = "(scanf,scanf(\"%d\", &n))" ]
"1000143" [label = "(<operator>.assignment,need = (2 * sum) / n)" ]
"1000151" [label = "(<operator>.assignment,ans = 0)" ]
"1000192" [label = "(printf,printf(\"%lld\n\", ans / 2))" ]
"1000121" [label = "(scanf,scanf(\"%d\", &x))" ]
"1000125" [label = "(<operator>.assignmentPlus,cnt[x] += 1)" ]
"1000131" [label = "(<operator>.notEquals,(2 * sum) % n != 0)" ]
"1000156" [label = "(<operator>.assignment,i = 0)" ]
"1000159" [label = "(<operator>.lessThan,i < n)" ]
"1000162" [label = "(<operator>.preIncrement,++i)" ]
"1000139" [label = "(puts,puts(\"0\"))" ]
"1000145" [label = "(<operator>.division,(2 * sum) / n)" ]
"1000166" [label = "(<operator>.assignment,a1 = a[i])" ]
"1000172" [label = "(<operator>.assignment,a2 = need - a1)" ]
"1000194" [label = "(<operator>.division,ans / 2)" ]
"1000132" [label = "(<operator>.modulo,(2 * sum) % n)" ]
"1000146" [label = "(<operator>.multiplication,2 * sum)" ]
"1000178" [label = "(cnt.count,cnt.count(a2))" ]
"1000180" [label = "(<operator>.assignmentPlus,ans += cnt[a2])" ]
"1000186" [label = "(<operator>.equals,a1 == a2)" ]
"1000189" [label = "(<operator>.assignmentMinus,ans -= 1)" ]
"1000133" [label = "(<operator>.multiplication,2 * sum)" ]
"1000174" [label = "(<operator>.subtraction,need - a1)" ]
"1000115" [label = "(<operator>.addressOf,&n)" ]
"1000123" [label = "(<operator>.addressOf,&x)" ]
"1000126" [label = "(<operator>.indirectIndexAccess,cnt[x])" ]
"1000168" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000182" [label = "(<operator>.indirectIndexAccess,cnt[a2])" ]
  "1000104" -> "1000197"  [ label = "DDG: &t"] 
  "1000109" -> "1000197"  [ label = "DDG: t"] 
  "1000113" -> "1000197"  [ label = "DDG: &n"] 
  "1000121" -> "1000197"  [ label = "DDG: &x"] 
  "1000125" -> "1000197"  [ label = "DDG: cnt[x]"] 
  "1000133" -> "1000197"  [ label = "DDG: sum"] 
  "1000132" -> "1000197"  [ label = "DDG: 2 * sum"] 
  "1000132" -> "1000197"  [ label = "DDG: n"] 
  "1000131" -> "1000197"  [ label = "DDG: (2 * sum) % n"] 
  "1000131" -> "1000197"  [ label = "DDG: (2 * sum) % n != 0"] 
  "1000143" -> "1000197"  [ label = "DDG: need"] 
  "1000146" -> "1000197"  [ label = "DDG: sum"] 
  "1000145" -> "1000197"  [ label = "DDG: 2 * sum"] 
  "1000143" -> "1000197"  [ label = "DDG: (2 * sum) / n"] 
  "1000159" -> "1000197"  [ label = "DDG: i"] 
  "1000159" -> "1000197"  [ label = "DDG: n"] 
  "1000159" -> "1000197"  [ label = "DDG: i < n"] 
  "1000194" -> "1000197"  [ label = "DDG: ans"] 
  "1000192" -> "1000197"  [ label = "DDG: ans / 2"] 
  "1000192" -> "1000197"  [ label = "DDG: printf(\"%lld\n\", ans / 2)"] 
  "1000166" -> "1000197"  [ label = "DDG: a[i]"] 
  "1000174" -> "1000197"  [ label = "DDG: need"] 
  "1000172" -> "1000197"  [ label = "DDG: need - a1"] 
  "1000178" -> "1000197"  [ label = "DDG: cnt.count(a2)"] 
  "1000180" -> "1000197"  [ label = "DDG: cnt[a2]"] 
  "1000186" -> "1000197"  [ label = "DDG: a1"] 
  "1000186" -> "1000197"  [ label = "DDG: a2"] 
  "1000186" -> "1000197"  [ label = "DDG: a1 == a2"] 
  "1000139" -> "1000197"  [ label = "DDG: puts(\"0\")"] 
  "1000101" -> "1000104"  [ label = "DDG: "] 
  "1000101" -> "1000109"  [ label = "DDG: "] 
  "1000101" -> "1000113"  [ label = "DDG: "] 
  "1000145" -> "1000143"  [ label = "DDG: 2 * sum"] 
  "1000145" -> "1000143"  [ label = "DDG: n"] 
  "1000101" -> "1000151"  [ label = "DDG: "] 
  "1000101" -> "1000121"  [ label = "DDG: "] 
  "1000101" -> "1000125"  [ label = "DDG: "] 
  "1000101" -> "1000143"  [ label = "DDG: "] 
  "1000101" -> "1000156"  [ label = "DDG: "] 
  "1000101" -> "1000192"  [ label = "DDG: "] 
  "1000194" -> "1000192"  [ label = "DDG: ans"] 
  "1000194" -> "1000192"  [ label = "DDG: 2"] 
  "1000132" -> "1000131"  [ label = "DDG: 2 * sum"] 
  "1000132" -> "1000131"  [ label = "DDG: n"] 
  "1000101" -> "1000131"  [ label = "DDG: "] 
  "1000146" -> "1000145"  [ label = "DDG: sum"] 
  "1000146" -> "1000145"  [ label = "DDG: 2"] 
  "1000132" -> "1000145"  [ label = "DDG: n"] 
  "1000101" -> "1000145"  [ label = "DDG: "] 
  "1000156" -> "1000159"  [ label = "DDG: i"] 
  "1000162" -> "1000159"  [ label = "DDG: i"] 
  "1000101" -> "1000159"  [ label = "DDG: "] 
  "1000145" -> "1000159"  [ label = "DDG: n"] 
  "1000159" -> "1000162"  [ label = "DDG: i"] 
  "1000101" -> "1000162"  [ label = "DDG: "] 
  "1000174" -> "1000172"  [ label = "DDG: a1"] 
  "1000174" -> "1000172"  [ label = "DDG: need"] 
  "1000151" -> "1000194"  [ label = "DDG: ans"] 
  "1000180" -> "1000194"  [ label = "DDG: ans"] 
  "1000189" -> "1000194"  [ label = "DDG: ans"] 
  "1000101" -> "1000194"  [ label = "DDG: "] 
  "1000133" -> "1000132"  [ label = "DDG: sum"] 
  "1000133" -> "1000132"  [ label = "DDG: 2"] 
  "1000159" -> "1000132"  [ label = "DDG: n"] 
  "1000101" -> "1000132"  [ label = "DDG: "] 
  "1000101" -> "1000139"  [ label = "DDG: "] 
  "1000101" -> "1000146"  [ label = "DDG: "] 
  "1000133" -> "1000146"  [ label = "DDG: sum"] 
  "1000101" -> "1000166"  [ label = "DDG: "] 
  "1000101" -> "1000172"  [ label = "DDG: "] 
  "1000101" -> "1000189"  [ label = "DDG: "] 
  "1000101" -> "1000133"  [ label = "DDG: "] 
  "1000146" -> "1000133"  [ label = "DDG: sum"] 
  "1000143" -> "1000174"  [ label = "DDG: need"] 
  "1000101" -> "1000174"  [ label = "DDG: "] 
  "1000166" -> "1000174"  [ label = "DDG: a1"] 
  "1000172" -> "1000178"  [ label = "DDG: a2"] 
  "1000101" -> "1000178"  [ label = "DDG: "] 
  "1000151" -> "1000180"  [ label = "DDG: ans"] 
  "1000189" -> "1000180"  [ label = "DDG: ans"] 
  "1000101" -> "1000180"  [ label = "DDG: "] 
  "1000174" -> "1000186"  [ label = "DDG: a1"] 
  "1000101" -> "1000186"  [ label = "DDG: "] 
  "1000178" -> "1000186"  [ label = "DDG: a2"] 
  "1000151" -> "1000189"  [ label = "DDG: ans"] 
  "1000180" -> "1000189"  [ label = "DDG: ans"] 
  "1000109" -> "1000125"  [ label = "CDG: "] 
  "1000109" -> "1000109"  [ label = "CDG: "] 
  "1000109" -> "1000133"  [ label = "CDG: "] 
  "1000109" -> "1000121"  [ label = "CDG: "] 
  "1000109" -> "1000131"  [ label = "CDG: "] 
  "1000109" -> "1000113"  [ label = "CDG: "] 
  "1000109" -> "1000126"  [ label = "CDG: "] 
  "1000109" -> "1000132"  [ label = "CDG: "] 
  "1000109" -> "1000123"  [ label = "CDG: "] 
  "1000109" -> "1000115"  [ label = "CDG: "] 
  "1000131" -> "1000156"  [ label = "CDG: "] 
  "1000131" -> "1000139"  [ label = "CDG: "] 
  "1000131" -> "1000143"  [ label = "CDG: "] 
  "1000131" -> "1000159"  [ label = "CDG: "] 
  "1000131" -> "1000151"  [ label = "CDG: "] 
  "1000131" -> "1000145"  [ label = "CDG: "] 
  "1000131" -> "1000194"  [ label = "CDG: "] 
  "1000131" -> "1000192"  [ label = "CDG: "] 
  "1000131" -> "1000146"  [ label = "CDG: "] 
  "1000159" -> "1000174"  [ label = "CDG: "] 
  "1000159" -> "1000186"  [ label = "CDG: "] 
  "1000159" -> "1000166"  [ label = "CDG: "] 
  "1000159" -> "1000172"  [ label = "CDG: "] 
  "1000159" -> "1000168"  [ label = "CDG: "] 
  "1000159" -> "1000178"  [ label = "CDG: "] 
  "1000159" -> "1000159"  [ label = "CDG: "] 
  "1000159" -> "1000162"  [ label = "CDG: "] 
  "1000178" -> "1000182"  [ label = "CDG: "] 
  "1000178" -> "1000180"  [ label = "CDG: "] 
  "1000186" -> "1000189"  [ label = "CDG: "] 
}
