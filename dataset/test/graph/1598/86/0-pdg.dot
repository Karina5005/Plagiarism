digraph "main" {  
"1000105" [label = "(METHOD,main)" ]
"1000261" [label = "(METHOD_RETURN,int)" ]
"1000110" [label = "(scanf,scanf(\"%d\",&t))" ]
"1000259" [label = "(RETURN,return 0;,return 0;)" ]
"1000115" [label = "(<operator>.postDecrement,t--)" ]
"1000260" [label = "(LITERAL,0,return 0;)" ]
"1000118" [label = "(scanf,scanf(\"%d\",&n))" ]
"1000153" [label = "(<operator>.assignment,ans=0)" ]
"1000124" [label = "(<operator>.assignment,i=1)" ]
"1000127" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000130" [label = "(<operator>.postIncrement,i++)" ]
"1000158" [label = "(<operator>.assignment,i=1)" ]
"1000161" [label = "(<operator>.lessEqualsThan,i<=4)" ]
"1000164" [label = "(<operator>.postIncrement,i++)" ]
"1000251" [label = "(IDENTIFIER,ans,if (ans))" ]
"1000253" [label = "(printf,printf(\"YES\n\"))" ]
"1000135" [label = "(<operator>.assignment,j=1)" ]
"1000138" [label = "(<operator>.lessEqualsThan,j<=5)" ]
"1000141" [label = "(<operator>.postIncrement,j++)" ]
"1000169" [label = "(<operator>.assignment,j=i+1)" ]
"1000174" [label = "(<operator>.lessEqualsThan,j<=5)" ]
"1000177" [label = "(<operator>.postIncrement,j++)" ]
"1000257" [label = "(printf,printf(\"NO\n\"))" ]
"1000144" [label = "(scanf,scanf(\"%d\",&a[i][j]))" ]
"1000181" [label = "(<operator>.assignment,d1=0)" ]
"1000185" [label = "(<operator>.assignment,d2=0)" ]
"1000189" [label = "(<operator>.assignment,dno=0)" ]
"1000171" [label = "(<operator>.addition,i+1)" ]
"1000194" [label = "(<operator>.assignment,k=1)" ]
"1000197" [label = "(<operator>.lessEqualsThan,k<=n)" ]
"1000200" [label = "(<operator>.postIncrement,k++)" ]
"1000232" [label = "(<operator>.logicalAnd,d1>=n/2 && d2>=n/2 && !dno)" ]
"1000203" [label = "(<operator>.assignmentPlus,d1+=a[k][i])" ]
"1000210" [label = "(<operator>.assignmentPlus,d2+=a[k][j])" ]
"1000217" [label = "(<operator>.assignmentPlus,dno+= !(a[k][i]||a[k][j]))" ]
"1000247" [label = "(<operator>.assignment,ans=1)" ]
"1000233" [label = "(<operator>.greaterEqualsThan,d1>=n/2)" ]
"1000238" [label = "(<operator>.logicalAnd,d2>=n/2 && !dno)" ]
"1000219" [label = "(<operator>.logicalNot,!(a[k][i]||a[k][j]))" ]
"1000235" [label = "(<operator>.division,n/2)" ]
"1000239" [label = "(<operator>.greaterEqualsThan,d2>=n/2)" ]
"1000244" [label = "(<operator>.logicalNot,!dno)" ]
"1000220" [label = "(<operator>.logicalOr,a[k][i]||a[k][j])" ]
"1000241" [label = "(<operator>.division,n/2)" ]
"1000120" [label = "(<operator>.addressOf,&n)" ]
"1000146" [label = "(<operator>.addressOf,&a[i][j])" ]
"1000147" [label = "(<operator>.indirectIndexAccess,a[i][j])" ]
"1000148" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000205" [label = "(<operator>.indirectIndexAccess,a[k][i])" ]
"1000212" [label = "(<operator>.indirectIndexAccess,a[k][j])" ]
"1000206" [label = "(<operator>.indirectIndexAccess,a[k])" ]
"1000213" [label = "(<operator>.indirectIndexAccess,a[k])" ]
"1000221" [label = "(<operator>.indirectIndexAccess,a[k][i])" ]
"1000226" [label = "(<operator>.indirectIndexAccess,a[k][j])" ]
"1000222" [label = "(<operator>.indirectIndexAccess,a[k])" ]
"1000227" [label = "(<operator>.indirectIndexAccess,a[k])" ]
  "1000259" -> "1000261"  [ label = "DDG: <RET>"] 
  "1000110" -> "1000261"  [ label = "DDG: &t"] 
  "1000115" -> "1000261"  [ label = "DDG: t"] 
  "1000118" -> "1000261"  [ label = "DDG: &n"] 
  "1000127" -> "1000261"  [ label = "DDG: n"] 
  "1000127" -> "1000261"  [ label = "DDG: i<=n"] 
  "1000153" -> "1000261"  [ label = "DDG: ans"] 
  "1000161" -> "1000261"  [ label = "DDG: i"] 
  "1000161" -> "1000261"  [ label = "DDG: i<=4"] 
  "1000257" -> "1000261"  [ label = "DDG: printf(\"NO\n\")"] 
  "1000253" -> "1000261"  [ label = "DDG: printf(\"YES\n\")"] 
  "1000169" -> "1000261"  [ label = "DDG: i+1"] 
  "1000174" -> "1000261"  [ label = "DDG: j"] 
  "1000174" -> "1000261"  [ label = "DDG: j<=5"] 
  "1000185" -> "1000261"  [ label = "DDG: d2"] 
  "1000189" -> "1000261"  [ label = "DDG: dno"] 
  "1000197" -> "1000261"  [ label = "DDG: k"] 
  "1000197" -> "1000261"  [ label = "DDG: k<=n"] 
  "1000233" -> "1000261"  [ label = "DDG: d1"] 
  "1000235" -> "1000261"  [ label = "DDG: n"] 
  "1000233" -> "1000261"  [ label = "DDG: n/2"] 
  "1000232" -> "1000261"  [ label = "DDG: d1>=n/2"] 
  "1000239" -> "1000261"  [ label = "DDG: d2"] 
  "1000241" -> "1000261"  [ label = "DDG: n"] 
  "1000239" -> "1000261"  [ label = "DDG: n/2"] 
  "1000238" -> "1000261"  [ label = "DDG: d2>=n/2"] 
  "1000244" -> "1000261"  [ label = "DDG: dno"] 
  "1000238" -> "1000261"  [ label = "DDG: !dno"] 
  "1000232" -> "1000261"  [ label = "DDG: d2>=n/2 && !dno"] 
  "1000232" -> "1000261"  [ label = "DDG: d1>=n/2 && d2>=n/2 && !dno"] 
  "1000247" -> "1000261"  [ label = "DDG: ans"] 
  "1000210" -> "1000261"  [ label = "DDG: d2"] 
  "1000217" -> "1000261"  [ label = "DDG: dno"] 
  "1000220" -> "1000261"  [ label = "DDG: a[k][i]"] 
  "1000220" -> "1000261"  [ label = "DDG: a[k][j]"] 
  "1000219" -> "1000261"  [ label = "DDG: a[k][i]||a[k][j]"] 
  "1000217" -> "1000261"  [ label = "DDG: !(a[k][i]||a[k][j])"] 
  "1000138" -> "1000261"  [ label = "DDG: j"] 
  "1000138" -> "1000261"  [ label = "DDG: j<=5"] 
  "1000144" -> "1000261"  [ label = "DDG: &a[i][j]"] 
  "1000105" -> "1000110"  [ label = "DDG: "] 
  "1000260" -> "1000259"  [ label = "DDG: 0"] 
  "1000105" -> "1000259"  [ label = "DDG: "] 
  "1000105" -> "1000260"  [ label = "DDG: "] 
  "1000105" -> "1000115"  [ label = "DDG: "] 
  "1000105" -> "1000118"  [ label = "DDG: "] 
  "1000105" -> "1000153"  [ label = "DDG: "] 
  "1000105" -> "1000124"  [ label = "DDG: "] 
  "1000105" -> "1000158"  [ label = "DDG: "] 
  "1000105" -> "1000251"  [ label = "DDG: "] 
  "1000124" -> "1000127"  [ label = "DDG: i"] 
  "1000130" -> "1000127"  [ label = "DDG: i"] 
  "1000105" -> "1000127"  [ label = "DDG: "] 
  "1000235" -> "1000127"  [ label = "DDG: n"] 
  "1000241" -> "1000127"  [ label = "DDG: n"] 
  "1000127" -> "1000130"  [ label = "DDG: i"] 
  "1000105" -> "1000130"  [ label = "DDG: "] 
  "1000158" -> "1000161"  [ label = "DDG: i"] 
  "1000164" -> "1000161"  [ label = "DDG: i"] 
  "1000105" -> "1000161"  [ label = "DDG: "] 
  "1000105" -> "1000164"  [ label = "DDG: "] 
  "1000161" -> "1000164"  [ label = "DDG: i"] 
  "1000105" -> "1000135"  [ label = "DDG: "] 
  "1000161" -> "1000169"  [ label = "DDG: i"] 
  "1000105" -> "1000169"  [ label = "DDG: "] 
  "1000105" -> "1000253"  [ label = "DDG: "] 
  "1000135" -> "1000138"  [ label = "DDG: j"] 
  "1000141" -> "1000138"  [ label = "DDG: j"] 
  "1000105" -> "1000138"  [ label = "DDG: "] 
  "1000138" -> "1000141"  [ label = "DDG: j"] 
  "1000105" -> "1000141"  [ label = "DDG: "] 
  "1000105" -> "1000144"  [ label = "DDG: "] 
  "1000169" -> "1000174"  [ label = "DDG: j"] 
  "1000177" -> "1000174"  [ label = "DDG: j"] 
  "1000105" -> "1000174"  [ label = "DDG: "] 
  "1000174" -> "1000177"  [ label = "DDG: j"] 
  "1000105" -> "1000177"  [ label = "DDG: "] 
  "1000105" -> "1000181"  [ label = "DDG: "] 
  "1000105" -> "1000185"  [ label = "DDG: "] 
  "1000105" -> "1000189"  [ label = "DDG: "] 
  "1000105" -> "1000257"  [ label = "DDG: "] 
  "1000161" -> "1000171"  [ label = "DDG: i"] 
  "1000105" -> "1000171"  [ label = "DDG: "] 
  "1000105" -> "1000194"  [ label = "DDG: "] 
  "1000194" -> "1000197"  [ label = "DDG: k"] 
  "1000200" -> "1000197"  [ label = "DDG: k"] 
  "1000105" -> "1000197"  [ label = "DDG: "] 
  "1000127" -> "1000197"  [ label = "DDG: n"] 
  "1000235" -> "1000197"  [ label = "DDG: n"] 
  "1000241" -> "1000197"  [ label = "DDG: n"] 
  "1000197" -> "1000200"  [ label = "DDG: k"] 
  "1000105" -> "1000200"  [ label = "DDG: "] 
  "1000220" -> "1000203"  [ label = "DDG: a[k][i]"] 
  "1000220" -> "1000210"  [ label = "DDG: a[k][j]"] 
  "1000219" -> "1000217"  [ label = "DDG: a[k][i]||a[k][j]"] 
  "1000233" -> "1000232"  [ label = "DDG: n/2"] 
  "1000233" -> "1000232"  [ label = "DDG: d1"] 
  "1000238" -> "1000232"  [ label = "DDG: d2>=n/2"] 
  "1000238" -> "1000232"  [ label = "DDG: !dno"] 
  "1000105" -> "1000247"  [ label = "DDG: "] 
  "1000181" -> "1000203"  [ label = "DDG: d1"] 
  "1000105" -> "1000203"  [ label = "DDG: "] 
  "1000185" -> "1000210"  [ label = "DDG: d2"] 
  "1000105" -> "1000210"  [ label = "DDG: "] 
  "1000189" -> "1000217"  [ label = "DDG: dno"] 
  "1000105" -> "1000217"  [ label = "DDG: "] 
  "1000181" -> "1000233"  [ label = "DDG: d1"] 
  "1000203" -> "1000233"  [ label = "DDG: d1"] 
  "1000105" -> "1000233"  [ label = "DDG: "] 
  "1000235" -> "1000233"  [ label = "DDG: n"] 
  "1000235" -> "1000233"  [ label = "DDG: 2"] 
  "1000239" -> "1000238"  [ label = "DDG: n/2"] 
  "1000239" -> "1000238"  [ label = "DDG: d2"] 
  "1000244" -> "1000238"  [ label = "DDG: dno"] 
  "1000220" -> "1000219"  [ label = "DDG: a[k][j]"] 
  "1000220" -> "1000219"  [ label = "DDG: a[k][i]"] 
  "1000197" -> "1000235"  [ label = "DDG: n"] 
  "1000105" -> "1000235"  [ label = "DDG: "] 
  "1000185" -> "1000239"  [ label = "DDG: d2"] 
  "1000210" -> "1000239"  [ label = "DDG: d2"] 
  "1000105" -> "1000239"  [ label = "DDG: "] 
  "1000241" -> "1000239"  [ label = "DDG: 2"] 
  "1000241" -> "1000239"  [ label = "DDG: n"] 
  "1000189" -> "1000244"  [ label = "DDG: dno"] 
  "1000217" -> "1000244"  [ label = "DDG: dno"] 
  "1000105" -> "1000244"  [ label = "DDG: "] 
  "1000235" -> "1000241"  [ label = "DDG: n"] 
  "1000105" -> "1000241"  [ label = "DDG: "] 
  "1000115" -> "1000127"  [ label = "CDG: "] 
  "1000115" -> "1000161"  [ label = "CDG: "] 
  "1000115" -> "1000120"  [ label = "CDG: "] 
  "1000115" -> "1000153"  [ label = "CDG: "] 
  "1000115" -> "1000118"  [ label = "CDG: "] 
  "1000115" -> "1000158"  [ label = "CDG: "] 
  "1000115" -> "1000124"  [ label = "CDG: "] 
  "1000115" -> "1000115"  [ label = "CDG: "] 
  "1000115" -> "1000253"  [ label = "CDG: "] 
  "1000115" -> "1000257"  [ label = "CDG: "] 
  "1000127" -> "1000127"  [ label = "CDG: "] 
  "1000127" -> "1000130"  [ label = "CDG: "] 
  "1000127" -> "1000138"  [ label = "CDG: "] 
  "1000127" -> "1000135"  [ label = "CDG: "] 
  "1000161" -> "1000164"  [ label = "CDG: "] 
  "1000161" -> "1000174"  [ label = "CDG: "] 
  "1000161" -> "1000161"  [ label = "CDG: "] 
  "1000161" -> "1000169"  [ label = "CDG: "] 
  "1000161" -> "1000171"  [ label = "CDG: "] 
  "1000138" -> "1000141"  [ label = "CDG: "] 
  "1000138" -> "1000148"  [ label = "CDG: "] 
  "1000138" -> "1000144"  [ label = "CDG: "] 
  "1000138" -> "1000146"  [ label = "CDG: "] 
  "1000138" -> "1000138"  [ label = "CDG: "] 
  "1000138" -> "1000147"  [ label = "CDG: "] 
  "1000174" -> "1000174"  [ label = "CDG: "] 
  "1000174" -> "1000233"  [ label = "CDG: "] 
  "1000174" -> "1000197"  [ label = "CDG: "] 
  "1000174" -> "1000235"  [ label = "CDG: "] 
  "1000174" -> "1000194"  [ label = "CDG: "] 
  "1000174" -> "1000232"  [ label = "CDG: "] 
  "1000174" -> "1000185"  [ label = "CDG: "] 
  "1000174" -> "1000189"  [ label = "CDG: "] 
  "1000174" -> "1000177"  [ label = "CDG: "] 
  "1000174" -> "1000181"  [ label = "CDG: "] 
  "1000197" -> "1000200"  [ label = "CDG: "] 
  "1000197" -> "1000221"  [ label = "CDG: "] 
  "1000197" -> "1000197"  [ label = "CDG: "] 
  "1000197" -> "1000219"  [ label = "CDG: "] 
  "1000197" -> "1000210"  [ label = "CDG: "] 
  "1000197" -> "1000222"  [ label = "CDG: "] 
  "1000197" -> "1000206"  [ label = "CDG: "] 
  "1000197" -> "1000220"  [ label = "CDG: "] 
  "1000197" -> "1000217"  [ label = "CDG: "] 
  "1000197" -> "1000213"  [ label = "CDG: "] 
  "1000197" -> "1000212"  [ label = "CDG: "] 
  "1000197" -> "1000203"  [ label = "CDG: "] 
  "1000197" -> "1000205"  [ label = "CDG: "] 
  "1000232" -> "1000247"  [ label = "CDG: "] 
  "1000233" -> "1000238"  [ label = "CDG: "] 
  "1000233" -> "1000239"  [ label = "CDG: "] 
  "1000233" -> "1000241"  [ label = "CDG: "] 
  "1000239" -> "1000244"  [ label = "CDG: "] 
  "1000221" -> "1000227"  [ label = "CDG: "] 
  "1000221" -> "1000226"  [ label = "CDG: "] 
}
