digraph "solve" {  
"1000329" [label = "(METHOD,solve)" ]
"1000447" [label = "(METHOD_RETURN,void)" ]
"1000331" [label = "(clear_array,clear_array())" ]
"1000332" [label = "(scanf,scanf(\"%lld\", &n))" ]
"1000375" [label = "(build_tree,build_tree())" ]
"1000377" [label = "(<operator>.assignment,ans = 1)" ]
"1000444" [label = "(printf,printf(\"%lld\n\", ans))" ]
"1000338" [label = "(<operator>.assignment,i = 1)" ]
"1000341" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000344" [label = "(<operator>.postIncrement,i++)" ]
"1000346" [label = "(scanf,scanf(\"%lld\", (a + i)))" ]
"1000353" [label = "(<operator>.assignment,i = 1)" ]
"1000356" [label = "(<operator>.lessThan,i < n)" ]
"1000359" [label = "(<operator>.postIncrement,i++)" ]
"1000361" [label = "(<operator>.assignment,d[i] = abs(a[i + 1] - a[i]))" ]
"1000382" [label = "(<operator>.assignment,i = 1)" ]
"1000385" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000388" [label = "(<operator>.postIncrement,i++)" ]
"1000392" [label = "(<operator>.assignment,L = i)" ]
"1000396" [label = "(<operator>.assignment,R = n)" ]
"1000400" [label = "(<operator>.assignment,res = i)" ]
"1000435" [label = "(<operator>.assignment,ans = max(ans, res - i + 1))" ]
"1000348" [label = "(<operator>.addition,a + i)" ]
"1000365" [label = "(abs,abs(a[i + 1] - a[i]))" ]
"1000404" [label = "(<operator>.lessEqualsThan,L <= R)" ]
"1000366" [label = "(<operator>.subtraction,a[i + 1] - a[i])" ]
"1000409" [label = "(<operator>.assignment,mid = (L + R) / 2)" ]
"1000437" [label = "(max,max(ans, res - i + 1))" ]
"1000417" [label = "(check,check(i, mid))" ]
"1000439" [label = "(<operator>.subtraction,res - i + 1)" ]
"1000369" [label = "(<operator>.addition,i + 1)" ]
"1000411" [label = "(<operator>.division,(L + R) / 2)" ]
"1000421" [label = "(<operator>.assignment,res = mid)" ]
"1000424" [label = "(<operator>.assignment,L = mid + 1)" ]
"1000430" [label = "(<operator>.assignment,R = mid - 1)" ]
"1000441" [label = "(<operator>.addition,i + 1)" ]
"1000412" [label = "(<operator>.addition,L + R)" ]
"1000426" [label = "(<operator>.addition,mid + 1)" ]
"1000432" [label = "(<operator>.subtraction,mid - 1)" ]
"1000362" [label = "(<operator>.indirectIndexAccess,d[i])" ]
"1000367" [label = "(<operator>.indirectIndexAccess,a[i + 1])" ]
"1000372" [label = "(<operator>.indirectIndexAccess,a[i])" ]
  "1000331" -> "1000447"  [ label = "DDG: clear_array()"] 
  "1000332" -> "1000447"  [ label = "DDG: &n"] 
  "1000356" -> "1000447"  [ label = "DDG: i < n"] 
  "1000375" -> "1000447"  [ label = "DDG: build_tree()"] 
  "1000385" -> "1000447"  [ label = "DDG: i"] 
  "1000385" -> "1000447"  [ label = "DDG: n"] 
  "1000385" -> "1000447"  [ label = "DDG: i <= n"] 
  "1000444" -> "1000447"  [ label = "DDG: ans"] 
  "1000444" -> "1000447"  [ label = "DDG: printf(\"%lld\n\", ans)"] 
  "1000404" -> "1000447"  [ label = "DDG: L"] 
  "1000404" -> "1000447"  [ label = "DDG: R"] 
  "1000404" -> "1000447"  [ label = "DDG: L <= R"] 
  "1000439" -> "1000447"  [ label = "DDG: res"] 
  "1000439" -> "1000447"  [ label = "DDG: i + 1"] 
  "1000437" -> "1000447"  [ label = "DDG: res - i + 1"] 
  "1000435" -> "1000447"  [ label = "DDG: max(ans, res - i + 1)"] 
  "1000411" -> "1000447"  [ label = "DDG: L + R"] 
  "1000409" -> "1000447"  [ label = "DDG: (L + R) / 2"] 
  "1000417" -> "1000447"  [ label = "DDG: check(i, mid)"] 
  "1000432" -> "1000447"  [ label = "DDG: mid"] 
  "1000430" -> "1000447"  [ label = "DDG: mid - 1"] 
  "1000426" -> "1000447"  [ label = "DDG: mid"] 
  "1000424" -> "1000447"  [ label = "DDG: mid + 1"] 
  "1000361" -> "1000447"  [ label = "DDG: d[i]"] 
  "1000366" -> "1000447"  [ label = "DDG: a[i + 1]"] 
  "1000366" -> "1000447"  [ label = "DDG: a[i]"] 
  "1000365" -> "1000447"  [ label = "DDG: a[i + 1] - a[i]"] 
  "1000361" -> "1000447"  [ label = "DDG: abs(a[i + 1] - a[i])"] 
  "1000348" -> "1000447"  [ label = "DDG: a"] 
  "1000346" -> "1000447"  [ label = "DDG: a + i"] 
  "1000329" -> "1000331"  [ label = "DDG: "] 
  "1000329" -> "1000332"  [ label = "DDG: "] 
  "1000329" -> "1000375"  [ label = "DDG: "] 
  "1000329" -> "1000377"  [ label = "DDG: "] 
  "1000329" -> "1000338"  [ label = "DDG: "] 
  "1000329" -> "1000346"  [ label = "DDG: "] 
  "1000329" -> "1000353"  [ label = "DDG: "] 
  "1000365" -> "1000361"  [ label = "DDG: a[i + 1] - a[i]"] 
  "1000329" -> "1000382"  [ label = "DDG: "] 
  "1000329" -> "1000444"  [ label = "DDG: "] 
  "1000377" -> "1000444"  [ label = "DDG: ans"] 
  "1000435" -> "1000444"  [ label = "DDG: ans"] 
  "1000338" -> "1000341"  [ label = "DDG: i"] 
  "1000344" -> "1000341"  [ label = "DDG: i"] 
  "1000329" -> "1000341"  [ label = "DDG: "] 
  "1000329" -> "1000344"  [ label = "DDG: "] 
  "1000341" -> "1000344"  [ label = "DDG: i"] 
  "1000341" -> "1000346"  [ label = "DDG: i"] 
  "1000353" -> "1000356"  [ label = "DDG: i"] 
  "1000359" -> "1000356"  [ label = "DDG: i"] 
  "1000329" -> "1000356"  [ label = "DDG: "] 
  "1000341" -> "1000356"  [ label = "DDG: n"] 
  "1000329" -> "1000359"  [ label = "DDG: "] 
  "1000356" -> "1000359"  [ label = "DDG: i"] 
  "1000382" -> "1000385"  [ label = "DDG: i"] 
  "1000388" -> "1000385"  [ label = "DDG: i"] 
  "1000329" -> "1000385"  [ label = "DDG: "] 
  "1000356" -> "1000385"  [ label = "DDG: n"] 
  "1000329" -> "1000388"  [ label = "DDG: "] 
  "1000417" -> "1000388"  [ label = "DDG: i"] 
  "1000385" -> "1000388"  [ label = "DDG: i"] 
  "1000385" -> "1000392"  [ label = "DDG: i"] 
  "1000329" -> "1000392"  [ label = "DDG: "] 
  "1000385" -> "1000396"  [ label = "DDG: n"] 
  "1000329" -> "1000396"  [ label = "DDG: "] 
  "1000329" -> "1000400"  [ label = "DDG: "] 
  "1000385" -> "1000400"  [ label = "DDG: i"] 
  "1000437" -> "1000435"  [ label = "DDG: res - i + 1"] 
  "1000437" -> "1000435"  [ label = "DDG: ans"] 
  "1000329" -> "1000348"  [ label = "DDG: "] 
  "1000341" -> "1000348"  [ label = "DDG: i"] 
  "1000366" -> "1000365"  [ label = "DDG: a[i]"] 
  "1000366" -> "1000365"  [ label = "DDG: a[i + 1]"] 
  "1000329" -> "1000435"  [ label = "DDG: "] 
  "1000329" -> "1000366"  [ label = "DDG: "] 
  "1000392" -> "1000404"  [ label = "DDG: L"] 
  "1000424" -> "1000404"  [ label = "DDG: L"] 
  "1000329" -> "1000404"  [ label = "DDG: "] 
  "1000396" -> "1000404"  [ label = "DDG: R"] 
  "1000430" -> "1000404"  [ label = "DDG: R"] 
  "1000411" -> "1000409"  [ label = "DDG: 2"] 
  "1000411" -> "1000409"  [ label = "DDG: L + R"] 
  "1000377" -> "1000437"  [ label = "DDG: ans"] 
  "1000435" -> "1000437"  [ label = "DDG: ans"] 
  "1000329" -> "1000437"  [ label = "DDG: "] 
  "1000439" -> "1000437"  [ label = "DDG: i + 1"] 
  "1000439" -> "1000437"  [ label = "DDG: res"] 
  "1000329" -> "1000409"  [ label = "DDG: "] 
  "1000400" -> "1000439"  [ label = "DDG: res"] 
  "1000421" -> "1000439"  [ label = "DDG: res"] 
  "1000329" -> "1000439"  [ label = "DDG: "] 
  "1000417" -> "1000439"  [ label = "DDG: i"] 
  "1000385" -> "1000439"  [ label = "DDG: i"] 
  "1000356" -> "1000369"  [ label = "DDG: i"] 
  "1000329" -> "1000369"  [ label = "DDG: "] 
  "1000404" -> "1000411"  [ label = "DDG: R"] 
  "1000329" -> "1000411"  [ label = "DDG: "] 
  "1000404" -> "1000411"  [ label = "DDG: L"] 
  "1000329" -> "1000417"  [ label = "DDG: "] 
  "1000385" -> "1000417"  [ label = "DDG: i"] 
  "1000409" -> "1000417"  [ label = "DDG: mid"] 
  "1000417" -> "1000421"  [ label = "DDG: mid"] 
  "1000329" -> "1000421"  [ label = "DDG: "] 
  "1000329" -> "1000424"  [ label = "DDG: "] 
  "1000417" -> "1000424"  [ label = "DDG: mid"] 
  "1000432" -> "1000430"  [ label = "DDG: 1"] 
  "1000432" -> "1000430"  [ label = "DDG: mid"] 
  "1000417" -> "1000441"  [ label = "DDG: i"] 
  "1000329" -> "1000441"  [ label = "DDG: "] 
  "1000385" -> "1000441"  [ label = "DDG: i"] 
  "1000404" -> "1000412"  [ label = "DDG: L"] 
  "1000329" -> "1000412"  [ label = "DDG: "] 
  "1000404" -> "1000412"  [ label = "DDG: R"] 
  "1000329" -> "1000430"  [ label = "DDG: "] 
  "1000329" -> "1000426"  [ label = "DDG: "] 
  "1000417" -> "1000426"  [ label = "DDG: mid"] 
  "1000417" -> "1000432"  [ label = "DDG: mid"] 
  "1000329" -> "1000432"  [ label = "DDG: "] 
  "1000341" -> "1000341"  [ label = "CDG: "] 
  "1000341" -> "1000344"  [ label = "CDG: "] 
  "1000341" -> "1000346"  [ label = "CDG: "] 
  "1000341" -> "1000348"  [ label = "CDG: "] 
  "1000356" -> "1000367"  [ label = "CDG: "] 
  "1000356" -> "1000362"  [ label = "CDG: "] 
  "1000356" -> "1000359"  [ label = "CDG: "] 
  "1000356" -> "1000356"  [ label = "CDG: "] 
  "1000356" -> "1000365"  [ label = "CDG: "] 
  "1000356" -> "1000366"  [ label = "CDG: "] 
  "1000356" -> "1000361"  [ label = "CDG: "] 
  "1000356" -> "1000372"  [ label = "CDG: "] 
  "1000356" -> "1000369"  [ label = "CDG: "] 
  "1000385" -> "1000396"  [ label = "CDG: "] 
  "1000385" -> "1000439"  [ label = "CDG: "] 
  "1000385" -> "1000392"  [ label = "CDG: "] 
  "1000385" -> "1000400"  [ label = "CDG: "] 
  "1000385" -> "1000385"  [ label = "CDG: "] 
  "1000385" -> "1000388"  [ label = "CDG: "] 
  "1000385" -> "1000404"  [ label = "CDG: "] 
  "1000385" -> "1000435"  [ label = "CDG: "] 
  "1000385" -> "1000441"  [ label = "CDG: "] 
  "1000385" -> "1000437"  [ label = "CDG: "] 
  "1000404" -> "1000409"  [ label = "CDG: "] 
  "1000404" -> "1000417"  [ label = "CDG: "] 
  "1000404" -> "1000404"  [ label = "CDG: "] 
  "1000404" -> "1000412"  [ label = "CDG: "] 
  "1000404" -> "1000411"  [ label = "CDG: "] 
  "1000417" -> "1000426"  [ label = "CDG: "] 
  "1000417" -> "1000432"  [ label = "CDG: "] 
  "1000417" -> "1000430"  [ label = "CDG: "] 
  "1000417" -> "1000424"  [ label = "CDG: "] 
  "1000417" -> "1000421"  [ label = "CDG: "] 
}
