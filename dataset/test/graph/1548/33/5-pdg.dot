digraph "read" {  
"1000223" [label = "(METHOD,read)" ]
"1000293" [label = "(METHOD_RETURN,inline int)" ]
"1000224" [label = "(PARAM,T &x)" ]
"1000227" [label = "(<operator>.assignment,c = gc())" ]
"1000231" [label = "(<operator>.assignment,b = 1)" ]
"1000288" [label = "(<operator>.assignmentMultiplication,x *= b)" ]
"1000291" [label = "(RETURN,return 1;,return 1;)" ]
"1000235" [label = "(<operator>.logicalNot,!(c >= '0' && c <= '9' || c == EOF))" ]
"1000247" [label = "(<operator>.assignment,c = gc())" ]
"1000259" [label = "(<operator>.equals,c == EOF)" ]
"1000262" [label = "(RETURN,return 0;,return 0;)" ]
"1000265" [label = "(<operator>.assignment,x = 0)" ]
"1000268" [label = "(<operator>.logicalAnd,c >= '0' && c <= '9')" ]
"1000292" [label = "(LITERAL,1,return 1;)" ]
"1000251" [label = "(<operator>.equals,c == '-')" ]
"1000254" [label = "(<operator>.assignment,b = -b)" ]
"1000263" [label = "(LITERAL,0,return 0;)" ]
"1000276" [label = "(<operator>.assignment,x = x * 10 + c - '0')" ]
"1000285" [label = "(<operator>.assignment,c = gc())" ]
"1000236" [label = "(<operator>.logicalOr,c >= '0' && c <= '9' || c == EOF)" ]
"1000269" [label = "(<operator>.greaterEqualsThan,c >= '0')" ]
"1000272" [label = "(<operator>.lessEqualsThan,c <= '9')" ]
"1000237" [label = "(<operator>.logicalAnd,c >= '0' && c <= '9')" ]
"1000244" [label = "(<operator>.equals,c == EOF)" ]
"1000256" [label = "(<operator>.minus,-b)" ]
"1000278" [label = "(<operator>.addition,x * 10 + c - '0')" ]
"1000238" [label = "(<operator>.greaterEqualsThan,c >= '0')" ]
"1000241" [label = "(<operator>.lessEqualsThan,c <= '9')" ]
"1000279" [label = "(<operator>.multiplication,x * 10)" ]
"1000282" [label = "(<operator>.subtraction,c - '0')" ]
"1000249" [label = "(gc,gc())" ]
"1000287" [label = "(gc,gc())" ]
  "1000291" -> "1000293"  [ label = "DDG: <RET>"] 
  "1000262" -> "1000293"  [ label = "DDG: <RET>"] 
  "1000224" -> "1000293"  [ label = "DDG: x"] 
  "1000227" -> "1000293"  [ label = "DDG: gc()"] 
  "1000231" -> "1000293"  [ label = "DDG: b"] 
  "1000237" -> "1000293"  [ label = "DDG: c >= '0'"] 
  "1000237" -> "1000293"  [ label = "DDG: c <= '9'"] 
  "1000236" -> "1000293"  [ label = "DDG: c >= '0' && c <= '9'"] 
  "1000235" -> "1000293"  [ label = "DDG: c >= '0' && c <= '9' || c == EOF"] 
  "1000235" -> "1000293"  [ label = "DDG: !(c >= '0' && c <= '9' || c == EOF)"] 
  "1000259" -> "1000293"  [ label = "DDG: c"] 
  "1000259" -> "1000293"  [ label = "DDG: EOF"] 
  "1000259" -> "1000293"  [ label = "DDG: c == EOF"] 
  "1000269" -> "1000293"  [ label = "DDG: c"] 
  "1000268" -> "1000293"  [ label = "DDG: c >= '0'"] 
  "1000272" -> "1000293"  [ label = "DDG: c"] 
  "1000268" -> "1000293"  [ label = "DDG: c <= '9'"] 
  "1000268" -> "1000293"  [ label = "DDG: c >= '0' && c <= '9'"] 
  "1000288" -> "1000293"  [ label = "DDG: x"] 
  "1000288" -> "1000293"  [ label = "DDG: b"] 
  "1000278" -> "1000293"  [ label = "DDG: x * 10"] 
  "1000278" -> "1000293"  [ label = "DDG: c - '0'"] 
  "1000276" -> "1000293"  [ label = "DDG: x * 10 + c - '0'"] 
  "1000285" -> "1000293"  [ label = "DDG: gc()"] 
  "1000251" -> "1000293"  [ label = "DDG: c == '-'"] 
  "1000254" -> "1000293"  [ label = "DDG: b"] 
  "1000254" -> "1000293"  [ label = "DDG: -b"] 
  "1000247" -> "1000293"  [ label = "DDG: gc()"] 
  "1000223" -> "1000224"  [ label = "DDG: "] 
  "1000223" -> "1000227"  [ label = "DDG: "] 
  "1000223" -> "1000231"  [ label = "DDG: "] 
  "1000231" -> "1000288"  [ label = "DDG: b"] 
  "1000254" -> "1000288"  [ label = "DDG: b"] 
  "1000223" -> "1000288"  [ label = "DDG: "] 
  "1000292" -> "1000291"  [ label = "DDG: 1"] 
  "1000223" -> "1000291"  [ label = "DDG: "] 
  "1000223" -> "1000247"  [ label = "DDG: "] 
  "1000263" -> "1000262"  [ label = "DDG: 0"] 
  "1000223" -> "1000262"  [ label = "DDG: "] 
  "1000223" -> "1000265"  [ label = "DDG: "] 
  "1000265" -> "1000288"  [ label = "DDG: x"] 
  "1000276" -> "1000288"  [ label = "DDG: x"] 
  "1000224" -> "1000288"  [ label = "DDG: x"] 
  "1000223" -> "1000292"  [ label = "DDG: "] 
  "1000236" -> "1000235"  [ label = "DDG: c == EOF"] 
  "1000236" -> "1000235"  [ label = "DDG: c >= '0' && c <= '9'"] 
  "1000256" -> "1000254"  [ label = "DDG: b"] 
  "1000238" -> "1000259"  [ label = "DDG: c"] 
  "1000241" -> "1000259"  [ label = "DDG: c"] 
  "1000244" -> "1000259"  [ label = "DDG: c"] 
  "1000223" -> "1000259"  [ label = "DDG: "] 
  "1000244" -> "1000259"  [ label = "DDG: EOF"] 
  "1000223" -> "1000263"  [ label = "DDG: "] 
  "1000224" -> "1000265"  [ label = "DDG: x"] 
  "1000269" -> "1000268"  [ label = "DDG: '0'"] 
  "1000269" -> "1000268"  [ label = "DDG: c"] 
  "1000237" -> "1000268"  [ label = "DDG: c <= '9'"] 
  "1000272" -> "1000268"  [ label = "DDG: c"] 
  "1000272" -> "1000268"  [ label = "DDG: '9'"] 
  "1000282" -> "1000276"  [ label = "DDG: c"] 
  "1000282" -> "1000276"  [ label = "DDG: '0'"] 
  "1000279" -> "1000276"  [ label = "DDG: 10"] 
  "1000279" -> "1000276"  [ label = "DDG: x"] 
  "1000223" -> "1000285"  [ label = "DDG: "] 
  "1000237" -> "1000236"  [ label = "DDG: c >= '0'"] 
  "1000237" -> "1000236"  [ label = "DDG: c <= '9'"] 
  "1000244" -> "1000236"  [ label = "DDG: c"] 
  "1000244" -> "1000236"  [ label = "DDG: EOF"] 
  "1000238" -> "1000251"  [ label = "DDG: c"] 
  "1000241" -> "1000251"  [ label = "DDG: c"] 
  "1000244" -> "1000251"  [ label = "DDG: c"] 
  "1000223" -> "1000251"  [ label = "DDG: "] 
  "1000223" -> "1000254"  [ label = "DDG: "] 
  "1000259" -> "1000269"  [ label = "DDG: c"] 
  "1000285" -> "1000269"  [ label = "DDG: c"] 
  "1000223" -> "1000269"  [ label = "DDG: "] 
  "1000269" -> "1000272"  [ label = "DDG: c"] 
  "1000223" -> "1000272"  [ label = "DDG: "] 
  "1000224" -> "1000276"  [ label = "DDG: x"] 
  "1000223" -> "1000276"  [ label = "DDG: "] 
  "1000238" -> "1000237"  [ label = "DDG: c"] 
  "1000238" -> "1000237"  [ label = "DDG: '0'"] 
  "1000241" -> "1000237"  [ label = "DDG: '9'"] 
  "1000241" -> "1000237"  [ label = "DDG: c"] 
  "1000238" -> "1000244"  [ label = "DDG: c"] 
  "1000241" -> "1000244"  [ label = "DDG: c"] 
  "1000223" -> "1000244"  [ label = "DDG: "] 
  "1000231" -> "1000256"  [ label = "DDG: b"] 
  "1000254" -> "1000256"  [ label = "DDG: b"] 
  "1000223" -> "1000256"  [ label = "DDG: "] 
  "1000279" -> "1000278"  [ label = "DDG: 10"] 
  "1000279" -> "1000278"  [ label = "DDG: x"] 
  "1000282" -> "1000278"  [ label = "DDG: c"] 
  "1000282" -> "1000278"  [ label = "DDG: '0'"] 
  "1000227" -> "1000238"  [ label = "DDG: c"] 
  "1000247" -> "1000238"  [ label = "DDG: c"] 
  "1000223" -> "1000238"  [ label = "DDG: "] 
  "1000238" -> "1000241"  [ label = "DDG: c"] 
  "1000223" -> "1000241"  [ label = "DDG: "] 
  "1000265" -> "1000279"  [ label = "DDG: x"] 
  "1000276" -> "1000279"  [ label = "DDG: x"] 
  "1000224" -> "1000279"  [ label = "DDG: x"] 
  "1000223" -> "1000279"  [ label = "DDG: "] 
  "1000269" -> "1000282"  [ label = "DDG: c"] 
  "1000272" -> "1000282"  [ label = "DDG: c"] 
  "1000223" -> "1000282"  [ label = "DDG: "] 
  "1000235" -> "1000247"  [ label = "CDG: "] 
  "1000235" -> "1000238"  [ label = "CDG: "] 
  "1000235" -> "1000251"  [ label = "CDG: "] 
  "1000235" -> "1000236"  [ label = "CDG: "] 
  "1000235" -> "1000235"  [ label = "CDG: "] 
  "1000235" -> "1000237"  [ label = "CDG: "] 
  "1000235" -> "1000249"  [ label = "CDG: "] 
  "1000259" -> "1000265"  [ label = "CDG: "] 
  "1000259" -> "1000268"  [ label = "CDG: "] 
  "1000259" -> "1000291"  [ label = "CDG: "] 
  "1000259" -> "1000262"  [ label = "CDG: "] 
  "1000259" -> "1000269"  [ label = "CDG: "] 
  "1000259" -> "1000288"  [ label = "CDG: "] 
  "1000268" -> "1000285"  [ label = "CDG: "] 
  "1000268" -> "1000268"  [ label = "CDG: "] 
  "1000268" -> "1000276"  [ label = "CDG: "] 
  "1000268" -> "1000282"  [ label = "CDG: "] 
  "1000268" -> "1000269"  [ label = "CDG: "] 
  "1000268" -> "1000278"  [ label = "CDG: "] 
  "1000268" -> "1000287"  [ label = "CDG: "] 
  "1000268" -> "1000279"  [ label = "CDG: "] 
  "1000251" -> "1000254"  [ label = "CDG: "] 
  "1000251" -> "1000256"  [ label = "CDG: "] 
  "1000269" -> "1000272"  [ label = "CDG: "] 
  "1000237" -> "1000244"  [ label = "CDG: "] 
  "1000238" -> "1000241"  [ label = "CDG: "] 
}
