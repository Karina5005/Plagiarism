digraph "main" {  
"1000283" [label = "(METHOD,main)" ]
"1000349" [label = "(METHOD_RETURN,int)" ]
"1000285" [label = "(scanf,scanf(\"%lld\",&t))" ]
"1000347" [label = "(RETURN,return 0;,return 0;)" ]
"1000290" [label = "(<operator>.postDecrement,t--)" ]
"1000348" [label = "(LITERAL,0,return 0;)" ]
"1000293" [label = "(scanf,scanf(\"%lld\",&n))" ]
"1000313" [label = "(<operator>.postDecrement,n--)" ]
"1000339" [label = "(stable,stable())" ]
"1000340" [label = "(printf,printf(\"%lld\n\",find(1,n)+1))" ]
"1000299" [label = "(<operator>.assignment,i=0)" ]
"1000302" [label = "(<operator>.lessThan,i<n)" ]
"1000305" [label = "(<operator>.postIncrement,i++)" ]
"1000307" [label = "(scanf,scanf(\"%lld\",&arr[i]))" ]
"1000317" [label = "(<operator>.assignment,i=0)" ]
"1000320" [label = "(<operator>.lessThan,i<n)" ]
"1000323" [label = "(<operator>.postIncrement,i++)" ]
"1000325" [label = "(<operator>.assignment,cha[i]=abs(arr[i+1]-arr[i]))" ]
"1000342" [label = "(<operator>.addition,find(1,n)+1)" ]
"1000329" [label = "(abs,abs(arr[i+1]-arr[i]))" ]
"1000343" [label = "(find,find(1,n))" ]
"1000330" [label = "(<operator>.subtraction,arr[i+1]-arr[i])" ]
"1000333" [label = "(<operator>.addition,i+1)" ]
"1000295" [label = "(<operator>.addressOf,&n)" ]
"1000309" [label = "(<operator>.addressOf,&arr[i])" ]
"1000326" [label = "(<operator>.indirectIndexAccess,cha[i])" ]
"1000310" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000331" [label = "(<operator>.indirectIndexAccess,arr[i+1])" ]
"1000336" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
  "1000285" -> "1000349"  [ label = "DDG: &t"] 
  "1000290" -> "1000349"  [ label = "DDG: t"] 
  "1000293" -> "1000349"  [ label = "DDG: &n"] 
  "1000320" -> "1000349"  [ label = "DDG: i"] 
  "1000320" -> "1000349"  [ label = "DDG: i<n"] 
  "1000339" -> "1000349"  [ label = "DDG: stable()"] 
  "1000343" -> "1000349"  [ label = "DDG: n"] 
  "1000342" -> "1000349"  [ label = "DDG: find(1,n)"] 
  "1000340" -> "1000349"  [ label = "DDG: find(1,n)+1"] 
  "1000340" -> "1000349"  [ label = "DDG: printf(\"%lld\n\",find(1,n)+1)"] 
  "1000325" -> "1000349"  [ label = "DDG: cha[i]"] 
  "1000330" -> "1000349"  [ label = "DDG: arr[i+1]"] 
  "1000330" -> "1000349"  [ label = "DDG: arr[i]"] 
  "1000329" -> "1000349"  [ label = "DDG: arr[i+1]-arr[i]"] 
  "1000325" -> "1000349"  [ label = "DDG: abs(arr[i+1]-arr[i])"] 
  "1000307" -> "1000349"  [ label = "DDG: &arr[i]"] 
  "1000347" -> "1000349"  [ label = "DDG: <RET>"] 
  "1000283" -> "1000285"  [ label = "DDG: "] 
  "1000348" -> "1000347"  [ label = "DDG: 0"] 
  "1000283" -> "1000347"  [ label = "DDG: "] 
  "1000283" -> "1000348"  [ label = "DDG: "] 
  "1000283" -> "1000290"  [ label = "DDG: "] 
  "1000283" -> "1000293"  [ label = "DDG: "] 
  "1000283" -> "1000339"  [ label = "DDG: "] 
  "1000283" -> "1000299"  [ label = "DDG: "] 
  "1000283" -> "1000307"  [ label = "DDG: "] 
  "1000302" -> "1000313"  [ label = "DDG: n"] 
  "1000283" -> "1000313"  [ label = "DDG: "] 
  "1000283" -> "1000317"  [ label = "DDG: "] 
  "1000329" -> "1000325"  [ label = "DDG: arr[i+1]-arr[i]"] 
  "1000283" -> "1000340"  [ label = "DDG: "] 
  "1000343" -> "1000340"  [ label = "DDG: n"] 
  "1000343" -> "1000340"  [ label = "DDG: 1"] 
  "1000299" -> "1000302"  [ label = "DDG: i"] 
  "1000305" -> "1000302"  [ label = "DDG: i"] 
  "1000283" -> "1000302"  [ label = "DDG: "] 
  "1000343" -> "1000302"  [ label = "DDG: n"] 
  "1000302" -> "1000305"  [ label = "DDG: i"] 
  "1000283" -> "1000305"  [ label = "DDG: "] 
  "1000317" -> "1000320"  [ label = "DDG: i"] 
  "1000323" -> "1000320"  [ label = "DDG: i"] 
  "1000283" -> "1000320"  [ label = "DDG: "] 
  "1000313" -> "1000320"  [ label = "DDG: n"] 
  "1000283" -> "1000323"  [ label = "DDG: "] 
  "1000320" -> "1000323"  [ label = "DDG: i"] 
  "1000343" -> "1000342"  [ label = "DDG: n"] 
  "1000343" -> "1000342"  [ label = "DDG: 1"] 
  "1000283" -> "1000342"  [ label = "DDG: "] 
  "1000330" -> "1000329"  [ label = "DDG: arr[i]"] 
  "1000330" -> "1000329"  [ label = "DDG: arr[i+1]"] 
  "1000283" -> "1000343"  [ label = "DDG: "] 
  "1000320" -> "1000343"  [ label = "DDG: n"] 
  "1000320" -> "1000333"  [ label = "DDG: i"] 
  "1000283" -> "1000333"  [ label = "DDG: "] 
  "1000290" -> "1000342"  [ label = "CDG: "] 
  "1000290" -> "1000293"  [ label = "CDG: "] 
  "1000290" -> "1000340"  [ label = "CDG: "] 
  "1000290" -> "1000302"  [ label = "CDG: "] 
  "1000290" -> "1000290"  [ label = "CDG: "] 
  "1000290" -> "1000313"  [ label = "CDG: "] 
  "1000290" -> "1000299"  [ label = "CDG: "] 
  "1000290" -> "1000343"  [ label = "CDG: "] 
  "1000290" -> "1000320"  [ label = "CDG: "] 
  "1000290" -> "1000317"  [ label = "CDG: "] 
  "1000290" -> "1000295"  [ label = "CDG: "] 
  "1000290" -> "1000339"  [ label = "CDG: "] 
  "1000302" -> "1000305"  [ label = "CDG: "] 
  "1000302" -> "1000307"  [ label = "CDG: "] 
  "1000302" -> "1000310"  [ label = "CDG: "] 
  "1000302" -> "1000302"  [ label = "CDG: "] 
  "1000302" -> "1000309"  [ label = "CDG: "] 
  "1000320" -> "1000333"  [ label = "CDG: "] 
  "1000320" -> "1000323"  [ label = "CDG: "] 
  "1000320" -> "1000326"  [ label = "CDG: "] 
  "1000320" -> "1000330"  [ label = "CDG: "] 
  "1000320" -> "1000336"  [ label = "CDG: "] 
  "1000320" -> "1000329"  [ label = "CDG: "] 
  "1000320" -> "1000331"  [ label = "CDG: "] 
  "1000320" -> "1000325"  [ label = "CDG: "] 
  "1000320" -> "1000320"  [ label = "CDG: "] 
}
