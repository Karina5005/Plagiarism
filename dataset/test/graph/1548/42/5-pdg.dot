digraph "solve" {  
"1000265" [label = "(METHOD,solve)" ]
"1000390" [label = "(METHOD_RETURN,void)" ]
"1000267" [label = "(calcFac,calcFac())" ]
"1000268" [label = "(<operator>.assignment,inv3 = fpow(3))" ]
"1000272" [label = "(<operator>.assignment,ans[0][0] = ans[0][1] = ans[0][2] = n + 1)" ]
"1000295" [label = "(<operator>.assignment,i = 1)" ]
"1000298" [label = "(<operator>.lessEqualsThan,i <= 3 * n)" ]
"1000303" [label = "(<operator>.preIncrement,++i)" ]
"1000368" [label = "(<operator>.assignment,i = 0)" ]
"1000371" [label = "(<operator>.lessThan,i < q)" ]
"1000374" [label = "(<operator>.preIncrement,++i)" ]
"1000270" [label = "(fpow,fpow(3))" ]
"1000278" [label = "(<operator>.assignment,ans[0][1] = ans[0][2] = n + 1)" ]
"1000307" [label = "(<operator>.assignment,s = choose(3 * n + 3, i + 1))" ]
"1000319" [label = "(<operator>.assignment,p = ans[i - 1][0])" ]
"1000329" [label = "(<operator>.assignment,q = ans[i - 1][1])" ]
"1000338" [label = "(<operator>.assignment,ans[i][1] = gmod(ans[i][0] + p))" ]
"1000352" [label = "(<operator>.assignment,ans[i][2] = gmod(ans[i][1] + q))" ]
"1000378" [label = "(<operator>.arithmeticShiftRight,cin >> x)" ]
"1000381" [label = "(<operator>.shiftLeft,cout << ans[x][0] << \"\n\")" ]
"1000284" [label = "(<operator>.assignment,ans[0][2] = n + 1)" ]
"1000300" [label = "(<operator>.multiplication,3 * n)" ]
"1000290" [label = "(<operator>.addition,n + 1)" ]
"1000309" [label = "(choose,choose(3 * n + 3, i + 1))" ]
"1000344" [label = "(gmod,gmod(ans[i][0] + p))" ]
"1000358" [label = "(gmod,gmod(ans[i][1] + q))" ]
"1000383" [label = "(<operator>.shiftLeft,ans[x][0] << \"\n\")" ]
"1000310" [label = "(<operator>.addition,3 * n + 3)" ]
"1000315" [label = "(<operator>.addition,i + 1)" ]
"1000345" [label = "(<operator>.addition,ans[i][0] + p)" ]
"1000359" [label = "(<operator>.addition,ans[i][1] + q)" ]
"1000311" [label = "(<operator>.multiplication,3 * n)" ]
"1000324" [label = "(<operator>.subtraction,i - 1)" ]
"1000334" [label = "(<operator>.subtraction,i - 1)" ]
"1000321" [label = "(<operator>.indirectIndexAccess,ans[i - 1][0])" ]
"1000331" [label = "(<operator>.indirectIndexAccess,ans[i - 1][1])" ]
"1000339" [label = "(<operator>.indirectIndexAccess,ans[i][1])" ]
"1000353" [label = "(<operator>.indirectIndexAccess,ans[i][2])" ]
"1000322" [label = "(<operator>.indirectIndexAccess,ans[i - 1])" ]
"1000332" [label = "(<operator>.indirectIndexAccess,ans[i - 1])" ]
"1000340" [label = "(<operator>.indirectIndexAccess,ans[i])" ]
"1000354" [label = "(<operator>.indirectIndexAccess,ans[i])" ]
"1000384" [label = "(<operator>.indirectIndexAccess,ans[x][0])" ]
"1000346" [label = "(<operator>.indirectIndexAccess,ans[i][0])" ]
"1000360" [label = "(<operator>.indirectIndexAccess,ans[i][1])" ]
"1000385" [label = "(<operator>.indirectIndexAccess,ans[x])" ]
"1000347" [label = "(<operator>.indirectIndexAccess,ans[i])" ]
"1000361" [label = "(<operator>.indirectIndexAccess,ans[i])" ]
  "1000267" -> "1000390"  [ label = "DDG: calcFac()"] 
  "1000268" -> "1000390"  [ label = "DDG: fpow(3)"] 
  "1000272" -> "1000390"  [ label = "DDG: ans[0][0]"] 
  "1000278" -> "1000390"  [ label = "DDG: ans[0][1]"] 
  "1000284" -> "1000390"  [ label = "DDG: ans[0][2]"] 
  "1000284" -> "1000390"  [ label = "DDG: n + 1"] 
  "1000300" -> "1000390"  [ label = "DDG: n"] 
  "1000298" -> "1000390"  [ label = "DDG: 3 * n"] 
  "1000298" -> "1000390"  [ label = "DDG: i <= 3 * n"] 
  "1000371" -> "1000390"  [ label = "DDG: i"] 
  "1000371" -> "1000390"  [ label = "DDG: q"] 
  "1000371" -> "1000390"  [ label = "DDG: i < q"] 
  "1000378" -> "1000390"  [ label = "DDG: x"] 
  "1000378" -> "1000390"  [ label = "DDG: cin >> x"] 
  "1000383" -> "1000390"  [ label = "DDG: ans[x][0]"] 
  "1000381" -> "1000390"  [ label = "DDG: ans[x][0] << \"\n\""] 
  "1000381" -> "1000390"  [ label = "DDG: cout << ans[x][0] << \"\n\""] 
  "1000307" -> "1000390"  [ label = "DDG: s"] 
  "1000309" -> "1000390"  [ label = "DDG: 3 * n + 3"] 
  "1000309" -> "1000390"  [ label = "DDG: i + 1"] 
  "1000307" -> "1000390"  [ label = "DDG: choose(3 * n + 3, i + 1)"] 
  "1000319" -> "1000390"  [ label = "DDG: ans[i - 1][0]"] 
  "1000329" -> "1000390"  [ label = "DDG: ans[i - 1][1]"] 
  "1000345" -> "1000390"  [ label = "DDG: ans[i][0]"] 
  "1000345" -> "1000390"  [ label = "DDG: p"] 
  "1000344" -> "1000390"  [ label = "DDG: ans[i][0] + p"] 
  "1000338" -> "1000390"  [ label = "DDG: gmod(ans[i][0] + p)"] 
  "1000352" -> "1000390"  [ label = "DDG: ans[i][2]"] 
  "1000359" -> "1000390"  [ label = "DDG: ans[i][1]"] 
  "1000358" -> "1000390"  [ label = "DDG: ans[i][1] + q"] 
  "1000352" -> "1000390"  [ label = "DDG: gmod(ans[i][1] + q)"] 
  "1000378" -> "1000390"  [ label = "DDG: cin"] 
  "1000268" -> "1000390"  [ label = "DDG: inv3"] 
  "1000381" -> "1000390"  [ label = "DDG: cout"] 
  "1000265" -> "1000267"  [ label = "DDG: "] 
  "1000270" -> "1000268"  [ label = "DDG: 3"] 
  "1000265" -> "1000268"  [ label = "DDG: "] 
  "1000278" -> "1000272"  [ label = "DDG: ans[0][1]"] 
  "1000265" -> "1000295"  [ label = "DDG: "] 
  "1000265" -> "1000368"  [ label = "DDG: "] 
  "1000265" -> "1000270"  [ label = "DDG: "] 
  "1000284" -> "1000278"  [ label = "DDG: ans[0][2]"] 
  "1000265" -> "1000278"  [ label = "DDG: "] 
  "1000295" -> "1000298"  [ label = "DDG: i"] 
  "1000303" -> "1000298"  [ label = "DDG: i"] 
  "1000265" -> "1000298"  [ label = "DDG: "] 
  "1000300" -> "1000298"  [ label = "DDG: n"] 
  "1000300" -> "1000298"  [ label = "DDG: 3"] 
  "1000334" -> "1000303"  [ label = "DDG: i"] 
  "1000265" -> "1000303"  [ label = "DDG: "] 
  "1000309" -> "1000307"  [ label = "DDG: 3 * n + 3"] 
  "1000309" -> "1000307"  [ label = "DDG: i + 1"] 
  "1000344" -> "1000338"  [ label = "DDG: ans[i][0] + p"] 
  "1000358" -> "1000352"  [ label = "DDG: ans[i][1] + q"] 
  "1000368" -> "1000371"  [ label = "DDG: i"] 
  "1000374" -> "1000371"  [ label = "DDG: i"] 
  "1000265" -> "1000371"  [ label = "DDG: "] 
  "1000329" -> "1000371"  [ label = "DDG: q"] 
  "1000371" -> "1000374"  [ label = "DDG: i"] 
  "1000265" -> "1000374"  [ label = "DDG: "] 
  "1000265" -> "1000284"  [ label = "DDG: "] 
  "1000265" -> "1000300"  [ label = "DDG: "] 
  "1000311" -> "1000300"  [ label = "DDG: n"] 
  "1000265" -> "1000307"  [ label = "DDG: "] 
  "1000265" -> "1000319"  [ label = "DDG: "] 
  "1000265" -> "1000329"  [ label = "DDG: "] 
  "1000265" -> "1000378"  [ label = "DDG: "] 
  "1000265" -> "1000381"  [ label = "DDG: "] 
  "1000383" -> "1000381"  [ label = "DDG: \"\n\""] 
  "1000383" -> "1000381"  [ label = "DDG: ans[x][0]"] 
  "1000265" -> "1000290"  [ label = "DDG: "] 
  "1000265" -> "1000309"  [ label = "DDG: "] 
  "1000298" -> "1000309"  [ label = "DDG: i"] 
  "1000311" -> "1000309"  [ label = "DDG: 3"] 
  "1000311" -> "1000309"  [ label = "DDG: n"] 
  "1000319" -> "1000344"  [ label = "DDG: p"] 
  "1000265" -> "1000344"  [ label = "DDG: "] 
  "1000338" -> "1000358"  [ label = "DDG: ans[i][1]"] 
  "1000329" -> "1000358"  [ label = "DDG: q"] 
  "1000265" -> "1000358"  [ label = "DDG: "] 
  "1000265" -> "1000383"  [ label = "DDG: "] 
  "1000311" -> "1000310"  [ label = "DDG: 3"] 
  "1000311" -> "1000310"  [ label = "DDG: n"] 
  "1000265" -> "1000310"  [ label = "DDG: "] 
  "1000298" -> "1000315"  [ label = "DDG: i"] 
  "1000265" -> "1000315"  [ label = "DDG: "] 
  "1000319" -> "1000345"  [ label = "DDG: p"] 
  "1000265" -> "1000345"  [ label = "DDG: "] 
  "1000338" -> "1000359"  [ label = "DDG: ans[i][1]"] 
  "1000329" -> "1000359"  [ label = "DDG: q"] 
  "1000265" -> "1000359"  [ label = "DDG: "] 
  "1000265" -> "1000311"  [ label = "DDG: "] 
  "1000300" -> "1000311"  [ label = "DDG: n"] 
  "1000265" -> "1000324"  [ label = "DDG: "] 
  "1000298" -> "1000324"  [ label = "DDG: i"] 
  "1000324" -> "1000334"  [ label = "DDG: i"] 
  "1000265" -> "1000334"  [ label = "DDG: "] 
  "1000298" -> "1000303"  [ label = "CDG: "] 
  "1000298" -> "1000332"  [ label = "CDG: "] 
  "1000298" -> "1000315"  [ label = "CDG: "] 
  "1000298" -> "1000340"  [ label = "CDG: "] 
  "1000298" -> "1000344"  [ label = "CDG: "] 
  "1000298" -> "1000307"  [ label = "CDG: "] 
  "1000298" -> "1000359"  [ label = "CDG: "] 
  "1000298" -> "1000310"  [ label = "CDG: "] 
  "1000298" -> "1000324"  [ label = "CDG: "] 
  "1000298" -> "1000298"  [ label = "CDG: "] 
  "1000298" -> "1000345"  [ label = "CDG: "] 
  "1000298" -> "1000321"  [ label = "CDG: "] 
  "1000298" -> "1000360"  [ label = "CDG: "] 
  "1000298" -> "1000354"  [ label = "CDG: "] 
  "1000298" -> "1000353"  [ label = "CDG: "] 
  "1000298" -> "1000338"  [ label = "CDG: "] 
  "1000298" -> "1000309"  [ label = "CDG: "] 
  "1000298" -> "1000319"  [ label = "CDG: "] 
  "1000298" -> "1000346"  [ label = "CDG: "] 
  "1000298" -> "1000329"  [ label = "CDG: "] 
  "1000298" -> "1000331"  [ label = "CDG: "] 
  "1000298" -> "1000361"  [ label = "CDG: "] 
  "1000298" -> "1000300"  [ label = "CDG: "] 
  "1000298" -> "1000347"  [ label = "CDG: "] 
  "1000298" -> "1000358"  [ label = "CDG: "] 
  "1000298" -> "1000311"  [ label = "CDG: "] 
  "1000298" -> "1000334"  [ label = "CDG: "] 
  "1000298" -> "1000352"  [ label = "CDG: "] 
  "1000298" -> "1000322"  [ label = "CDG: "] 
  "1000298" -> "1000339"  [ label = "CDG: "] 
  "1000371" -> "1000371"  [ label = "CDG: "] 
  "1000371" -> "1000385"  [ label = "CDG: "] 
  "1000371" -> "1000384"  [ label = "CDG: "] 
  "1000371" -> "1000383"  [ label = "CDG: "] 
  "1000371" -> "1000374"  [ label = "CDG: "] 
  "1000371" -> "1000378"  [ label = "CDG: "] 
  "1000371" -> "1000381"  [ label = "CDG: "] 
}
