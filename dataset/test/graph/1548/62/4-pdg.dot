digraph "main" {  
"1000188" [label = "(METHOD,main)" ]
"1000325" [label = "(METHOD_RETURN,int)" ]
"1000190" [label = "(ios_base::sync_with_stdio,ios_base::sync_with_stdio(0))" ]
"1000192" [label = "(cin.tie,cin.tie(0))" ]
"1000194" [label = "(cout.tie,cout.tie(0))" ]
"1000197" [label = "(<operator>.arithmeticShiftRight,cin >> t)" ]
"1000201" [label = "(<operator>.postDecrement,t--)" ]
"1000205" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000226" [label = "(<operator>.assignment,ans = 1)" ]
"1000230" [label = "(<operator>.assignment,r = 0)" ]
"1000320" [label = "(<operator>.shiftLeft,cout << ans << '\n')" ]
"1000211" [label = "(<operator>.assignment,i = 0)" ]
"1000214" [label = "(<operator>.lessThan,i < n)" ]
"1000217" [label = "(<operator>.postIncrement,i++)" ]
"1000235" [label = "(<operator>.assignment,i = 0)" ]
"1000238" [label = "(<operator>.lessThan,i < n-1)" ]
"1000243" [label = "(<operator>.postIncrement,i++)" ]
"1000220" [label = "(<operator>.arithmeticShiftRight,cin >> dat[i])" ]
"1000322" [label = "(<operator>.shiftLeft,ans << '\n')" ]
"1000240" [label = "(<operator>.subtraction,n-1)" ]
"1000247" [label = "(<operator>.lessThan,r < n-1)" ]
"1000313" [label = "(<operator>.notEquals,r != i)" ]
"1000316" [label = "(rem,rem())" ]
"1000318" [label = "(<operator>.postIncrement,r++)" ]
"1000249" [label = "(<operator>.subtraction,n-1)" ]
"1000254" [label = "(<operator>.logicalOr,(i == r && abs(dat[r+1]-dat[r]) != 1) || __gcd((ll)abs(dat[r+1]-dat[r]), get_gc()) != 1)" ]
"1000288" [label = "(add,add(abs(dat[r+1]-dat[r])))" ]
"1000299" [label = "(<operator>.postIncrement,r++)" ]
"1000301" [label = "(<operator>.assignment,ans = max(ans, r-i+1))" ]
"1000255" [label = "(<operator>.logicalAnd,i == r && abs(dat[r+1]-dat[r]) != 1)" ]
"1000271" [label = "(<operator>.notEquals,__gcd((ll)abs(dat[r+1]-dat[r]), get_gc()) != 1)" ]
"1000256" [label = "(<operator>.equals,i == r)" ]
"1000259" [label = "(<operator>.notEquals,abs(dat[r+1]-dat[r]) != 1)" ]
"1000272" [label = "(__gcd,__gcd((ll)abs(dat[r+1]-dat[r]), get_gc()))" ]
"1000289" [label = "(abs,abs(dat[r+1]-dat[r]))" ]
"1000303" [label = "(max,max(ans, r-i+1))" ]
"1000260" [label = "(abs,abs(dat[r+1]-dat[r]))" ]
"1000273" [label = "(<operator>.cast,(ll)abs(dat[r+1]-dat[r]))" ]
"1000290" [label = "(<operator>.subtraction,dat[r+1]-dat[r])" ]
"1000305" [label = "(<operator>.subtraction,r-i+1)" ]
"1000261" [label = "(<operator>.subtraction,dat[r+1]-dat[r])" ]
"1000275" [label = "(abs,abs(dat[r+1]-dat[r]))" ]
"1000307" [label = "(<operator>.addition,i+1)" ]
"1000276" [label = "(<operator>.subtraction,dat[r+1]-dat[r])" ]
"1000293" [label = "(<operator>.addition,r+1)" ]
"1000264" [label = "(<operator>.addition,r+1)" ]
"1000279" [label = "(<operator>.addition,r+1)" ]
"1000222" [label = "(<operator>.indirectIndexAccess,dat[i])" ]
"1000285" [label = "(get_gc,get_gc())" ]
"1000274" [label = "(UNKNOWN,ll,ll)" ]
"1000291" [label = "(<operator>.indirectIndexAccess,dat[r+1])" ]
"1000296" [label = "(<operator>.indirectIndexAccess,dat[r])" ]
"1000262" [label = "(<operator>.indirectIndexAccess,dat[r+1])" ]
"1000267" [label = "(<operator>.indirectIndexAccess,dat[r])" ]
"1000277" [label = "(<operator>.indirectIndexAccess,dat[r+1])" ]
"1000282" [label = "(<operator>.indirectIndexAccess,dat[r])" ]
  "1000190" -> "1000325"  [ label = "DDG: ios_base::sync_with_stdio(0)"] 
  "1000192" -> "1000325"  [ label = "DDG: cin.tie(0)"] 
  "1000194" -> "1000325"  [ label = "DDG: cout.tie(0)"] 
  "1000197" -> "1000325"  [ label = "DDG: cin"] 
  "1000197" -> "1000325"  [ label = "DDG: cin >> t"] 
  "1000201" -> "1000325"  [ label = "DDG: t"] 
  "1000205" -> "1000325"  [ label = "DDG: cin"] 
  "1000205" -> "1000325"  [ label = "DDG: cin >> n"] 
  "1000214" -> "1000325"  [ label = "DDG: i < n"] 
  "1000226" -> "1000325"  [ label = "DDG: ans"] 
  "1000230" -> "1000325"  [ label = "DDG: r"] 
  "1000238" -> "1000325"  [ label = "DDG: i"] 
  "1000240" -> "1000325"  [ label = "DDG: n"] 
  "1000238" -> "1000325"  [ label = "DDG: n-1"] 
  "1000238" -> "1000325"  [ label = "DDG: i < n-1"] 
  "1000249" -> "1000325"  [ label = "DDG: n"] 
  "1000247" -> "1000325"  [ label = "DDG: n-1"] 
  "1000247" -> "1000325"  [ label = "DDG: r < n-1"] 
  "1000256" -> "1000325"  [ label = "DDG: i"] 
  "1000256" -> "1000325"  [ label = "DDG: r"] 
  "1000255" -> "1000325"  [ label = "DDG: i == r"] 
  "1000264" -> "1000325"  [ label = "DDG: r"] 
  "1000261" -> "1000325"  [ label = "DDG: dat[r+1]"] 
  "1000261" -> "1000325"  [ label = "DDG: dat[r]"] 
  "1000260" -> "1000325"  [ label = "DDG: dat[r+1]-dat[r]"] 
  "1000259" -> "1000325"  [ label = "DDG: abs(dat[r+1]-dat[r])"] 
  "1000255" -> "1000325"  [ label = "DDG: abs(dat[r+1]-dat[r]) != 1"] 
  "1000254" -> "1000325"  [ label = "DDG: i == r && abs(dat[r+1]-dat[r]) != 1"] 
  "1000279" -> "1000325"  [ label = "DDG: r"] 
  "1000276" -> "1000325"  [ label = "DDG: dat[r+1]"] 
  "1000276" -> "1000325"  [ label = "DDG: dat[r]"] 
  "1000275" -> "1000325"  [ label = "DDG: dat[r+1]-dat[r]"] 
  "1000273" -> "1000325"  [ label = "DDG: abs(dat[r+1]-dat[r])"] 
  "1000272" -> "1000325"  [ label = "DDG: (ll)abs(dat[r+1]-dat[r])"] 
  "1000272" -> "1000325"  [ label = "DDG: get_gc()"] 
  "1000271" -> "1000325"  [ label = "DDG: __gcd((ll)abs(dat[r+1]-dat[r]), get_gc())"] 
  "1000254" -> "1000325"  [ label = "DDG: __gcd((ll)abs(dat[r+1]-dat[r]), get_gc()) != 1"] 
  "1000254" -> "1000325"  [ label = "DDG: (i == r && abs(dat[r+1]-dat[r]) != 1) || __gcd((ll)abs(dat[r+1]-dat[r]), get_gc()) != 1"] 
  "1000322" -> "1000325"  [ label = "DDG: ans"] 
  "1000320" -> "1000325"  [ label = "DDG: ans << '\n'"] 
  "1000320" -> "1000325"  [ label = "DDG: cout << ans << '\n'"] 
  "1000313" -> "1000325"  [ label = "DDG: r"] 
  "1000313" -> "1000325"  [ label = "DDG: r != i"] 
  "1000318" -> "1000325"  [ label = "DDG: r"] 
  "1000316" -> "1000325"  [ label = "DDG: rem()"] 
  "1000290" -> "1000325"  [ label = "DDG: dat[r+1]"] 
  "1000290" -> "1000325"  [ label = "DDG: dat[r]"] 
  "1000289" -> "1000325"  [ label = "DDG: dat[r+1]-dat[r]"] 
  "1000288" -> "1000325"  [ label = "DDG: abs(dat[r+1]-dat[r])"] 
  "1000288" -> "1000325"  [ label = "DDG: add(abs(dat[r+1]-dat[r]))"] 
  "1000301" -> "1000325"  [ label = "DDG: ans"] 
  "1000305" -> "1000325"  [ label = "DDG: r"] 
  "1000307" -> "1000325"  [ label = "DDG: i"] 
  "1000305" -> "1000325"  [ label = "DDG: i+1"] 
  "1000303" -> "1000325"  [ label = "DDG: r-i+1"] 
  "1000301" -> "1000325"  [ label = "DDG: max(ans, r-i+1)"] 
  "1000220" -> "1000325"  [ label = "DDG: cin"] 
  "1000220" -> "1000325"  [ label = "DDG: dat[i]"] 
  "1000220" -> "1000325"  [ label = "DDG: cin >> dat[i]"] 
  "1000320" -> "1000325"  [ label = "DDG: cout"] 
  "1000188" -> "1000190"  [ label = "DDG: "] 
  "1000188" -> "1000192"  [ label = "DDG: "] 
  "1000188" -> "1000194"  [ label = "DDG: "] 
  "1000188" -> "1000197"  [ label = "DDG: "] 
  "1000197" -> "1000201"  [ label = "DDG: t"] 
  "1000188" -> "1000201"  [ label = "DDG: "] 
  "1000188" -> "1000226"  [ label = "DDG: "] 
  "1000188" -> "1000230"  [ label = "DDG: "] 
  "1000197" -> "1000205"  [ label = "DDG: cin"] 
  "1000220" -> "1000205"  [ label = "DDG: cin"] 
  "1000188" -> "1000205"  [ label = "DDG: "] 
  "1000240" -> "1000205"  [ label = "DDG: n"] 
  "1000249" -> "1000205"  [ label = "DDG: n"] 
  "1000188" -> "1000211"  [ label = "DDG: "] 
  "1000188" -> "1000235"  [ label = "DDG: "] 
  "1000188" -> "1000320"  [ label = "DDG: "] 
  "1000322" -> "1000320"  [ label = "DDG: '\n'"] 
  "1000322" -> "1000320"  [ label = "DDG: ans"] 
  "1000211" -> "1000214"  [ label = "DDG: i"] 
  "1000217" -> "1000214"  [ label = "DDG: i"] 
  "1000188" -> "1000214"  [ label = "DDG: "] 
  "1000205" -> "1000214"  [ label = "DDG: n"] 
  "1000214" -> "1000217"  [ label = "DDG: i"] 
  "1000188" -> "1000217"  [ label = "DDG: "] 
  "1000235" -> "1000238"  [ label = "DDG: i"] 
  "1000243" -> "1000238"  [ label = "DDG: i"] 
  "1000188" -> "1000238"  [ label = "DDG: "] 
  "1000240" -> "1000238"  [ label = "DDG: 1"] 
  "1000240" -> "1000238"  [ label = "DDG: n"] 
  "1000313" -> "1000243"  [ label = "DDG: i"] 
  "1000188" -> "1000243"  [ label = "DDG: "] 
  "1000256" -> "1000243"  [ label = "DDG: i"] 
  "1000226" -> "1000322"  [ label = "DDG: ans"] 
  "1000301" -> "1000322"  [ label = "DDG: ans"] 
  "1000188" -> "1000322"  [ label = "DDG: "] 
  "1000205" -> "1000220"  [ label = "DDG: cin"] 
  "1000188" -> "1000220"  [ label = "DDG: "] 
  "1000214" -> "1000240"  [ label = "DDG: n"] 
  "1000249" -> "1000240"  [ label = "DDG: n"] 
  "1000188" -> "1000240"  [ label = "DDG: "] 
  "1000188" -> "1000316"  [ label = "DDG: "] 
  "1000230" -> "1000247"  [ label = "DDG: r"] 
  "1000313" -> "1000247"  [ label = "DDG: r"] 
  "1000318" -> "1000247"  [ label = "DDG: r"] 
  "1000305" -> "1000247"  [ label = "DDG: r"] 
  "1000188" -> "1000247"  [ label = "DDG: "] 
  "1000249" -> "1000247"  [ label = "DDG: n"] 
  "1000249" -> "1000247"  [ label = "DDG: 1"] 
  "1000247" -> "1000313"  [ label = "DDG: r"] 
  "1000256" -> "1000313"  [ label = "DDG: r"] 
  "1000188" -> "1000313"  [ label = "DDG: "] 
  "1000238" -> "1000313"  [ label = "DDG: i"] 
  "1000256" -> "1000313"  [ label = "DDG: i"] 
  "1000240" -> "1000249"  [ label = "DDG: n"] 
  "1000188" -> "1000249"  [ label = "DDG: "] 
  "1000313" -> "1000318"  [ label = "DDG: r"] 
  "1000188" -> "1000318"  [ label = "DDG: "] 
  "1000255" -> "1000254"  [ label = "DDG: i == r"] 
  "1000255" -> "1000254"  [ label = "DDG: abs(dat[r+1]-dat[r]) != 1"] 
  "1000271" -> "1000254"  [ label = "DDG: 1"] 
  "1000271" -> "1000254"  [ label = "DDG: __gcd((ll)abs(dat[r+1]-dat[r]), get_gc())"] 
  "1000303" -> "1000301"  [ label = "DDG: r-i+1"] 
  "1000303" -> "1000301"  [ label = "DDG: ans"] 
  "1000256" -> "1000255"  [ label = "DDG: r"] 
  "1000256" -> "1000255"  [ label = "DDG: i"] 
  "1000259" -> "1000255"  [ label = "DDG: 1"] 
  "1000259" -> "1000255"  [ label = "DDG: abs(dat[r+1]-dat[r])"] 
  "1000272" -> "1000271"  [ label = "DDG: (ll)abs(dat[r+1]-dat[r])"] 
  "1000272" -> "1000271"  [ label = "DDG: get_gc()"] 
  "1000188" -> "1000271"  [ label = "DDG: "] 
  "1000289" -> "1000288"  [ label = "DDG: dat[r+1]-dat[r]"] 
  "1000188" -> "1000299"  [ label = "DDG: "] 
  "1000256" -> "1000299"  [ label = "DDG: r"] 
  "1000188" -> "1000301"  [ label = "DDG: "] 
  "1000238" -> "1000256"  [ label = "DDG: i"] 
  "1000188" -> "1000256"  [ label = "DDG: "] 
  "1000247" -> "1000256"  [ label = "DDG: r"] 
  "1000260" -> "1000259"  [ label = "DDG: dat[r+1]-dat[r]"] 
  "1000188" -> "1000259"  [ label = "DDG: "] 
  "1000273" -> "1000272"  [ label = "DDG: abs(dat[r+1]-dat[r])"] 
  "1000188" -> "1000272"  [ label = "DDG: "] 
  "1000290" -> "1000289"  [ label = "DDG: dat[r]"] 
  "1000290" -> "1000289"  [ label = "DDG: dat[r+1]"] 
  "1000226" -> "1000303"  [ label = "DDG: ans"] 
  "1000301" -> "1000303"  [ label = "DDG: ans"] 
  "1000188" -> "1000303"  [ label = "DDG: "] 
  "1000305" -> "1000303"  [ label = "DDG: i+1"] 
  "1000305" -> "1000303"  [ label = "DDG: r"] 
  "1000261" -> "1000260"  [ label = "DDG: dat[r+1]"] 
  "1000261" -> "1000260"  [ label = "DDG: dat[r]"] 
  "1000275" -> "1000273"  [ label = "DDG: dat[r+1]-dat[r]"] 
  "1000261" -> "1000290"  [ label = "DDG: dat[r+1]"] 
  "1000276" -> "1000290"  [ label = "DDG: dat[r+1]"] 
  "1000261" -> "1000290"  [ label = "DDG: dat[r]"] 
  "1000276" -> "1000290"  [ label = "DDG: dat[r]"] 
  "1000299" -> "1000305"  [ label = "DDG: r"] 
  "1000188" -> "1000305"  [ label = "DDG: "] 
  "1000256" -> "1000305"  [ label = "DDG: i"] 
  "1000276" -> "1000261"  [ label = "DDG: dat[r+1]"] 
  "1000290" -> "1000261"  [ label = "DDG: dat[r+1]"] 
  "1000276" -> "1000261"  [ label = "DDG: dat[r]"] 
  "1000290" -> "1000261"  [ label = "DDG: dat[r]"] 
  "1000276" -> "1000275"  [ label = "DDG: dat[r]"] 
  "1000276" -> "1000275"  [ label = "DDG: dat[r+1]"] 
  "1000256" -> "1000307"  [ label = "DDG: i"] 
  "1000188" -> "1000307"  [ label = "DDG: "] 
  "1000261" -> "1000276"  [ label = "DDG: dat[r+1]"] 
  "1000290" -> "1000276"  [ label = "DDG: dat[r+1]"] 
  "1000261" -> "1000276"  [ label = "DDG: dat[r]"] 
  "1000290" -> "1000276"  [ label = "DDG: dat[r]"] 
  "1000256" -> "1000293"  [ label = "DDG: r"] 
  "1000188" -> "1000293"  [ label = "DDG: "] 
  "1000256" -> "1000264"  [ label = "DDG: r"] 
  "1000188" -> "1000264"  [ label = "DDG: "] 
  "1000256" -> "1000279"  [ label = "DDG: r"] 
  "1000188" -> "1000279"  [ label = "DDG: "] 
  "1000201" -> "1000211"  [ label = "CDG: "] 
  "1000201" -> "1000238"  [ label = "CDG: "] 
  "1000201" -> "1000235"  [ label = "CDG: "] 
  "1000201" -> "1000214"  [ label = "CDG: "] 
  "1000201" -> "1000240"  [ label = "CDG: "] 
  "1000201" -> "1000226"  [ label = "CDG: "] 
  "1000201" -> "1000230"  [ label = "CDG: "] 
  "1000201" -> "1000205"  [ label = "CDG: "] 
  "1000214" -> "1000222"  [ label = "CDG: "] 
  "1000214" -> "1000220"  [ label = "CDG: "] 
  "1000214" -> "1000214"  [ label = "CDG: "] 
  "1000214" -> "1000217"  [ label = "CDG: "] 
  "1000238" -> "1000201"  [ label = "CDG: "] 
  "1000238" -> "1000320"  [ label = "CDG: "] 
  "1000238" -> "1000247"  [ label = "CDG: "] 
  "1000238" -> "1000249"  [ label = "CDG: "] 
  "1000238" -> "1000322"  [ label = "CDG: "] 
  "1000247" -> "1000238"  [ label = "CDG: "] 
  "1000247" -> "1000255"  [ label = "CDG: "] 
  "1000247" -> "1000243"  [ label = "CDG: "] 
  "1000247" -> "1000313"  [ label = "CDG: "] 
  "1000247" -> "1000254"  [ label = "CDG: "] 
  "1000247" -> "1000240"  [ label = "CDG: "] 
  "1000247" -> "1000256"  [ label = "CDG: "] 
  "1000313" -> "1000318"  [ label = "CDG: "] 
  "1000313" -> "1000316"  [ label = "CDG: "] 
  "1000254" -> "1000305"  [ label = "CDG: "] 
  "1000254" -> "1000293"  [ label = "CDG: "] 
  "1000254" -> "1000291"  [ label = "CDG: "] 
  "1000254" -> "1000289"  [ label = "CDG: "] 
  "1000254" -> "1000288"  [ label = "CDG: "] 
  "1000254" -> "1000303"  [ label = "CDG: "] 
  "1000254" -> "1000307"  [ label = "CDG: "] 
  "1000254" -> "1000290"  [ label = "CDG: "] 
  "1000254" -> "1000299"  [ label = "CDG: "] 
  "1000254" -> "1000296"  [ label = "CDG: "] 
  "1000254" -> "1000301"  [ label = "CDG: "] 
  "1000254" -> "1000238"  [ label = "CDG: "] 
  "1000254" -> "1000243"  [ label = "CDG: "] 
  "1000254" -> "1000201"  [ label = "CDG: "] 
  "1000254" -> "1000240"  [ label = "CDG: "] 
  "1000254" -> "1000247"  [ label = "CDG: "] 
  "1000254" -> "1000249"  [ label = "CDG: "] 
  "1000254" -> "1000313"  [ label = "CDG: "] 
  "1000254" -> "1000320"  [ label = "CDG: "] 
  "1000254" -> "1000322"  [ label = "CDG: "] 
  "1000255" -> "1000285"  [ label = "CDG: "] 
  "1000255" -> "1000276"  [ label = "CDG: "] 
  "1000255" -> "1000274"  [ label = "CDG: "] 
  "1000255" -> "1000277"  [ label = "CDG: "] 
  "1000255" -> "1000282"  [ label = "CDG: "] 
  "1000255" -> "1000273"  [ label = "CDG: "] 
  "1000255" -> "1000279"  [ label = "CDG: "] 
  "1000255" -> "1000272"  [ label = "CDG: "] 
  "1000255" -> "1000271"  [ label = "CDG: "] 
  "1000255" -> "1000275"  [ label = "CDG: "] 
  "1000256" -> "1000260"  [ label = "CDG: "] 
  "1000256" -> "1000259"  [ label = "CDG: "] 
  "1000256" -> "1000261"  [ label = "CDG: "] 
  "1000256" -> "1000262"  [ label = "CDG: "] 
  "1000256" -> "1000267"  [ label = "CDG: "] 
  "1000256" -> "1000264"  [ label = "CDG: "] 
}
