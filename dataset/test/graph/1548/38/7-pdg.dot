digraph "main" {  
"1000456" [label = "(METHOD,main)" ]
"1000577" [label = "(METHOD_RETURN,int)" ]
"1000459" [label = "(<operator>.assignment,T=read())" ]
"1000575" [label = "(RETURN,return 0;,return 0;)" ]
"1000463" [label = "(<operator>.postDecrement,T--)" ]
"1000576" [label = "(LITERAL,0,return 0;)" ]
"1000466" [label = "(<operator>.assignment,n=read())" ]
"1000517" [label = "(tr.build,tr.build(1,2,n))" ]
"1000522" [label = "(<operator>.assignment,ans=1)" ]
"1000572" [label = "(printf,printf(\"%d\n\",ans))" ]
"1000471" [label = "(<operator>.assignment,i=1)" ]
"1000474" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000477" [label = "(<operator>.postIncrement,i++)" ]
"1000479" [label = "(<operator>.assignment,p[i]=read())" ]
"1000486" [label = "(<operator>.assignment,i=n)" ]
"1000489" [label = "(<operator>.greaterEqualsThan,i>=2)" ]
"1000492" [label = "(<operator>.postDecrement,i--)" ]
"1000510" [label = "(<operator>.equals,n==1)" ]
"1000527" [label = "(<operator>.assignment,i=2)" ]
"1000530" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000533" [label = "(<operator>.postIncrement,i++)" ]
"1000495" [label = "(<operator>.assignment,p[i]=abs(p[i]-p[i-1]))" ]
"1000514" [label = "(printf,printf(\"1\n\"))" ]
"1000537" [label = "(<operator>.assignment,res=tr.upp(1,0,2,n))" ]
"1000555" [label = "(<operator>.assignment,ans=max(ans,res-i+1+1))" ]
"1000566" [label = "(tr.modi,tr.modi(1,0,i,2,n))" ]
"1000545" [label = "(<operator>.equals,tr.ask(1,2,res,2,n)==1)" ]
"1000553" [label = "(<operator>.postDecrement,res--)" ]
"1000499" [label = "(abs,abs(p[i]-p[i-1]))" ]
"1000539" [label = "(tr.upp,tr.upp(1,0,2,n))" ]
"1000557" [label = "(max,max(ans,res-i+1+1))" ]
"1000500" [label = "(<operator>.subtraction,p[i]-p[i-1])" ]
"1000546" [label = "(tr.ask,tr.ask(1,2,res,2,n))" ]
"1000559" [label = "(<operator>.subtraction,res-i+1+1)" ]
"1000561" [label = "(<operator>.addition,i+1+1)" ]
"1000506" [label = "(<operator>.subtraction,i-1)" ]
"1000563" [label = "(<operator>.addition,1+1)" ]
"1000468" [label = "(read,read())" ]
"1000480" [label = "(<operator>.indirectIndexAccess,p[i])" ]
"1000483" [label = "(read,read())" ]
"1000496" [label = "(<operator>.indirectIndexAccess,p[i])" ]
"1000501" [label = "(<operator>.indirectIndexAccess,p[i])" ]
"1000504" [label = "(<operator>.indirectIndexAccess,p[i-1])" ]
  "1000459" -> "1000577"  [ label = "DDG: read()"] 
  "1000463" -> "1000577"  [ label = "DDG: T"] 
  "1000466" -> "1000577"  [ label = "DDG: read()"] 
  "1000474" -> "1000577"  [ label = "DDG: i<=n"] 
  "1000489" -> "1000577"  [ label = "DDG: i"] 
  "1000489" -> "1000577"  [ label = "DDG: i>=2"] 
  "1000510" -> "1000577"  [ label = "DDG: n"] 
  "1000510" -> "1000577"  [ label = "DDG: n==1"] 
  "1000517" -> "1000577"  [ label = "DDG: tr.build(1,2,n)"] 
  "1000530" -> "1000577"  [ label = "DDG: i"] 
  "1000530" -> "1000577"  [ label = "DDG: n"] 
  "1000530" -> "1000577"  [ label = "DDG: i<=n"] 
  "1000572" -> "1000577"  [ label = "DDG: ans"] 
  "1000572" -> "1000577"  [ label = "DDG: printf(\"%d\n\",ans)"] 
  "1000537" -> "1000577"  [ label = "DDG: tr.upp(1,0,2,n)"] 
  "1000545" -> "1000577"  [ label = "DDG: tr.ask(1,2,res,2,n)"] 
  "1000545" -> "1000577"  [ label = "DDG: tr.ask(1,2,res,2,n)==1"] 
  "1000559" -> "1000577"  [ label = "DDG: res"] 
  "1000561" -> "1000577"  [ label = "DDG: 1+1"] 
  "1000559" -> "1000577"  [ label = "DDG: i+1+1"] 
  "1000557" -> "1000577"  [ label = "DDG: res-i+1+1"] 
  "1000555" -> "1000577"  [ label = "DDG: max(ans,res-i+1+1)"] 
  "1000566" -> "1000577"  [ label = "DDG: tr.modi(1,0,i,2,n)"] 
  "1000514" -> "1000577"  [ label = "DDG: printf(\"1\n\")"] 
  "1000495" -> "1000577"  [ label = "DDG: p[i]"] 
  "1000500" -> "1000577"  [ label = "DDG: p[i-1]"] 
  "1000499" -> "1000577"  [ label = "DDG: p[i]-p[i-1]"] 
  "1000495" -> "1000577"  [ label = "DDG: abs(p[i]-p[i-1])"] 
  "1000479" -> "1000577"  [ label = "DDG: p[i]"] 
  "1000479" -> "1000577"  [ label = "DDG: read()"] 
  "1000575" -> "1000577"  [ label = "DDG: <RET>"] 
  "1000456" -> "1000459"  [ label = "DDG: "] 
  "1000576" -> "1000575"  [ label = "DDG: 0"] 
  "1000456" -> "1000575"  [ label = "DDG: "] 
  "1000456" -> "1000576"  [ label = "DDG: "] 
  "1000459" -> "1000463"  [ label = "DDG: T"] 
  "1000456" -> "1000463"  [ label = "DDG: "] 
  "1000456" -> "1000466"  [ label = "DDG: "] 
  "1000456" -> "1000522"  [ label = "DDG: "] 
  "1000456" -> "1000471"  [ label = "DDG: "] 
  "1000456" -> "1000479"  [ label = "DDG: "] 
  "1000474" -> "1000486"  [ label = "DDG: n"] 
  "1000456" -> "1000486"  [ label = "DDG: "] 
  "1000456" -> "1000517"  [ label = "DDG: "] 
  "1000510" -> "1000517"  [ label = "DDG: n"] 
  "1000456" -> "1000527"  [ label = "DDG: "] 
  "1000456" -> "1000572"  [ label = "DDG: "] 
  "1000522" -> "1000572"  [ label = "DDG: ans"] 
  "1000555" -> "1000572"  [ label = "DDG: ans"] 
  "1000471" -> "1000474"  [ label = "DDG: i"] 
  "1000477" -> "1000474"  [ label = "DDG: i"] 
  "1000456" -> "1000474"  [ label = "DDG: "] 
  "1000466" -> "1000474"  [ label = "DDG: n"] 
  "1000474" -> "1000477"  [ label = "DDG: i"] 
  "1000456" -> "1000477"  [ label = "DDG: "] 
  "1000486" -> "1000489"  [ label = "DDG: i"] 
  "1000492" -> "1000489"  [ label = "DDG: i"] 
  "1000456" -> "1000489"  [ label = "DDG: "] 
  "1000506" -> "1000492"  [ label = "DDG: i"] 
  "1000456" -> "1000492"  [ label = "DDG: "] 
  "1000499" -> "1000495"  [ label = "DDG: p[i]-p[i-1]"] 
  "1000456" -> "1000510"  [ label = "DDG: "] 
  "1000474" -> "1000510"  [ label = "DDG: n"] 
  "1000527" -> "1000530"  [ label = "DDG: i"] 
  "1000533" -> "1000530"  [ label = "DDG: i"] 
  "1000456" -> "1000530"  [ label = "DDG: "] 
  "1000517" -> "1000530"  [ label = "DDG: n"] 
  "1000566" -> "1000530"  [ label = "DDG: n"] 
  "1000566" -> "1000533"  [ label = "DDG: i"] 
  "1000456" -> "1000533"  [ label = "DDG: "] 
  "1000539" -> "1000537"  [ label = "DDG: 1"] 
  "1000539" -> "1000537"  [ label = "DDG: 0"] 
  "1000539" -> "1000537"  [ label = "DDG: n"] 
  "1000539" -> "1000537"  [ label = "DDG: 2"] 
  "1000557" -> "1000555"  [ label = "DDG: ans"] 
  "1000557" -> "1000555"  [ label = "DDG: res-i+1+1"] 
  "1000456" -> "1000514"  [ label = "DDG: "] 
  "1000456" -> "1000537"  [ label = "DDG: "] 
  "1000456" -> "1000555"  [ label = "DDG: "] 
  "1000456" -> "1000566"  [ label = "DDG: "] 
  "1000530" -> "1000566"  [ label = "DDG: i"] 
  "1000546" -> "1000566"  [ label = "DDG: n"] 
  "1000500" -> "1000499"  [ label = "DDG: p[i-1]"] 
  "1000500" -> "1000499"  [ label = "DDG: p[i]"] 
  "1000456" -> "1000539"  [ label = "DDG: "] 
  "1000530" -> "1000539"  [ label = "DDG: n"] 
  "1000546" -> "1000545"  [ label = "DDG: 2"] 
  "1000546" -> "1000545"  [ label = "DDG: 1"] 
  "1000546" -> "1000545"  [ label = "DDG: n"] 
  "1000546" -> "1000545"  [ label = "DDG: res"] 
  "1000456" -> "1000545"  [ label = "DDG: "] 
  "1000546" -> "1000553"  [ label = "DDG: res"] 
  "1000456" -> "1000553"  [ label = "DDG: "] 
  "1000522" -> "1000557"  [ label = "DDG: ans"] 
  "1000555" -> "1000557"  [ label = "DDG: ans"] 
  "1000456" -> "1000557"  [ label = "DDG: "] 
  "1000559" -> "1000557"  [ label = "DDG: res"] 
  "1000559" -> "1000557"  [ label = "DDG: i+1+1"] 
  "1000495" -> "1000500"  [ label = "DDG: p[i]"] 
  "1000479" -> "1000500"  [ label = "DDG: p[i]"] 
  "1000456" -> "1000546"  [ label = "DDG: "] 
  "1000537" -> "1000546"  [ label = "DDG: res"] 
  "1000539" -> "1000546"  [ label = "DDG: n"] 
  "1000546" -> "1000559"  [ label = "DDG: res"] 
  "1000553" -> "1000559"  [ label = "DDG: res"] 
  "1000456" -> "1000559"  [ label = "DDG: "] 
  "1000530" -> "1000559"  [ label = "DDG: i"] 
  "1000530" -> "1000561"  [ label = "DDG: i"] 
  "1000456" -> "1000561"  [ label = "DDG: "] 
  "1000489" -> "1000506"  [ label = "DDG: i"] 
  "1000456" -> "1000506"  [ label = "DDG: "] 
  "1000456" -> "1000563"  [ label = "DDG: "] 
  "1000463" -> "1000466"  [ label = "CDG: "] 
  "1000463" -> "1000486"  [ label = "CDG: "] 
  "1000463" -> "1000474"  [ label = "CDG: "] 
  "1000463" -> "1000471"  [ label = "CDG: "] 
  "1000463" -> "1000463"  [ label = "CDG: "] 
  "1000463" -> "1000510"  [ label = "CDG: "] 
  "1000463" -> "1000468"  [ label = "CDG: "] 
  "1000463" -> "1000489"  [ label = "CDG: "] 
  "1000474" -> "1000483"  [ label = "CDG: "] 
  "1000474" -> "1000479"  [ label = "CDG: "] 
  "1000474" -> "1000477"  [ label = "CDG: "] 
  "1000474" -> "1000480"  [ label = "CDG: "] 
  "1000474" -> "1000474"  [ label = "CDG: "] 
  "1000489" -> "1000500"  [ label = "CDG: "] 
  "1000489" -> "1000495"  [ label = "CDG: "] 
  "1000489" -> "1000504"  [ label = "CDG: "] 
  "1000489" -> "1000499"  [ label = "CDG: "] 
  "1000489" -> "1000506"  [ label = "CDG: "] 
  "1000489" -> "1000492"  [ label = "CDG: "] 
  "1000489" -> "1000501"  [ label = "CDG: "] 
  "1000489" -> "1000496"  [ label = "CDG: "] 
  "1000489" -> "1000489"  [ label = "CDG: "] 
  "1000510" -> "1000514"  [ label = "CDG: "] 
  "1000510" -> "1000517"  [ label = "CDG: "] 
  "1000510" -> "1000522"  [ label = "CDG: "] 
  "1000510" -> "1000527"  [ label = "CDG: "] 
  "1000510" -> "1000530"  [ label = "CDG: "] 
  "1000510" -> "1000572"  [ label = "CDG: "] 
  "1000530" -> "1000537"  [ label = "CDG: "] 
  "1000530" -> "1000533"  [ label = "CDG: "] 
  "1000530" -> "1000545"  [ label = "CDG: "] 
  "1000530" -> "1000561"  [ label = "CDG: "] 
  "1000530" -> "1000563"  [ label = "CDG: "] 
  "1000530" -> "1000566"  [ label = "CDG: "] 
  "1000530" -> "1000559"  [ label = "CDG: "] 
  "1000530" -> "1000530"  [ label = "CDG: "] 
  "1000530" -> "1000555"  [ label = "CDG: "] 
  "1000530" -> "1000539"  [ label = "CDG: "] 
  "1000530" -> "1000546"  [ label = "CDG: "] 
  "1000530" -> "1000557"  [ label = "CDG: "] 
  "1000545" -> "1000553"  [ label = "CDG: "] 
}
