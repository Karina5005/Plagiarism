digraph "min_left" {  
"1000460" [label = "(METHOD,min_left)" ]
"1000562" [label = "(METHOD_RETURN,int)" ]
"1000461" [label = "(PARAM,int r)" ]
"1000462" [label = "(PARAM,F f)" ]
"1000464" [label = "(assert,assert(0 <= r && r <= _n))" ]
"1000472" [label = "(assert,assert(f(e())))" ]
"1000481" [label = "(<operator>.assignmentPlus,r += size)" ]
"1000485" [label = "(<operator>.assignment,sm = e())" ]
"1000560" [label = "(RETURN,return 0;,return 0;)" ]
"1000476" [label = "(<operator>.equals,r == 0)" ]
"1000479" [label = "(RETURN,return 0;,return 0;)" ]
"1000554" [label = "(<operator>.notEquals,(r & -r) != r)" ]
"1000561" [label = "(LITERAL,0,return 0;)" ]
"1000465" [label = "(<operator>.logicalAnd,0 <= r && r <= _n)" ]
"1000473" [label = "(f,f(e()))" ]
"1000480" [label = "(LITERAL,0,return 0;)" ]
"1000490" [label = "(<operator>.postDecrement,r--)" ]
"1000547" [label = "(<operator>.assignment,sm = op(d[r], sm))" ]
"1000466" [label = "(<operator>.lessEqualsThan,0 <= r)" ]
"1000469" [label = "(<operator>.lessEqualsThan,r <= _n)" ]
"1000493" [label = "(<operator>.logicalAnd,r > 1 && (r % 2))" ]
"1000500" [label = "(<operators>.assignmentArithmeticShiftRight,r >>= 1)" ]
"1000504" [label = "(<operator>.logicalNot,!f(op(d[r], sm)))" ]
"1000555" [label = "(<operator>.and,r & -r)" ]
"1000541" [label = "(RETURN,return r + 1 - size;,return r + 1 - size;)" ]
"1000549" [label = "(op,op(d[r], sm))" ]
"1000557" [label = "(<operator>.minus,-r)" ]
"1000494" [label = "(<operator>.greaterThan,r > 1)" ]
"1000497" [label = "(<operator>.modulo,r % 2)" ]
"1000505" [label = "(f,f(op(d[r], sm)))" ]
"1000513" [label = "(<operator>.lessThan,r < size)" ]
"1000542" [label = "(<operator>.addition,r + 1 - size)" ]
"1000506" [label = "(op,op(d[r], sm))" ]
"1000517" [label = "(<operator>.assignment,r = (2 * r + 1))" ]
"1000525" [label = "(f,f(op(d[r], sm)))" ]
"1000544" [label = "(<operator>.subtraction,1 - size)" ]
"1000519" [label = "(<operator>.addition,2 * r + 1)" ]
"1000532" [label = "(<operator>.assignment,sm = op(d[r], sm))" ]
"1000539" [label = "(<operator>.postDecrement,r--)" ]
"1000520" [label = "(<operator>.multiplication,2 * r)" ]
"1000526" [label = "(op,op(d[r], sm))" ]
"1000534" [label = "(op,op(d[r], sm))" ]
"1000487" [label = "(e,e())" ]
"1000550" [label = "(<operator>.indirectIndexAccess,d[r])" ]
"1000507" [label = "(<operator>.indirectIndexAccess,d[r])" ]
"1000527" [label = "(<operator>.indirectIndexAccess,d[r])" ]
"1000535" [label = "(<operator>.indirectIndexAccess,d[r])" ]
  "1000461" -> "1000562"  [ label = "DDG: r"] 
  "1000462" -> "1000562"  [ label = "DDG: f"] 
  "1000465" -> "1000562"  [ label = "DDG: 0 <= r"] 
  "1000465" -> "1000562"  [ label = "DDG: r <= _n"] 
  "1000464" -> "1000562"  [ label = "DDG: 0 <= r && r <= _n"] 
  "1000464" -> "1000562"  [ label = "DDG: assert(0 <= r && r <= _n)"] 
  "1000473" -> "1000562"  [ label = "DDG: e()"] 
  "1000472" -> "1000562"  [ label = "DDG: f(e())"] 
  "1000472" -> "1000562"  [ label = "DDG: assert(f(e()))"] 
  "1000476" -> "1000562"  [ label = "DDG: r"] 
  "1000476" -> "1000562"  [ label = "DDG: r == 0"] 
  "1000481" -> "1000562"  [ label = "DDG: size"] 
  "1000485" -> "1000562"  [ label = "DDG: e()"] 
  "1000493" -> "1000562"  [ label = "DDG: r > 1"] 
  "1000493" -> "1000562"  [ label = "DDG: r % 2"] 
  "1000493" -> "1000562"  [ label = "DDG: r > 1 && (r % 2)"] 
  "1000506" -> "1000562"  [ label = "DDG: d[r]"] 
  "1000506" -> "1000562"  [ label = "DDG: sm"] 
  "1000505" -> "1000562"  [ label = "DDG: op(d[r], sm)"] 
  "1000504" -> "1000562"  [ label = "DDG: f(op(d[r], sm))"] 
  "1000504" -> "1000562"  [ label = "DDG: !f(op(d[r], sm))"] 
  "1000547" -> "1000562"  [ label = "DDG: sm"] 
  "1000549" -> "1000562"  [ label = "DDG: d[r]"] 
  "1000547" -> "1000562"  [ label = "DDG: op(d[r], sm)"] 
  "1000555" -> "1000562"  [ label = "DDG: -r"] 
  "1000554" -> "1000562"  [ label = "DDG: r & -r"] 
  "1000554" -> "1000562"  [ label = "DDG: r"] 
  "1000554" -> "1000562"  [ label = "DDG: (r & -r) != r"] 
  "1000513" -> "1000562"  [ label = "DDG: r < size"] 
  "1000542" -> "1000562"  [ label = "DDG: r"] 
  "1000544" -> "1000562"  [ label = "DDG: size"] 
  "1000542" -> "1000562"  [ label = "DDG: 1 - size"] 
  "1000542" -> "1000562"  [ label = "DDG: r + 1 - size"] 
  "1000519" -> "1000562"  [ label = "DDG: 2 * r"] 
  "1000517" -> "1000562"  [ label = "DDG: 2 * r + 1"] 
  "1000526" -> "1000562"  [ label = "DDG: d[r]"] 
  "1000526" -> "1000562"  [ label = "DDG: sm"] 
  "1000525" -> "1000562"  [ label = "DDG: op(d[r], sm)"] 
  "1000525" -> "1000562"  [ label = "DDG: f(op(d[r], sm))"] 
  "1000532" -> "1000562"  [ label = "DDG: sm"] 
  "1000534" -> "1000562"  [ label = "DDG: d[r]"] 
  "1000532" -> "1000562"  [ label = "DDG: op(d[r], sm)"] 
  "1000500" -> "1000562"  [ label = "DDG: r >>= 1"] 
  "1000479" -> "1000562"  [ label = "DDG: <RET>"] 
  "1000560" -> "1000562"  [ label = "DDG: <RET>"] 
  "1000541" -> "1000562"  [ label = "DDG: <RET>"] 
  "1000469" -> "1000562"  [ label = "DDG: _n"] 
  "1000460" -> "1000461"  [ label = "DDG: "] 
  "1000460" -> "1000462"  [ label = "DDG: "] 
  "1000460" -> "1000481"  [ label = "DDG: "] 
  "1000460" -> "1000485"  [ label = "DDG: "] 
  "1000561" -> "1000560"  [ label = "DDG: 0"] 
  "1000460" -> "1000560"  [ label = "DDG: "] 
  "1000465" -> "1000464"  [ label = "DDG: r <= _n"] 
  "1000465" -> "1000464"  [ label = "DDG: 0 <= r"] 
  "1000473" -> "1000472"  [ label = "DDG: e()"] 
  "1000480" -> "1000479"  [ label = "DDG: 0"] 
  "1000460" -> "1000479"  [ label = "DDG: "] 
  "1000476" -> "1000481"  [ label = "DDG: r"] 
  "1000461" -> "1000481"  [ label = "DDG: r"] 
  "1000460" -> "1000561"  [ label = "DDG: "] 
  "1000466" -> "1000465"  [ label = "DDG: 0"] 
  "1000466" -> "1000465"  [ label = "DDG: r"] 
  "1000469" -> "1000465"  [ label = "DDG: _n"] 
  "1000469" -> "1000465"  [ label = "DDG: r"] 
  "1000460" -> "1000473"  [ label = "DDG: "] 
  "1000466" -> "1000476"  [ label = "DDG: r"] 
  "1000469" -> "1000476"  [ label = "DDG: r"] 
  "1000461" -> "1000476"  [ label = "DDG: r"] 
  "1000460" -> "1000476"  [ label = "DDG: "] 
  "1000460" -> "1000480"  [ label = "DDG: "] 
  "1000549" -> "1000547"  [ label = "DDG: sm"] 
  "1000549" -> "1000547"  [ label = "DDG: d[r]"] 
  "1000555" -> "1000554"  [ label = "DDG: r"] 
  "1000555" -> "1000554"  [ label = "DDG: -r"] 
  "1000461" -> "1000554"  [ label = "DDG: r"] 
  "1000460" -> "1000554"  [ label = "DDG: "] 
  "1000460" -> "1000466"  [ label = "DDG: "] 
  "1000461" -> "1000466"  [ label = "DDG: r"] 
  "1000466" -> "1000469"  [ label = "DDG: r"] 
  "1000461" -> "1000469"  [ label = "DDG: r"] 
  "1000460" -> "1000469"  [ label = "DDG: "] 
  "1000481" -> "1000490"  [ label = "DDG: r"] 
  "1000554" -> "1000490"  [ label = "DDG: r"] 
  "1000461" -> "1000490"  [ label = "DDG: r"] 
  "1000460" -> "1000490"  [ label = "DDG: "] 
  "1000460" -> "1000547"  [ label = "DDG: "] 
  "1000557" -> "1000555"  [ label = "DDG: r"] 
  "1000461" -> "1000555"  [ label = "DDG: r"] 
  "1000460" -> "1000555"  [ label = "DDG: "] 
  "1000494" -> "1000493"  [ label = "DDG: 1"] 
  "1000494" -> "1000493"  [ label = "DDG: r"] 
  "1000497" -> "1000493"  [ label = "DDG: r"] 
  "1000497" -> "1000493"  [ label = "DDG: 2"] 
  "1000494" -> "1000500"  [ label = "DDG: r"] 
  "1000497" -> "1000500"  [ label = "DDG: r"] 
  "1000461" -> "1000500"  [ label = "DDG: r"] 
  "1000460" -> "1000500"  [ label = "DDG: "] 
  "1000505" -> "1000504"  [ label = "DDG: op(d[r], sm)"] 
  "1000542" -> "1000541"  [ label = "DDG: r + 1 - size"] 
  "1000506" -> "1000549"  [ label = "DDG: d[r]"] 
  "1000506" -> "1000549"  [ label = "DDG: sm"] 
  "1000460" -> "1000549"  [ label = "DDG: "] 
  "1000494" -> "1000557"  [ label = "DDG: r"] 
  "1000497" -> "1000557"  [ label = "DDG: r"] 
  "1000461" -> "1000557"  [ label = "DDG: r"] 
  "1000460" -> "1000557"  [ label = "DDG: "] 
  "1000490" -> "1000494"  [ label = "DDG: r"] 
  "1000500" -> "1000494"  [ label = "DDG: r"] 
  "1000461" -> "1000494"  [ label = "DDG: r"] 
  "1000460" -> "1000494"  [ label = "DDG: "] 
  "1000494" -> "1000497"  [ label = "DDG: r"] 
  "1000461" -> "1000497"  [ label = "DDG: r"] 
  "1000460" -> "1000497"  [ label = "DDG: "] 
  "1000506" -> "1000505"  [ label = "DDG: d[r]"] 
  "1000506" -> "1000505"  [ label = "DDG: sm"] 
  "1000544" -> "1000542"  [ label = "DDG: 1"] 
  "1000544" -> "1000542"  [ label = "DDG: size"] 
  "1000513" -> "1000542"  [ label = "DDG: r"] 
  "1000461" -> "1000542"  [ label = "DDG: r"] 
  "1000460" -> "1000542"  [ label = "DDG: "] 
  "1000549" -> "1000506"  [ label = "DDG: d[r]"] 
  "1000485" -> "1000506"  [ label = "DDG: sm"] 
  "1000547" -> "1000506"  [ label = "DDG: sm"] 
  "1000460" -> "1000506"  [ label = "DDG: "] 
  "1000494" -> "1000513"  [ label = "DDG: r"] 
  "1000497" -> "1000513"  [ label = "DDG: r"] 
  "1000517" -> "1000513"  [ label = "DDG: r"] 
  "1000539" -> "1000513"  [ label = "DDG: r"] 
  "1000461" -> "1000513"  [ label = "DDG: r"] 
  "1000460" -> "1000513"  [ label = "DDG: "] 
  "1000520" -> "1000517"  [ label = "DDG: r"] 
  "1000520" -> "1000517"  [ label = "DDG: 2"] 
  "1000460" -> "1000517"  [ label = "DDG: "] 
  "1000461" -> "1000517"  [ label = "DDG: r"] 
  "1000460" -> "1000544"  [ label = "DDG: "] 
  "1000513" -> "1000544"  [ label = "DDG: size"] 
  "1000520" -> "1000519"  [ label = "DDG: r"] 
  "1000520" -> "1000519"  [ label = "DDG: 2"] 
  "1000460" -> "1000519"  [ label = "DDG: "] 
  "1000526" -> "1000525"  [ label = "DDG: sm"] 
  "1000526" -> "1000525"  [ label = "DDG: d[r]"] 
  "1000534" -> "1000532"  [ label = "DDG: sm"] 
  "1000534" -> "1000532"  [ label = "DDG: d[r]"] 
  "1000460" -> "1000520"  [ label = "DDG: "] 
  "1000513" -> "1000520"  [ label = "DDG: r"] 
  "1000461" -> "1000520"  [ label = "DDG: r"] 
  "1000506" -> "1000526"  [ label = "DDG: d[r]"] 
  "1000534" -> "1000526"  [ label = "DDG: d[r]"] 
  "1000506" -> "1000526"  [ label = "DDG: sm"] 
  "1000532" -> "1000526"  [ label = "DDG: sm"] 
  "1000460" -> "1000526"  [ label = "DDG: "] 
  "1000460" -> "1000532"  [ label = "DDG: "] 
  "1000517" -> "1000539"  [ label = "DDG: r"] 
  "1000461" -> "1000539"  [ label = "DDG: r"] 
  "1000460" -> "1000539"  [ label = "DDG: "] 
  "1000526" -> "1000534"  [ label = "DDG: d[r]"] 
  "1000526" -> "1000534"  [ label = "DDG: sm"] 
  "1000460" -> "1000534"  [ label = "DDG: "] 
  "1000476" -> "1000490"  [ label = "CDG: "] 
  "1000476" -> "1000494"  [ label = "CDG: "] 
  "1000476" -> "1000485"  [ label = "CDG: "] 
  "1000476" -> "1000479"  [ label = "CDG: "] 
  "1000476" -> "1000504"  [ label = "CDG: "] 
  "1000476" -> "1000493"  [ label = "CDG: "] 
  "1000476" -> "1000506"  [ label = "CDG: "] 
  "1000476" -> "1000487"  [ label = "CDG: "] 
  "1000476" -> "1000505"  [ label = "CDG: "] 
  "1000476" -> "1000507"  [ label = "CDG: "] 
  "1000476" -> "1000481"  [ label = "CDG: "] 
  "1000554" -> "1000490"  [ label = "CDG: "] 
  "1000554" -> "1000494"  [ label = "CDG: "] 
  "1000554" -> "1000560"  [ label = "CDG: "] 
  "1000554" -> "1000504"  [ label = "CDG: "] 
  "1000554" -> "1000493"  [ label = "CDG: "] 
  "1000554" -> "1000506"  [ label = "CDG: "] 
  "1000554" -> "1000505"  [ label = "CDG: "] 
  "1000554" -> "1000507"  [ label = "CDG: "] 
  "1000466" -> "1000469"  [ label = "CDG: "] 
  "1000493" -> "1000494"  [ label = "CDG: "] 
  "1000493" -> "1000500"  [ label = "CDG: "] 
  "1000493" -> "1000493"  [ label = "CDG: "] 
  "1000504" -> "1000555"  [ label = "CDG: "] 
  "1000504" -> "1000550"  [ label = "CDG: "] 
  "1000504" -> "1000513"  [ label = "CDG: "] 
  "1000504" -> "1000541"  [ label = "CDG: "] 
  "1000504" -> "1000547"  [ label = "CDG: "] 
  "1000504" -> "1000544"  [ label = "CDG: "] 
  "1000504" -> "1000557"  [ label = "CDG: "] 
  "1000504" -> "1000549"  [ label = "CDG: "] 
  "1000504" -> "1000554"  [ label = "CDG: "] 
  "1000504" -> "1000542"  [ label = "CDG: "] 
  "1000494" -> "1000497"  [ label = "CDG: "] 
  "1000513" -> "1000520"  [ label = "CDG: "] 
  "1000513" -> "1000526"  [ label = "CDG: "] 
  "1000513" -> "1000513"  [ label = "CDG: "] 
  "1000513" -> "1000525"  [ label = "CDG: "] 
  "1000513" -> "1000519"  [ label = "CDG: "] 
  "1000513" -> "1000517"  [ label = "CDG: "] 
  "1000513" -> "1000527"  [ label = "CDG: "] 
  "1000525" -> "1000532"  [ label = "CDG: "] 
  "1000525" -> "1000535"  [ label = "CDG: "] 
  "1000525" -> "1000539"  [ label = "CDG: "] 
  "1000525" -> "1000534"  [ label = "CDG: "] 
}
