digraph "solve" {  
"1000611" [label = "(METHOD,solve)" ]
"1000718" [label = "(METHOD_RETURN,void)" ]
"1000614" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000646" [label = "(<operator>.assignment,p = 1)" ]
"1000650" [label = "(<operator>.assignment,q = n)" ]
"1000713" [label = "(<operator>.shiftLeft,cout << p << endl)" ]
"1000620" [label = "(<operator>.arithmeticShiftRight,cin >> a[i])" ]
"1000654" [label = "(<operator>.lessThan,p < q)" ]
"1000626" [label = "(IDENTIFIER,i,if (i))" ]
"1000659" [label = "(<operator>.assignment,sr = (p + q) / 2)" ]
"1000667" [label = "(<operator>.assignment,ok = false)" ]
"1000715" [label = "(<operator>.shiftLeft,p << endl)" ]
"1000628" [label = "(<operator>.assignment,b[i - 1] = abs(a[i-1] - a[i]))" ]
"1000672" [label = "(<operator>.assignment,i=0)" ]
"1000675" [label = "(<operator>.lessThan,i + sr < n)" ]
"1000680" [label = "(<operator>.preIncrement,++i)" ]
"1000701" [label = "(IDENTIFIER,ok,if (ok))" ]
"1000661" [label = "(<operator>.division,(p + q) / 2)" ]
"1000684" [label = "(<operator>.assignment,w = seg.prod(i, i + sr))" ]
"1000703" [label = "(<operator>.assignment,p = sr + 1)" ]
"1000634" [label = "(abs,abs(a[i-1] - a[i]))" ]
"1000662" [label = "(<operator>.addition,p + q)" ]
"1000676" [label = "(<operator>.addition,i + sr)" ]
"1000692" [label = "(<operator>.greaterThan,w > 1)" ]
"1000710" [label = "(<operator>.assignment,q = sr)" ]
"1000631" [label = "(<operator>.subtraction,i - 1)" ]
"1000635" [label = "(<operator>.subtraction,a[i-1] - a[i])" ]
"1000686" [label = "(seg.prod,seg.prod(i, i + sr))" ]
"1000696" [label = "(<operator>.assignment,ok = true)" ]
"1000705" [label = "(<operator>.addition,sr + 1)" ]
"1000688" [label = "(<operator>.addition,i + sr)" ]
"1000638" [label = "(<operator>.subtraction,i-1)" ]
  "1000614" -> "1000718"  [ label = "DDG: cin >> n"] 
  "1000620" -> "1000718"  [ label = "DDG: cin"] 
  "1000620" -> "1000718"  [ label = "DDG: a[i]"] 
  "1000620" -> "1000718"  [ label = "DDG: cin >> a[i]"] 
  "1000628" -> "1000718"  [ label = "DDG: b[i - 1]"] 
  "1000638" -> "1000718"  [ label = "DDG: i"] 
  "1000635" -> "1000718"  [ label = "DDG: a[i-1]"] 
  "1000635" -> "1000718"  [ label = "DDG: a[i]"] 
  "1000634" -> "1000718"  [ label = "DDG: a[i-1] - a[i]"] 
  "1000628" -> "1000718"  [ label = "DDG: abs(a[i-1] - a[i])"] 
  "1000650" -> "1000718"  [ label = "DDG: n"] 
  "1000654" -> "1000718"  [ label = "DDG: q"] 
  "1000654" -> "1000718"  [ label = "DDG: p < q"] 
  "1000662" -> "1000718"  [ label = "DDG: q"] 
  "1000661" -> "1000718"  [ label = "DDG: p + q"] 
  "1000659" -> "1000718"  [ label = "DDG: (p + q) / 2"] 
  "1000667" -> "1000718"  [ label = "DDG: ok"] 
  "1000676" -> "1000718"  [ label = "DDG: i"] 
  "1000675" -> "1000718"  [ label = "DDG: i + sr"] 
  "1000675" -> "1000718"  [ label = "DDG: n"] 
  "1000675" -> "1000718"  [ label = "DDG: i + sr < n"] 
  "1000686" -> "1000718"  [ label = "DDG: i"] 
  "1000688" -> "1000718"  [ label = "DDG: sr"] 
  "1000686" -> "1000718"  [ label = "DDG: i + sr"] 
  "1000684" -> "1000718"  [ label = "DDG: seg.prod(i, i + sr)"] 
  "1000692" -> "1000718"  [ label = "DDG: w"] 
  "1000692" -> "1000718"  [ label = "DDG: w > 1"] 
  "1000696" -> "1000718"  [ label = "DDG: ok"] 
  "1000715" -> "1000718"  [ label = "DDG: p"] 
  "1000713" -> "1000718"  [ label = "DDG: p << endl"] 
  "1000713" -> "1000718"  [ label = "DDG: cout << p << endl"] 
  "1000710" -> "1000718"  [ label = "DDG: sr"] 
  "1000705" -> "1000718"  [ label = "DDG: sr"] 
  "1000703" -> "1000718"  [ label = "DDG: sr + 1"] 
  "1000696" -> "1000718"  [ label = "DDG: true"] 
  "1000713" -> "1000718"  [ label = "DDG: cout"] 
  "1000667" -> "1000718"  [ label = "DDG: false"] 
  "1000715" -> "1000718"  [ label = "DDG: endl"] 
  "1000611" -> "1000646"  [ label = "DDG: "] 
  "1000614" -> "1000650"  [ label = "DDG: n"] 
  "1000611" -> "1000650"  [ label = "DDG: "] 
  "1000611" -> "1000614"  [ label = "DDG: "] 
  "1000611" -> "1000713"  [ label = "DDG: "] 
  "1000715" -> "1000713"  [ label = "DDG: p"] 
  "1000715" -> "1000713"  [ label = "DDG: endl"] 
  "1000614" -> "1000620"  [ label = "DDG: cin"] 
  "1000611" -> "1000620"  [ label = "DDG: "] 
  "1000611" -> "1000626"  [ label = "DDG: "] 
  "1000646" -> "1000654"  [ label = "DDG: p"] 
  "1000703" -> "1000654"  [ label = "DDG: p"] 
  "1000611" -> "1000654"  [ label = "DDG: "] 
  "1000650" -> "1000654"  [ label = "DDG: q"] 
  "1000710" -> "1000654"  [ label = "DDG: q"] 
  "1000661" -> "1000659"  [ label = "DDG: 2"] 
  "1000661" -> "1000659"  [ label = "DDG: p + q"] 
  "1000611" -> "1000667"  [ label = "DDG: "] 
  "1000654" -> "1000715"  [ label = "DDG: p"] 
  "1000611" -> "1000715"  [ label = "DDG: "] 
  "1000634" -> "1000628"  [ label = "DDG: a[i-1] - a[i]"] 
  "1000611" -> "1000659"  [ label = "DDG: "] 
  "1000611" -> "1000672"  [ label = "DDG: "] 
  "1000611" -> "1000701"  [ label = "DDG: "] 
  "1000654" -> "1000661"  [ label = "DDG: p"] 
  "1000611" -> "1000661"  [ label = "DDG: "] 
  "1000654" -> "1000661"  [ label = "DDG: q"] 
  "1000672" -> "1000675"  [ label = "DDG: i"] 
  "1000680" -> "1000675"  [ label = "DDG: i"] 
  "1000611" -> "1000675"  [ label = "DDG: "] 
  "1000659" -> "1000675"  [ label = "DDG: sr"] 
  "1000614" -> "1000675"  [ label = "DDG: n"] 
  "1000686" -> "1000680"  [ label = "DDG: i"] 
  "1000611" -> "1000680"  [ label = "DDG: "] 
  "1000686" -> "1000684"  [ label = "DDG: i"] 
  "1000686" -> "1000684"  [ label = "DDG: i + sr"] 
  "1000611" -> "1000703"  [ label = "DDG: "] 
  "1000659" -> "1000703"  [ label = "DDG: sr"] 
  "1000635" -> "1000634"  [ label = "DDG: a[i-1]"] 
  "1000635" -> "1000634"  [ label = "DDG: a[i]"] 
  "1000654" -> "1000662"  [ label = "DDG: p"] 
  "1000611" -> "1000662"  [ label = "DDG: "] 
  "1000654" -> "1000662"  [ label = "DDG: q"] 
  "1000672" -> "1000676"  [ label = "DDG: i"] 
  "1000680" -> "1000676"  [ label = "DDG: i"] 
  "1000611" -> "1000676"  [ label = "DDG: "] 
  "1000659" -> "1000676"  [ label = "DDG: sr"] 
  "1000611" -> "1000684"  [ label = "DDG: "] 
  "1000611" -> "1000710"  [ label = "DDG: "] 
  "1000659" -> "1000710"  [ label = "DDG: sr"] 
  "1000611" -> "1000631"  [ label = "DDG: "] 
  "1000620" -> "1000635"  [ label = "DDG: a[i]"] 
  "1000611" -> "1000686"  [ label = "DDG: "] 
  "1000672" -> "1000686"  [ label = "DDG: i"] 
  "1000680" -> "1000686"  [ label = "DDG: i"] 
  "1000684" -> "1000692"  [ label = "DDG: w"] 
  "1000611" -> "1000692"  [ label = "DDG: "] 
  "1000611" -> "1000696"  [ label = "DDG: "] 
  "1000611" -> "1000705"  [ label = "DDG: "] 
  "1000659" -> "1000705"  [ label = "DDG: sr"] 
  "1000611" -> "1000688"  [ label = "DDG: "] 
  "1000672" -> "1000688"  [ label = "DDG: i"] 
  "1000680" -> "1000688"  [ label = "DDG: i"] 
  "1000631" -> "1000638"  [ label = "DDG: i"] 
  "1000611" -> "1000638"  [ label = "DDG: "] 
  "1000654" -> "1000661"  [ label = "CDG: "] 
  "1000654" -> "1000662"  [ label = "CDG: "] 
  "1000654" -> "1000676"  [ label = "CDG: "] 
  "1000654" -> "1000672"  [ label = "CDG: "] 
  "1000654" -> "1000667"  [ label = "CDG: "] 
  "1000654" -> "1000659"  [ label = "CDG: "] 
  "1000654" -> "1000675"  [ label = "CDG: "] 
  "1000675" -> "1000688"  [ label = "CDG: "] 
  "1000675" -> "1000654"  [ label = "CDG: "] 
  "1000675" -> "1000684"  [ label = "CDG: "] 
  "1000675" -> "1000692"  [ label = "CDG: "] 
  "1000675" -> "1000686"  [ label = "CDG: "] 
  "1000675" -> "1000705"  [ label = "CDG: "] 
  "1000675" -> "1000703"  [ label = "CDG: "] 
  "1000675" -> "1000710"  [ label = "CDG: "] 
  "1000692" -> "1000696"  [ label = "CDG: "] 
  "1000692" -> "1000680"  [ label = "CDG: "] 
  "1000692" -> "1000676"  [ label = "CDG: "] 
  "1000692" -> "1000675"  [ label = "CDG: "] 
  "1000692" -> "1000654"  [ label = "CDG: "] 
  "1000692" -> "1000705"  [ label = "CDG: "] 
  "1000692" -> "1000703"  [ label = "CDG: "] 
  "1000692" -> "1000710"  [ label = "CDG: "] 
}
