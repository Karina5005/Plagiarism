digraph "solve" {  
"1000283" [label = "(METHOD,solve)" ]
"1000493" [label = "(METHOD_RETURN,void)" ]
"1000285" [label = "(read,read(n))" ]
"1000287" [label = "(read,read(q))" ]
"1000290" [label = "(<operator>.assignment,m = n * 3)" ]
"1000295" [label = "(<operator>.assignment,fac[0] = 1)" ]
"1000322" [label = "(<operator>.assignment,finv[m] = Inv(fac[m]))" ]
"1000353" [label = "(<operator>.assignment,INV3 = Inv(3))" ]
"1000357" [label = "(<operator>.assignment,f[0][0] = f[1][0] = f[2][0] = n)" ]
"1000302" [label = "(<operator>.assignment,i = 1)" ]
"1000305" [label = "(<operator>.lessEqualsThan,i <= m)" ]
"1000308" [label = "(<operator>.preIncrement,++i)" ]
"1000332" [label = "(<operator>.assignment,i = m)" ]
"1000335" [label = "(<operator>.greaterEqualsThan,i >= 1)" ]
"1000338" [label = "(<operator>.preDecrement,--i)" ]
"1000378" [label = "(<operator>.assignment,i = 1)" ]
"1000381" [label = "(<operator>.lessEqualsThan,i <= n * 3)" ]
"1000386" [label = "(<operator>.preIncrement,++i)" ]
"1000468" [label = "(<operator>.assignment,i = 1)" ]
"1000471" [label = "(<operator>.lessEqualsThan,i <= q)" ]
"1000474" [label = "(<operator>.preIncrement,++i)" ]
"1000292" [label = "(<operator>.multiplication,n * 3)" ]
"1000311" [label = "(<operator>.assignment,fac[i] = Mul(fac[i - 1], i))" ]
"1000326" [label = "(Inv,Inv(fac[m]))" ]
"1000341" [label = "(<operator>.assignment,finv[i - 1] = Mul(finv[i], i))" ]
"1000355" [label = "(Inv,Inv(3))" ]
"1000363" [label = "(<operator>.assignment,f[1][0] = f[2][0] = n)" ]
"1000390" [label = "(<operator>.assignment,tmp = C(n * 3, i + 1))" ]
"1000399" [label = "(Dec,Dec(tmp, f[1][i - 1]))" ]
"1000408" [label = "(Dec,Dec(tmp, Mul(2, f[0][i - 1])))" ]
"1000419" [label = "(<operator>.assignment,f[0][i] = Mul(tmp, INV3))" ]
"1000428" [label = "(<operator>.assignment,f[1][i] = Add(f[0][i], f[0][i - 1]))" ]
"1000447" [label = "(<operator>.assignment,f[2][i] = Add(f[1][i], f[1][i - 1]))" ]
"1000478" [label = "(read,read(x))" ]
"1000480" [label = "(printf,printf(\"%d\n\", Add(f[0][x], C(n * 3, x))))" ]
"1000369" [label = "(<operator>.assignment,f[2][0] = n)" ]
"1000383" [label = "(<operator>.multiplication,n * 3)" ]
"1000315" [label = "(Mul,Mul(fac[i - 1], i))" ]
"1000347" [label = "(Mul,Mul(finv[i], i))" ]
"1000392" [label = "(C,C(n * 3, i + 1))" ]
"1000410" [label = "(Mul,Mul(2, f[0][i - 1]))" ]
"1000425" [label = "(Mul,Mul(tmp, INV3))" ]
"1000434" [label = "(Add,Add(f[0][i], f[0][i - 1]))" ]
"1000453" [label = "(Add,Add(f[1][i], f[1][i - 1]))" ]
"1000482" [label = "(Add,Add(f[0][x], C(n * 3, x)))" ]
"1000344" [label = "(<operator>.subtraction,i - 1)" ]
"1000393" [label = "(<operator>.multiplication,n * 3)" ]
"1000396" [label = "(<operator>.addition,i + 1)" ]
"1000405" [label = "(<operator>.subtraction,i - 1)" ]
"1000488" [label = "(C,C(n * 3, x))" ]
"1000318" [label = "(<operator>.subtraction,i - 1)" ]
"1000416" [label = "(<operator>.subtraction,i - 1)" ]
"1000444" [label = "(<operator>.subtraction,i - 1)" ]
"1000463" [label = "(<operator>.subtraction,i - 1)" ]
"1000489" [label = "(<operator>.multiplication,n * 3)" ]
"1000312" [label = "(<operator>.indirectIndexAccess,fac[i])" ]
"1000342" [label = "(<operator>.indirectIndexAccess,finv[i - 1])" ]
"1000401" [label = "(<operator>.indirectIndexAccess,f[1][i - 1])" ]
"1000420" [label = "(<operator>.indirectIndexAccess,f[0][i])" ]
"1000429" [label = "(<operator>.indirectIndexAccess,f[1][i])" ]
"1000448" [label = "(<operator>.indirectIndexAccess,f[2][i])" ]
"1000316" [label = "(<operator>.indirectIndexAccess,fac[i - 1])" ]
"1000348" [label = "(<operator>.indirectIndexAccess,finv[i])" ]
"1000402" [label = "(<operator>.indirectIndexAccess,f[1])" ]
"1000412" [label = "(<operator>.indirectIndexAccess,f[0][i - 1])" ]
"1000421" [label = "(<operator>.indirectIndexAccess,f[0])" ]
"1000430" [label = "(<operator>.indirectIndexAccess,f[1])" ]
"1000435" [label = "(<operator>.indirectIndexAccess,f[0][i])" ]
"1000440" [label = "(<operator>.indirectIndexAccess,f[0][i - 1])" ]
"1000449" [label = "(<operator>.indirectIndexAccess,f[2])" ]
"1000454" [label = "(<operator>.indirectIndexAccess,f[1][i])" ]
"1000459" [label = "(<operator>.indirectIndexAccess,f[1][i - 1])" ]
"1000483" [label = "(<operator>.indirectIndexAccess,f[0][x])" ]
"1000413" [label = "(<operator>.indirectIndexAccess,f[0])" ]
"1000436" [label = "(<operator>.indirectIndexAccess,f[0])" ]
"1000441" [label = "(<operator>.indirectIndexAccess,f[0])" ]
"1000455" [label = "(<operator>.indirectIndexAccess,f[1])" ]
"1000460" [label = "(<operator>.indirectIndexAccess,f[1])" ]
"1000484" [label = "(<operator>.indirectIndexAccess,f[0])" ]
  "1000285" -> "1000493"  [ label = "DDG: read(n)"] 
  "1000287" -> "1000493"  [ label = "DDG: read(q)"] 
  "1000295" -> "1000493"  [ label = "DDG: fac[0]"] 
  "1000305" -> "1000493"  [ label = "DDG: i <= m"] 
  "1000322" -> "1000493"  [ label = "DDG: finv[m]"] 
  "1000326" -> "1000493"  [ label = "DDG: fac[m]"] 
  "1000322" -> "1000493"  [ label = "DDG: Inv(fac[m])"] 
  "1000332" -> "1000493"  [ label = "DDG: m"] 
  "1000335" -> "1000493"  [ label = "DDG: i >= 1"] 
  "1000353" -> "1000493"  [ label = "DDG: INV3"] 
  "1000353" -> "1000493"  [ label = "DDG: Inv(3)"] 
  "1000357" -> "1000493"  [ label = "DDG: f[0][0]"] 
  "1000363" -> "1000493"  [ label = "DDG: f[1][0]"] 
  "1000369" -> "1000493"  [ label = "DDG: f[2][0]"] 
  "1000383" -> "1000493"  [ label = "DDG: n"] 
  "1000381" -> "1000493"  [ label = "DDG: n * 3"] 
  "1000381" -> "1000493"  [ label = "DDG: i <= n * 3"] 
  "1000471" -> "1000493"  [ label = "DDG: i"] 
  "1000471" -> "1000493"  [ label = "DDG: q"] 
  "1000471" -> "1000493"  [ label = "DDG: i <= q"] 
  "1000478" -> "1000493"  [ label = "DDG: read(x)"] 
  "1000482" -> "1000493"  [ label = "DDG: f[0][x]"] 
  "1000489" -> "1000493"  [ label = "DDG: n"] 
  "1000488" -> "1000493"  [ label = "DDG: n * 3"] 
  "1000488" -> "1000493"  [ label = "DDG: x"] 
  "1000482" -> "1000493"  [ label = "DDG: C(n * 3, x)"] 
  "1000480" -> "1000493"  [ label = "DDG: Add(f[0][x], C(n * 3, x))"] 
  "1000480" -> "1000493"  [ label = "DDG: printf(\"%d\n\", Add(f[0][x], C(n * 3, x)))"] 
  "1000392" -> "1000493"  [ label = "DDG: i + 1"] 
  "1000390" -> "1000493"  [ label = "DDG: C(n * 3, i + 1)"] 
  "1000399" -> "1000493"  [ label = "DDG: Dec(tmp, f[1][i - 1])"] 
  "1000408" -> "1000493"  [ label = "DDG: Mul(2, f[0][i - 1])"] 
  "1000408" -> "1000493"  [ label = "DDG: Dec(tmp, Mul(2, f[0][i - 1]))"] 
  "1000425" -> "1000493"  [ label = "DDG: tmp"] 
  "1000425" -> "1000493"  [ label = "DDG: INV3"] 
  "1000419" -> "1000493"  [ label = "DDG: Mul(tmp, INV3)"] 
  "1000434" -> "1000493"  [ label = "DDG: f[0][i]"] 
  "1000434" -> "1000493"  [ label = "DDG: f[0][i - 1]"] 
  "1000428" -> "1000493"  [ label = "DDG: Add(f[0][i], f[0][i - 1])"] 
  "1000447" -> "1000493"  [ label = "DDG: f[2][i]"] 
  "1000453" -> "1000493"  [ label = "DDG: f[1][i]"] 
  "1000453" -> "1000493"  [ label = "DDG: f[1][i - 1]"] 
  "1000447" -> "1000493"  [ label = "DDG: Add(f[1][i], f[1][i - 1])"] 
  "1000341" -> "1000493"  [ label = "DDG: finv[i - 1]"] 
  "1000347" -> "1000493"  [ label = "DDG: finv[i]"] 
  "1000341" -> "1000493"  [ label = "DDG: Mul(finv[i], i)"] 
  "1000311" -> "1000493"  [ label = "DDG: fac[i]"] 
  "1000315" -> "1000493"  [ label = "DDG: fac[i - 1]"] 
  "1000311" -> "1000493"  [ label = "DDG: Mul(fac[i - 1], i)"] 
  "1000292" -> "1000290"  [ label = "DDG: 3"] 
  "1000292" -> "1000290"  [ label = "DDG: n"] 
  "1000283" -> "1000295"  [ label = "DDG: "] 
  "1000326" -> "1000322"  [ label = "DDG: fac[m]"] 
  "1000355" -> "1000353"  [ label = "DDG: 3"] 
  "1000283" -> "1000285"  [ label = "DDG: "] 
  "1000283" -> "1000287"  [ label = "DDG: "] 
  "1000283" -> "1000290"  [ label = "DDG: "] 
  "1000283" -> "1000302"  [ label = "DDG: "] 
  "1000305" -> "1000332"  [ label = "DDG: m"] 
  "1000283" -> "1000332"  [ label = "DDG: "] 
  "1000283" -> "1000353"  [ label = "DDG: "] 
  "1000363" -> "1000357"  [ label = "DDG: f[1][0]"] 
  "1000283" -> "1000378"  [ label = "DDG: "] 
  "1000283" -> "1000468"  [ label = "DDG: "] 
  "1000285" -> "1000292"  [ label = "DDG: n"] 
  "1000283" -> "1000292"  [ label = "DDG: "] 
  "1000302" -> "1000305"  [ label = "DDG: i"] 
  "1000308" -> "1000305"  [ label = "DDG: i"] 
  "1000283" -> "1000305"  [ label = "DDG: "] 
  "1000290" -> "1000305"  [ label = "DDG: m"] 
  "1000315" -> "1000308"  [ label = "DDG: i"] 
  "1000283" -> "1000308"  [ label = "DDG: "] 
  "1000315" -> "1000311"  [ label = "DDG: fac[i - 1]"] 
  "1000315" -> "1000311"  [ label = "DDG: i"] 
  "1000332" -> "1000335"  [ label = "DDG: i"] 
  "1000338" -> "1000335"  [ label = "DDG: i"] 
  "1000283" -> "1000335"  [ label = "DDG: "] 
  "1000347" -> "1000338"  [ label = "DDG: i"] 
  "1000283" -> "1000338"  [ label = "DDG: "] 
  "1000347" -> "1000341"  [ label = "DDG: i"] 
  "1000347" -> "1000341"  [ label = "DDG: finv[i]"] 
  "1000283" -> "1000355"  [ label = "DDG: "] 
  "1000369" -> "1000363"  [ label = "DDG: f[2][0]"] 
  "1000292" -> "1000363"  [ label = "DDG: n"] 
  "1000283" -> "1000363"  [ label = "DDG: "] 
  "1000378" -> "1000381"  [ label = "DDG: i"] 
  "1000386" -> "1000381"  [ label = "DDG: i"] 
  "1000283" -> "1000381"  [ label = "DDG: "] 
  "1000383" -> "1000381"  [ label = "DDG: 3"] 
  "1000383" -> "1000381"  [ label = "DDG: n"] 
  "1000463" -> "1000386"  [ label = "DDG: i"] 
  "1000283" -> "1000386"  [ label = "DDG: "] 
  "1000392" -> "1000390"  [ label = "DDG: i + 1"] 
  "1000392" -> "1000390"  [ label = "DDG: n * 3"] 
  "1000425" -> "1000419"  [ label = "DDG: tmp"] 
  "1000425" -> "1000419"  [ label = "DDG: INV3"] 
  "1000434" -> "1000428"  [ label = "DDG: f[0][i]"] 
  "1000434" -> "1000428"  [ label = "DDG: f[0][i - 1]"] 
  "1000453" -> "1000447"  [ label = "DDG: f[1][i - 1]"] 
  "1000453" -> "1000447"  [ label = "DDG: f[1][i]"] 
  "1000468" -> "1000471"  [ label = "DDG: i"] 
  "1000474" -> "1000471"  [ label = "DDG: i"] 
  "1000283" -> "1000471"  [ label = "DDG: "] 
  "1000287" -> "1000471"  [ label = "DDG: q"] 
  "1000471" -> "1000474"  [ label = "DDG: i"] 
  "1000283" -> "1000474"  [ label = "DDG: "] 
  "1000292" -> "1000369"  [ label = "DDG: n"] 
  "1000283" -> "1000369"  [ label = "DDG: "] 
  "1000393" -> "1000383"  [ label = "DDG: n"] 
  "1000283" -> "1000383"  [ label = "DDG: "] 
  "1000292" -> "1000383"  [ label = "DDG: n"] 
  "1000283" -> "1000390"  [ label = "DDG: "] 
  "1000390" -> "1000399"  [ label = "DDG: tmp"] 
  "1000283" -> "1000399"  [ label = "DDG: "] 
  "1000453" -> "1000399"  [ label = "DDG: f[1][i - 1]"] 
  "1000399" -> "1000408"  [ label = "DDG: tmp"] 
  "1000283" -> "1000408"  [ label = "DDG: "] 
  "1000410" -> "1000408"  [ label = "DDG: f[0][i - 1]"] 
  "1000410" -> "1000408"  [ label = "DDG: 2"] 
  "1000488" -> "1000478"  [ label = "DDG: x"] 
  "1000283" -> "1000478"  [ label = "DDG: "] 
  "1000283" -> "1000480"  [ label = "DDG: "] 
  "1000482" -> "1000480"  [ label = "DDG: C(n * 3, x)"] 
  "1000482" -> "1000480"  [ label = "DDG: f[0][x]"] 
  "1000318" -> "1000315"  [ label = "DDG: i"] 
  "1000283" -> "1000315"  [ label = "DDG: "] 
  "1000344" -> "1000347"  [ label = "DDG: i"] 
  "1000283" -> "1000347"  [ label = "DDG: "] 
  "1000393" -> "1000392"  [ label = "DDG: 3"] 
  "1000393" -> "1000392"  [ label = "DDG: n"] 
  "1000381" -> "1000392"  [ label = "DDG: i"] 
  "1000283" -> "1000392"  [ label = "DDG: "] 
  "1000283" -> "1000410"  [ label = "DDG: "] 
  "1000434" -> "1000410"  [ label = "DDG: f[0][i - 1]"] 
  "1000408" -> "1000425"  [ label = "DDG: tmp"] 
  "1000283" -> "1000425"  [ label = "DDG: "] 
  "1000353" -> "1000425"  [ label = "DDG: INV3"] 
  "1000419" -> "1000434"  [ label = "DDG: f[0][i]"] 
  "1000410" -> "1000434"  [ label = "DDG: f[0][i - 1]"] 
  "1000428" -> "1000453"  [ label = "DDG: f[1][i]"] 
  "1000399" -> "1000453"  [ label = "DDG: f[1][i - 1]"] 
  "1000488" -> "1000482"  [ label = "DDG: n * 3"] 
  "1000488" -> "1000482"  [ label = "DDG: x"] 
  "1000335" -> "1000344"  [ label = "DDG: i"] 
  "1000283" -> "1000344"  [ label = "DDG: "] 
  "1000383" -> "1000393"  [ label = "DDG: n"] 
  "1000283" -> "1000393"  [ label = "DDG: "] 
  "1000381" -> "1000396"  [ label = "DDG: i"] 
  "1000283" -> "1000396"  [ label = "DDG: "] 
  "1000283" -> "1000405"  [ label = "DDG: "] 
  "1000381" -> "1000405"  [ label = "DDG: i"] 
  "1000489" -> "1000488"  [ label = "DDG: 3"] 
  "1000489" -> "1000488"  [ label = "DDG: n"] 
  "1000478" -> "1000488"  [ label = "DDG: x"] 
  "1000283" -> "1000488"  [ label = "DDG: "] 
  "1000305" -> "1000318"  [ label = "DDG: i"] 
  "1000283" -> "1000318"  [ label = "DDG: "] 
  "1000405" -> "1000416"  [ label = "DDG: i"] 
  "1000283" -> "1000416"  [ label = "DDG: "] 
  "1000416" -> "1000444"  [ label = "DDG: i"] 
  "1000283" -> "1000444"  [ label = "DDG: "] 
  "1000444" -> "1000463"  [ label = "DDG: i"] 
  "1000283" -> "1000463"  [ label = "DDG: "] 
  "1000383" -> "1000489"  [ label = "DDG: n"] 
  "1000283" -> "1000489"  [ label = "DDG: "] 
  "1000305" -> "1000305"  [ label = "CDG: "] 
  "1000305" -> "1000315"  [ label = "CDG: "] 
  "1000305" -> "1000312"  [ label = "CDG: "] 
  "1000305" -> "1000318"  [ label = "CDG: "] 
  "1000305" -> "1000316"  [ label = "CDG: "] 
  "1000305" -> "1000308"  [ label = "CDG: "] 
  "1000305" -> "1000311"  [ label = "CDG: "] 
  "1000335" -> "1000338"  [ label = "CDG: "] 
  "1000335" -> "1000348"  [ label = "CDG: "] 
  "1000335" -> "1000341"  [ label = "CDG: "] 
  "1000335" -> "1000342"  [ label = "CDG: "] 
  "1000335" -> "1000344"  [ label = "CDG: "] 
  "1000335" -> "1000335"  [ label = "CDG: "] 
  "1000335" -> "1000347"  [ label = "CDG: "] 
  "1000381" -> "1000396"  [ label = "CDG: "] 
  "1000381" -> "1000447"  [ label = "CDG: "] 
  "1000381" -> "1000392"  [ label = "CDG: "] 
  "1000381" -> "1000448"  [ label = "CDG: "] 
  "1000381" -> "1000430"  [ label = "CDG: "] 
  "1000381" -> "1000435"  [ label = "CDG: "] 
  "1000381" -> "1000405"  [ label = "CDG: "] 
  "1000381" -> "1000383"  [ label = "CDG: "] 
  "1000381" -> "1000454"  [ label = "CDG: "] 
  "1000381" -> "1000420"  [ label = "CDG: "] 
  "1000381" -> "1000412"  [ label = "CDG: "] 
  "1000381" -> "1000410"  [ label = "CDG: "] 
  "1000381" -> "1000408"  [ label = "CDG: "] 
  "1000381" -> "1000402"  [ label = "CDG: "] 
  "1000381" -> "1000449"  [ label = "CDG: "] 
  "1000381" -> "1000428"  [ label = "CDG: "] 
  "1000381" -> "1000386"  [ label = "CDG: "] 
  "1000381" -> "1000436"  [ label = "CDG: "] 
  "1000381" -> "1000444"  [ label = "CDG: "] 
  "1000381" -> "1000419"  [ label = "CDG: "] 
  "1000381" -> "1000453"  [ label = "CDG: "] 
  "1000381" -> "1000401"  [ label = "CDG: "] 
  "1000381" -> "1000463"  [ label = "CDG: "] 
  "1000381" -> "1000459"  [ label = "CDG: "] 
  "1000381" -> "1000399"  [ label = "CDG: "] 
  "1000381" -> "1000413"  [ label = "CDG: "] 
  "1000381" -> "1000440"  [ label = "CDG: "] 
  "1000381" -> "1000393"  [ label = "CDG: "] 
  "1000381" -> "1000429"  [ label = "CDG: "] 
  "1000381" -> "1000455"  [ label = "CDG: "] 
  "1000381" -> "1000460"  [ label = "CDG: "] 
  "1000381" -> "1000441"  [ label = "CDG: "] 
  "1000381" -> "1000390"  [ label = "CDG: "] 
  "1000381" -> "1000421"  [ label = "CDG: "] 
  "1000381" -> "1000425"  [ label = "CDG: "] 
  "1000381" -> "1000434"  [ label = "CDG: "] 
  "1000381" -> "1000381"  [ label = "CDG: "] 
  "1000381" -> "1000416"  [ label = "CDG: "] 
  "1000471" -> "1000483"  [ label = "CDG: "] 
  "1000471" -> "1000488"  [ label = "CDG: "] 
  "1000471" -> "1000480"  [ label = "CDG: "] 
  "1000471" -> "1000474"  [ label = "CDG: "] 
  "1000471" -> "1000471"  [ label = "CDG: "] 
  "1000471" -> "1000478"  [ label = "CDG: "] 
  "1000471" -> "1000482"  [ label = "CDG: "] 
  "1000471" -> "1000484"  [ label = "CDG: "] 
  "1000471" -> "1000489"  [ label = "CDG: "] 
}
