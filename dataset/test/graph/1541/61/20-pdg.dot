digraph "seive" {  
"1000394" [label = "(METHOD,seive)" ]
"1000470" [label = "(METHOD_RETURN,pair<vi,bool*>)" ]
"1000395" [label = "(PARAM,ll n)" ]
"1000399" [label = "(<operator>.assignment,*isprime = new bool[n+1])" ]
"1000403" [label = "(<operator>.assignment,isprime[0] = isprime[1] = true)" ]
"1000466" [label = "(<operator>.assignment,ans = {primes, isprime})" ]
"1000468" [label = "(RETURN,return ans;,return ans;)" ]
"1000414" [label = "(<operator>.assignment,i=2)" ]
"1000417" [label = "(<operator>.lessEqualsThan,i*i<=n)" ]
"1000422" [label = "(<operator>.postIncrement,i++)" ]
"1000449" [label = "(<operator>.assignment,i=2)" ]
"1000452" [label = "(<operator>.lessEqualsThan,i<=n)" ]
"1000455" [label = "(<operator>.postIncrement,i++)" ]
"1000469" [label = "(IDENTIFIER,ans,return ans;)" ]
"1000401" [label = "(<operator>.new,new bool[n+1])" ]
"1000407" [label = "(<operator>.assignment,isprime[1] = true)" ]
"1000425" [label = "(<operator>.logicalNot,!isprime[i])" ]
"1000418" [label = "(<operator>.multiplication,i*i)" ]
"1000431" [label = "(<operator>.assignment,j=i*i)" ]
"1000436" [label = "(<operator>.lessEqualsThan,j<=n)" ]
"1000439" [label = "(<operator>.assignmentPlus,j+=i)" ]
"1000442" [label = "(<operator>.assignment,isprime[j] = true)" ]
"1000459" [label = "(<operator>.logicalNot,!isprime[i])" ]
"1000463" [label = "(primes.pb,primes.pb(i))" ]
"1000433" [label = "(<operator>.multiplication,i*i)" ]
"1000426" [label = "(<operator>.indirectIndexAccess,isprime[i])" ]
"1000443" [label = "(<operator>.indirectIndexAccess,isprime[j])" ]
"1000460" [label = "(<operator>.indirectIndexAccess,isprime[i])" ]
  "1000468" -> "1000470"  [ label = "DDG: <RET>"] 
  "1000395" -> "1000470"  [ label = "DDG: n"] 
  "1000399" -> "1000470"  [ label = "DDG: isprime"] 
  "1000399" -> "1000470"  [ label = "DDG: new bool[n+1]"] 
  "1000403" -> "1000470"  [ label = "DDG: isprime[0]"] 
  "1000407" -> "1000470"  [ label = "DDG: isprime[1]"] 
  "1000407" -> "1000470"  [ label = "DDG: true"] 
  "1000417" -> "1000470"  [ label = "DDG: i*i"] 
  "1000417" -> "1000470"  [ label = "DDG: i*i<=n"] 
  "1000452" -> "1000470"  [ label = "DDG: i"] 
  "1000452" -> "1000470"  [ label = "DDG: n"] 
  "1000452" -> "1000470"  [ label = "DDG: i<=n"] 
  "1000466" -> "1000470"  [ label = "DDG: ans"] 
  "1000459" -> "1000470"  [ label = "DDG: isprime[i]"] 
  "1000459" -> "1000470"  [ label = "DDG: !isprime[i]"] 
  "1000463" -> "1000470"  [ label = "DDG: primes.pb(i)"] 
  "1000425" -> "1000470"  [ label = "DDG: isprime[i]"] 
  "1000425" -> "1000470"  [ label = "DDG: !isprime[i]"] 
  "1000436" -> "1000470"  [ label = "DDG: j"] 
  "1000436" -> "1000470"  [ label = "DDG: j<=n"] 
  "1000442" -> "1000470"  [ label = "DDG: isprime[j]"] 
  "1000442" -> "1000470"  [ label = "DDG: true"] 
  "1000401" -> "1000470"  [ label = "DDG: bool"] 
  "1000394" -> "1000395"  [ label = "DDG: "] 
  "1000401" -> "1000399"  [ label = "DDG: bool"] 
  "1000469" -> "1000468"  [ label = "DDG: ans"] 
  "1000466" -> "1000468"  [ label = "DDG: ans"] 
  "1000394" -> "1000399"  [ label = "DDG: "] 
  "1000407" -> "1000403"  [ label = "DDG: isprime[1]"] 
  "1000394" -> "1000403"  [ label = "DDG: "] 
  "1000394" -> "1000414"  [ label = "DDG: "] 
  "1000394" -> "1000449"  [ label = "DDG: "] 
  "1000394" -> "1000466"  [ label = "DDG: "] 
  "1000394" -> "1000469"  [ label = "DDG: "] 
  "1000394" -> "1000401"  [ label = "DDG: "] 
  "1000394" -> "1000407"  [ label = "DDG: "] 
  "1000418" -> "1000417"  [ label = "DDG: i"] 
  "1000436" -> "1000417"  [ label = "DDG: n"] 
  "1000395" -> "1000417"  [ label = "DDG: n"] 
  "1000394" -> "1000417"  [ label = "DDG: "] 
  "1000418" -> "1000422"  [ label = "DDG: i"] 
  "1000433" -> "1000422"  [ label = "DDG: i"] 
  "1000394" -> "1000422"  [ label = "DDG: "] 
  "1000449" -> "1000452"  [ label = "DDG: i"] 
  "1000455" -> "1000452"  [ label = "DDG: i"] 
  "1000394" -> "1000452"  [ label = "DDG: "] 
  "1000417" -> "1000452"  [ label = "DDG: n"] 
  "1000395" -> "1000452"  [ label = "DDG: n"] 
  "1000452" -> "1000455"  [ label = "DDG: i"] 
  "1000463" -> "1000455"  [ label = "DDG: i"] 
  "1000394" -> "1000455"  [ label = "DDG: "] 
  "1000414" -> "1000418"  [ label = "DDG: i"] 
  "1000422" -> "1000418"  [ label = "DDG: i"] 
  "1000394" -> "1000418"  [ label = "DDG: "] 
  "1000399" -> "1000425"  [ label = "DDG: isprime"] 
  "1000433" -> "1000431"  [ label = "DDG: i"] 
  "1000433" -> "1000439"  [ label = "DDG: i"] 
  "1000394" -> "1000439"  [ label = "DDG: "] 
  "1000394" -> "1000442"  [ label = "DDG: "] 
  "1000394" -> "1000431"  [ label = "DDG: "] 
  "1000431" -> "1000436"  [ label = "DDG: j"] 
  "1000439" -> "1000436"  [ label = "DDG: j"] 
  "1000394" -> "1000436"  [ label = "DDG: "] 
  "1000417" -> "1000436"  [ label = "DDG: n"] 
  "1000395" -> "1000436"  [ label = "DDG: n"] 
  "1000436" -> "1000439"  [ label = "DDG: j"] 
  "1000399" -> "1000459"  [ label = "DDG: isprime"] 
  "1000425" -> "1000459"  [ label = "DDG: isprime[i]"] 
  "1000452" -> "1000463"  [ label = "DDG: i"] 
  "1000394" -> "1000463"  [ label = "DDG: "] 
  "1000418" -> "1000433"  [ label = "DDG: i"] 
  "1000394" -> "1000433"  [ label = "DDG: "] 
  "1000417" -> "1000422"  [ label = "CDG: "] 
  "1000417" -> "1000426"  [ label = "CDG: "] 
  "1000417" -> "1000425"  [ label = "CDG: "] 
  "1000417" -> "1000417"  [ label = "CDG: "] 
  "1000417" -> "1000418"  [ label = "CDG: "] 
  "1000452" -> "1000459"  [ label = "CDG: "] 
  "1000452" -> "1000452"  [ label = "CDG: "] 
  "1000452" -> "1000455"  [ label = "CDG: "] 
  "1000452" -> "1000460"  [ label = "CDG: "] 
  "1000425" -> "1000431"  [ label = "CDG: "] 
  "1000425" -> "1000436"  [ label = "CDG: "] 
  "1000425" -> "1000433"  [ label = "CDG: "] 
  "1000436" -> "1000436"  [ label = "CDG: "] 
  "1000436" -> "1000443"  [ label = "CDG: "] 
  "1000436" -> "1000442"  [ label = "CDG: "] 
  "1000436" -> "1000439"  [ label = "CDG: "] 
  "1000459" -> "1000463"  [ label = "CDG: "] 
}
