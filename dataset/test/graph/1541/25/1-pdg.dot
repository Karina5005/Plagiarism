digraph "main" {  
"1000121" [label = "(METHOD,main)" ]
"1000242" [label = "(METHOD_RETURN,int)" ]
"1000123" [label = "(init,init())" ]
"1000124" [label = "(ios::sync_with_stdio,ios::sync_with_stdio(0))" ]
"1000126" [label = "(cin.tie,cin.tie(0))" ]
"1000128" [label = "(cout.tie,cout.tie(0))" ]
"1000240" [label = "(RETURN,return 0;,return 0;)" ]
"1000133" [label = "(<operator>.assignment,z = 0)" ]
"1000137" [label = "(<operator>.assignment,ans = 0)" ]
"1000140" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000174" [label = "(sort,sort(all(v)))" ]
"1000177" [label = "(<operator>.assignment,n = v.size())" ]
"1000235" [label = "(<operator>.shiftLeft,cout << ans << endl)" ]
"1000241" [label = "(LITERAL,0,return 0;)" ]
"1000146" [label = "(<operator>.arithmeticShiftRight,cin >> x)" ]
"1000181" [label = "(<operator>.greaterThan,n > 1)" ]
"1000150" [label = "(<operator>.lessThan,x < 0)" ]
"1000153" [label = "(<operator>.assignmentPlus,ans += x)" ]
"1000175" [label = "(all,all(v))" ]
"1000186" [label = "(<operator>.assignment,pre[0] = v[0])" ]
"1000193" [label = "(<operator>.assignment,pre[i] = pre[i - 1] + v[i])" ]
"1000206" [label = "(<operator>.assignmentPlus,ans += -v[1])" ]
"1000212" [label = "(<operator>.assignmentPlus,ans += pre[i - 2] - i * v[i])" ]
"1000225" [label = "(<operator>.assignmentPlus,ans += -pre[n - 1] * z)" ]
"1000237" [label = "(<operator>.shiftLeft,ans << endl)" ]
"1000158" [label = "(<operator>.logicalAnd,x == 0 && i > 0)" ]
"1000165" [label = "(<operator>.postIncrement,z++)" ]
"1000197" [label = "(<operator>.addition,pre[i - 1] + v[i])" ]
"1000208" [label = "(<operator>.minus,-v[1])" ]
"1000214" [label = "(<operator>.subtraction,pre[i - 2] - i * v[i])" ]
"1000227" [label = "(<operator>.multiplication,-pre[n - 1] * z)" ]
"1000220" [label = "(<operator>.multiplication,i * v[i])" ]
"1000228" [label = "(<operator>.minus,-pre[n - 1])" ]
"1000159" [label = "(<operator>.equals,x == 0)" ]
"1000162" [label = "(<operator>.greaterThan,i > 0)" ]
"1000169" [label = "(<operator>.greaterThan,x > 0)" ]
"1000172" [label = "(v.pb,v.pb(x))" ]
"1000200" [label = "(<operator>.subtraction,i - 1)" ]
"1000217" [label = "(<operator>.subtraction,i - 2)" ]
"1000231" [label = "(<operator>.subtraction,n - 1)" ]
"1000187" [label = "(<operator>.indirectIndexAccess,pre[0])" ]
"1000190" [label = "(<operator>.indirectIndexAccess,v[0])" ]
"1000194" [label = "(<operator>.indirectIndexAccess,pre[i])" ]
"1000198" [label = "(<operator>.indirectIndexAccess,pre[i - 1])" ]
"1000203" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000209" [label = "(<operator>.indirectIndexAccess,v[1])" ]
"1000215" [label = "(<operator>.indirectIndexAccess,pre[i - 2])" ]
"1000222" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000229" [label = "(<operator>.indirectIndexAccess,pre[n - 1])" ]
  "1000240" -> "1000242"  [ label = "DDG: <RET>"] 
  "1000123" -> "1000242"  [ label = "DDG: init()"] 
  "1000124" -> "1000242"  [ label = "DDG: ios::sync_with_stdio(0)"] 
  "1000126" -> "1000242"  [ label = "DDG: cin.tie(0)"] 
  "1000128" -> "1000242"  [ label = "DDG: cout.tie(0)"] 
  "1000133" -> "1000242"  [ label = "DDG: z"] 
  "1000140" -> "1000242"  [ label = "DDG: cin >> n"] 
  "1000146" -> "1000242"  [ label = "DDG: cin"] 
  "1000146" -> "1000242"  [ label = "DDG: cin >> x"] 
  "1000150" -> "1000242"  [ label = "DDG: x < 0"] 
  "1000159" -> "1000242"  [ label = "DDG: x"] 
  "1000158" -> "1000242"  [ label = "DDG: x == 0"] 
  "1000162" -> "1000242"  [ label = "DDG: i"] 
  "1000158" -> "1000242"  [ label = "DDG: i > 0"] 
  "1000158" -> "1000242"  [ label = "DDG: x == 0 && i > 0"] 
  "1000169" -> "1000242"  [ label = "DDG: x"] 
  "1000169" -> "1000242"  [ label = "DDG: x > 0"] 
  "1000172" -> "1000242"  [ label = "DDG: x"] 
  "1000172" -> "1000242"  [ label = "DDG: v.pb(x)"] 
  "1000165" -> "1000242"  [ label = "DDG: z"] 
  "1000153" -> "1000242"  [ label = "DDG: x"] 
  "1000175" -> "1000242"  [ label = "DDG: v"] 
  "1000174" -> "1000242"  [ label = "DDG: all(v)"] 
  "1000174" -> "1000242"  [ label = "DDG: sort(all(v))"] 
  "1000177" -> "1000242"  [ label = "DDG: v.size()"] 
  "1000181" -> "1000242"  [ label = "DDG: n"] 
  "1000181" -> "1000242"  [ label = "DDG: n > 1"] 
  "1000186" -> "1000242"  [ label = "DDG: pre[0]"] 
  "1000186" -> "1000242"  [ label = "DDG: v[0]"] 
  "1000193" -> "1000242"  [ label = "DDG: pre[i]"] 
  "1000197" -> "1000242"  [ label = "DDG: pre[i - 1]"] 
  "1000193" -> "1000242"  [ label = "DDG: pre[i - 1] + v[i]"] 
  "1000208" -> "1000242"  [ label = "DDG: v[1]"] 
  "1000206" -> "1000242"  [ label = "DDG: -v[1]"] 
  "1000214" -> "1000242"  [ label = "DDG: pre[i - 2]"] 
  "1000220" -> "1000242"  [ label = "DDG: i"] 
  "1000220" -> "1000242"  [ label = "DDG: v[i]"] 
  "1000214" -> "1000242"  [ label = "DDG: i * v[i]"] 
  "1000212" -> "1000242"  [ label = "DDG: pre[i - 2] - i * v[i]"] 
  "1000231" -> "1000242"  [ label = "DDG: n"] 
  "1000228" -> "1000242"  [ label = "DDG: pre[n - 1]"] 
  "1000227" -> "1000242"  [ label = "DDG: -pre[n - 1]"] 
  "1000227" -> "1000242"  [ label = "DDG: z"] 
  "1000225" -> "1000242"  [ label = "DDG: -pre[n - 1] * z"] 
  "1000237" -> "1000242"  [ label = "DDG: ans"] 
  "1000235" -> "1000242"  [ label = "DDG: ans << endl"] 
  "1000235" -> "1000242"  [ label = "DDG: cout << ans << endl"] 
  "1000235" -> "1000242"  [ label = "DDG: cout"] 
  "1000237" -> "1000242"  [ label = "DDG: endl"] 
  "1000121" -> "1000123"  [ label = "DDG: "] 
  "1000241" -> "1000240"  [ label = "DDG: 0"] 
  "1000121" -> "1000240"  [ label = "DDG: "] 
  "1000121" -> "1000124"  [ label = "DDG: "] 
  "1000121" -> "1000126"  [ label = "DDG: "] 
  "1000121" -> "1000128"  [ label = "DDG: "] 
  "1000121" -> "1000133"  [ label = "DDG: "] 
  "1000121" -> "1000137"  [ label = "DDG: "] 
  "1000121" -> "1000177"  [ label = "DDG: "] 
  "1000121" -> "1000241"  [ label = "DDG: "] 
  "1000121" -> "1000140"  [ label = "DDG: "] 
  "1000175" -> "1000174"  [ label = "DDG: v"] 
  "1000121" -> "1000235"  [ label = "DDG: "] 
  "1000237" -> "1000235"  [ label = "DDG: endl"] 
  "1000237" -> "1000235"  [ label = "DDG: ans"] 
  "1000140" -> "1000146"  [ label = "DDG: cin"] 
  "1000121" -> "1000146"  [ label = "DDG: "] 
  "1000150" -> "1000153"  [ label = "DDG: x"] 
  "1000121" -> "1000153"  [ label = "DDG: "] 
  "1000121" -> "1000175"  [ label = "DDG: "] 
  "1000177" -> "1000181"  [ label = "DDG: n"] 
  "1000121" -> "1000181"  [ label = "DDG: "] 
  "1000175" -> "1000186"  [ label = "DDG: v"] 
  "1000175" -> "1000193"  [ label = "DDG: v"] 
  "1000208" -> "1000206"  [ label = "DDG: v[1]"] 
  "1000214" -> "1000212"  [ label = "DDG: pre[i - 2]"] 
  "1000214" -> "1000212"  [ label = "DDG: i * v[i]"] 
  "1000227" -> "1000225"  [ label = "DDG: z"] 
  "1000227" -> "1000225"  [ label = "DDG: -pre[n - 1]"] 
  "1000137" -> "1000237"  [ label = "DDG: ans"] 
  "1000153" -> "1000237"  [ label = "DDG: ans"] 
  "1000225" -> "1000237"  [ label = "DDG: ans"] 
  "1000121" -> "1000237"  [ label = "DDG: "] 
  "1000146" -> "1000150"  [ label = "DDG: x"] 
  "1000121" -> "1000150"  [ label = "DDG: "] 
  "1000137" -> "1000153"  [ label = "DDG: ans"] 
  "1000137" -> "1000206"  [ label = "DDG: ans"] 
  "1000153" -> "1000206"  [ label = "DDG: ans"] 
  "1000121" -> "1000206"  [ label = "DDG: "] 
  "1000206" -> "1000212"  [ label = "DDG: ans"] 
  "1000121" -> "1000212"  [ label = "DDG: "] 
  "1000212" -> "1000225"  [ label = "DDG: ans"] 
  "1000121" -> "1000225"  [ label = "DDG: "] 
  "1000175" -> "1000197"  [ label = "DDG: v"] 
  "1000175" -> "1000208"  [ label = "DDG: v"] 
  "1000220" -> "1000214"  [ label = "DDG: v[i]"] 
  "1000220" -> "1000214"  [ label = "DDG: i"] 
  "1000228" -> "1000227"  [ label = "DDG: pre[n - 1]"] 
  "1000133" -> "1000227"  [ label = "DDG: z"] 
  "1000165" -> "1000227"  [ label = "DDG: z"] 
  "1000121" -> "1000227"  [ label = "DDG: "] 
  "1000159" -> "1000158"  [ label = "DDG: 0"] 
  "1000159" -> "1000158"  [ label = "DDG: x"] 
  "1000162" -> "1000158"  [ label = "DDG: i"] 
  "1000162" -> "1000158"  [ label = "DDG: 0"] 
  "1000133" -> "1000165"  [ label = "DDG: z"] 
  "1000121" -> "1000165"  [ label = "DDG: "] 
  "1000217" -> "1000220"  [ label = "DDG: i"] 
  "1000121" -> "1000220"  [ label = "DDG: "] 
  "1000175" -> "1000220"  [ label = "DDG: v"] 
  "1000150" -> "1000159"  [ label = "DDG: x"] 
  "1000121" -> "1000159"  [ label = "DDG: "] 
  "1000121" -> "1000162"  [ label = "DDG: "] 
  "1000162" -> "1000200"  [ label = "DDG: i"] 
  "1000121" -> "1000200"  [ label = "DDG: "] 
  "1000200" -> "1000217"  [ label = "DDG: i"] 
  "1000121" -> "1000217"  [ label = "DDG: "] 
  "1000159" -> "1000169"  [ label = "DDG: x"] 
  "1000121" -> "1000169"  [ label = "DDG: "] 
  "1000169" -> "1000172"  [ label = "DDG: x"] 
  "1000121" -> "1000172"  [ label = "DDG: "] 
  "1000181" -> "1000231"  [ label = "DDG: n"] 
  "1000121" -> "1000231"  [ label = "DDG: "] 
  "1000181" -> "1000200"  [ label = "CDG: "] 
  "1000181" -> "1000208"  [ label = "CDG: "] 
  "1000181" -> "1000197"  [ label = "CDG: "] 
  "1000181" -> "1000227"  [ label = "CDG: "] 
  "1000181" -> "1000229"  [ label = "CDG: "] 
  "1000181" -> "1000186"  [ label = "CDG: "] 
  "1000181" -> "1000212"  [ label = "CDG: "] 
  "1000181" -> "1000215"  [ label = "CDG: "] 
  "1000181" -> "1000225"  [ label = "CDG: "] 
  "1000181" -> "1000222"  [ label = "CDG: "] 
  "1000181" -> "1000206"  [ label = "CDG: "] 
  "1000181" -> "1000220"  [ label = "CDG: "] 
  "1000181" -> "1000203"  [ label = "CDG: "] 
  "1000181" -> "1000214"  [ label = "CDG: "] 
  "1000181" -> "1000190"  [ label = "CDG: "] 
  "1000181" -> "1000231"  [ label = "CDG: "] 
  "1000181" -> "1000193"  [ label = "CDG: "] 
  "1000181" -> "1000194"  [ label = "CDG: "] 
  "1000181" -> "1000217"  [ label = "CDG: "] 
  "1000181" -> "1000209"  [ label = "CDG: "] 
  "1000181" -> "1000198"  [ label = "CDG: "] 
  "1000181" -> "1000187"  [ label = "CDG: "] 
  "1000181" -> "1000228"  [ label = "CDG: "] 
  "1000150" -> "1000153"  [ label = "CDG: "] 
  "1000150" -> "1000159"  [ label = "CDG: "] 
  "1000150" -> "1000158"  [ label = "CDG: "] 
  "1000158" -> "1000165"  [ label = "CDG: "] 
  "1000158" -> "1000169"  [ label = "CDG: "] 
  "1000159" -> "1000162"  [ label = "CDG: "] 
  "1000169" -> "1000172"  [ label = "CDG: "] 
}
