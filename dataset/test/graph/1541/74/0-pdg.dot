digraph "main" {  
"1000101" [label = "(METHOD,main)" ]
"1000173" [label = "(METHOD_RETURN,int)" ]
"1000103" [label = "(ios_base::sync_with_stdio,ios_base::sync_with_stdio(0))" ]
"1000105" [label = "(cin.tie,cin.tie(0))" ]
"1000107" [label = "(cout.tie,cout.tie(0))" ]
"1000110" [label = "(<operator>.arithmeticShiftRight,cin >> t)" ]
"1000114" [label = "(<operator>.postDecrement,t--)" ]
"1000118" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000123" [label = "(<operator>.arithmeticShiftRight,cin >> x)" ]
"1000127" [label = "(<operator>.assignment,ans = 0)" ]
"1000168" [label = "(<operator>.shiftLeft,cout << ans << '\n')" ]
"1000132" [label = "(<operator>.assignment,i = 0)" ]
"1000135" [label = "(<operator>.lessThan,i < n)" ]
"1000138" [label = "(<operator>.preIncrement,++i)" ]
"1000170" [label = "(<operator>.shiftLeft,ans << '\n')" ]
"1000143" [label = "(<operator>.assignment,j = v[i]-i-2)" ]
"1000152" [label = "(<operator>.lessThan,j < n)" ]
"1000155" [label = "(<operator>.assignmentPlus,j+=v[i])" ]
"1000166" [label = "(<operator>.postIncrement,ans++)" ]
"1000145" [label = "(<operator>.subtraction,v[i]-i-2)" ]
"1000162" [label = "(<operator>.lessEqualsThan,j <= i)" ]
"1000149" [label = "(<operator>.subtraction,i-2)" ]
"1000157" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000146" [label = "(<operator>.indirectIndexAccess,v[i])" ]
  "1000103" -> "1000173"  [ label = "DDG: ios_base::sync_with_stdio(0)"] 
  "1000105" -> "1000173"  [ label = "DDG: cin.tie(0)"] 
  "1000107" -> "1000173"  [ label = "DDG: cout.tie(0)"] 
  "1000110" -> "1000173"  [ label = "DDG: cin"] 
  "1000110" -> "1000173"  [ label = "DDG: cin >> t"] 
  "1000114" -> "1000173"  [ label = "DDG: t"] 
  "1000118" -> "1000173"  [ label = "DDG: cin >> n"] 
  "1000123" -> "1000173"  [ label = "DDG: cin"] 
  "1000123" -> "1000173"  [ label = "DDG: cin >> x"] 
  "1000127" -> "1000173"  [ label = "DDG: ans"] 
  "1000135" -> "1000173"  [ label = "DDG: i"] 
  "1000135" -> "1000173"  [ label = "DDG: n"] 
  "1000135" -> "1000173"  [ label = "DDG: i < n"] 
  "1000170" -> "1000173"  [ label = "DDG: ans"] 
  "1000168" -> "1000173"  [ label = "DDG: ans << '\n'"] 
  "1000168" -> "1000173"  [ label = "DDG: cout << ans << '\n'"] 
  "1000145" -> "1000173"  [ label = "DDG: v[i]"] 
  "1000145" -> "1000173"  [ label = "DDG: i-2"] 
  "1000143" -> "1000173"  [ label = "DDG: v[i]-i-2"] 
  "1000152" -> "1000173"  [ label = "DDG: j"] 
  "1000152" -> "1000173"  [ label = "DDG: n"] 
  "1000152" -> "1000173"  [ label = "DDG: j < n"] 
  "1000162" -> "1000173"  [ label = "DDG: j"] 
  "1000162" -> "1000173"  [ label = "DDG: i"] 
  "1000162" -> "1000173"  [ label = "DDG: j <= i"] 
  "1000166" -> "1000173"  [ label = "DDG: ans"] 
  "1000155" -> "1000173"  [ label = "DDG: v[i]"] 
  "1000168" -> "1000173"  [ label = "DDG: cout"] 
  "1000123" -> "1000173"  [ label = "DDG: x"] 
  "1000101" -> "1000103"  [ label = "DDG: "] 
  "1000101" -> "1000105"  [ label = "DDG: "] 
  "1000101" -> "1000107"  [ label = "DDG: "] 
  "1000101" -> "1000110"  [ label = "DDG: "] 
  "1000110" -> "1000114"  [ label = "DDG: t"] 
  "1000101" -> "1000114"  [ label = "DDG: "] 
  "1000101" -> "1000127"  [ label = "DDG: "] 
  "1000110" -> "1000118"  [ label = "DDG: cin"] 
  "1000123" -> "1000118"  [ label = "DDG: cin"] 
  "1000101" -> "1000118"  [ label = "DDG: "] 
  "1000135" -> "1000118"  [ label = "DDG: n"] 
  "1000152" -> "1000118"  [ label = "DDG: n"] 
  "1000118" -> "1000123"  [ label = "DDG: cin"] 
  "1000101" -> "1000123"  [ label = "DDG: "] 
  "1000101" -> "1000132"  [ label = "DDG: "] 
  "1000101" -> "1000168"  [ label = "DDG: "] 
  "1000170" -> "1000168"  [ label = "DDG: ans"] 
  "1000170" -> "1000168"  [ label = "DDG: '\n'"] 
  "1000132" -> "1000135"  [ label = "DDG: i"] 
  "1000138" -> "1000135"  [ label = "DDG: i"] 
  "1000101" -> "1000135"  [ label = "DDG: "] 
  "1000118" -> "1000135"  [ label = "DDG: n"] 
  "1000152" -> "1000135"  [ label = "DDG: n"] 
  "1000149" -> "1000138"  [ label = "DDG: i"] 
  "1000162" -> "1000138"  [ label = "DDG: i"] 
  "1000101" -> "1000138"  [ label = "DDG: "] 
  "1000127" -> "1000170"  [ label = "DDG: ans"] 
  "1000166" -> "1000170"  [ label = "DDG: ans"] 
  "1000101" -> "1000170"  [ label = "DDG: "] 
  "1000145" -> "1000143"  [ label = "DDG: v[i]"] 
  "1000145" -> "1000143"  [ label = "DDG: i-2"] 
  "1000145" -> "1000155"  [ label = "DDG: v[i]"] 
  "1000101" -> "1000143"  [ label = "DDG: "] 
  "1000143" -> "1000152"  [ label = "DDG: j"] 
  "1000155" -> "1000152"  [ label = "DDG: j"] 
  "1000101" -> "1000152"  [ label = "DDG: "] 
  "1000135" -> "1000152"  [ label = "DDG: n"] 
  "1000162" -> "1000155"  [ label = "DDG: j"] 
  "1000101" -> "1000155"  [ label = "DDG: "] 
  "1000149" -> "1000145"  [ label = "DDG: 2"] 
  "1000149" -> "1000145"  [ label = "DDG: i"] 
  "1000127" -> "1000166"  [ label = "DDG: ans"] 
  "1000101" -> "1000166"  [ label = "DDG: "] 
  "1000135" -> "1000149"  [ label = "DDG: i"] 
  "1000101" -> "1000149"  [ label = "DDG: "] 
  "1000152" -> "1000162"  [ label = "DDG: j"] 
  "1000101" -> "1000162"  [ label = "DDG: "] 
  "1000149" -> "1000162"  [ label = "DDG: i"] 
  "1000114" -> "1000127"  [ label = "CDG: "] 
  "1000114" -> "1000135"  [ label = "CDG: "] 
  "1000114" -> "1000114"  [ label = "CDG: "] 
  "1000114" -> "1000118"  [ label = "CDG: "] 
  "1000114" -> "1000132"  [ label = "CDG: "] 
  "1000114" -> "1000123"  [ label = "CDG: "] 
  "1000135" -> "1000152"  [ label = "CDG: "] 
  "1000135" -> "1000149"  [ label = "CDG: "] 
  "1000135" -> "1000168"  [ label = "CDG: "] 
  "1000135" -> "1000143"  [ label = "CDG: "] 
  "1000135" -> "1000145"  [ label = "CDG: "] 
  "1000135" -> "1000170"  [ label = "CDG: "] 
  "1000135" -> "1000146"  [ label = "CDG: "] 
  "1000152" -> "1000135"  [ label = "CDG: "] 
  "1000152" -> "1000162"  [ label = "CDG: "] 
  "1000152" -> "1000138"  [ label = "CDG: "] 
  "1000162" -> "1000152"  [ label = "CDG: "] 
  "1000162" -> "1000166"  [ label = "CDG: "] 
  "1000162" -> "1000157"  [ label = "CDG: "] 
  "1000162" -> "1000155"  [ label = "CDG: "] 
  "1000162" -> "1000135"  [ label = "CDG: "] 
  "1000162" -> "1000138"  [ label = "CDG: "] 
}
