digraph "solve" {  
"1000104" [label = "(METHOD,solve)" ]
"1000195" [label = "(METHOD_RETURN,void)" ]
"1000107" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000111" [label = "(<operator>.arithmeticShiftRight,cin>>a[i])" ]
"1000117" [label = "(<operator>.assignment,ans = 0)" ]
"1000121" [label = "(<operator>.assignment,mp[a[i]] = i+1)" ]
"1000190" [label = "(<operator>.shiftLeft,cout<<ans<<endl)" ]
"1000132" [label = "(<operator>.assignment,i=1)" ]
"1000135" [label = "(<operator>.lessEqualsThan,i<=2*n)" ]
"1000140" [label = "(<operator>.postIncrement,i++)" ]
"1000127" [label = "(<operator>.addition,i+1)" ]
"1000192" [label = "(<operator>.shiftLeft,ans<<endl)" ]
"1000137" [label = "(<operator>.multiplication,2*n)" ]
"1000145" [label = "(<operator>.assignment,prod = i)" ]
"1000148" [label = "(<operator>.lessEqualsThan,prod <= 2*n)" ]
"1000153" [label = "(<operator>.assignmentPlus,prod += i)" ]
"1000158" [label = "(<operator>.assignment,j = prod / i)" ]
"1000150" [label = "(<operator>.multiplication,2*n)" ]
"1000164" [label = "(<operator>.logicalAnd,mp.count(i) && mp.count(j) && (mp[i] < mp[j]) && (mp[i] + mp[j] == prod))" ]
"1000160" [label = "(<operator>.division,prod / i)" ]
"1000188" [label = "(<operator>.postIncrement,ans++)" ]
"1000165" [label = "(mp.count,mp.count(i))" ]
"1000167" [label = "(<operator>.logicalAnd,mp.count(j) && (mp[i] < mp[j]) && (mp[i] + mp[j] == prod))" ]
"1000168" [label = "(mp.count,mp.count(j))" ]
"1000170" [label = "(<operator>.logicalAnd,(mp[i] < mp[j]) && (mp[i] + mp[j] == prod))" ]
"1000171" [label = "(<operator>.lessThan,mp[i] < mp[j])" ]
"1000178" [label = "(<operator>.equals,mp[i] + mp[j] == prod)" ]
"1000179" [label = "(<operator>.addition,mp[i] + mp[j])" ]
"1000172" [label = "(<operator>.indirectIndexAccess,mp[i])" ]
"1000175" [label = "(<operator>.indirectIndexAccess,mp[j])" ]
"1000180" [label = "(<operator>.indirectIndexAccess,mp[i])" ]
"1000183" [label = "(<operator>.indirectIndexAccess,mp[j])" ]
  "1000107" -> "1000195"  [ label = "DDG: cin>>n"] 
  "1000111" -> "1000195"  [ label = "DDG: cin"] 
  "1000111" -> "1000195"  [ label = "DDG: a[i]"] 
  "1000111" -> "1000195"  [ label = "DDG: cin>>a[i]"] 
  "1000121" -> "1000195"  [ label = "DDG: mp[a[i]]"] 
  "1000121" -> "1000195"  [ label = "DDG: i+1"] 
  "1000135" -> "1000195"  [ label = "DDG: i"] 
  "1000137" -> "1000195"  [ label = "DDG: n"] 
  "1000135" -> "1000195"  [ label = "DDG: 2*n"] 
  "1000135" -> "1000195"  [ label = "DDG: i<=2*n"] 
  "1000192" -> "1000195"  [ label = "DDG: ans"] 
  "1000190" -> "1000195"  [ label = "DDG: ans<<endl"] 
  "1000190" -> "1000195"  [ label = "DDG: cout<<ans<<endl"] 
  "1000148" -> "1000195"  [ label = "DDG: prod"] 
  "1000148" -> "1000195"  [ label = "DDG: prod <= 2*n"] 
  "1000158" -> "1000195"  [ label = "DDG: j"] 
  "1000158" -> "1000195"  [ label = "DDG: prod / i"] 
  "1000164" -> "1000195"  [ label = "DDG: mp.count(i)"] 
  "1000168" -> "1000195"  [ label = "DDG: j"] 
  "1000167" -> "1000195"  [ label = "DDG: mp.count(j)"] 
  "1000171" -> "1000195"  [ label = "DDG: mp[i]"] 
  "1000171" -> "1000195"  [ label = "DDG: mp[j]"] 
  "1000170" -> "1000195"  [ label = "DDG: mp[i] < mp[j]"] 
  "1000179" -> "1000195"  [ label = "DDG: mp[i]"] 
  "1000179" -> "1000195"  [ label = "DDG: mp[j]"] 
  "1000178" -> "1000195"  [ label = "DDG: mp[i] + mp[j]"] 
  "1000170" -> "1000195"  [ label = "DDG: mp[i] + mp[j] == prod"] 
  "1000167" -> "1000195"  [ label = "DDG: (mp[i] < mp[j]) && (mp[i] + mp[j] == prod)"] 
  "1000164" -> "1000195"  [ label = "DDG: mp.count(j) && (mp[i] < mp[j]) && (mp[i] + mp[j] == prod)"] 
  "1000164" -> "1000195"  [ label = "DDG: mp.count(i) && mp.count(j) && (mp[i] < mp[j]) && (mp[i] + mp[j] == prod)"] 
  "1000192" -> "1000195"  [ label = "DDG: endl"] 
  "1000190" -> "1000195"  [ label = "DDG: cout"] 
  "1000104" -> "1000117"  [ label = "DDG: "] 
  "1000104" -> "1000121"  [ label = "DDG: "] 
  "1000104" -> "1000107"  [ label = "DDG: "] 
  "1000107" -> "1000111"  [ label = "DDG: cin"] 
  "1000104" -> "1000111"  [ label = "DDG: "] 
  "1000104" -> "1000132"  [ label = "DDG: "] 
  "1000104" -> "1000190"  [ label = "DDG: "] 
  "1000192" -> "1000190"  [ label = "DDG: ans"] 
  "1000192" -> "1000190"  [ label = "DDG: endl"] 
  "1000104" -> "1000127"  [ label = "DDG: "] 
  "1000132" -> "1000135"  [ label = "DDG: i"] 
  "1000140" -> "1000135"  [ label = "DDG: i"] 
  "1000104" -> "1000135"  [ label = "DDG: "] 
  "1000137" -> "1000135"  [ label = "DDG: n"] 
  "1000137" -> "1000135"  [ label = "DDG: 2"] 
  "1000104" -> "1000140"  [ label = "DDG: "] 
  "1000135" -> "1000140"  [ label = "DDG: i"] 
  "1000165" -> "1000140"  [ label = "DDG: i"] 
  "1000117" -> "1000192"  [ label = "DDG: ans"] 
  "1000188" -> "1000192"  [ label = "DDG: ans"] 
  "1000104" -> "1000192"  [ label = "DDG: "] 
  "1000104" -> "1000137"  [ label = "DDG: "] 
  "1000107" -> "1000137"  [ label = "DDG: n"] 
  "1000150" -> "1000137"  [ label = "DDG: n"] 
  "1000135" -> "1000145"  [ label = "DDG: i"] 
  "1000104" -> "1000145"  [ label = "DDG: "] 
  "1000165" -> "1000153"  [ label = "DDG: i"] 
  "1000104" -> "1000153"  [ label = "DDG: "] 
  "1000145" -> "1000148"  [ label = "DDG: prod"] 
  "1000153" -> "1000148"  [ label = "DDG: prod"] 
  "1000104" -> "1000148"  [ label = "DDG: "] 
  "1000150" -> "1000148"  [ label = "DDG: 2"] 
  "1000150" -> "1000148"  [ label = "DDG: n"] 
  "1000160" -> "1000153"  [ label = "DDG: prod"] 
  "1000178" -> "1000153"  [ label = "DDG: prod"] 
  "1000160" -> "1000158"  [ label = "DDG: i"] 
  "1000160" -> "1000158"  [ label = "DDG: prod"] 
  "1000104" -> "1000150"  [ label = "DDG: "] 
  "1000137" -> "1000150"  [ label = "DDG: n"] 
  "1000104" -> "1000158"  [ label = "DDG: "] 
  "1000148" -> "1000160"  [ label = "DDG: prod"] 
  "1000104" -> "1000160"  [ label = "DDG: "] 
  "1000135" -> "1000160"  [ label = "DDG: i"] 
  "1000165" -> "1000160"  [ label = "DDG: i"] 
  "1000165" -> "1000164"  [ label = "DDG: i"] 
  "1000167" -> "1000164"  [ label = "DDG: mp.count(j)"] 
  "1000167" -> "1000164"  [ label = "DDG: (mp[i] < mp[j]) && (mp[i] + mp[j] == prod)"] 
  "1000160" -> "1000165"  [ label = "DDG: i"] 
  "1000104" -> "1000165"  [ label = "DDG: "] 
  "1000168" -> "1000167"  [ label = "DDG: j"] 
  "1000170" -> "1000167"  [ label = "DDG: mp[i] < mp[j]"] 
  "1000170" -> "1000167"  [ label = "DDG: mp[i] + mp[j] == prod"] 
  "1000117" -> "1000188"  [ label = "DDG: ans"] 
  "1000104" -> "1000188"  [ label = "DDG: "] 
  "1000158" -> "1000168"  [ label = "DDG: j"] 
  "1000104" -> "1000168"  [ label = "DDG: "] 
  "1000171" -> "1000170"  [ label = "DDG: mp[i]"] 
  "1000171" -> "1000170"  [ label = "DDG: mp[j]"] 
  "1000178" -> "1000170"  [ label = "DDG: mp[i] + mp[j]"] 
  "1000178" -> "1000170"  [ label = "DDG: prod"] 
  "1000171" -> "1000178"  [ label = "DDG: mp[j]"] 
  "1000171" -> "1000178"  [ label = "DDG: mp[i]"] 
  "1000160" -> "1000178"  [ label = "DDG: prod"] 
  "1000104" -> "1000178"  [ label = "DDG: "] 
  "1000171" -> "1000179"  [ label = "DDG: mp[i]"] 
  "1000171" -> "1000179"  [ label = "DDG: mp[j]"] 
  "1000135" -> "1000150"  [ label = "CDG: "] 
  "1000135" -> "1000135"  [ label = "CDG: "] 
  "1000135" -> "1000148"  [ label = "CDG: "] 
  "1000135" -> "1000137"  [ label = "CDG: "] 
  "1000135" -> "1000145"  [ label = "CDG: "] 
  "1000135" -> "1000140"  [ label = "CDG: "] 
  "1000148" -> "1000153"  [ label = "CDG: "] 
  "1000148" -> "1000164"  [ label = "CDG: "] 
  "1000148" -> "1000150"  [ label = "CDG: "] 
  "1000148" -> "1000148"  [ label = "CDG: "] 
  "1000148" -> "1000165"  [ label = "CDG: "] 
  "1000148" -> "1000158"  [ label = "CDG: "] 
  "1000148" -> "1000160"  [ label = "CDG: "] 
  "1000164" -> "1000188"  [ label = "CDG: "] 
  "1000165" -> "1000168"  [ label = "CDG: "] 
  "1000165" -> "1000167"  [ label = "CDG: "] 
  "1000168" -> "1000172"  [ label = "CDG: "] 
  "1000168" -> "1000175"  [ label = "CDG: "] 
  "1000168" -> "1000170"  [ label = "CDG: "] 
  "1000168" -> "1000171"  [ label = "CDG: "] 
  "1000171" -> "1000180"  [ label = "CDG: "] 
  "1000171" -> "1000183"  [ label = "CDG: "] 
  "1000171" -> "1000178"  [ label = "CDG: "] 
  "1000171" -> "1000179"  [ label = "CDG: "] 
}
