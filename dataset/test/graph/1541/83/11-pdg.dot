digraph "isPrime" {  
"1000342" [label = "(METHOD,isPrime)" ]
"1000375" [label = "(METHOD_RETURN,bool)" ]
"1000343" [label = "(PARAM,int n)" ]
"1000373" [label = "(RETURN,return true;,return true;)" ]
"1000346" [label = "(<operator>.equals,n == 1)" ]
"1000354" [label = "(<operator>.assignment,i = 2)" ]
"1000357" [label = "(<operator>.lessEqualsThan,i*i <= n)" ]
"1000362" [label = "(<operator>.postIncrement,i++)" ]
"1000374" [label = "(IDENTIFIER,true,return true;)" ]
"1000350" [label = "(RETURN,return false;,return false;)" ]
"1000351" [label = "(IDENTIFIER,false,return false;)" ]
"1000358" [label = "(<operator>.multiplication,i*i)" ]
"1000366" [label = "(<operator>.equals,n % i == 0)" ]
"1000371" [label = "(RETURN,return false;,return false;)" ]
"1000372" [label = "(IDENTIFIER,false,return false;)" ]
"1000367" [label = "(<operator>.modulo,n % i)" ]
  "1000343" -> "1000375"  [ label = "DDG: n"] 
  "1000346" -> "1000375"  [ label = "DDG: n"] 
  "1000346" -> "1000375"  [ label = "DDG: n == 1"] 
  "1000358" -> "1000375"  [ label = "DDG: i"] 
  "1000357" -> "1000375"  [ label = "DDG: i*i"] 
  "1000357" -> "1000375"  [ label = "DDG: n"] 
  "1000357" -> "1000375"  [ label = "DDG: i*i <= n"] 
  "1000367" -> "1000375"  [ label = "DDG: n"] 
  "1000367" -> "1000375"  [ label = "DDG: i"] 
  "1000366" -> "1000375"  [ label = "DDG: n % i"] 
  "1000366" -> "1000375"  [ label = "DDG: n % i == 0"] 
  "1000373" -> "1000375"  [ label = "DDG: <RET>"] 
  "1000371" -> "1000375"  [ label = "DDG: <RET>"] 
  "1000350" -> "1000375"  [ label = "DDG: <RET>"] 
  "1000342" -> "1000343"  [ label = "DDG: "] 
  "1000374" -> "1000373"  [ label = "DDG: true"] 
  "1000342" -> "1000373"  [ label = "DDG: "] 
  "1000342" -> "1000354"  [ label = "DDG: "] 
  "1000342" -> "1000374"  [ label = "DDG: "] 
  "1000343" -> "1000346"  [ label = "DDG: n"] 
  "1000342" -> "1000346"  [ label = "DDG: "] 
  "1000351" -> "1000350"  [ label = "DDG: false"] 
  "1000342" -> "1000350"  [ label = "DDG: "] 
  "1000358" -> "1000357"  [ label = "DDG: i"] 
  "1000346" -> "1000357"  [ label = "DDG: n"] 
  "1000367" -> "1000357"  [ label = "DDG: n"] 
  "1000343" -> "1000357"  [ label = "DDG: n"] 
  "1000342" -> "1000357"  [ label = "DDG: "] 
  "1000367" -> "1000362"  [ label = "DDG: i"] 
  "1000342" -> "1000362"  [ label = "DDG: "] 
  "1000342" -> "1000351"  [ label = "DDG: "] 
  "1000354" -> "1000358"  [ label = "DDG: i"] 
  "1000362" -> "1000358"  [ label = "DDG: i"] 
  "1000342" -> "1000358"  [ label = "DDG: "] 
  "1000372" -> "1000371"  [ label = "DDG: false"] 
  "1000342" -> "1000371"  [ label = "DDG: "] 
  "1000367" -> "1000366"  [ label = "DDG: i"] 
  "1000367" -> "1000366"  [ label = "DDG: n"] 
  "1000342" -> "1000366"  [ label = "DDG: "] 
  "1000342" -> "1000372"  [ label = "DDG: "] 
  "1000357" -> "1000367"  [ label = "DDG: n"] 
  "1000343" -> "1000367"  [ label = "DDG: n"] 
  "1000342" -> "1000367"  [ label = "DDG: "] 
  "1000358" -> "1000367"  [ label = "DDG: i"] 
  "1000346" -> "1000357"  [ label = "CDG: "] 
  "1000346" -> "1000350"  [ label = "CDG: "] 
  "1000346" -> "1000354"  [ label = "CDG: "] 
  "1000346" -> "1000358"  [ label = "CDG: "] 
  "1000357" -> "1000373"  [ label = "CDG: "] 
  "1000357" -> "1000367"  [ label = "CDG: "] 
  "1000357" -> "1000366"  [ label = "CDG: "] 
  "1000366" -> "1000357"  [ label = "CDG: "] 
  "1000366" -> "1000371"  [ label = "CDG: "] 
  "1000366" -> "1000362"  [ label = "CDG: "] 
  "1000366" -> "1000358"  [ label = "CDG: "] 
}
