digraph "isprime" {  
"1000103" [label = "(METHOD,isprime)" ]
"1000133" [label = "(METHOD_RETURN,bool)" ]
"1000104" [label = "(PARAM,int n)" ]
"1000131" [label = "(RETURN,return true;,return true;)" ]
"1000107" [label = "(<operator>.lessEqualsThan,n <=1)" ]
"1000110" [label = "(RETURN,return false;,return false;)" ]
"1000114" [label = "(<operator>.assignment,i = 2)" ]
"1000117" [label = "(<operator>.lessEqualsThan,i <= sqrt(n))" ]
"1000121" [label = "(<operator>.postIncrement,i++)" ]
"1000132" [label = "(IDENTIFIER,true,return true;)" ]
"1000111" [label = "(IDENTIFIER,false,return false;)" ]
"1000124" [label = "(<operator>.equals,n % i == 0)" ]
"1000129" [label = "(RETURN,return false;,return false;)" ]
"1000119" [label = "(sqrt,sqrt(n))" ]
"1000130" [label = "(IDENTIFIER,false,return false;)" ]
"1000125" [label = "(<operator>.modulo,n % i)" ]
  "1000110" -> "1000133"  [ label = "DDG: <RET>"] 
  "1000104" -> "1000133"  [ label = "DDG: n"] 
  "1000107" -> "1000133"  [ label = "DDG: n"] 
  "1000107" -> "1000133"  [ label = "DDG: n <=1"] 
  "1000117" -> "1000133"  [ label = "DDG: i"] 
  "1000119" -> "1000133"  [ label = "DDG: n"] 
  "1000117" -> "1000133"  [ label = "DDG: sqrt(n)"] 
  "1000117" -> "1000133"  [ label = "DDG: i <= sqrt(n)"] 
  "1000125" -> "1000133"  [ label = "DDG: n"] 
  "1000125" -> "1000133"  [ label = "DDG: i"] 
  "1000124" -> "1000133"  [ label = "DDG: n % i"] 
  "1000124" -> "1000133"  [ label = "DDG: n % i == 0"] 
  "1000129" -> "1000133"  [ label = "DDG: <RET>"] 
  "1000131" -> "1000133"  [ label = "DDG: <RET>"] 
  "1000103" -> "1000104"  [ label = "DDG: "] 
  "1000132" -> "1000131"  [ label = "DDG: true"] 
  "1000103" -> "1000131"  [ label = "DDG: "] 
  "1000111" -> "1000110"  [ label = "DDG: false"] 
  "1000103" -> "1000110"  [ label = "DDG: "] 
  "1000103" -> "1000114"  [ label = "DDG: "] 
  "1000103" -> "1000132"  [ label = "DDG: "] 
  "1000104" -> "1000107"  [ label = "DDG: n"] 
  "1000103" -> "1000107"  [ label = "DDG: "] 
  "1000103" -> "1000111"  [ label = "DDG: "] 
  "1000114" -> "1000117"  [ label = "DDG: i"] 
  "1000121" -> "1000117"  [ label = "DDG: i"] 
  "1000103" -> "1000117"  [ label = "DDG: "] 
  "1000119" -> "1000117"  [ label = "DDG: n"] 
  "1000125" -> "1000121"  [ label = "DDG: i"] 
  "1000103" -> "1000121"  [ label = "DDG: "] 
  "1000130" -> "1000129"  [ label = "DDG: false"] 
  "1000103" -> "1000129"  [ label = "DDG: "] 
  "1000107" -> "1000119"  [ label = "DDG: n"] 
  "1000125" -> "1000119"  [ label = "DDG: n"] 
  "1000104" -> "1000119"  [ label = "DDG: n"] 
  "1000103" -> "1000119"  [ label = "DDG: "] 
  "1000125" -> "1000124"  [ label = "DDG: i"] 
  "1000125" -> "1000124"  [ label = "DDG: n"] 
  "1000103" -> "1000124"  [ label = "DDG: "] 
  "1000103" -> "1000130"  [ label = "DDG: "] 
  "1000119" -> "1000125"  [ label = "DDG: n"] 
  "1000104" -> "1000125"  [ label = "DDG: n"] 
  "1000103" -> "1000125"  [ label = "DDG: "] 
  "1000117" -> "1000125"  [ label = "DDG: i"] 
  "1000107" -> "1000110"  [ label = "CDG: "] 
  "1000107" -> "1000119"  [ label = "CDG: "] 
  "1000107" -> "1000114"  [ label = "CDG: "] 
  "1000107" -> "1000117"  [ label = "CDG: "] 
  "1000117" -> "1000124"  [ label = "CDG: "] 
  "1000117" -> "1000125"  [ label = "CDG: "] 
  "1000117" -> "1000131"  [ label = "CDG: "] 
  "1000124" -> "1000121"  [ label = "CDG: "] 
  "1000124" -> "1000129"  [ label = "CDG: "] 
  "1000124" -> "1000119"  [ label = "CDG: "] 
  "1000124" -> "1000117"  [ label = "CDG: "] 
}
