digraph "solve" {  
"1000613" [label = "(METHOD,solve)" ]
"1000743" [label = "(METHOD_RETURN,void)" ]
"1000616" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000621" [label = "(<operator>.assignment,ans=0)" ]
"1000648" [label = "(sort,sort(arr,arr+n))" ]
"1000674" [label = "(<operator>.assignment,sum[n-1]=arr[n-1])" ]
"1000737" [label = "(<operator>.shiftLeft,cout<<ans<<endl)" ]
"1000742" [label = "(RETURN,return ;,return ;)" ]
"1000626" [label = "(<operator>.assignment,i=0)" ]
"1000629" [label = "(<operator>.lessThan,i<n)" ]
"1000632" [label = "(<operator>.postIncrement,i++)" ]
"1000634" [label = "(<operator>.arithmeticShiftRight,cin>>arr[i])" ]
"1000640" [label = "(<operator>.equals,n==1)" ]
"1000654" [label = "(<operator>.assignment,i=1)" ]
"1000657" [label = "(<operator>.lessThan,i<n)" ]
"1000660" [label = "(<operator>.postIncrement,i++)" ]
"1000662" [label = "(<operator>.assignmentPlus,ans+=(arr[i]-arr[i-1]))" ]
"1000686" [label = "(<operator>.assignment,i=n-2)" ]
"1000691" [label = "(<operator>.greaterEqualsThan,i>=0)" ]
"1000694" [label = "(<operator>.postDecrement,i--)" ]
"1000696" [label = "(<operator>.assignment,sum[i]=arr[i]+sum[i+1])" ]
"1000710" [label = "(<operator>.assignment,i=0)" ]
"1000713" [label = "(<operator>.lessThan,i<n-1)" ]
"1000718" [label = "(<operator>.postIncrement,i++)" ]
"1000720" [label = "(<operator>.assignmentMinus,ans-=(sum[i+1]-(n-1-i)*arr[i]))" ]
"1000644" [label = "(<operator>.shiftLeft,cout<<\"0\n\")" ]
"1000647" [label = "(RETURN,return;,return;)" ]
"1000650" [label = "(<operator>.addition,arr+n)" ]
"1000739" [label = "(<operator>.shiftLeft,ans<<endl)" ]
"1000664" [label = "(<operator>.subtraction,arr[i]-arr[i-1])" ]
"1000677" [label = "(<operator>.subtraction,n-1)" ]
"1000682" [label = "(<operator>.subtraction,n-1)" ]
"1000688" [label = "(<operator>.subtraction,n-2)" ]
"1000700" [label = "(<operator>.addition,arr[i]+sum[i+1])" ]
"1000715" [label = "(<operator>.subtraction,n-1)" ]
"1000722" [label = "(<operator>.subtraction,sum[i+1]-(n-1-i)*arr[i])" ]
"1000728" [label = "(<operator>.multiplication,(n-1-i)*arr[i])" ]
"1000670" [label = "(<operator>.subtraction,i-1)" ]
"1000706" [label = "(<operator>.addition,i+1)" ]
"1000725" [label = "(<operator>.addition,i+1)" ]
"1000729" [label = "(<operator>.subtraction,n-1-i)" ]
"1000731" [label = "(<operator>.subtraction,1-i)" ]
"1000675" [label = "(<operator>.indirectIndexAccess,sum[n-1])" ]
"1000680" [label = "(<operator>.indirectIndexAccess,arr[n-1])" ]
"1000636" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000697" [label = "(<operator>.indirectIndexAccess,sum[i])" ]
"1000665" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000668" [label = "(<operator>.indirectIndexAccess,arr[i-1])" ]
"1000701" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000704" [label = "(<operator>.indirectIndexAccess,sum[i+1])" ]
"1000723" [label = "(<operator>.indirectIndexAccess,sum[i+1])" ]
"1000734" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
  "1000616" -> "1000743"  [ label = "DDG: cin"] 
  "1000616" -> "1000743"  [ label = "DDG: cin>>n"] 
  "1000621" -> "1000743"  [ label = "DDG: ans"] 
  "1000629" -> "1000743"  [ label = "DDG: i"] 
  "1000629" -> "1000743"  [ label = "DDG: i<n"] 
  "1000640" -> "1000743"  [ label = "DDG: n"] 
  "1000640" -> "1000743"  [ label = "DDG: n==1"] 
  "1000648" -> "1000743"  [ label = "DDG: arr"] 
  "1000648" -> "1000743"  [ label = "DDG: arr+n"] 
  "1000648" -> "1000743"  [ label = "DDG: sort(arr,arr+n)"] 
  "1000657" -> "1000743"  [ label = "DDG: i<n"] 
  "1000674" -> "1000743"  [ label = "DDG: sum[n-1]"] 
  "1000674" -> "1000743"  [ label = "DDG: arr[n-1]"] 
  "1000686" -> "1000743"  [ label = "DDG: n-2"] 
  "1000691" -> "1000743"  [ label = "DDG: i>=0"] 
  "1000713" -> "1000743"  [ label = "DDG: i"] 
  "1000715" -> "1000743"  [ label = "DDG: n"] 
  "1000713" -> "1000743"  [ label = "DDG: n-1"] 
  "1000713" -> "1000743"  [ label = "DDG: i<n-1"] 
  "1000737" -> "1000743"  [ label = "DDG: cout"] 
  "1000739" -> "1000743"  [ label = "DDG: ans"] 
  "1000737" -> "1000743"  [ label = "DDG: ans<<endl"] 
  "1000737" -> "1000743"  [ label = "DDG: cout<<ans<<endl"] 
  "1000722" -> "1000743"  [ label = "DDG: sum[i+1]"] 
  "1000729" -> "1000743"  [ label = "DDG: 1-i"] 
  "1000728" -> "1000743"  [ label = "DDG: n-1-i"] 
  "1000728" -> "1000743"  [ label = "DDG: arr[i]"] 
  "1000722" -> "1000743"  [ label = "DDG: (n-1-i)*arr[i]"] 
  "1000720" -> "1000743"  [ label = "DDG: sum[i+1]-(n-1-i)*arr[i]"] 
  "1000696" -> "1000743"  [ label = "DDG: sum[i]"] 
  "1000700" -> "1000743"  [ label = "DDG: arr[i]"] 
  "1000700" -> "1000743"  [ label = "DDG: sum[i+1]"] 
  "1000696" -> "1000743"  [ label = "DDG: arr[i]+sum[i+1]"] 
  "1000664" -> "1000743"  [ label = "DDG: arr[i]"] 
  "1000664" -> "1000743"  [ label = "DDG: arr[i-1]"] 
  "1000662" -> "1000743"  [ label = "DDG: arr[i]-arr[i-1]"] 
  "1000644" -> "1000743"  [ label = "DDG: cout"] 
  "1000644" -> "1000743"  [ label = "DDG: cout<<\"0\n\""] 
  "1000634" -> "1000743"  [ label = "DDG: cin"] 
  "1000634" -> "1000743"  [ label = "DDG: arr[i]"] 
  "1000634" -> "1000743"  [ label = "DDG: cin>>arr[i]"] 
  "1000742" -> "1000743"  [ label = "DDG: <RET>"] 
  "1000647" -> "1000743"  [ label = "DDG: <RET>"] 
  "1000739" -> "1000743"  [ label = "DDG: endl"] 
  "1000613" -> "1000621"  [ label = "DDG: "] 
  "1000648" -> "1000674"  [ label = "DDG: arr"] 
  "1000613" -> "1000742"  [ label = "DDG: "] 
  "1000613" -> "1000616"  [ label = "DDG: "] 
  "1000613" -> "1000626"  [ label = "DDG: "] 
  "1000634" -> "1000648"  [ label = "DDG: arr[i]"] 
  "1000613" -> "1000648"  [ label = "DDG: "] 
  "1000640" -> "1000648"  [ label = "DDG: n"] 
  "1000613" -> "1000654"  [ label = "DDG: "] 
  "1000664" -> "1000662"  [ label = "DDG: arr[i-1]"] 
  "1000664" -> "1000662"  [ label = "DDG: arr[i]"] 
  "1000688" -> "1000686"  [ label = "DDG: n"] 
  "1000688" -> "1000686"  [ label = "DDG: 2"] 
  "1000648" -> "1000696"  [ label = "DDG: arr"] 
  "1000664" -> "1000696"  [ label = "DDG: arr[i]"] 
  "1000634" -> "1000696"  [ label = "DDG: arr[i]"] 
  "1000613" -> "1000710"  [ label = "DDG: "] 
  "1000722" -> "1000720"  [ label = "DDG: sum[i+1]"] 
  "1000722" -> "1000720"  [ label = "DDG: (n-1-i)*arr[i]"] 
  "1000613" -> "1000737"  [ label = "DDG: "] 
  "1000739" -> "1000737"  [ label = "DDG: ans"] 
  "1000739" -> "1000737"  [ label = "DDG: endl"] 
  "1000626" -> "1000629"  [ label = "DDG: i"] 
  "1000632" -> "1000629"  [ label = "DDG: i"] 
  "1000613" -> "1000629"  [ label = "DDG: "] 
  "1000616" -> "1000629"  [ label = "DDG: n"] 
  "1000629" -> "1000632"  [ label = "DDG: i"] 
  "1000613" -> "1000632"  [ label = "DDG: "] 
  "1000616" -> "1000634"  [ label = "DDG: cin"] 
  "1000613" -> "1000634"  [ label = "DDG: "] 
  "1000629" -> "1000640"  [ label = "DDG: n"] 
  "1000613" -> "1000640"  [ label = "DDG: "] 
  "1000613" -> "1000647"  [ label = "DDG: "] 
  "1000634" -> "1000650"  [ label = "DDG: arr[i]"] 
  "1000613" -> "1000650"  [ label = "DDG: "] 
  "1000640" -> "1000650"  [ label = "DDG: n"] 
  "1000654" -> "1000657"  [ label = "DDG: i"] 
  "1000660" -> "1000657"  [ label = "DDG: i"] 
  "1000613" -> "1000657"  [ label = "DDG: "] 
  "1000640" -> "1000657"  [ label = "DDG: n"] 
  "1000670" -> "1000660"  [ label = "DDG: i"] 
  "1000613" -> "1000660"  [ label = "DDG: "] 
  "1000621" -> "1000662"  [ label = "DDG: ans"] 
  "1000613" -> "1000662"  [ label = "DDG: "] 
  "1000613" -> "1000686"  [ label = "DDG: "] 
  "1000686" -> "1000691"  [ label = "DDG: i"] 
  "1000694" -> "1000691"  [ label = "DDG: i"] 
  "1000613" -> "1000691"  [ label = "DDG: "] 
  "1000613" -> "1000694"  [ label = "DDG: "] 
  "1000691" -> "1000694"  [ label = "DDG: i"] 
  "1000710" -> "1000713"  [ label = "DDG: i"] 
  "1000718" -> "1000713"  [ label = "DDG: i"] 
  "1000613" -> "1000713"  [ label = "DDG: "] 
  "1000715" -> "1000713"  [ label = "DDG: n"] 
  "1000715" -> "1000713"  [ label = "DDG: 1"] 
  "1000731" -> "1000718"  [ label = "DDG: i"] 
  "1000613" -> "1000718"  [ label = "DDG: "] 
  "1000621" -> "1000720"  [ label = "DDG: ans"] 
  "1000662" -> "1000720"  [ label = "DDG: ans"] 
  "1000613" -> "1000720"  [ label = "DDG: "] 
  "1000621" -> "1000739"  [ label = "DDG: ans"] 
  "1000720" -> "1000739"  [ label = "DDG: ans"] 
  "1000662" -> "1000739"  [ label = "DDG: ans"] 
  "1000613" -> "1000739"  [ label = "DDG: "] 
  "1000613" -> "1000644"  [ label = "DDG: "] 
  "1000648" -> "1000664"  [ label = "DDG: arr"] 
  "1000634" -> "1000664"  [ label = "DDG: arr[i]"] 
  "1000657" -> "1000677"  [ label = "DDG: n"] 
  "1000613" -> "1000677"  [ label = "DDG: "] 
  "1000677" -> "1000682"  [ label = "DDG: n"] 
  "1000613" -> "1000682"  [ label = "DDG: "] 
  "1000682" -> "1000688"  [ label = "DDG: n"] 
  "1000613" -> "1000688"  [ label = "DDG: "] 
  "1000648" -> "1000700"  [ label = "DDG: arr"] 
  "1000664" -> "1000700"  [ label = "DDG: arr[i]"] 
  "1000634" -> "1000700"  [ label = "DDG: arr[i]"] 
  "1000688" -> "1000715"  [ label = "DDG: n"] 
  "1000729" -> "1000715"  [ label = "DDG: n"] 
  "1000613" -> "1000715"  [ label = "DDG: "] 
  "1000728" -> "1000722"  [ label = "DDG: n-1-i"] 
  "1000728" -> "1000722"  [ label = "DDG: arr[i]"] 
  "1000729" -> "1000728"  [ label = "DDG: 1-i"] 
  "1000729" -> "1000728"  [ label = "DDG: n"] 
  "1000648" -> "1000728"  [ label = "DDG: arr"] 
  "1000664" -> "1000728"  [ label = "DDG: arr[i]"] 
  "1000634" -> "1000728"  [ label = "DDG: arr[i]"] 
  "1000657" -> "1000670"  [ label = "DDG: i"] 
  "1000613" -> "1000670"  [ label = "DDG: "] 
  "1000691" -> "1000706"  [ label = "DDG: i"] 
  "1000613" -> "1000706"  [ label = "DDG: "] 
  "1000713" -> "1000725"  [ label = "DDG: i"] 
  "1000613" -> "1000725"  [ label = "DDG: "] 
  "1000715" -> "1000729"  [ label = "DDG: n"] 
  "1000613" -> "1000729"  [ label = "DDG: "] 
  "1000731" -> "1000729"  [ label = "DDG: 1"] 
  "1000731" -> "1000729"  [ label = "DDG: i"] 
  "1000613" -> "1000731"  [ label = "DDG: "] 
  "1000713" -> "1000731"  [ label = "DDG: i"] 
  "1000629" -> "1000634"  [ label = "CDG: "] 
  "1000629" -> "1000632"  [ label = "CDG: "] 
  "1000629" -> "1000629"  [ label = "CDG: "] 
  "1000629" -> "1000636"  [ label = "CDG: "] 
  "1000640" -> "1000644"  [ label = "CDG: "] 
  "1000640" -> "1000691"  [ label = "CDG: "] 
  "1000640" -> "1000688"  [ label = "CDG: "] 
  "1000640" -> "1000654"  [ label = "CDG: "] 
  "1000640" -> "1000657"  [ label = "CDG: "] 
  "1000640" -> "1000680"  [ label = "CDG: "] 
  "1000640" -> "1000686"  [ label = "CDG: "] 
  "1000640" -> "1000710"  [ label = "CDG: "] 
  "1000640" -> "1000715"  [ label = "CDG: "] 
  "1000640" -> "1000713"  [ label = "CDG: "] 
  "1000640" -> "1000650"  [ label = "CDG: "] 
  "1000640" -> "1000742"  [ label = "CDG: "] 
  "1000640" -> "1000739"  [ label = "CDG: "] 
  "1000640" -> "1000647"  [ label = "CDG: "] 
  "1000640" -> "1000682"  [ label = "CDG: "] 
  "1000640" -> "1000674"  [ label = "CDG: "] 
  "1000640" -> "1000737"  [ label = "CDG: "] 
  "1000640" -> "1000675"  [ label = "CDG: "] 
  "1000640" -> "1000648"  [ label = "CDG: "] 
  "1000640" -> "1000677"  [ label = "CDG: "] 
  "1000657" -> "1000670"  [ label = "CDG: "] 
  "1000657" -> "1000657"  [ label = "CDG: "] 
  "1000657" -> "1000660"  [ label = "CDG: "] 
  "1000657" -> "1000664"  [ label = "CDG: "] 
  "1000657" -> "1000668"  [ label = "CDG: "] 
  "1000657" -> "1000665"  [ label = "CDG: "] 
  "1000657" -> "1000662"  [ label = "CDG: "] 
  "1000691" -> "1000691"  [ label = "CDG: "] 
  "1000691" -> "1000694"  [ label = "CDG: "] 
  "1000691" -> "1000706"  [ label = "CDG: "] 
  "1000691" -> "1000697"  [ label = "CDG: "] 
  "1000691" -> "1000701"  [ label = "CDG: "] 
  "1000691" -> "1000696"  [ label = "CDG: "] 
  "1000691" -> "1000704"  [ label = "CDG: "] 
  "1000691" -> "1000700"  [ label = "CDG: "] 
  "1000713" -> "1000728"  [ label = "CDG: "] 
  "1000713" -> "1000725"  [ label = "CDG: "] 
  "1000713" -> "1000731"  [ label = "CDG: "] 
  "1000713" -> "1000715"  [ label = "CDG: "] 
  "1000713" -> "1000713"  [ label = "CDG: "] 
  "1000713" -> "1000718"  [ label = "CDG: "] 
  "1000713" -> "1000734"  [ label = "CDG: "] 
  "1000713" -> "1000720"  [ label = "CDG: "] 
  "1000713" -> "1000722"  [ label = "CDG: "] 
  "1000713" -> "1000729"  [ label = "CDG: "] 
  "1000713" -> "1000723"  [ label = "CDG: "] 
}
