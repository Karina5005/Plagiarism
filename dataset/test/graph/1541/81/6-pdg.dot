digraph "prime_factorization" {  
"1000406" [label = "(METHOD,prime_factorization)" ]
"1000444" [label = "(METHOD_RETURN,vector<int>)" ]
"1000407" [label = "(PARAM,long long n)" ]
"1000410" [label = "(<operator>.assignment,i =2)" ]
"1000442" [label = "(RETURN,return result;,return result;)" ]
"1000415" [label = "(<operator>.notEquals,n!=1)" ]
"1000434" [label = "(<operator>.notEquals,n!=1)" ]
"1000443" [label = "(IDENTIFIER,result,return result;)" ]
"1000431" [label = "(<operator>.postIncrement,i++)" ]
"1000438" [label = "(<operator>.postIncrement,result[n]++)" ]
"1000420" [label = "(<operator>.equals,n%i == 0)" ]
"1000426" [label = "(result.push_back,result.push_back(i))" ]
"1000428" [label = "(<operator>.assignmentDivision,n/=i)" ]
"1000421" [label = "(<operator>.modulo,n%i)" ]
"1000439" [label = "(<operator>.indirectIndexAccess,result[n])" ]
  "1000442" -> "1000444"  [ label = "DDG: <RET>"] 
  "1000407" -> "1000444"  [ label = "DDG: n"] 
  "1000410" -> "1000444"  [ label = "DDG: i"] 
  "1000434" -> "1000444"  [ label = "DDG: n"] 
  "1000434" -> "1000444"  [ label = "DDG: n!=1"] 
  "1000438" -> "1000444"  [ label = "DDG: result[n]"] 
  "1000420" -> "1000444"  [ label = "DDG: n%i"] 
  "1000420" -> "1000444"  [ label = "DDG: n%i == 0"] 
  "1000431" -> "1000444"  [ label = "DDG: i"] 
  "1000426" -> "1000444"  [ label = "DDG: result.push_back(i)"] 
  "1000406" -> "1000407"  [ label = "DDG: "] 
  "1000406" -> "1000410"  [ label = "DDG: "] 
  "1000443" -> "1000442"  [ label = "DDG: result"] 
  "1000438" -> "1000442"  [ label = "DDG: result[n]"] 
  "1000406" -> "1000443"  [ label = "DDG: "] 
  "1000421" -> "1000415"  [ label = "DDG: n"] 
  "1000407" -> "1000415"  [ label = "DDG: n"] 
  "1000406" -> "1000415"  [ label = "DDG: "] 
  "1000415" -> "1000434"  [ label = "DDG: n"] 
  "1000407" -> "1000434"  [ label = "DDG: n"] 
  "1000406" -> "1000434"  [ label = "DDG: "] 
  "1000421" -> "1000431"  [ label = "DDG: i"] 
  "1000406" -> "1000431"  [ label = "DDG: "] 
  "1000421" -> "1000420"  [ label = "DDG: i"] 
  "1000421" -> "1000420"  [ label = "DDG: n"] 
  "1000406" -> "1000420"  [ label = "DDG: "] 
  "1000426" -> "1000428"  [ label = "DDG: i"] 
  "1000406" -> "1000428"  [ label = "DDG: "] 
  "1000415" -> "1000421"  [ label = "DDG: n"] 
  "1000428" -> "1000421"  [ label = "DDG: n"] 
  "1000407" -> "1000421"  [ label = "DDG: n"] 
  "1000406" -> "1000421"  [ label = "DDG: "] 
  "1000410" -> "1000421"  [ label = "DDG: i"] 
  "1000431" -> "1000421"  [ label = "DDG: i"] 
  "1000426" -> "1000421"  [ label = "DDG: i"] 
  "1000421" -> "1000426"  [ label = "DDG: i"] 
  "1000406" -> "1000426"  [ label = "DDG: "] 
  "1000421" -> "1000428"  [ label = "DDG: n"] 
  "1000407" -> "1000428"  [ label = "DDG: n"] 
  "1000415" -> "1000431"  [ label = "CDG: "] 
  "1000415" -> "1000415"  [ label = "CDG: "] 
  "1000415" -> "1000420"  [ label = "CDG: "] 
  "1000415" -> "1000421"  [ label = "CDG: "] 
  "1000434" -> "1000438"  [ label = "CDG: "] 
  "1000434" -> "1000439"  [ label = "CDG: "] 
  "1000420" -> "1000420"  [ label = "CDG: "] 
  "1000420" -> "1000428"  [ label = "CDG: "] 
  "1000420" -> "1000426"  [ label = "CDG: "] 
  "1000420" -> "1000421"  [ label = "CDG: "] 
}
