digraph "solve" {  
"1000702" [label = "(METHOD,solve)" ]
"1000817" [label = "(METHOD_RETURN,void)" ]
"1000705" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000708" [label = "(<operator>.arithmeticShiftRight,int>>v(n))" ]
"1000735" [label = "(sort,sort(v.begin(),v.end()))" ]
"1000739" [label = "(<operator>.assignment,result =0)" ]
"1000811" [label = "(<operator>.shiftLeft,cout<<result<<endl)" ]
"1000816" [label = "(RETURN,return ;,return ;)" ]
"1000714" [label = "(<operator>.assignment,i=0)" ]
"1000717" [label = "(<operator>.lessThan,i<n)" ]
"1000720" [label = "(<operator>.preIncrement,++i)" ]
"1000744" [label = "(<operator>.assignment,i=0)" ]
"1000747" [label = "(<operator>.lessThan,i<v.size())" ]
"1000750" [label = "(<operator>.preIncrement,++i)" ]
"1000710" [label = "(v,v(n))" ]
"1000724" [label = "(<operator>.arithmeticShiftRight,cin>>s)" ]
"1000813" [label = "(<operator>.shiftLeft,result<<endl)" ]
"1000728" [label = "(<operator>.lessEqualsThan,s<=(2*n))" ]
"1000755" [label = "(<operator>.assignment,j=i+1)" ]
"1000760" [label = "(<operator>.lessThan,j<v.size())" ]
"1000763" [label = "(<operator>.preIncrement,++j)" ]
"1000730" [label = "(<operator>.multiplication,2*n)" ]
"1000757" [label = "(<operator>.addition,i+1)" ]
"1000767" [label = "(<operator>.greaterThan,(v[i].first*v[j].first)>2*n)" ]
"1000785" [label = "(<operator>.equals,(v[i].first*v[j].first) == (v[i].second+v[j].second))" ]
"1000809" [label = "(<operator>.postIncrement,result++)" ]
"1000768" [label = "(<operator>.multiplication,v[i].first*v[j].first)" ]
"1000779" [label = "(<operator>.multiplication,2*n)" ]
"1000786" [label = "(<operator>.multiplication,v[i].first*v[j].first)" ]
"1000797" [label = "(<operator>.addition,v[i].second+v[j].second)" ]
"1000749" [label = "(v.size,v.size())" ]
"1000762" [label = "(v.size,v.size())" ]
"1000769" [label = "(<operator>.fieldAccess,v[i].first)" ]
"1000774" [label = "(<operator>.fieldAccess,v[j].first)" ]
"1000787" [label = "(<operator>.fieldAccess,v[i].first)" ]
"1000792" [label = "(<operator>.fieldAccess,v[j].first)" ]
"1000798" [label = "(<operator>.fieldAccess,v[i].second)" ]
"1000803" [label = "(<operator>.fieldAccess,v[j].second)" ]
"1000770" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000773" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1000775" [label = "(<operator>.indirectIndexAccess,v[j])" ]
"1000778" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1000788" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000791" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1000793" [label = "(<operator>.indirectIndexAccess,v[j])" ]
"1000796" [label = "(FIELD_IDENTIFIER,first,first)" ]
"1000799" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000802" [label = "(FIELD_IDENTIFIER,second,second)" ]
"1000804" [label = "(<operator>.indirectIndexAccess,v[j])" ]
"1000807" [label = "(FIELD_IDENTIFIER,second,second)" ]
  "1000705" -> "1000817"  [ label = "DDG: cin"] 
  "1000705" -> "1000817"  [ label = "DDG: cin>>n"] 
  "1000708" -> "1000817"  [ label = "DDG: v(n)"] 
  "1000708" -> "1000817"  [ label = "DDG: int>>v(n)"] 
  "1000717" -> "1000817"  [ label = "DDG: n"] 
  "1000717" -> "1000817"  [ label = "DDG: i<n"] 
  "1000735" -> "1000817"  [ label = "DDG: v.begin()"] 
  "1000735" -> "1000817"  [ label = "DDG: v.end()"] 
  "1000735" -> "1000817"  [ label = "DDG: sort(v.begin(),v.end())"] 
  "1000747" -> "1000817"  [ label = "DDG: i"] 
  "1000747" -> "1000817"  [ label = "DDG: v.size()"] 
  "1000747" -> "1000817"  [ label = "DDG: i<v.size()"] 
  "1000757" -> "1000817"  [ label = "DDG: i"] 
  "1000755" -> "1000817"  [ label = "DDG: i+1"] 
  "1000760" -> "1000817"  [ label = "DDG: j"] 
  "1000760" -> "1000817"  [ label = "DDG: v.size()"] 
  "1000760" -> "1000817"  [ label = "DDG: j<v.size()"] 
  "1000768" -> "1000817"  [ label = "DDG: v[i].first"] 
  "1000768" -> "1000817"  [ label = "DDG: v[j].first"] 
  "1000767" -> "1000817"  [ label = "DDG: v[i].first*v[j].first"] 
  "1000779" -> "1000817"  [ label = "DDG: n"] 
  "1000767" -> "1000817"  [ label = "DDG: 2*n"] 
  "1000767" -> "1000817"  [ label = "DDG: (v[i].first*v[j].first)>2*n"] 
  "1000786" -> "1000817"  [ label = "DDG: v[i].first"] 
  "1000786" -> "1000817"  [ label = "DDG: v[j].first"] 
  "1000785" -> "1000817"  [ label = "DDG: v[i].first*v[j].first"] 
  "1000797" -> "1000817"  [ label = "DDG: v[i].second"] 
  "1000797" -> "1000817"  [ label = "DDG: v[j].second"] 
  "1000785" -> "1000817"  [ label = "DDG: v[i].second+v[j].second"] 
  "1000785" -> "1000817"  [ label = "DDG: (v[i].first*v[j].first) == (v[i].second+v[j].second)"] 
  "1000813" -> "1000817"  [ label = "DDG: result"] 
  "1000811" -> "1000817"  [ label = "DDG: result<<endl"] 
  "1000811" -> "1000817"  [ label = "DDG: cout<<result<<endl"] 
  "1000724" -> "1000817"  [ label = "DDG: cin"] 
  "1000724" -> "1000817"  [ label = "DDG: cin>>s"] 
  "1000728" -> "1000817"  [ label = "DDG: s"] 
  "1000728" -> "1000817"  [ label = "DDG: 2*n"] 
  "1000728" -> "1000817"  [ label = "DDG: s<=(2*n)"] 
  "1000816" -> "1000817"  [ label = "DDG: <RET>"] 
  "1000811" -> "1000817"  [ label = "DDG: cout"] 
  "1000708" -> "1000817"  [ label = "DDG: int"] 
  "1000813" -> "1000817"  [ label = "DDG: endl"] 
  "1000702" -> "1000739"  [ label = "DDG: "] 
  "1000702" -> "1000816"  [ label = "DDG: "] 
  "1000702" -> "1000705"  [ label = "DDG: "] 
  "1000702" -> "1000708"  [ label = "DDG: "] 
  "1000710" -> "1000708"  [ label = "DDG: n"] 
  "1000702" -> "1000714"  [ label = "DDG: "] 
  "1000702" -> "1000735"  [ label = "DDG: "] 
  "1000702" -> "1000744"  [ label = "DDG: "] 
  "1000702" -> "1000811"  [ label = "DDG: "] 
  "1000813" -> "1000811"  [ label = "DDG: endl"] 
  "1000813" -> "1000811"  [ label = "DDG: result"] 
  "1000705" -> "1000710"  [ label = "DDG: n"] 
  "1000702" -> "1000710"  [ label = "DDG: "] 
  "1000714" -> "1000717"  [ label = "DDG: i"] 
  "1000720" -> "1000717"  [ label = "DDG: i"] 
  "1000702" -> "1000717"  [ label = "DDG: "] 
  "1000710" -> "1000717"  [ label = "DDG: n"] 
  "1000730" -> "1000717"  [ label = "DDG: n"] 
  "1000717" -> "1000720"  [ label = "DDG: i"] 
  "1000702" -> "1000720"  [ label = "DDG: "] 
  "1000744" -> "1000747"  [ label = "DDG: i"] 
  "1000750" -> "1000747"  [ label = "DDG: i"] 
  "1000702" -> "1000747"  [ label = "DDG: "] 
  "1000702" -> "1000750"  [ label = "DDG: "] 
  "1000747" -> "1000750"  [ label = "DDG: i"] 
  "1000739" -> "1000813"  [ label = "DDG: result"] 
  "1000809" -> "1000813"  [ label = "DDG: result"] 
  "1000702" -> "1000813"  [ label = "DDG: "] 
  "1000705" -> "1000724"  [ label = "DDG: cin"] 
  "1000702" -> "1000724"  [ label = "DDG: "] 
  "1000728" -> "1000724"  [ label = "DDG: s"] 
  "1000747" -> "1000755"  [ label = "DDG: i"] 
  "1000702" -> "1000755"  [ label = "DDG: "] 
  "1000724" -> "1000728"  [ label = "DDG: s"] 
  "1000702" -> "1000728"  [ label = "DDG: "] 
  "1000730" -> "1000728"  [ label = "DDG: n"] 
  "1000730" -> "1000728"  [ label = "DDG: 2"] 
  "1000755" -> "1000760"  [ label = "DDG: j"] 
  "1000763" -> "1000760"  [ label = "DDG: j"] 
  "1000702" -> "1000760"  [ label = "DDG: "] 
  "1000760" -> "1000763"  [ label = "DDG: j"] 
  "1000702" -> "1000763"  [ label = "DDG: "] 
  "1000702" -> "1000730"  [ label = "DDG: "] 
  "1000717" -> "1000730"  [ label = "DDG: n"] 
  "1000747" -> "1000757"  [ label = "DDG: i"] 
  "1000702" -> "1000757"  [ label = "DDG: "] 
  "1000768" -> "1000767"  [ label = "DDG: v[j].first"] 
  "1000768" -> "1000767"  [ label = "DDG: v[i].first"] 
  "1000779" -> "1000767"  [ label = "DDG: n"] 
  "1000779" -> "1000767"  [ label = "DDG: 2"] 
  "1000786" -> "1000785"  [ label = "DDG: v[i].first"] 
  "1000786" -> "1000785"  [ label = "DDG: v[j].first"] 
  "1000786" -> "1000768"  [ label = "DDG: v[i].first"] 
  "1000786" -> "1000768"  [ label = "DDG: v[j].first"] 
  "1000702" -> "1000779"  [ label = "DDG: "] 
  "1000717" -> "1000779"  [ label = "DDG: n"] 
  "1000768" -> "1000786"  [ label = "DDG: v[i].first"] 
  "1000768" -> "1000786"  [ label = "DDG: v[j].first"] 
  "1000739" -> "1000809"  [ label = "DDG: result"] 
  "1000702" -> "1000809"  [ label = "DDG: "] 
  "1000717" -> "1000728"  [ label = "CDG: "] 
  "1000717" -> "1000717"  [ label = "CDG: "] 
  "1000717" -> "1000720"  [ label = "CDG: "] 
  "1000717" -> "1000730"  [ label = "CDG: "] 
  "1000717" -> "1000724"  [ label = "CDG: "] 
  "1000747" -> "1000760"  [ label = "CDG: "] 
  "1000747" -> "1000755"  [ label = "CDG: "] 
  "1000747" -> "1000757"  [ label = "CDG: "] 
  "1000747" -> "1000762"  [ label = "CDG: "] 
  "1000760" -> "1000775"  [ label = "CDG: "] 
  "1000760" -> "1000774"  [ label = "CDG: "] 
  "1000760" -> "1000773"  [ label = "CDG: "] 
  "1000760" -> "1000767"  [ label = "CDG: "] 
  "1000760" -> "1000778"  [ label = "CDG: "] 
  "1000760" -> "1000750"  [ label = "CDG: "] 
  "1000760" -> "1000768"  [ label = "CDG: "] 
  "1000760" -> "1000770"  [ label = "CDG: "] 
  "1000760" -> "1000769"  [ label = "CDG: "] 
  "1000760" -> "1000749"  [ label = "CDG: "] 
  "1000760" -> "1000747"  [ label = "CDG: "] 
  "1000760" -> "1000779"  [ label = "CDG: "] 
  "1000767" -> "1000760"  [ label = "CDG: "] 
  "1000767" -> "1000807"  [ label = "CDG: "] 
  "1000767" -> "1000785"  [ label = "CDG: "] 
  "1000767" -> "1000802"  [ label = "CDG: "] 
  "1000767" -> "1000804"  [ label = "CDG: "] 
  "1000767" -> "1000798"  [ label = "CDG: "] 
  "1000767" -> "1000799"  [ label = "CDG: "] 
  "1000767" -> "1000791"  [ label = "CDG: "] 
  "1000767" -> "1000786"  [ label = "CDG: "] 
  "1000767" -> "1000803"  [ label = "CDG: "] 
  "1000767" -> "1000788"  [ label = "CDG: "] 
  "1000767" -> "1000797"  [ label = "CDG: "] 
  "1000767" -> "1000787"  [ label = "CDG: "] 
  "1000767" -> "1000796"  [ label = "CDG: "] 
  "1000767" -> "1000793"  [ label = "CDG: "] 
  "1000767" -> "1000762"  [ label = "CDG: "] 
  "1000767" -> "1000792"  [ label = "CDG: "] 
  "1000767" -> "1000763"  [ label = "CDG: "] 
  "1000767" -> "1000750"  [ label = "CDG: "] 
  "1000767" -> "1000749"  [ label = "CDG: "] 
  "1000767" -> "1000747"  [ label = "CDG: "] 
  "1000785" -> "1000809"  [ label = "CDG: "] 
}
