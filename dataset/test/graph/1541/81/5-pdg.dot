digraph "subset" {  
"1000343" [label = "(METHOD,subset)" ]
"1000405" [label = "(METHOD_RETURN,int)" ]
"1000344" [label = "(PARAM,vector<int>v)" ]
"1000347" [label = "(<operator>.assignment,range = v.size())" ]
"1000350" [label = "(<operator>.assignment,range = pow(2,range)-1)" ]
"1000357" [label = "(<operator>.lessThan,vector<vector<int>>result)" ]
"1000403" [label = "(RETURN,return result;,return result;)" ]
"1000366" [label = "(<operator>.assignment,i=0)" ]
"1000369" [label = "(<operator>.lessEqualsThan,i<=range)" ]
"1000372" [label = "(<operator>.preIncrement,++i)" ]
"1000404" [label = "(IDENTIFIER,result,return result;)" ]
"1000352" [label = "(<operator>.subtraction,pow(2,range)-1)" ]
"1000359" [label = "(<operator>.lessThan,vector<int>>result)" ]
"1000400" [label = "(result.push_back,result.push_back(check))" ]
"1000402" [label = "(check.clear,check.clear())" ]
"1000353" [label = "(pow,pow(2,range))" ]
"1000361" [label = "(<operator>.arithmeticShiftRight,int>>result)" ]
"1000378" [label = "(<operator>.assignment,j = 0)" ]
"1000381" [label = "(<operator>.lessThan,j<v.size())" ]
"1000384" [label = "(<operator>.preIncrement,++j)" ]
"1000388" [label = "(<operator>.notEquals,(i&(1<<j))!=0)" ]
"1000396" [label = "(check.push_back,check.push_back(v[j]))" ]
"1000389" [label = "(<operator>.and,i&(1<<j))" ]
"1000391" [label = "(<operator>.shiftLeft,1<<j)" ]
"1000383" [label = "(v.size,v.size())" ]
"1000397" [label = "(<operator>.indirectIndexAccess,v[j])" ]
  "1000344" -> "1000405"  [ label = "DDG: v"] 
  "1000347" -> "1000405"  [ label = "DDG: v.size()"] 
  "1000352" -> "1000405"  [ label = "DDG: pow(2,range)"] 
  "1000350" -> "1000405"  [ label = "DDG: pow(2,range)-1"] 
  "1000357" -> "1000405"  [ label = "DDG: vector"] 
  "1000361" -> "1000405"  [ label = "DDG: result"] 
  "1000359" -> "1000405"  [ label = "DDG: int>>result"] 
  "1000357" -> "1000405"  [ label = "DDG: vector<int>>result"] 
  "1000357" -> "1000405"  [ label = "DDG: vector<vector<int>>result"] 
  "1000369" -> "1000405"  [ label = "DDG: i"] 
  "1000369" -> "1000405"  [ label = "DDG: range"] 
  "1000369" -> "1000405"  [ label = "DDG: i<=range"] 
  "1000381" -> "1000405"  [ label = "DDG: j"] 
  "1000381" -> "1000405"  [ label = "DDG: v.size()"] 
  "1000381" -> "1000405"  [ label = "DDG: j<v.size()"] 
  "1000400" -> "1000405"  [ label = "DDG: check"] 
  "1000400" -> "1000405"  [ label = "DDG: result.push_back(check)"] 
  "1000402" -> "1000405"  [ label = "DDG: check.clear()"] 
  "1000389" -> "1000405"  [ label = "DDG: 1<<j"] 
  "1000388" -> "1000405"  [ label = "DDG: i&(1<<j)"] 
  "1000388" -> "1000405"  [ label = "DDG: (i&(1<<j))!=0"] 
  "1000396" -> "1000405"  [ label = "DDG: v[j]"] 
  "1000396" -> "1000405"  [ label = "DDG: check.push_back(v[j])"] 
  "1000403" -> "1000405"  [ label = "DDG: <RET>"] 
  "1000361" -> "1000405"  [ label = "DDG: int"] 
  "1000343" -> "1000344"  [ label = "DDG: "] 
  "1000343" -> "1000347"  [ label = "DDG: "] 
  "1000352" -> "1000350"  [ label = "DDG: 1"] 
  "1000352" -> "1000350"  [ label = "DDG: pow(2,range)"] 
  "1000404" -> "1000403"  [ label = "DDG: result"] 
  "1000361" -> "1000403"  [ label = "DDG: result"] 
  "1000343" -> "1000350"  [ label = "DDG: "] 
  "1000359" -> "1000357"  [ label = "DDG: vector"] 
  "1000343" -> "1000357"  [ label = "DDG: "] 
  "1000359" -> "1000357"  [ label = "DDG: int>>result"] 
  "1000343" -> "1000366"  [ label = "DDG: "] 
  "1000343" -> "1000404"  [ label = "DDG: "] 
  "1000353" -> "1000352"  [ label = "DDG: range"] 
  "1000353" -> "1000352"  [ label = "DDG: 2"] 
  "1000343" -> "1000352"  [ label = "DDG: "] 
  "1000343" -> "1000359"  [ label = "DDG: "] 
  "1000361" -> "1000359"  [ label = "DDG: result"] 
  "1000361" -> "1000359"  [ label = "DDG: int"] 
  "1000366" -> "1000369"  [ label = "DDG: i"] 
  "1000372" -> "1000369"  [ label = "DDG: i"] 
  "1000343" -> "1000369"  [ label = "DDG: "] 
  "1000350" -> "1000369"  [ label = "DDG: range"] 
  "1000369" -> "1000372"  [ label = "DDG: i"] 
  "1000389" -> "1000372"  [ label = "DDG: i"] 
  "1000343" -> "1000372"  [ label = "DDG: "] 
  "1000343" -> "1000402"  [ label = "DDG: "] 
  "1000343" -> "1000353"  [ label = "DDG: "] 
  "1000347" -> "1000353"  [ label = "DDG: range"] 
  "1000343" -> "1000361"  [ label = "DDG: "] 
  "1000343" -> "1000378"  [ label = "DDG: "] 
  "1000343" -> "1000400"  [ label = "DDG: "] 
  "1000378" -> "1000381"  [ label = "DDG: j"] 
  "1000384" -> "1000381"  [ label = "DDG: j"] 
  "1000343" -> "1000381"  [ label = "DDG: "] 
  "1000391" -> "1000384"  [ label = "DDG: j"] 
  "1000343" -> "1000384"  [ label = "DDG: "] 
  "1000389" -> "1000388"  [ label = "DDG: i"] 
  "1000389" -> "1000388"  [ label = "DDG: 1<<j"] 
  "1000343" -> "1000388"  [ label = "DDG: "] 
  "1000369" -> "1000389"  [ label = "DDG: i"] 
  "1000343" -> "1000389"  [ label = "DDG: "] 
  "1000391" -> "1000389"  [ label = "DDG: 1"] 
  "1000391" -> "1000389"  [ label = "DDG: j"] 
  "1000344" -> "1000396"  [ label = "DDG: v"] 
  "1000343" -> "1000391"  [ label = "DDG: "] 
  "1000381" -> "1000391"  [ label = "DDG: j"] 
  "1000369" -> "1000383"  [ label = "CDG: "] 
  "1000369" -> "1000402"  [ label = "CDG: "] 
  "1000369" -> "1000378"  [ label = "CDG: "] 
  "1000369" -> "1000372"  [ label = "CDG: "] 
  "1000369" -> "1000381"  [ label = "CDG: "] 
  "1000369" -> "1000369"  [ label = "CDG: "] 
  "1000369" -> "1000400"  [ label = "CDG: "] 
  "1000381" -> "1000383"  [ label = "CDG: "] 
  "1000381" -> "1000389"  [ label = "CDG: "] 
  "1000381" -> "1000391"  [ label = "CDG: "] 
  "1000381" -> "1000381"  [ label = "CDG: "] 
  "1000381" -> "1000388"  [ label = "CDG: "] 
  "1000381" -> "1000384"  [ label = "CDG: "] 
  "1000388" -> "1000397"  [ label = "CDG: "] 
  "1000388" -> "1000396"  [ label = "CDG: "] 
}
