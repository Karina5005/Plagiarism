digraph "isprime" {  
"1000243" [label = "(METHOD,isprime)" ]
"1000276" [label = "(METHOD_RETURN,bool)" ]
"1000244" [label = "(PARAM,long long  n)" ]
"1000274" [label = "(RETURN,return true;,return true;)" ]
"1000247" [label = "(<operator>.equals,n == 1)" ]
"1000255" [label = "(<operator>.assignment,i=2)" ]
"1000258" [label = "(<operator>.lessEqualsThan,i<=sqrt(n))" ]
"1000262" [label = "(<operator>.preIncrement,++i)" ]
"1000275" [label = "(IDENTIFIER,true,return true;)" ]
"1000251" [label = "(RETURN,return false;,return false;)" ]
"1000252" [label = "(IDENTIFIER,false,return false;)" ]
"1000260" [label = "(sqrt,sqrt(n))" ]
"1000266" [label = "(<operator>.equals,n%i == 0)" ]
"1000272" [label = "(RETURN,return false;,return false;)" ]
"1000267" [label = "(<operator>.modulo,n%i)" ]
"1000273" [label = "(IDENTIFIER,false,return false;)" ]
  "1000272" -> "1000276"  [ label = "DDG: <RET>"] 
  "1000244" -> "1000276"  [ label = "DDG: n"] 
  "1000247" -> "1000276"  [ label = "DDG: n"] 
  "1000247" -> "1000276"  [ label = "DDG: n == 1"] 
  "1000258" -> "1000276"  [ label = "DDG: i"] 
  "1000260" -> "1000276"  [ label = "DDG: n"] 
  "1000258" -> "1000276"  [ label = "DDG: sqrt(n)"] 
  "1000258" -> "1000276"  [ label = "DDG: i<=sqrt(n)"] 
  "1000267" -> "1000276"  [ label = "DDG: n"] 
  "1000267" -> "1000276"  [ label = "DDG: i"] 
  "1000266" -> "1000276"  [ label = "DDG: n%i"] 
  "1000266" -> "1000276"  [ label = "DDG: n%i == 0"] 
  "1000274" -> "1000276"  [ label = "DDG: <RET>"] 
  "1000251" -> "1000276"  [ label = "DDG: <RET>"] 
  "1000243" -> "1000244"  [ label = "DDG: "] 
  "1000275" -> "1000274"  [ label = "DDG: true"] 
  "1000243" -> "1000274"  [ label = "DDG: "] 
  "1000243" -> "1000255"  [ label = "DDG: "] 
  "1000243" -> "1000275"  [ label = "DDG: "] 
  "1000244" -> "1000247"  [ label = "DDG: n"] 
  "1000243" -> "1000247"  [ label = "DDG: "] 
  "1000252" -> "1000251"  [ label = "DDG: false"] 
  "1000243" -> "1000251"  [ label = "DDG: "] 
  "1000255" -> "1000258"  [ label = "DDG: i"] 
  "1000262" -> "1000258"  [ label = "DDG: i"] 
  "1000243" -> "1000258"  [ label = "DDG: "] 
  "1000260" -> "1000258"  [ label = "DDG: n"] 
  "1000267" -> "1000262"  [ label = "DDG: i"] 
  "1000243" -> "1000262"  [ label = "DDG: "] 
  "1000243" -> "1000252"  [ label = "DDG: "] 
  "1000247" -> "1000260"  [ label = "DDG: n"] 
  "1000267" -> "1000260"  [ label = "DDG: n"] 
  "1000244" -> "1000260"  [ label = "DDG: n"] 
  "1000243" -> "1000260"  [ label = "DDG: "] 
  "1000267" -> "1000266"  [ label = "DDG: i"] 
  "1000267" -> "1000266"  [ label = "DDG: n"] 
  "1000243" -> "1000266"  [ label = "DDG: "] 
  "1000273" -> "1000272"  [ label = "DDG: false"] 
  "1000243" -> "1000272"  [ label = "DDG: "] 
  "1000260" -> "1000267"  [ label = "DDG: n"] 
  "1000244" -> "1000267"  [ label = "DDG: n"] 
  "1000243" -> "1000267"  [ label = "DDG: "] 
  "1000258" -> "1000267"  [ label = "DDG: i"] 
  "1000243" -> "1000273"  [ label = "DDG: "] 
  "1000247" -> "1000260"  [ label = "CDG: "] 
  "1000247" -> "1000258"  [ label = "CDG: "] 
  "1000247" -> "1000255"  [ label = "CDG: "] 
  "1000247" -> "1000251"  [ label = "CDG: "] 
  "1000258" -> "1000274"  [ label = "CDG: "] 
  "1000258" -> "1000267"  [ label = "CDG: "] 
  "1000258" -> "1000266"  [ label = "CDG: "] 
  "1000266" -> "1000262"  [ label = "CDG: "] 
  "1000266" -> "1000260"  [ label = "CDG: "] 
  "1000266" -> "1000258"  [ label = "CDG: "] 
  "1000266" -> "1000272"  [ label = "CDG: "] 
}
