digraph "main" {  
"1000162" [label = "(METHOD,main)" ]
"1000260" [label = "(METHOD_RETURN,int)" ]
"1000164" [label = "(ios_base::sync_with_stdio,ios_base::sync_with_stdio(false))" ]
"1000166" [label = "(cin.tie,cin.tie(NULL))" ]
"1000169" [label = "(<operator>.arithmeticShiftRight,cin>>t)" ]
"1000258" [label = "(RETURN,return 0;,return 0;)" ]
"1000173" [label = "(<operator>.postDecrement,t--)" ]
"1000259" [label = "(LITERAL,0,return 0;)" ]
"1000177" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000183" [label = "(<operator>.assignment,ans=0)" ]
"1000192" [label = "(sort,sort(d,d+n))" ]
"1000197" [label = "(<operator>.assignment,ans=d[n-1])" ]
"1000204" [label = "(<operator>.assignment,presum[0]=0)" ]
"1000209" [label = "(<operator>.assignment,presum[i+1]=presum[i]+d[i])" ]
"1000253" [label = "(<operator>.shiftLeft,std::cout << ans << std::endl)" ]
"1000187" [label = "(<operator>.arithmeticShiftRight,cin>>d[i])" ]
"1000224" [label = "(<operator>.assignment,ind=lower_bound(d,d+n,d[i])-d-1)" ]
"1000238" [label = "(<operator>.assignmentPlus,ans+=presum[ind+1]-(ind+1)*d[i])" ]
"1000194" [label = "(<operator>.addition,d+n)" ]
"1000215" [label = "(<operator>.addition,presum[i]+d[i])" ]
"1000255" [label = "(<operator>.shiftLeft,ans << std::endl)" ]
"1000201" [label = "(<operator>.subtraction,n-1)" ]
"1000212" [label = "(<operator>.addition,i+1)" ]
"1000226" [label = "(<operator>.subtraction,lower_bound(d,d+n,d[i])-d-1)" ]
"1000240" [label = "(<operator>.subtraction,presum[ind+1]-(ind+1)*d[i])" ]
"1000227" [label = "(lower_bound,lower_bound(d,d+n,d[i]))" ]
"1000235" [label = "(<operator>.subtraction,d-1)" ]
"1000246" [label = "(<operator>.multiplication,(ind+1)*d[i])" ]
"1000229" [label = "(<operator>.addition,d+n)" ]
"1000243" [label = "(<operator>.addition,ind+1)" ]
"1000247" [label = "(<operator>.addition,ind+1)" ]
"1000199" [label = "(<operator>.indirectIndexAccess,d[n-1])" ]
"1000205" [label = "(<operator>.indirectIndexAccess,presum[0])" ]
"1000210" [label = "(<operator>.indirectIndexAccess,presum[i+1])" ]
"1000189" [label = "(<operator>.indirectIndexAccess,d[i])" ]
"1000216" [label = "(<operator>.indirectIndexAccess,presum[i])" ]
"1000219" [label = "(<operator>.indirectIndexAccess,d[i])" ]
"1000241" [label = "(<operator>.indirectIndexAccess,presum[ind+1])" ]
"1000232" [label = "(<operator>.indirectIndexAccess,d[i])" ]
"1000250" [label = "(<operator>.indirectIndexAccess,d[i])" ]
  "1000258" -> "1000260"  [ label = "DDG: <RET>"] 
  "1000164" -> "1000260"  [ label = "DDG: ios_base::sync_with_stdio(false)"] 
  "1000166" -> "1000260"  [ label = "DDG: cin.tie(NULL)"] 
  "1000169" -> "1000260"  [ label = "DDG: cin"] 
  "1000169" -> "1000260"  [ label = "DDG: cin>>t"] 
  "1000173" -> "1000260"  [ label = "DDG: t"] 
  "1000177" -> "1000260"  [ label = "DDG: cin>>n"] 
  "1000187" -> "1000260"  [ label = "DDG: cin"] 
  "1000187" -> "1000260"  [ label = "DDG: cin>>d[i]"] 
  "1000192" -> "1000260"  [ label = "DDG: sort(d,d+n)"] 
  "1000197" -> "1000260"  [ label = "DDG: d[n-1]"] 
  "1000204" -> "1000260"  [ label = "DDG: presum[0]"] 
  "1000212" -> "1000260"  [ label = "DDG: i"] 
  "1000209" -> "1000260"  [ label = "DDG: presum[i+1]"] 
  "1000215" -> "1000260"  [ label = "DDG: presum[i]"] 
  "1000209" -> "1000260"  [ label = "DDG: presum[i]+d[i]"] 
  "1000229" -> "1000260"  [ label = "DDG: n"] 
  "1000227" -> "1000260"  [ label = "DDG: d+n"] 
  "1000226" -> "1000260"  [ label = "DDG: lower_bound(d,d+n,d[i])"] 
  "1000235" -> "1000260"  [ label = "DDG: d"] 
  "1000226" -> "1000260"  [ label = "DDG: d-1"] 
  "1000224" -> "1000260"  [ label = "DDG: lower_bound(d,d+n,d[i])-d-1"] 
  "1000240" -> "1000260"  [ label = "DDG: presum[ind+1]"] 
  "1000247" -> "1000260"  [ label = "DDG: ind"] 
  "1000246" -> "1000260"  [ label = "DDG: ind+1"] 
  "1000246" -> "1000260"  [ label = "DDG: d[i]"] 
  "1000240" -> "1000260"  [ label = "DDG: (ind+1)*d[i]"] 
  "1000238" -> "1000260"  [ label = "DDG: presum[ind+1]-(ind+1)*d[i]"] 
  "1000255" -> "1000260"  [ label = "DDG: ans"] 
  "1000253" -> "1000260"  [ label = "DDG: ans << std::endl"] 
  "1000253" -> "1000260"  [ label = "DDG: std::cout << ans << std::endl"] 
  "1000253" -> "1000260"  [ label = "DDG: std::cout"] 
  "1000255" -> "1000260"  [ label = "DDG: std::endl"] 
  "1000166" -> "1000260"  [ label = "DDG: NULL"] 
  "1000164" -> "1000260"  [ label = "DDG: false"] 
  "1000259" -> "1000258"  [ label = "DDG: 0"] 
  "1000162" -> "1000258"  [ label = "DDG: "] 
  "1000162" -> "1000164"  [ label = "DDG: "] 
  "1000162" -> "1000166"  [ label = "DDG: "] 
  "1000162" -> "1000169"  [ label = "DDG: "] 
  "1000162" -> "1000259"  [ label = "DDG: "] 
  "1000169" -> "1000173"  [ label = "DDG: t"] 
  "1000162" -> "1000173"  [ label = "DDG: "] 
  "1000162" -> "1000183"  [ label = "DDG: "] 
  "1000192" -> "1000197"  [ label = "DDG: d"] 
  "1000162" -> "1000204"  [ label = "DDG: "] 
  "1000187" -> "1000209"  [ label = "DDG: d[i]"] 
  "1000192" -> "1000209"  [ label = "DDG: d"] 
  "1000169" -> "1000177"  [ label = "DDG: cin"] 
  "1000187" -> "1000177"  [ label = "DDG: cin"] 
  "1000162" -> "1000177"  [ label = "DDG: "] 
  "1000201" -> "1000177"  [ label = "DDG: n"] 
  "1000187" -> "1000192"  [ label = "DDG: d[i]"] 
  "1000162" -> "1000192"  [ label = "DDG: "] 
  "1000235" -> "1000192"  [ label = "DDG: d"] 
  "1000177" -> "1000192"  [ label = "DDG: n"] 
  "1000162" -> "1000197"  [ label = "DDG: "] 
  "1000226" -> "1000224"  [ label = "DDG: d-1"] 
  "1000226" -> "1000224"  [ label = "DDG: lower_bound(d,d+n,d[i])"] 
  "1000240" -> "1000238"  [ label = "DDG: (ind+1)*d[i]"] 
  "1000240" -> "1000238"  [ label = "DDG: presum[ind+1]"] 
  "1000162" -> "1000253"  [ label = "DDG: "] 
  "1000255" -> "1000253"  [ label = "DDG: ans"] 
  "1000255" -> "1000253"  [ label = "DDG: std::endl"] 
  "1000177" -> "1000187"  [ label = "DDG: cin"] 
  "1000162" -> "1000187"  [ label = "DDG: "] 
  "1000235" -> "1000187"  [ label = "DDG: d"] 
  "1000246" -> "1000187"  [ label = "DDG: d[i]"] 
  "1000187" -> "1000194"  [ label = "DDG: d[i]"] 
  "1000235" -> "1000194"  [ label = "DDG: d"] 
  "1000162" -> "1000194"  [ label = "DDG: "] 
  "1000192" -> "1000194"  [ label = "DDG: d"] 
  "1000177" -> "1000194"  [ label = "DDG: n"] 
  "1000187" -> "1000215"  [ label = "DDG: d[i]"] 
  "1000192" -> "1000215"  [ label = "DDG: d"] 
  "1000162" -> "1000224"  [ label = "DDG: "] 
  "1000197" -> "1000238"  [ label = "DDG: ans"] 
  "1000162" -> "1000238"  [ label = "DDG: "] 
  "1000238" -> "1000255"  [ label = "DDG: ans"] 
  "1000162" -> "1000255"  [ label = "DDG: "] 
  "1000162" -> "1000201"  [ label = "DDG: "] 
  "1000177" -> "1000201"  [ label = "DDG: n"] 
  "1000162" -> "1000212"  [ label = "DDG: "] 
  "1000227" -> "1000226"  [ label = "DDG: d[i]"] 
  "1000227" -> "1000226"  [ label = "DDG: d"] 
  "1000227" -> "1000226"  [ label = "DDG: d+n"] 
  "1000235" -> "1000226"  [ label = "DDG: d"] 
  "1000235" -> "1000226"  [ label = "DDG: 1"] 
  "1000246" -> "1000240"  [ label = "DDG: ind+1"] 
  "1000246" -> "1000240"  [ label = "DDG: d[i]"] 
  "1000162" -> "1000227"  [ label = "DDG: "] 
  "1000192" -> "1000227"  [ label = "DDG: d"] 
  "1000187" -> "1000227"  [ label = "DDG: d[i]"] 
  "1000201" -> "1000227"  [ label = "DDG: n"] 
  "1000227" -> "1000235"  [ label = "DDG: d"] 
  "1000227" -> "1000235"  [ label = "DDG: d[i]"] 
  "1000162" -> "1000235"  [ label = "DDG: "] 
  "1000192" -> "1000235"  [ label = "DDG: d"] 
  "1000162" -> "1000246"  [ label = "DDG: "] 
  "1000224" -> "1000246"  [ label = "DDG: ind"] 
  "1000227" -> "1000246"  [ label = "DDG: d[i]"] 
  "1000235" -> "1000246"  [ label = "DDG: d"] 
  "1000192" -> "1000229"  [ label = "DDG: d"] 
  "1000162" -> "1000229"  [ label = "DDG: "] 
  "1000187" -> "1000229"  [ label = "DDG: d[i]"] 
  "1000201" -> "1000229"  [ label = "DDG: n"] 
  "1000224" -> "1000243"  [ label = "DDG: ind"] 
  "1000162" -> "1000243"  [ label = "DDG: "] 
  "1000162" -> "1000247"  [ label = "DDG: "] 
  "1000224" -> "1000247"  [ label = "DDG: ind"] 
  "1000173" -> "1000247"  [ label = "CDG: "] 
  "1000173" -> "1000246"  [ label = "CDG: "] 
  "1000173" -> "1000238"  [ label = "CDG: "] 
  "1000173" -> "1000199"  [ label = "CDG: "] 
  "1000173" -> "1000197"  [ label = "CDG: "] 
  "1000173" -> "1000227"  [ label = "CDG: "] 
  "1000173" -> "1000229"  [ label = "CDG: "] 
  "1000173" -> "1000255"  [ label = "CDG: "] 
  "1000173" -> "1000243"  [ label = "CDG: "] 
  "1000173" -> "1000216"  [ label = "CDG: "] 
  "1000173" -> "1000212"  [ label = "CDG: "] 
  "1000173" -> "1000183"  [ label = "CDG: "] 
  "1000173" -> "1000204"  [ label = "CDG: "] 
  "1000173" -> "1000189"  [ label = "CDG: "] 
  "1000173" -> "1000219"  [ label = "CDG: "] 
  "1000173" -> "1000210"  [ label = "CDG: "] 
  "1000173" -> "1000215"  [ label = "CDG: "] 
  "1000173" -> "1000253"  [ label = "CDG: "] 
  "1000173" -> "1000235"  [ label = "CDG: "] 
  "1000173" -> "1000205"  [ label = "CDG: "] 
  "1000173" -> "1000250"  [ label = "CDG: "] 
  "1000173" -> "1000173"  [ label = "CDG: "] 
  "1000173" -> "1000201"  [ label = "CDG: "] 
  "1000173" -> "1000224"  [ label = "CDG: "] 
  "1000173" -> "1000241"  [ label = "CDG: "] 
  "1000173" -> "1000194"  [ label = "CDG: "] 
  "1000173" -> "1000192"  [ label = "CDG: "] 
  "1000173" -> "1000240"  [ label = "CDG: "] 
  "1000173" -> "1000177"  [ label = "CDG: "] 
  "1000173" -> "1000209"  [ label = "CDG: "] 
  "1000173" -> "1000226"  [ label = "CDG: "] 
  "1000173" -> "1000232"  [ label = "CDG: "] 
  "1000173" -> "1000187"  [ label = "CDG: "] 
}
