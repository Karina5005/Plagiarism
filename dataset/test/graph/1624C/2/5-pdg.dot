digraph "solve" {  
"1000205" [label = "(METHOD,solve)" ]
"1000301" [label = "(METHOD_RETURN,void)" ]
"1000208" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000262" [label = "(mt.assign,mt.assign(2*n, -1))" ]
"1000269" [label = "(<operator>.assignment,ans = 0)" ]
"1000293" [label = "(<operator>.shiftLeft,cout << (ans==n ? \"YES\n\" : \"NO\n\"))" ]
"1000214" [label = "(<operator>.assignment,i=0)" ]
"1000217" [label = "(<operator>.lessThan,i<n)" ]
"1000220" [label = "(<operator>.postIncrement,i++)" ]
"1000222" [label = "(<operator>.arithmeticShiftRight,cin >> a[i])" ]
"1000229" [label = "(<operator>.assignment,i=0)" ]
"1000232" [label = "(<operator>.lessThan,i<n)" ]
"1000235" [label = "(<operator>.postIncrement,i++)" ]
"1000274" [label = "(<operator>.assignment,i=0)" ]
"1000277" [label = "(<operator>.lessThan,i<n)" ]
"1000280" [label = "(<operator>.postIncrement,i++)" ]
"1000263" [label = "(<operator>.multiplication,2*n)" ]
"1000266" [label = "(<operator>.minus,-1)" ]
"1000283" [label = "(used.assign,used.assign(2*n, false))" ]
"1000295" [label = "(<operator>.conditional,ans==n ? \"YES\n\" : \"NO\n\")" ]
"1000289" [label = "(dfs,dfs(i))" ]
"1000291" [label = "(<operator>.postIncrement,ans++)" ]
"1000296" [label = "(<operator>.equals,ans==n)" ]
"1000257" [label = "(<operator>.assignmentDivision,a[i] /= 2)" ]
"1000284" [label = "(<operator>.multiplication,2*n)" ]
"1000244" [label = "(<operator>.lessEqualsThan,a[i]<=n)" ]
"1000249" [label = "(g[i].push_back,g[i].push_back(n + a[i] - 1))" ]
"1000250" [label = "(<operator>.addition,n + a[i] - 1)" ]
"1000252" [label = "(<operator>.subtraction,a[i] - 1)" ]
"1000224" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000239" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000258" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000245" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000253" [label = "(<operator>.indirectIndexAccess,a[i])" ]
  "1000208" -> "1000301"  [ label = "DDG: cin"] 
  "1000208" -> "1000301"  [ label = "DDG: cin >> n"] 
  "1000262" -> "1000301"  [ label = "DDG: 2*n"] 
  "1000262" -> "1000301"  [ label = "DDG: -1"] 
  "1000262" -> "1000301"  [ label = "DDG: mt.assign(2*n, -1)"] 
  "1000277" -> "1000301"  [ label = "DDG: i"] 
  "1000277" -> "1000301"  [ label = "DDG: i<n"] 
  "1000296" -> "1000301"  [ label = "DDG: ans"] 
  "1000296" -> "1000301"  [ label = "DDG: n"] 
  "1000295" -> "1000301"  [ label = "DDG: ans==n"] 
  "1000293" -> "1000301"  [ label = "DDG: ans==n ? \"YES\n\" : \"NO\n\""] 
  "1000293" -> "1000301"  [ label = "DDG: cout << (ans==n ? \"YES\n\" : \"NO\n\")"] 
  "1000283" -> "1000301"  [ label = "DDG: 2*n"] 
  "1000283" -> "1000301"  [ label = "DDG: used.assign(2*n, false)"] 
  "1000289" -> "1000301"  [ label = "DDG: dfs(i)"] 
  "1000244" -> "1000301"  [ label = "DDG: a[i]<=n"] 
  "1000250" -> "1000301"  [ label = "DDG: a[i] - 1"] 
  "1000249" -> "1000301"  [ label = "DDG: n + a[i] - 1"] 
  "1000249" -> "1000301"  [ label = "DDG: g[i].push_back(n + a[i] - 1)"] 
  "1000257" -> "1000301"  [ label = "DDG: a[i]"] 
  "1000222" -> "1000301"  [ label = "DDG: cin"] 
  "1000222" -> "1000301"  [ label = "DDG: a[i]"] 
  "1000222" -> "1000301"  [ label = "DDG: cin >> a[i]"] 
  "1000283" -> "1000301"  [ label = "DDG: false"] 
  "1000293" -> "1000301"  [ label = "DDG: cout"] 
  "1000205" -> "1000269"  [ label = "DDG: "] 
  "1000205" -> "1000208"  [ label = "DDG: "] 
  "1000205" -> "1000214"  [ label = "DDG: "] 
  "1000205" -> "1000229"  [ label = "DDG: "] 
  "1000263" -> "1000262"  [ label = "DDG: n"] 
  "1000263" -> "1000262"  [ label = "DDG: 2"] 
  "1000266" -> "1000262"  [ label = "DDG: 1"] 
  "1000205" -> "1000274"  [ label = "DDG: "] 
  "1000205" -> "1000293"  [ label = "DDG: "] 
  "1000214" -> "1000217"  [ label = "DDG: i"] 
  "1000220" -> "1000217"  [ label = "DDG: i"] 
  "1000205" -> "1000217"  [ label = "DDG: "] 
  "1000208" -> "1000217"  [ label = "DDG: n"] 
  "1000217" -> "1000220"  [ label = "DDG: i"] 
  "1000205" -> "1000220"  [ label = "DDG: "] 
  "1000208" -> "1000222"  [ label = "DDG: cin"] 
  "1000205" -> "1000222"  [ label = "DDG: "] 
  "1000229" -> "1000232"  [ label = "DDG: i"] 
  "1000235" -> "1000232"  [ label = "DDG: i"] 
  "1000205" -> "1000232"  [ label = "DDG: "] 
  "1000217" -> "1000232"  [ label = "DDG: n"] 
  "1000244" -> "1000232"  [ label = "DDG: n"] 
  "1000232" -> "1000235"  [ label = "DDG: i"] 
  "1000205" -> "1000235"  [ label = "DDG: "] 
  "1000205" -> "1000263"  [ label = "DDG: "] 
  "1000232" -> "1000263"  [ label = "DDG: n"] 
  "1000205" -> "1000266"  [ label = "DDG: "] 
  "1000274" -> "1000277"  [ label = "DDG: i"] 
  "1000280" -> "1000277"  [ label = "DDG: i"] 
  "1000205" -> "1000277"  [ label = "DDG: "] 
  "1000263" -> "1000277"  [ label = "DDG: n"] 
  "1000284" -> "1000277"  [ label = "DDG: n"] 
  "1000289" -> "1000280"  [ label = "DDG: i"] 
  "1000205" -> "1000280"  [ label = "DDG: "] 
  "1000205" -> "1000295"  [ label = "DDG: "] 
  "1000284" -> "1000283"  [ label = "DDG: n"] 
  "1000284" -> "1000283"  [ label = "DDG: 2"] 
  "1000205" -> "1000283"  [ label = "DDG: "] 
  "1000269" -> "1000296"  [ label = "DDG: ans"] 
  "1000291" -> "1000296"  [ label = "DDG: ans"] 
  "1000205" -> "1000296"  [ label = "DDG: "] 
  "1000277" -> "1000296"  [ label = "DDG: n"] 
  "1000205" -> "1000257"  [ label = "DDG: "] 
  "1000205" -> "1000284"  [ label = "DDG: "] 
  "1000277" -> "1000284"  [ label = "DDG: n"] 
  "1000277" -> "1000289"  [ label = "DDG: i"] 
  "1000205" -> "1000289"  [ label = "DDG: "] 
  "1000269" -> "1000291"  [ label = "DDG: ans"] 
  "1000205" -> "1000291"  [ label = "DDG: "] 
  "1000244" -> "1000257"  [ label = "DDG: a[i]"] 
  "1000252" -> "1000257"  [ label = "DDG: a[i]"] 
  "1000257" -> "1000244"  [ label = "DDG: a[i]"] 
  "1000222" -> "1000244"  [ label = "DDG: a[i]"] 
  "1000232" -> "1000244"  [ label = "DDG: n"] 
  "1000205" -> "1000244"  [ label = "DDG: "] 
  "1000252" -> "1000249"  [ label = "DDG: 1"] 
  "1000252" -> "1000249"  [ label = "DDG: a[i]"] 
  "1000244" -> "1000249"  [ label = "DDG: n"] 
  "1000205" -> "1000249"  [ label = "DDG: "] 
  "1000244" -> "1000250"  [ label = "DDG: n"] 
  "1000205" -> "1000250"  [ label = "DDG: "] 
  "1000252" -> "1000250"  [ label = "DDG: 1"] 
  "1000252" -> "1000250"  [ label = "DDG: a[i]"] 
  "1000244" -> "1000252"  [ label = "DDG: a[i]"] 
  "1000205" -> "1000252"  [ label = "DDG: "] 
  "1000217" -> "1000222"  [ label = "CDG: "] 
  "1000217" -> "1000220"  [ label = "CDG: "] 
  "1000217" -> "1000224"  [ label = "CDG: "] 
  "1000217" -> "1000217"  [ label = "CDG: "] 
  "1000232" -> "1000239"  [ label = "CDG: "] 
  "1000232" -> "1000235"  [ label = "CDG: "] 
  "1000232" -> "1000232"  [ label = "CDG: "] 
  "1000277" -> "1000277"  [ label = "CDG: "] 
  "1000277" -> "1000283"  [ label = "CDG: "] 
  "1000277" -> "1000284"  [ label = "CDG: "] 
  "1000277" -> "1000280"  [ label = "CDG: "] 
  "1000277" -> "1000289"  [ label = "CDG: "] 
  "1000239" -> "1000258"  [ label = "CDG: "] 
  "1000239" -> "1000239"  [ label = "CDG: "] 
  "1000239" -> "1000244"  [ label = "CDG: "] 
  "1000239" -> "1000257"  [ label = "CDG: "] 
  "1000239" -> "1000245"  [ label = "CDG: "] 
  "1000289" -> "1000291"  [ label = "CDG: "] 
  "1000244" -> "1000253"  [ label = "CDG: "] 
  "1000244" -> "1000252"  [ label = "CDG: "] 
  "1000244" -> "1000250"  [ label = "CDG: "] 
  "1000244" -> "1000249"  [ label = "CDG: "] 
}
