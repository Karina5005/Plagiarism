digraph "dfsSolve" {  
"1000120" [label = "(METHOD,dfsSolve)" ]
"1000187" [label = "(METHOD_RETURN,void)" ]
"1000121" [label = "(PARAM,int x)" ]
"1000122" [label = "(PARAM,int dupCost)" ]
"1000129" [label = "(dfsSolve,dfsSolve(l[x], dupCost + 1))" ]
"1000125" [label = "(<operator>.lessThan,x < 0)" ]
"1000128" [label = "(RETURN,return;,return;)" ]
"1000137" [label = "(<operator>.logicalAnd,l[x] >= 0 && dup[l[x]])" ]
"1000148" [label = "(<operator>.assignment,dup[x] = 1)" ]
"1000175" [label = "(dfsSolve,dfsSolve(r[x], dup[x] ? 1 : dupCost + 1))" ]
"1000133" [label = "(<operator>.addition,dupCost + 1)" ]
"1000138" [label = "(<operator>.greaterEqualsThan,l[x] >= 0)" ]
"1000155" [label = "(<operator>.logicalAnd,isGood[x] && dupCost <= k)" ]
"1000179" [label = "(<operator>.conditional,dup[x] ? 1 : dupCost + 1)" ]
"1000163" [label = "(<operator>.assignmentMinus,k -= dupCost)" ]
"1000166" [label = "(<operator>.assignment,dup[x] = 1)" ]
"1000184" [label = "(<operator>.addition,dupCost + 1)" ]
"1000159" [label = "(<operator>.lessEqualsThan,dupCost <= k)" ]
"1000130" [label = "(<operator>.indirectIndexAccess,l[x])" ]
"1000172" [label = "(<operator>.indirectIndexAccess,dup[x])" ]
"1000143" [label = "(<operator>.indirectIndexAccess,dup[l[x]])" ]
"1000149" [label = "(<operator>.indirectIndexAccess,dup[x])" ]
"1000176" [label = "(<operator>.indirectIndexAccess,r[x])" ]
"1000139" [label = "(<operator>.indirectIndexAccess,l[x])" ]
"1000145" [label = "(<operator>.indirectIndexAccess,l[x])" ]
"1000180" [label = "(<operator>.indirectIndexAccess,dup[x])" ]
"1000156" [label = "(<operator>.indirectIndexAccess,isGood[x])" ]
"1000167" [label = "(<operator>.indirectIndexAccess,dup[x])" ]
  "1000121" -> "1000187"  [ label = "DDG: x"] 
  "1000122" -> "1000187"  [ label = "DDG: dupCost"] 
  "1000125" -> "1000187"  [ label = "DDG: x"] 
  "1000125" -> "1000187"  [ label = "DDG: x < 0"] 
  "1000133" -> "1000187"  [ label = "DDG: dupCost"] 
  "1000129" -> "1000187"  [ label = "DDG: dupCost + 1"] 
  "1000129" -> "1000187"  [ label = "DDG: dfsSolve(l[x], dupCost + 1)"] 
  "1000138" -> "1000187"  [ label = "DDG: l[x]"] 
  "1000137" -> "1000187"  [ label = "DDG: l[x] >= 0"] 
  "1000137" -> "1000187"  [ label = "DDG: dup[l[x]]"] 
  "1000137" -> "1000187"  [ label = "DDG: l[x] >= 0 && dup[l[x]]"] 
  "1000155" -> "1000187"  [ label = "DDG: isGood[x]"] 
  "1000159" -> "1000187"  [ label = "DDG: dupCost"] 
  "1000159" -> "1000187"  [ label = "DDG: k"] 
  "1000155" -> "1000187"  [ label = "DDG: dupCost <= k"] 
  "1000155" -> "1000187"  [ label = "DDG: isGood[x] && dupCost <= k"] 
  "1000163" -> "1000187"  [ label = "DDG: k"] 
  "1000163" -> "1000187"  [ label = "DDG: dupCost"] 
  "1000166" -> "1000187"  [ label = "DDG: dup[x]"] 
  "1000148" -> "1000187"  [ label = "DDG: dup[x]"] 
  "1000175" -> "1000187"  [ label = "DDG: r[x]"] 
  "1000179" -> "1000187"  [ label = "DDG: dup[x]"] 
  "1000184" -> "1000187"  [ label = "DDG: dupCost"] 
  "1000179" -> "1000187"  [ label = "DDG: dupCost + 1"] 
  "1000175" -> "1000187"  [ label = "DDG: dup[x] ? 1 : dupCost + 1"] 
  "1000175" -> "1000187"  [ label = "DDG: dfsSolve(r[x], dup[x] ? 1 : dupCost + 1)"] 
  "1000128" -> "1000187"  [ label = "DDG: <RET>"] 
  "1000120" -> "1000121"  [ label = "DDG: "] 
  "1000120" -> "1000122"  [ label = "DDG: "] 
  "1000120" -> "1000128"  [ label = "DDG: "] 
  "1000120" -> "1000129"  [ label = "DDG: "] 
  "1000122" -> "1000129"  [ label = "DDG: dupCost"] 
  "1000120" -> "1000148"  [ label = "DDG: "] 
  "1000121" -> "1000125"  [ label = "DDG: x"] 
  "1000120" -> "1000125"  [ label = "DDG: "] 
  "1000122" -> "1000133"  [ label = "DDG: dupCost"] 
  "1000120" -> "1000133"  [ label = "DDG: "] 
  "1000138" -> "1000137"  [ label = "DDG: 0"] 
  "1000138" -> "1000137"  [ label = "DDG: l[x]"] 
  "1000120" -> "1000175"  [ label = "DDG: "] 
  "1000129" -> "1000175"  [ label = "DDG: dupCost + 1"] 
  "1000159" -> "1000175"  [ label = "DDG: dupCost"] 
  "1000122" -> "1000175"  [ label = "DDG: dupCost"] 
  "1000129" -> "1000138"  [ label = "DDG: l[x]"] 
  "1000120" -> "1000138"  [ label = "DDG: "] 
  "1000120" -> "1000179"  [ label = "DDG: "] 
  "1000129" -> "1000179"  [ label = "DDG: dupCost + 1"] 
  "1000159" -> "1000179"  [ label = "DDG: dupCost"] 
  "1000122" -> "1000179"  [ label = "DDG: dupCost"] 
  "1000159" -> "1000155"  [ label = "DDG: k"] 
  "1000159" -> "1000155"  [ label = "DDG: dupCost"] 
  "1000159" -> "1000163"  [ label = "DDG: dupCost"] 
  "1000122" -> "1000163"  [ label = "DDG: dupCost"] 
  "1000120" -> "1000163"  [ label = "DDG: "] 
  "1000120" -> "1000166"  [ label = "DDG: "] 
  "1000159" -> "1000184"  [ label = "DDG: dupCost"] 
  "1000122" -> "1000184"  [ label = "DDG: dupCost"] 
  "1000120" -> "1000184"  [ label = "DDG: "] 
  "1000122" -> "1000159"  [ label = "DDG: dupCost"] 
  "1000120" -> "1000159"  [ label = "DDG: "] 
  "1000159" -> "1000163"  [ label = "DDG: k"] 
  "1000125" -> "1000128"  [ label = "CDG: "] 
  "1000125" -> "1000139"  [ label = "CDG: "] 
  "1000125" -> "1000133"  [ label = "CDG: "] 
  "1000125" -> "1000172"  [ label = "CDG: "] 
  "1000125" -> "1000137"  [ label = "CDG: "] 
  "1000125" -> "1000129"  [ label = "CDG: "] 
  "1000125" -> "1000130"  [ label = "CDG: "] 
  "1000125" -> "1000138"  [ label = "CDG: "] 
  "1000137" -> "1000156"  [ label = "CDG: "] 
  "1000137" -> "1000148"  [ label = "CDG: "] 
  "1000137" -> "1000149"  [ label = "CDG: "] 
  "1000137" -> "1000155"  [ label = "CDG: "] 
  "1000172" -> "1000180"  [ label = "CDG: "] 
  "1000172" -> "1000175"  [ label = "CDG: "] 
  "1000172" -> "1000179"  [ label = "CDG: "] 
  "1000172" -> "1000176"  [ label = "CDG: "] 
  "1000138" -> "1000143"  [ label = "CDG: "] 
  "1000138" -> "1000145"  [ label = "CDG: "] 
  "1000155" -> "1000166"  [ label = "CDG: "] 
  "1000155" -> "1000163"  [ label = "CDG: "] 
  "1000155" -> "1000167"  [ label = "CDG: "] 
  "1000180" -> "1000184"  [ label = "CDG: "] 
  "1000156" -> "1000159"  [ label = "CDG: "] 
}
