digraph "SieveOfEratosthenes" {  
"1000159" [label = "(METHOD,SieveOfEratosthenes)" ]
"1000223" [label = "(METHOD_RETURN,void)" ]
"1000160" [label = "(PARAM,int n)" ]
"1000163" [label = "(memset,memset(prime, true, sizeof(prime)))" ]
"1000170" [label = "(<operator>.assignment,p = 2)" ]
"1000173" [label = "(<operator>.lessEqualsThan,p * p <= n)" ]
"1000178" [label = "(<operator>.postIncrement,p++)" ]
"1000208" [label = "(<operator>.assignment,p = 2)" ]
"1000211" [label = "(<operator>.lessEqualsThan,p <= n)" ]
"1000214" [label = "(<operator>.postIncrement,p++)" ]
"1000166" [label = "(<operator>.sizeOf,sizeof(prime))" ]
"1000220" [label = "(<operator>.shiftLeft,cout << p)" ]
"1000174" [label = "(<operator>.multiplication,p * p)" ]
"1000182" [label = "(<operator>.equals,prime[p] == true)" ]
"1000190" [label = "(<operator>.assignment,i = p * p)" ]
"1000195" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000198" [label = "(<operator>.assignmentPlus,i += p)" ]
"1000201" [label = "(<operator>.assignment,prime[i] = false)" ]
"1000192" [label = "(<operator>.multiplication,p * p)" ]
"1000217" [label = "(<operator>.indirectIndexAccess,prime[p])" ]
"1000183" [label = "(<operator>.indirectIndexAccess,prime[p])" ]
"1000202" [label = "(<operator>.indirectIndexAccess,prime[i])" ]
  "1000160" -> "1000223"  [ label = "DDG: n"] 
  "1000163" -> "1000223"  [ label = "DDG: prime"] 
  "1000163" -> "1000223"  [ label = "DDG: true"] 
  "1000163" -> "1000223"  [ label = "DDG: memset(prime, true, sizeof(prime))"] 
  "1000173" -> "1000223"  [ label = "DDG: p * p"] 
  "1000173" -> "1000223"  [ label = "DDG: p * p <= n"] 
  "1000211" -> "1000223"  [ label = "DDG: p"] 
  "1000211" -> "1000223"  [ label = "DDG: n"] 
  "1000211" -> "1000223"  [ label = "DDG: p <= n"] 
  "1000220" -> "1000223"  [ label = "DDG: cout << p"] 
  "1000182" -> "1000223"  [ label = "DDG: prime[p]"] 
  "1000182" -> "1000223"  [ label = "DDG: true"] 
  "1000182" -> "1000223"  [ label = "DDG: prime[p] == true"] 
  "1000195" -> "1000223"  [ label = "DDG: i"] 
  "1000195" -> "1000223"  [ label = "DDG: i <= n"] 
  "1000201" -> "1000223"  [ label = "DDG: prime[i]"] 
  "1000201" -> "1000223"  [ label = "DDG: false"] 
  "1000220" -> "1000223"  [ label = "DDG: cout"] 
  "1000159" -> "1000160"  [ label = "DDG: "] 
  "1000159" -> "1000163"  [ label = "DDG: "] 
  "1000159" -> "1000170"  [ label = "DDG: "] 
  "1000159" -> "1000208"  [ label = "DDG: "] 
  "1000159" -> "1000166"  [ label = "DDG: "] 
  "1000174" -> "1000173"  [ label = "DDG: p"] 
  "1000195" -> "1000173"  [ label = "DDG: n"] 
  "1000160" -> "1000173"  [ label = "DDG: n"] 
  "1000159" -> "1000173"  [ label = "DDG: "] 
  "1000174" -> "1000178"  [ label = "DDG: p"] 
  "1000192" -> "1000178"  [ label = "DDG: p"] 
  "1000159" -> "1000178"  [ label = "DDG: "] 
  "1000208" -> "1000211"  [ label = "DDG: p"] 
  "1000214" -> "1000211"  [ label = "DDG: p"] 
  "1000159" -> "1000211"  [ label = "DDG: "] 
  "1000173" -> "1000211"  [ label = "DDG: n"] 
  "1000160" -> "1000211"  [ label = "DDG: n"] 
  "1000211" -> "1000214"  [ label = "DDG: p"] 
  "1000220" -> "1000214"  [ label = "DDG: p"] 
  "1000159" -> "1000214"  [ label = "DDG: "] 
  "1000170" -> "1000174"  [ label = "DDG: p"] 
  "1000178" -> "1000174"  [ label = "DDG: p"] 
  "1000159" -> "1000174"  [ label = "DDG: "] 
  "1000159" -> "1000220"  [ label = "DDG: "] 
  "1000211" -> "1000220"  [ label = "DDG: p"] 
  "1000163" -> "1000182"  [ label = "DDG: prime"] 
  "1000163" -> "1000182"  [ label = "DDG: true"] 
  "1000159" -> "1000182"  [ label = "DDG: "] 
  "1000192" -> "1000190"  [ label = "DDG: p"] 
  "1000192" -> "1000198"  [ label = "DDG: p"] 
  "1000159" -> "1000198"  [ label = "DDG: "] 
  "1000159" -> "1000201"  [ label = "DDG: "] 
  "1000159" -> "1000190"  [ label = "DDG: "] 
  "1000190" -> "1000195"  [ label = "DDG: i"] 
  "1000198" -> "1000195"  [ label = "DDG: i"] 
  "1000159" -> "1000195"  [ label = "DDG: "] 
  "1000173" -> "1000195"  [ label = "DDG: n"] 
  "1000160" -> "1000195"  [ label = "DDG: n"] 
  "1000195" -> "1000198"  [ label = "DDG: i"] 
  "1000174" -> "1000192"  [ label = "DDG: p"] 
  "1000159" -> "1000192"  [ label = "DDG: "] 
  "1000173" -> "1000178"  [ label = "CDG: "] 
  "1000173" -> "1000174"  [ label = "CDG: "] 
  "1000173" -> "1000173"  [ label = "CDG: "] 
  "1000173" -> "1000182"  [ label = "CDG: "] 
  "1000173" -> "1000183"  [ label = "CDG: "] 
  "1000211" -> "1000211"  [ label = "CDG: "] 
  "1000211" -> "1000214"  [ label = "CDG: "] 
  "1000211" -> "1000217"  [ label = "CDG: "] 
  "1000217" -> "1000220"  [ label = "CDG: "] 
  "1000182" -> "1000190"  [ label = "CDG: "] 
  "1000182" -> "1000195"  [ label = "CDG: "] 
  "1000182" -> "1000192"  [ label = "CDG: "] 
  "1000195" -> "1000201"  [ label = "CDG: "] 
  "1000195" -> "1000202"  [ label = "CDG: "] 
  "1000195" -> "1000195"  [ label = "CDG: "] 
  "1000195" -> "1000198"  [ label = "CDG: "] 
}
