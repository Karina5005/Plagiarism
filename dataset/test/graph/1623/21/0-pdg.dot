digraph "main" {  
"1000101" [label = "(METHOD,main)" ]
"1000169" [label = "(METHOD_RETURN,int)" ]
"1000104" [label = "(<operator>.arithmeticShiftRight,cin >> ntest)" ]
"1000167" [label = "(RETURN,return 0;,return 0;)" ]
"1000108" [label = "(<operator>.postDecrement,ntest--)" ]
"1000168" [label = "(LITERAL,0,return 0;)" ]
"1000117" [label = "(<operator>.arithmeticShiftRight,cin >> n >> m >> rb >> cb >> rd >> cd)" ]
"1000130" [label = "(<operator>.shiftLeft,cout << min(\n            rb <= rd ? rd - rb : 2 * n - rb - rd,\n            cb <= cd ? cd - cb : 2 * m - cb - cd\n        ) << &#39)" ]
"1000164" [label = "(<operator>.and,n&#39)" ]
"1000119" [label = "(<operator>.arithmeticShiftRight,n >> m >> rb >> cb >> rd >> cd)" ]
"1000132" [label = "(<operator>.shiftLeft,min(\n            rb <= rd ? rd - rb : 2 * n - rb - rd,\n            cb <= cd ? cd - cb : 2 * m - cb - cd\n        ) << &#39)" ]
"1000121" [label = "(<operator>.arithmeticShiftRight,m >> rb >> cb >> rd >> cd)" ]
"1000133" [label = "(min,min(\n            rb <= rd ? rd - rb : 2 * n - rb - rd,\n            cb <= cd ? cd - cb : 2 * m - cb - cd\n        ))" ]
"1000123" [label = "(<operator>.arithmeticShiftRight,rb >> cb >> rd >> cd)" ]
"1000134" [label = "(<operator>.conditional,rb <= rd ? rd - rb : 2 * n - rb - rd)" ]
"1000148" [label = "(<operator>.conditional,cb <= cd ? cd - cb : 2 * m - cb - cd)" ]
"1000125" [label = "(<operator>.arithmeticShiftRight,cb >> rd >> cd)" ]
"1000135" [label = "(<operator>.lessEqualsThan,rb <= rd)" ]
"1000138" [label = "(<operator>.subtraction,rd - rb)" ]
"1000141" [label = "(<operator>.subtraction,2 * n - rb - rd)" ]
"1000149" [label = "(<operator>.lessEqualsThan,cb <= cd)" ]
"1000152" [label = "(<operator>.subtraction,cd - cb)" ]
"1000155" [label = "(<operator>.subtraction,2 * m - cb - cd)" ]
"1000127" [label = "(<operator>.arithmeticShiftRight,rd >> cd)" ]
"1000142" [label = "(<operator>.multiplication,2 * n)" ]
"1000145" [label = "(<operator>.subtraction,rb - rd)" ]
"1000156" [label = "(<operator>.multiplication,2 * m)" ]
"1000159" [label = "(<operator>.subtraction,cb - cd)" ]
"1000162" [label = "(<operator>.addressOf,&#39)" ]
  "1000104" -> "1000169"  [ label = "DDG: cin"] 
  "1000104" -> "1000169"  [ label = "DDG: cin >> ntest"] 
  "1000108" -> "1000169"  [ label = "DDG: ntest"] 
  "1000117" -> "1000169"  [ label = "DDG: cin"] 
  "1000121" -> "1000169"  [ label = "DDG: m"] 
  "1000125" -> "1000169"  [ label = "DDG: rd >> cd"] 
  "1000123" -> "1000169"  [ label = "DDG: cb >> rd >> cd"] 
  "1000121" -> "1000169"  [ label = "DDG: rb >> cb >> rd >> cd"] 
  "1000119" -> "1000169"  [ label = "DDG: m >> rb >> cb >> rd >> cd"] 
  "1000117" -> "1000169"  [ label = "DDG: n >> m >> rb >> cb >> rd >> cd"] 
  "1000117" -> "1000169"  [ label = "DDG: cin >> n >> m >> rb >> cb >> rd >> cd"] 
  "1000134" -> "1000169"  [ label = "DDG: rb <= rd"] 
  "1000141" -> "1000169"  [ label = "DDG: 2 * n"] 
  "1000145" -> "1000169"  [ label = "DDG: rb"] 
  "1000145" -> "1000169"  [ label = "DDG: rd"] 
  "1000141" -> "1000169"  [ label = "DDG: rb - rd"] 
  "1000134" -> "1000169"  [ label = "DDG: 2 * n - rb - rd"] 
  "1000138" -> "1000169"  [ label = "DDG: rd"] 
  "1000138" -> "1000169"  [ label = "DDG: rb"] 
  "1000134" -> "1000169"  [ label = "DDG: rd - rb"] 
  "1000133" -> "1000169"  [ label = "DDG: rb <= rd ? rd - rb : 2 * n - rb - rd"] 
  "1000148" -> "1000169"  [ label = "DDG: cb <= cd"] 
  "1000156" -> "1000169"  [ label = "DDG: m"] 
  "1000155" -> "1000169"  [ label = "DDG: 2 * m"] 
  "1000159" -> "1000169"  [ label = "DDG: cb"] 
  "1000159" -> "1000169"  [ label = "DDG: cd"] 
  "1000155" -> "1000169"  [ label = "DDG: cb - cd"] 
  "1000148" -> "1000169"  [ label = "DDG: 2 * m - cb - cd"] 
  "1000152" -> "1000169"  [ label = "DDG: cd"] 
  "1000152" -> "1000169"  [ label = "DDG: cb"] 
  "1000148" -> "1000169"  [ label = "DDG: cd - cb"] 
  "1000133" -> "1000169"  [ label = "DDG: cb <= cd ? cd - cb : 2 * m - cb - cd"] 
  "1000132" -> "1000169"  [ label = "DDG: min(\n            rb <= rd ? rd - rb : 2 * n - rb - rd,\n            cb <= cd ? cd - cb : 2 * m - cb - cd\n        )"] 
  "1000132" -> "1000169"  [ label = "DDG: &#39"] 
  "1000130" -> "1000169"  [ label = "DDG: min(\n            rb <= rd ? rd - rb : 2 * n - rb - rd,\n            cb <= cd ? cd - cb : 2 * m - cb - cd\n        ) << &#39"] 
  "1000130" -> "1000169"  [ label = "DDG: cout << min(\n            rb <= rd ? rd - rb : 2 * n - rb - rd,\n            cb <= cd ? cd - cb : 2 * m - cb - cd\n        ) << &#39"] 
  "1000164" -> "1000169"  [ label = "DDG: n"] 
  "1000164" -> "1000169"  [ label = "DDG: n&#39"] 
  "1000167" -> "1000169"  [ label = "DDG: <RET>"] 
  "1000130" -> "1000169"  [ label = "DDG: cout"] 
  "1000168" -> "1000167"  [ label = "DDG: 0"] 
  "1000101" -> "1000167"  [ label = "DDG: "] 
  "1000101" -> "1000104"  [ label = "DDG: "] 
  "1000101" -> "1000168"  [ label = "DDG: "] 
  "1000104" -> "1000108"  [ label = "DDG: ntest"] 
  "1000101" -> "1000108"  [ label = "DDG: "] 
  "1000104" -> "1000117"  [ label = "DDG: cin"] 
  "1000101" -> "1000117"  [ label = "DDG: "] 
  "1000119" -> "1000117"  [ label = "DDG: n"] 
  "1000119" -> "1000117"  [ label = "DDG: m >> rb >> cb >> rd >> cd"] 
  "1000101" -> "1000130"  [ label = "DDG: "] 
  "1000132" -> "1000130"  [ label = "DDG: min(\n            rb <= rd ? rd - rb : 2 * n - rb - rd,\n            cb <= cd ? cd - cb : 2 * m - cb - cd\n        )"] 
  "1000132" -> "1000130"  [ label = "DDG: &#39"] 
  "1000119" -> "1000164"  [ label = "DDG: n"] 
  "1000142" -> "1000164"  [ label = "DDG: n"] 
  "1000101" -> "1000164"  [ label = "DDG: "] 
  "1000164" -> "1000119"  [ label = "DDG: n"] 
  "1000101" -> "1000119"  [ label = "DDG: "] 
  "1000121" -> "1000119"  [ label = "DDG: rb >> cb >> rd >> cd"] 
  "1000121" -> "1000119"  [ label = "DDG: m"] 
  "1000133" -> "1000132"  [ label = "DDG: cb <= cd ? cd - cb : 2 * m - cb - cd"] 
  "1000133" -> "1000132"  [ label = "DDG: rb <= rd ? rd - rb : 2 * n - rb - rd"] 
  "1000156" -> "1000121"  [ label = "DDG: m"] 
  "1000101" -> "1000121"  [ label = "DDG: "] 
  "1000123" -> "1000121"  [ label = "DDG: rb"] 
  "1000123" -> "1000121"  [ label = "DDG: cb >> rd >> cd"] 
  "1000141" -> "1000133"  [ label = "DDG: 2 * n"] 
  "1000141" -> "1000133"  [ label = "DDG: rb - rd"] 
  "1000138" -> "1000133"  [ label = "DDG: rd"] 
  "1000138" -> "1000133"  [ label = "DDG: rb"] 
  "1000155" -> "1000133"  [ label = "DDG: 2 * m"] 
  "1000155" -> "1000133"  [ label = "DDG: cb - cd"] 
  "1000152" -> "1000133"  [ label = "DDG: cb"] 
  "1000152" -> "1000133"  [ label = "DDG: cd"] 
  "1000145" -> "1000123"  [ label = "DDG: rb"] 
  "1000138" -> "1000123"  [ label = "DDG: rb"] 
  "1000101" -> "1000123"  [ label = "DDG: "] 
  "1000125" -> "1000123"  [ label = "DDG: rd >> cd"] 
  "1000125" -> "1000123"  [ label = "DDG: cb"] 
  "1000138" -> "1000134"  [ label = "DDG: rd"] 
  "1000138" -> "1000134"  [ label = "DDG: rb"] 
  "1000141" -> "1000134"  [ label = "DDG: 2 * n"] 
  "1000141" -> "1000134"  [ label = "DDG: rb - rd"] 
  "1000152" -> "1000148"  [ label = "DDG: cb"] 
  "1000152" -> "1000148"  [ label = "DDG: cd"] 
  "1000155" -> "1000148"  [ label = "DDG: 2 * m"] 
  "1000155" -> "1000148"  [ label = "DDG: cb - cd"] 
  "1000159" -> "1000125"  [ label = "DDG: cb"] 
  "1000152" -> "1000125"  [ label = "DDG: cb"] 
  "1000101" -> "1000125"  [ label = "DDG: "] 
  "1000127" -> "1000125"  [ label = "DDG: rd"] 
  "1000127" -> "1000125"  [ label = "DDG: cd"] 
  "1000123" -> "1000135"  [ label = "DDG: rb"] 
  "1000101" -> "1000135"  [ label = "DDG: "] 
  "1000127" -> "1000135"  [ label = "DDG: rd"] 
  "1000135" -> "1000138"  [ label = "DDG: rd"] 
  "1000101" -> "1000138"  [ label = "DDG: "] 
  "1000135" -> "1000138"  [ label = "DDG: rb"] 
  "1000142" -> "1000141"  [ label = "DDG: 2"] 
  "1000142" -> "1000141"  [ label = "DDG: n"] 
  "1000145" -> "1000141"  [ label = "DDG: rb"] 
  "1000145" -> "1000141"  [ label = "DDG: rd"] 
  "1000125" -> "1000149"  [ label = "DDG: cb"] 
  "1000101" -> "1000149"  [ label = "DDG: "] 
  "1000127" -> "1000149"  [ label = "DDG: cd"] 
  "1000149" -> "1000152"  [ label = "DDG: cd"] 
  "1000101" -> "1000152"  [ label = "DDG: "] 
  "1000149" -> "1000152"  [ label = "DDG: cb"] 
  "1000156" -> "1000155"  [ label = "DDG: 2"] 
  "1000156" -> "1000155"  [ label = "DDG: m"] 
  "1000159" -> "1000155"  [ label = "DDG: cd"] 
  "1000159" -> "1000155"  [ label = "DDG: cb"] 
  "1000145" -> "1000127"  [ label = "DDG: rd"] 
  "1000138" -> "1000127"  [ label = "DDG: rd"] 
  "1000101" -> "1000127"  [ label = "DDG: "] 
  "1000159" -> "1000127"  [ label = "DDG: cd"] 
  "1000152" -> "1000127"  [ label = "DDG: cd"] 
  "1000101" -> "1000142"  [ label = "DDG: "] 
  "1000119" -> "1000142"  [ label = "DDG: n"] 
  "1000135" -> "1000145"  [ label = "DDG: rb"] 
  "1000101" -> "1000145"  [ label = "DDG: "] 
  "1000135" -> "1000145"  [ label = "DDG: rd"] 
  "1000101" -> "1000156"  [ label = "DDG: "] 
  "1000121" -> "1000156"  [ label = "DDG: m"] 
  "1000149" -> "1000159"  [ label = "DDG: cb"] 
  "1000101" -> "1000159"  [ label = "DDG: "] 
  "1000149" -> "1000159"  [ label = "DDG: cd"] 
  "1000108" -> "1000125"  [ label = "CDG: "] 
  "1000108" -> "1000117"  [ label = "CDG: "] 
  "1000108" -> "1000164"  [ label = "CDG: "] 
  "1000108" -> "1000127"  [ label = "CDG: "] 
  "1000108" -> "1000119"  [ label = "CDG: "] 
  "1000108" -> "1000135"  [ label = "CDG: "] 
  "1000108" -> "1000148"  [ label = "CDG: "] 
  "1000108" -> "1000133"  [ label = "CDG: "] 
  "1000108" -> "1000149"  [ label = "CDG: "] 
  "1000108" -> "1000121"  [ label = "CDG: "] 
  "1000108" -> "1000132"  [ label = "CDG: "] 
  "1000108" -> "1000123"  [ label = "CDG: "] 
  "1000108" -> "1000108"  [ label = "CDG: "] 
  "1000108" -> "1000130"  [ label = "CDG: "] 
  "1000108" -> "1000162"  [ label = "CDG: "] 
  "1000108" -> "1000134"  [ label = "CDG: "] 
  "1000135" -> "1000142"  [ label = "CDG: "] 
  "1000135" -> "1000141"  [ label = "CDG: "] 
  "1000135" -> "1000145"  [ label = "CDG: "] 
  "1000135" -> "1000138"  [ label = "CDG: "] 
  "1000149" -> "1000156"  [ label = "CDG: "] 
  "1000149" -> "1000152"  [ label = "CDG: "] 
  "1000149" -> "1000159"  [ label = "CDG: "] 
  "1000149" -> "1000155"  [ label = "CDG: "] 
}
