digraph "sieve" {  
"1000101" [label = "(METHOD,sieve)" ]
"1000145" [label = "(METHOD_RETURN,vector<int>)" ]
"1000102" [label = "(PARAM,int n)" ]
"1000104" [label = "(int[n + 1],int[n + 1]())" ]
"1000143" [label = "(RETURN,return vect;,return vect;)" ]
"1000108" [label = "(<operator>.assignment,i = 2)" ]
"1000111" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000114" [label = "(<operator>.postIncrement,i++)" ]
"1000144" [label = "(IDENTIFIER,vect,return vect;)" ]
"1000117" [label = "(<operator>.equals,arr[i] == 0)" ]
"1000123" [label = "(vect.push_back,vect.push_back(i))" ]
"1000127" [label = "(<operator>.assignment,j = 2 * i)" ]
"1000132" [label = "(<operator>.lessEqualsThan,j <= n)" ]
"1000135" [label = "(<operator>.assignmentPlus,j += i)" ]
"1000138" [label = "(<operator>.assignment,arr[j] = 1)" ]
"1000129" [label = "(<operator>.multiplication,2 * i)" ]
"1000118" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000139" [label = "(<operator>.indirectIndexAccess,arr[j])" ]
  "1000102" -> "1000145"  [ label = "DDG: n"] 
  "1000104" -> "1000145"  [ label = "DDG: int[n + 1]()"] 
  "1000111" -> "1000145"  [ label = "DDG: i"] 
  "1000111" -> "1000145"  [ label = "DDG: n"] 
  "1000111" -> "1000145"  [ label = "DDG: i <= n"] 
  "1000117" -> "1000145"  [ label = "DDG: arr[i]"] 
  "1000117" -> "1000145"  [ label = "DDG: arr[i] == 0"] 
  "1000123" -> "1000145"  [ label = "DDG: vect.push_back(i)"] 
  "1000127" -> "1000145"  [ label = "DDG: 2 * i"] 
  "1000132" -> "1000145"  [ label = "DDG: j"] 
  "1000132" -> "1000145"  [ label = "DDG: j <= n"] 
  "1000138" -> "1000145"  [ label = "DDG: arr[j]"] 
  "1000143" -> "1000145"  [ label = "DDG: <RET>"] 
  "1000101" -> "1000102"  [ label = "DDG: "] 
  "1000101" -> "1000104"  [ label = "DDG: "] 
  "1000144" -> "1000143"  [ label = "DDG: vect"] 
  "1000101" -> "1000143"  [ label = "DDG: "] 
  "1000101" -> "1000108"  [ label = "DDG: "] 
  "1000101" -> "1000144"  [ label = "DDG: "] 
  "1000108" -> "1000111"  [ label = "DDG: i"] 
  "1000114" -> "1000111"  [ label = "DDG: i"] 
  "1000101" -> "1000111"  [ label = "DDG: "] 
  "1000132" -> "1000111"  [ label = "DDG: n"] 
  "1000102" -> "1000111"  [ label = "DDG: n"] 
  "1000111" -> "1000114"  [ label = "DDG: i"] 
  "1000129" -> "1000114"  [ label = "DDG: i"] 
  "1000101" -> "1000114"  [ label = "DDG: "] 
  "1000101" -> "1000117"  [ label = "DDG: "] 
  "1000111" -> "1000123"  [ label = "DDG: i"] 
  "1000101" -> "1000123"  [ label = "DDG: "] 
  "1000129" -> "1000127"  [ label = "DDG: 2"] 
  "1000129" -> "1000127"  [ label = "DDG: i"] 
  "1000129" -> "1000135"  [ label = "DDG: i"] 
  "1000101" -> "1000135"  [ label = "DDG: "] 
  "1000101" -> "1000138"  [ label = "DDG: "] 
  "1000101" -> "1000127"  [ label = "DDG: "] 
  "1000127" -> "1000132"  [ label = "DDG: j"] 
  "1000135" -> "1000132"  [ label = "DDG: j"] 
  "1000101" -> "1000132"  [ label = "DDG: "] 
  "1000111" -> "1000132"  [ label = "DDG: n"] 
  "1000102" -> "1000132"  [ label = "DDG: n"] 
  "1000132" -> "1000135"  [ label = "DDG: j"] 
  "1000101" -> "1000129"  [ label = "DDG: "] 
  "1000123" -> "1000129"  [ label = "DDG: i"] 
  "1000111" -> "1000117"  [ label = "CDG: "] 
  "1000111" -> "1000111"  [ label = "CDG: "] 
  "1000111" -> "1000114"  [ label = "CDG: "] 
  "1000111" -> "1000118"  [ label = "CDG: "] 
  "1000117" -> "1000127"  [ label = "CDG: "] 
  "1000117" -> "1000132"  [ label = "CDG: "] 
  "1000117" -> "1000129"  [ label = "CDG: "] 
  "1000117" -> "1000123"  [ label = "CDG: "] 
  "1000132" -> "1000132"  [ label = "CDG: "] 
  "1000132" -> "1000139"  [ label = "CDG: "] 
  "1000132" -> "1000135"  [ label = "CDG: "] 
  "1000132" -> "1000138"  [ label = "CDG: "] 
}
