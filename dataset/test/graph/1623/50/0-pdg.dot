digraph "canDo" {  
"1000101" [label = "(METHOD,canDo)" ]
"1000183" [label = "(METHOD_RETURN,bool)" ]
"1000102" [label = "(PARAM,int x)" ]
"1000103" [label = "(PARAM,vector<int>& v)" ]
"1000171" [label = "(RETURN,return cp[0] >= x && cp[1] >= x;,return cp[0] >= x && cp[1] >= x;)" ]
"1000108" [label = "(<operator>.assignment,i=0)" ]
"1000111" [label = "(<operator>.lessThan,i<v.size())" ]
"1000114" [label = "(<operator>.postIncrement,i++)" ]
"1000116" [label = "(cp.push_back,cp.push_back(v[i]))" ]
"1000122" [label = "(<operator>.assignment,i = cp.size() - 1)" ]
"1000127" [label = "(<operator>.greaterEqualsThan,i >= 2)" ]
"1000130" [label = "(<operator>.postDecrement,i--)" ]
"1000172" [label = "(<operator>.logicalAnd,cp[0] >= x && cp[1] >= x)" ]
"1000142" [label = "(<operator>.assignment,take = min(v[i],(cp[i] - x))/3)" ]
"1000155" [label = "(<operator>.assignmentPlus,cp[i - 1]+=take)" ]
"1000162" [label = "(<operator>.assignmentPlus,cp[i - 2]+=(2 * take))" ]
"1000124" [label = "(<operator>.subtraction,cp.size() - 1)" ]
"1000134" [label = "(<operator>.lessThan,cp[i] < x)" ]
"1000139" [label = "(RETURN,return false;,return false;)" ]
"1000173" [label = "(<operator>.greaterEqualsThan,cp[0] >= x)" ]
"1000178" [label = "(<operator>.greaterEqualsThan,cp[1] >= x)" ]
"1000140" [label = "(IDENTIFIER,false,return false;)" ]
"1000144" [label = "(<operator>.division,min(v[i],(cp[i] - x))/3)" ]
"1000168" [label = "(<operator>.multiplication,2 * take)" ]
"1000145" [label = "(min,min(v[i],(cp[i] - x)))" ]
"1000158" [label = "(<operator>.subtraction,i - 1)" ]
"1000165" [label = "(<operator>.subtraction,i - 2)" ]
"1000149" [label = "(<operator>.subtraction,cp[i] - x)" ]
"1000113" [label = "(v.size,v.size())" ]
"1000117" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000156" [label = "(<operator>.indirectIndexAccess,cp[i - 1])" ]
"1000163" [label = "(<operator>.indirectIndexAccess,cp[i - 2])" ]
"1000174" [label = "(<operator>.indirectIndexAccess,cp[0])" ]
"1000179" [label = "(<operator>.indirectIndexAccess,cp[1])" ]
"1000135" [label = "(<operator>.indirectIndexAccess,cp[i])" ]
"1000146" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000150" [label = "(<operator>.indirectIndexAccess,cp[i])" ]
  "1000102" -> "1000183"  [ label = "DDG: x"] 
  "1000103" -> "1000183"  [ label = "DDG: v"] 
  "1000111" -> "1000183"  [ label = "DDG: v.size()"] 
  "1000111" -> "1000183"  [ label = "DDG: i<v.size()"] 
  "1000124" -> "1000183"  [ label = "DDG: cp.size()"] 
  "1000122" -> "1000183"  [ label = "DDG: cp.size() - 1"] 
  "1000127" -> "1000183"  [ label = "DDG: i"] 
  "1000127" -> "1000183"  [ label = "DDG: i >= 2"] 
  "1000173" -> "1000183"  [ label = "DDG: cp[0]"] 
  "1000173" -> "1000183"  [ label = "DDG: x"] 
  "1000172" -> "1000183"  [ label = "DDG: cp[0] >= x"] 
  "1000178" -> "1000183"  [ label = "DDG: cp[1]"] 
  "1000178" -> "1000183"  [ label = "DDG: x"] 
  "1000172" -> "1000183"  [ label = "DDG: cp[1] >= x"] 
  "1000172" -> "1000183"  [ label = "DDG: cp[0] >= x && cp[1] >= x"] 
  "1000134" -> "1000183"  [ label = "DDG: cp[i]"] 
  "1000134" -> "1000183"  [ label = "DDG: x"] 
  "1000134" -> "1000183"  [ label = "DDG: cp[i] < x"] 
  "1000145" -> "1000183"  [ label = "DDG: v[i]"] 
  "1000149" -> "1000183"  [ label = "DDG: cp[i]"] 
  "1000145" -> "1000183"  [ label = "DDG: cp[i] - x"] 
  "1000144" -> "1000183"  [ label = "DDG: min(v[i],(cp[i] - x))"] 
  "1000142" -> "1000183"  [ label = "DDG: min(v[i],(cp[i] - x))/3"] 
  "1000155" -> "1000183"  [ label = "DDG: cp[i - 1]"] 
  "1000162" -> "1000183"  [ label = "DDG: cp[i - 2]"] 
  "1000168" -> "1000183"  [ label = "DDG: take"] 
  "1000162" -> "1000183"  [ label = "DDG: 2 * take"] 
  "1000116" -> "1000183"  [ label = "DDG: v[i]"] 
  "1000116" -> "1000183"  [ label = "DDG: cp.push_back(v[i])"] 
  "1000139" -> "1000183"  [ label = "DDG: <RET>"] 
  "1000171" -> "1000183"  [ label = "DDG: <RET>"] 
  "1000101" -> "1000102"  [ label = "DDG: "] 
  "1000101" -> "1000103"  [ label = "DDG: "] 
  "1000172" -> "1000171"  [ label = "DDG: cp[0] >= x && cp[1] >= x"] 
  "1000101" -> "1000108"  [ label = "DDG: "] 
  "1000124" -> "1000122"  [ label = "DDG: cp.size()"] 
  "1000124" -> "1000122"  [ label = "DDG: 1"] 
  "1000108" -> "1000111"  [ label = "DDG: i"] 
  "1000114" -> "1000111"  [ label = "DDG: i"] 
  "1000101" -> "1000111"  [ label = "DDG: "] 
  "1000111" -> "1000114"  [ label = "DDG: i"] 
  "1000101" -> "1000114"  [ label = "DDG: "] 
  "1000103" -> "1000116"  [ label = "DDG: v"] 
  "1000101" -> "1000122"  [ label = "DDG: "] 
  "1000122" -> "1000127"  [ label = "DDG: i"] 
  "1000130" -> "1000127"  [ label = "DDG: i"] 
  "1000101" -> "1000127"  [ label = "DDG: "] 
  "1000165" -> "1000130"  [ label = "DDG: i"] 
  "1000101" -> "1000130"  [ label = "DDG: "] 
  "1000144" -> "1000142"  [ label = "DDG: 3"] 
  "1000144" -> "1000142"  [ label = "DDG: min(v[i],(cp[i] - x))"] 
  "1000142" -> "1000155"  [ label = "DDG: take"] 
  "1000101" -> "1000155"  [ label = "DDG: "] 
  "1000168" -> "1000162"  [ label = "DDG: take"] 
  "1000168" -> "1000162"  [ label = "DDG: 2"] 
  "1000173" -> "1000172"  [ label = "DDG: cp[0]"] 
  "1000173" -> "1000172"  [ label = "DDG: x"] 
  "1000178" -> "1000172"  [ label = "DDG: cp[1]"] 
  "1000178" -> "1000172"  [ label = "DDG: x"] 
  "1000101" -> "1000124"  [ label = "DDG: "] 
  "1000140" -> "1000139"  [ label = "DDG: false"] 
  "1000101" -> "1000139"  [ label = "DDG: "] 
  "1000101" -> "1000142"  [ label = "DDG: "] 
  "1000149" -> "1000173"  [ label = "DDG: x"] 
  "1000102" -> "1000173"  [ label = "DDG: x"] 
  "1000101" -> "1000173"  [ label = "DDG: "] 
  "1000173" -> "1000178"  [ label = "DDG: x"] 
  "1000102" -> "1000178"  [ label = "DDG: x"] 
  "1000101" -> "1000178"  [ label = "DDG: "] 
  "1000149" -> "1000134"  [ label = "DDG: cp[i]"] 
  "1000149" -> "1000134"  [ label = "DDG: x"] 
  "1000102" -> "1000134"  [ label = "DDG: x"] 
  "1000101" -> "1000134"  [ label = "DDG: "] 
  "1000101" -> "1000140"  [ label = "DDG: "] 
  "1000145" -> "1000144"  [ label = "DDG: v[i]"] 
  "1000145" -> "1000144"  [ label = "DDG: cp[i] - x"] 
  "1000101" -> "1000144"  [ label = "DDG: "] 
  "1000101" -> "1000168"  [ label = "DDG: "] 
  "1000142" -> "1000168"  [ label = "DDG: take"] 
  "1000116" -> "1000145"  [ label = "DDG: v[i]"] 
  "1000103" -> "1000145"  [ label = "DDG: v"] 
  "1000149" -> "1000145"  [ label = "DDG: x"] 
  "1000149" -> "1000145"  [ label = "DDG: cp[i]"] 
  "1000127" -> "1000158"  [ label = "DDG: i"] 
  "1000101" -> "1000158"  [ label = "DDG: "] 
  "1000158" -> "1000165"  [ label = "DDG: i"] 
  "1000101" -> "1000165"  [ label = "DDG: "] 
  "1000134" -> "1000149"  [ label = "DDG: cp[i]"] 
  "1000134" -> "1000149"  [ label = "DDG: x"] 
  "1000102" -> "1000149"  [ label = "DDG: x"] 
  "1000101" -> "1000149"  [ label = "DDG: "] 
  "1000111" -> "1000117"  [ label = "CDG: "] 
  "1000111" -> "1000114"  [ label = "CDG: "] 
  "1000111" -> "1000116"  [ label = "CDG: "] 
  "1000111" -> "1000113"  [ label = "CDG: "] 
  "1000111" -> "1000111"  [ label = "CDG: "] 
  "1000127" -> "1000174"  [ label = "CDG: "] 
  "1000127" -> "1000135"  [ label = "CDG: "] 
  "1000127" -> "1000172"  [ label = "CDG: "] 
  "1000127" -> "1000173"  [ label = "CDG: "] 
  "1000127" -> "1000171"  [ label = "CDG: "] 
  "1000127" -> "1000134"  [ label = "CDG: "] 
  "1000173" -> "1000178"  [ label = "CDG: "] 
  "1000173" -> "1000179"  [ label = "CDG: "] 
  "1000134" -> "1000127"  [ label = "CDG: "] 
  "1000134" -> "1000142"  [ label = "CDG: "] 
  "1000134" -> "1000156"  [ label = "CDG: "] 
  "1000134" -> "1000150"  [ label = "CDG: "] 
  "1000134" -> "1000139"  [ label = "CDG: "] 
  "1000134" -> "1000144"  [ label = "CDG: "] 
  "1000134" -> "1000165"  [ label = "CDG: "] 
  "1000134" -> "1000149"  [ label = "CDG: "] 
  "1000134" -> "1000163"  [ label = "CDG: "] 
  "1000134" -> "1000168"  [ label = "CDG: "] 
  "1000134" -> "1000158"  [ label = "CDG: "] 
  "1000134" -> "1000155"  [ label = "CDG: "] 
  "1000134" -> "1000145"  [ label = "CDG: "] 
  "1000134" -> "1000130"  [ label = "CDG: "] 
  "1000134" -> "1000146"  [ label = "CDG: "] 
  "1000134" -> "1000162"  [ label = "CDG: "] 
}
