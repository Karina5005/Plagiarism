digraph "sieve" {  
"1000220" [label = "(METHOD,sieve)" ]
"1000264" [label = "(METHOD_RETURN,vector<ll>)" ]
"1000221" [label = "(PARAM,ll n)" ]
"1000223" [label = "(ll[n + 1],ll[n + 1]())" ]
"1000262" [label = "(RETURN,return vect;,return vect;)" ]
"1000227" [label = "(<operator>.assignment,i = 2)" ]
"1000230" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000233" [label = "(<operator>.postIncrement,i++)" ]
"1000263" [label = "(IDENTIFIER,vect,return vect;)" ]
"1000236" [label = "(<operator>.equals,arr[i] == 0)" ]
"1000242" [label = "(vect.push_back,vect.push_back(i))" ]
"1000246" [label = "(<operator>.assignment,j = 2 * i)" ]
"1000251" [label = "(<operator>.lessEqualsThan,j <= n)" ]
"1000254" [label = "(<operator>.assignmentPlus,j += i)" ]
"1000257" [label = "(<operator>.assignment,arr[j] = 1)" ]
"1000248" [label = "(<operator>.multiplication,2 * i)" ]
"1000237" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000258" [label = "(<operator>.indirectIndexAccess,arr[j])" ]
  "1000221" -> "1000264"  [ label = "DDG: n"] 
  "1000223" -> "1000264"  [ label = "DDG: ll[n + 1]()"] 
  "1000230" -> "1000264"  [ label = "DDG: i"] 
  "1000230" -> "1000264"  [ label = "DDG: n"] 
  "1000230" -> "1000264"  [ label = "DDG: i <= n"] 
  "1000236" -> "1000264"  [ label = "DDG: arr[i]"] 
  "1000236" -> "1000264"  [ label = "DDG: arr[i] == 0"] 
  "1000242" -> "1000264"  [ label = "DDG: vect.push_back(i)"] 
  "1000246" -> "1000264"  [ label = "DDG: 2 * i"] 
  "1000251" -> "1000264"  [ label = "DDG: j"] 
  "1000251" -> "1000264"  [ label = "DDG: j <= n"] 
  "1000257" -> "1000264"  [ label = "DDG: arr[j]"] 
  "1000262" -> "1000264"  [ label = "DDG: <RET>"] 
  "1000220" -> "1000221"  [ label = "DDG: "] 
  "1000220" -> "1000223"  [ label = "DDG: "] 
  "1000263" -> "1000262"  [ label = "DDG: vect"] 
  "1000220" -> "1000262"  [ label = "DDG: "] 
  "1000220" -> "1000227"  [ label = "DDG: "] 
  "1000220" -> "1000263"  [ label = "DDG: "] 
  "1000227" -> "1000230"  [ label = "DDG: i"] 
  "1000233" -> "1000230"  [ label = "DDG: i"] 
  "1000220" -> "1000230"  [ label = "DDG: "] 
  "1000251" -> "1000230"  [ label = "DDG: n"] 
  "1000221" -> "1000230"  [ label = "DDG: n"] 
  "1000230" -> "1000233"  [ label = "DDG: i"] 
  "1000248" -> "1000233"  [ label = "DDG: i"] 
  "1000220" -> "1000233"  [ label = "DDG: "] 
  "1000220" -> "1000236"  [ label = "DDG: "] 
  "1000230" -> "1000242"  [ label = "DDG: i"] 
  "1000220" -> "1000242"  [ label = "DDG: "] 
  "1000248" -> "1000246"  [ label = "DDG: i"] 
  "1000248" -> "1000246"  [ label = "DDG: 2"] 
  "1000248" -> "1000254"  [ label = "DDG: i"] 
  "1000220" -> "1000254"  [ label = "DDG: "] 
  "1000220" -> "1000257"  [ label = "DDG: "] 
  "1000220" -> "1000246"  [ label = "DDG: "] 
  "1000246" -> "1000251"  [ label = "DDG: j"] 
  "1000254" -> "1000251"  [ label = "DDG: j"] 
  "1000220" -> "1000251"  [ label = "DDG: "] 
  "1000230" -> "1000251"  [ label = "DDG: n"] 
  "1000221" -> "1000251"  [ label = "DDG: n"] 
  "1000251" -> "1000254"  [ label = "DDG: j"] 
  "1000220" -> "1000248"  [ label = "DDG: "] 
  "1000242" -> "1000248"  [ label = "DDG: i"] 
  "1000230" -> "1000236"  [ label = "CDG: "] 
  "1000230" -> "1000237"  [ label = "CDG: "] 
  "1000230" -> "1000233"  [ label = "CDG: "] 
  "1000230" -> "1000230"  [ label = "CDG: "] 
  "1000236" -> "1000242"  [ label = "CDG: "] 
  "1000236" -> "1000246"  [ label = "CDG: "] 
  "1000236" -> "1000248"  [ label = "CDG: "] 
  "1000236" -> "1000251"  [ label = "CDG: "] 
  "1000251" -> "1000258"  [ label = "CDG: "] 
  "1000251" -> "1000254"  [ label = "CDG: "] 
  "1000251" -> "1000257"  [ label = "CDG: "] 
  "1000251" -> "1000251"  [ label = "CDG: "] 
}
