digraph "solve" {  
"1000104" [label = "(METHOD,solve)" ]
"1000334" [label = "(METHOD_RETURN,void)" ]
"1000105" [label = "(PARAM,int kes)" ]
"1000108" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000111" [label = "(<operator>.lessThan,vector<vector<int>> ranges(n, vector<int>(3)))" ]
"1000126" [label = "(<operator>.assignment,i = 0)" ]
"1000129" [label = "(<operator>.lessThan,i < n)" ]
"1000132" [label = "(<operator>.postIncrement,i++)" ]
"1000191" [label = "(RETURN,return true;,return true;)" ]
"1000315" [label = "(<operator>.shiftLeft,cout<<a[0]<<\" \"<<a[1]<<\" \"<<a[2]<<endl)" ]
"1000113" [label = "(<operator>.lessThan,vector<int>> ranges(n, vector<int>(3)))" ]
"1000135" [label = "(<operator>.arithmeticShiftRight,cin>>ranges[i][0]>>ranges[i][1])" ]
"1000150" [label = "(<operator>.lessThan,a[0] < b[0])" ]
"1000157" [label = "(RETURN,return true;,return true;)" ]
"1000160" [label = "(<operator>.equals,a[0] == b[0])" ]
"1000182" [label = "(<operator>.greaterThan,a[0] > b[0])" ]
"1000189" [label = "(RETURN,return false;,return false;)" ]
"1000192" [label = "(IDENTIFIER,true,return true;)" ]
"1000115" [label = "(<operator>.arithmeticShiftRight,int>> ranges(n, vector<int>(3)))" ]
"1000158" [label = "(IDENTIFIER,true,return true;)" ]
"1000190" [label = "(IDENTIFIER,false,return false;)" ]
"1000117" [label = "(ranges,ranges(n, vector<int>(3)))" ]
"1000137" [label = "(<operator>.arithmeticShiftRight,ranges[i][0]>>ranges[i][1])" ]
"1000169" [label = "(<operator>.lessEqualsThan,a[1] <= b[1])" ]
"1000176" [label = "(RETURN,return false;,return false;)" ]
"1000119" [label = "(<operator>.lessThan,vector<int>(3))" ]
"1000177" [label = "(IDENTIFIER,false,return false;)" ]
"1000179" [label = "(RETURN,return true;,return true;)" ]
"1000121" [label = "(<operator>.greaterThan,int>(3))" ]
"1000180" [label = "(IDENTIFIER,true,return true;)" ]
"1000329" [label = "(<operator>.shiftLeft,a[2]<<endl)" ]
"1000198" [label = "(<operator>.lessThan,i < n)" ]
"1000201" [label = "(<operator>.postIncrement,i++)" ]
"1000161" [label = "(<operator>.indirectIndexAccess,a[0])" ]
"1000164" [label = "(<operator>.indirectIndexAccess,b[0])" ]
"1000183" [label = "(<operator>.indirectIndexAccess,a[0])" ]
"1000186" [label = "(<operator>.indirectIndexAccess,b[0])" ]
"1000205" [label = "(<operator>.equals,ranges[i][0] == ranges[i][1])" ]
"1000216" [label = "(<operator>.assignment,ranges[i][2] = ranges[i][1])" ]
"1000138" [label = "(<operator>.indirectIndexAccess,ranges[i][0])" ]
"1000143" [label = "(<operator>.indirectIndexAccess,ranges[i][1])" ]
"1000206" [label = "(<operator>.indirectIndexAccess,ranges[i][0])" ]
"1000211" [label = "(<operator>.indirectIndexAccess,ranges[i][1])" ]
"1000217" [label = "(<operator>.indirectIndexAccess,ranges[i][2])" ]
"1000222" [label = "(<operator>.indirectIndexAccess,ranges[i][1])" ]
"1000139" [label = "(<operator>.indirectIndexAccess,ranges[i])" ]
"1000144" [label = "(<operator>.indirectIndexAccess,ranges[i])" ]
"1000170" [label = "(<operator>.indirectIndexAccess,a[1])" ]
"1000173" [label = "(<operator>.indirectIndexAccess,b[1])" ]
"1000207" [label = "(<operator>.indirectIndexAccess,ranges[i])" ]
"1000212" [label = "(<operator>.indirectIndexAccess,ranges[i])" ]
"1000218" [label = "(<operator>.indirectIndexAccess,ranges[i])" ]
"1000223" [label = "(<operator>.indirectIndexAccess,ranges[i])" ]
"1000229" [label = "(<operator>.logicalAnd,i+1 < n && ranges[i][0] == ranges[i+1][0])" ]
"1000230" [label = "(<operator>.lessThan,i+1 < n)" ]
"1000235" [label = "(<operator>.equals,ranges[i][0] == ranges[i+1][0])" ]
"1000249" [label = "(<operator>.assignment,ranges[i][2] = min(ranges[i][1], ranges[i+1][1])+1)" ]
"1000231" [label = "(<operator>.addition,i+1)" ]
"1000236" [label = "(<operator>.indirectIndexAccess,ranges[i][0])" ]
"1000241" [label = "(<operator>.indirectIndexAccess,ranges[i+1][0])" ]
"1000250" [label = "(<operator>.indirectIndexAccess,ranges[i][2])" ]
"1000255" [label = "(<operator>.addition,min(ranges[i][1], ranges[i+1][1])+1)" ]
"1000272" [label = "(<operator>.logicalAnd,i+1 < n && ranges[i][1] == ranges[i+1][1])" ]
"1000237" [label = "(<operator>.indirectIndexAccess,ranges[i])" ]
"1000242" [label = "(<operator>.indirectIndexAccess,ranges[i+1])" ]
"1000251" [label = "(<operator>.indirectIndexAccess,ranges[i])" ]
"1000256" [label = "(min,min(ranges[i][1], ranges[i+1][1]))" ]
"1000273" [label = "(<operator>.lessThan,i+1 < n)" ]
"1000278" [label = "(<operator>.equals,ranges[i][1] == ranges[i+1][1])" ]
"1000292" [label = "(<operator>.assignment,ranges[i][2] = max(ranges[i][0], ranges[i+1][0])-1)" ]
"1000244" [label = "(<operator>.addition,i+1)" ]
"1000257" [label = "(<operator>.indirectIndexAccess,ranges[i][1])" ]
"1000262" [label = "(<operator>.indirectIndexAccess,ranges[i+1][1])" ]
"1000274" [label = "(<operator>.addition,i+1)" ]
"1000279" [label = "(<operator>.indirectIndexAccess,ranges[i][1])" ]
"1000284" [label = "(<operator>.indirectIndexAccess,ranges[i+1][1])" ]
"1000293" [label = "(<operator>.indirectIndexAccess,ranges[i][2])" ]
"1000298" [label = "(<operator>.subtraction,max(ranges[i][0], ranges[i+1][0])-1)" ]
"1000258" [label = "(<operator>.indirectIndexAccess,ranges[i])" ]
"1000263" [label = "(<operator>.indirectIndexAccess,ranges[i+1])" ]
"1000280" [label = "(<operator>.indirectIndexAccess,ranges[i])" ]
"1000285" [label = "(<operator>.indirectIndexAccess,ranges[i+1])" ]
"1000294" [label = "(<operator>.indirectIndexAccess,ranges[i])" ]
"1000299" [label = "(max,max(ranges[i][0], ranges[i+1][0]))" ]
"1000265" [label = "(<operator>.addition,i+1)" ]
"1000287" [label = "(<operator>.addition,i+1)" ]
"1000300" [label = "(<operator>.indirectIndexAccess,ranges[i][0])" ]
"1000305" [label = "(<operator>.indirectIndexAccess,ranges[i+1][0])" ]
"1000301" [label = "(<operator>.indirectIndexAccess,ranges[i])" ]
"1000306" [label = "(<operator>.indirectIndexAccess,ranges[i+1])" ]
"1000308" [label = "(<operator>.addition,i+1)" ]
  "1000191" -> "1000334"  [ label = "DDG: <RET>"] 
  "1000105" -> "1000334"  [ label = "DDG: kes"] 
  "1000108" -> "1000334"  [ label = "DDG: cin"] 
  "1000108" -> "1000334"  [ label = "DDG: cin>>n"] 
  "1000111" -> "1000334"  [ label = "DDG: vector"] 
  "1000115" -> "1000334"  [ label = "DDG: int"] 
  "1000119" -> "1000334"  [ label = "DDG: int>(3)"] 
  "1000117" -> "1000334"  [ label = "DDG: vector<int>(3)"] 
  "1000115" -> "1000334"  [ label = "DDG: ranges(n, vector<int>(3))"] 
  "1000113" -> "1000334"  [ label = "DDG: int>> ranges(n, vector<int>(3))"] 
  "1000111" -> "1000334"  [ label = "DDG: vector<int>> ranges(n, vector<int>(3))"] 
  "1000111" -> "1000334"  [ label = "DDG: vector<vector<int>> ranges(n, vector<int>(3))"] 
  "1000129" -> "1000334"  [ label = "DDG: i"] 
  "1000129" -> "1000334"  [ label = "DDG: n"] 
  "1000129" -> "1000334"  [ label = "DDG: i < n"] 
  "1000150" -> "1000334"  [ label = "DDG: a[0]"] 
  "1000150" -> "1000334"  [ label = "DDG: b[0]"] 
  "1000150" -> "1000334"  [ label = "DDG: a[0] < b[0]"] 
  "1000160" -> "1000334"  [ label = "DDG: a[0]"] 
  "1000160" -> "1000334"  [ label = "DDG: b[0]"] 
  "1000160" -> "1000334"  [ label = "DDG: a[0] == b[0]"] 
  "1000182" -> "1000334"  [ label = "DDG: a[0]"] 
  "1000182" -> "1000334"  [ label = "DDG: b[0]"] 
  "1000182" -> "1000334"  [ label = "DDG: a[0] > b[0]"] 
  "1000169" -> "1000334"  [ label = "DDG: a[1]"] 
  "1000169" -> "1000334"  [ label = "DDG: b[1]"] 
  "1000169" -> "1000334"  [ label = "DDG: a[1] <= b[1]"] 
  "1000135" -> "1000334"  [ label = "DDG: cin"] 
  "1000137" -> "1000334"  [ label = "DDG: ranges[i][0]"] 
  "1000137" -> "1000334"  [ label = "DDG: ranges[i][1]"] 
  "1000135" -> "1000334"  [ label = "DDG: ranges[i][0]>>ranges[i][1]"] 
  "1000135" -> "1000334"  [ label = "DDG: cin>>ranges[i][0]>>ranges[i][1]"] 
  "1000315" -> "1000334"  [ label = "DDG: cout<<a[0]<<\" \"<<a[1]<<\" \"<<a[2]<<endl"] 
  "1000315" -> "1000334"  [ label = "DDG: a[0]<<\" \"<<a[1]<<\" \"<<a[2]<<endl"] 
  "1000179" -> "1000334"  [ label = "DDG: <RET>"] 
  "1000176" -> "1000334"  [ label = "DDG: <RET>"] 
  "1000157" -> "1000334"  [ label = "DDG: <RET>"] 
  "1000189" -> "1000334"  [ label = "DDG: <RET>"] 
  "1000329" -> "1000334"  [ label = "DDG: endl"] 
  "1000315" -> "1000334"  [ label = "DDG: cout"] 
  "1000104" -> "1000105"  [ label = "DDG: "] 
  "1000104" -> "1000108"  [ label = "DDG: "] 
  "1000113" -> "1000111"  [ label = "DDG: vector"] 
  "1000104" -> "1000111"  [ label = "DDG: "] 
  "1000113" -> "1000111"  [ label = "DDG: int>> ranges(n, vector<int>(3))"] 
  "1000104" -> "1000126"  [ label = "DDG: "] 
  "1000192" -> "1000191"  [ label = "DDG: true"] 
  "1000104" -> "1000191"  [ label = "DDG: "] 
  "1000119" -> "1000113"  [ label = "DDG: vector"] 
  "1000104" -> "1000113"  [ label = "DDG: "] 
  "1000115" -> "1000113"  [ label = "DDG: ranges(n, vector<int>(3))"] 
  "1000115" -> "1000113"  [ label = "DDG: int"] 
  "1000126" -> "1000129"  [ label = "DDG: i"] 
  "1000132" -> "1000129"  [ label = "DDG: i"] 
  "1000104" -> "1000129"  [ label = "DDG: "] 
  "1000117" -> "1000129"  [ label = "DDG: n"] 
  "1000129" -> "1000132"  [ label = "DDG: i"] 
  "1000104" -> "1000132"  [ label = "DDG: "] 
  "1000158" -> "1000157"  [ label = "DDG: true"] 
  "1000104" -> "1000157"  [ label = "DDG: "] 
  "1000190" -> "1000189"  [ label = "DDG: false"] 
  "1000104" -> "1000189"  [ label = "DDG: "] 
  "1000104" -> "1000192"  [ label = "DDG: "] 
  "1000121" -> "1000115"  [ label = "DDG: int"] 
  "1000104" -> "1000115"  [ label = "DDG: "] 
  "1000117" -> "1000115"  [ label = "DDG: n"] 
  "1000117" -> "1000115"  [ label = "DDG: vector<int>(3)"] 
  "1000108" -> "1000135"  [ label = "DDG: cin"] 
  "1000104" -> "1000135"  [ label = "DDG: "] 
  "1000137" -> "1000135"  [ label = "DDG: ranges[i][1]"] 
  "1000137" -> "1000135"  [ label = "DDG: ranges[i][0]"] 
  "1000104" -> "1000158"  [ label = "DDG: "] 
  "1000150" -> "1000160"  [ label = "DDG: a[0]"] 
  "1000150" -> "1000160"  [ label = "DDG: b[0]"] 
  "1000160" -> "1000182"  [ label = "DDG: a[0]"] 
  "1000160" -> "1000182"  [ label = "DDG: b[0]"] 
  "1000104" -> "1000190"  [ label = "DDG: "] 
  "1000108" -> "1000117"  [ label = "DDG: n"] 
  "1000104" -> "1000117"  [ label = "DDG: "] 
  "1000119" -> "1000117"  [ label = "DDG: vector"] 
  "1000119" -> "1000117"  [ label = "DDG: int>(3)"] 
  "1000177" -> "1000176"  [ label = "DDG: false"] 
  "1000104" -> "1000176"  [ label = "DDG: "] 
  "1000104" -> "1000119"  [ label = "DDG: "] 
  "1000121" -> "1000119"  [ label = "DDG: 3"] 
  "1000121" -> "1000119"  [ label = "DDG: int"] 
  "1000104" -> "1000177"  [ label = "DDG: "] 
  "1000180" -> "1000179"  [ label = "DDG: true"] 
  "1000104" -> "1000179"  [ label = "DDG: "] 
  "1000104" -> "1000121"  [ label = "DDG: "] 
  "1000104" -> "1000180"  [ label = "DDG: "] 
  "1000129" -> "1000139"  [ label = "CDG: "] 
  "1000129" -> "1000144"  [ label = "CDG: "] 
  "1000129" -> "1000132"  [ label = "CDG: "] 
  "1000129" -> "1000138"  [ label = "CDG: "] 
  "1000129" -> "1000135"  [ label = "CDG: "] 
  "1000129" -> "1000143"  [ label = "CDG: "] 
  "1000129" -> "1000137"  [ label = "CDG: "] 
  "1000129" -> "1000129"  [ label = "CDG: "] 
  "1000198" -> "1000211"  [ label = "CDG: "] 
  "1000198" -> "1000206"  [ label = "CDG: "] 
  "1000198" -> "1000201"  [ label = "CDG: "] 
  "1000198" -> "1000198"  [ label = "CDG: "] 
  "1000198" -> "1000212"  [ label = "CDG: "] 
  "1000198" -> "1000207"  [ label = "CDG: "] 
  "1000198" -> "1000205"  [ label = "CDG: "] 
  "1000150" -> "1000164"  [ label = "CDG: "] 
  "1000150" -> "1000161"  [ label = "CDG: "] 
  "1000150" -> "1000157"  [ label = "CDG: "] 
  "1000150" -> "1000160"  [ label = "CDG: "] 
  "1000160" -> "1000182"  [ label = "CDG: "] 
  "1000160" -> "1000183"  [ label = "CDG: "] 
  "1000160" -> "1000186"  [ label = "CDG: "] 
  "1000160" -> "1000169"  [ label = "CDG: "] 
  "1000160" -> "1000173"  [ label = "CDG: "] 
  "1000160" -> "1000170"  [ label = "CDG: "] 
  "1000182" -> "1000191"  [ label = "CDG: "] 
  "1000182" -> "1000189"  [ label = "CDG: "] 
  "1000205" -> "1000216"  [ label = "CDG: "] 
  "1000205" -> "1000222"  [ label = "CDG: "] 
  "1000205" -> "1000217"  [ label = "CDG: "] 
  "1000205" -> "1000229"  [ label = "CDG: "] 
  "1000205" -> "1000230"  [ label = "CDG: "] 
  "1000205" -> "1000218"  [ label = "CDG: "] 
  "1000205" -> "1000231"  [ label = "CDG: "] 
  "1000205" -> "1000223"  [ label = "CDG: "] 
  "1000169" -> "1000179"  [ label = "CDG: "] 
  "1000169" -> "1000176"  [ label = "CDG: "] 
  "1000229" -> "1000258"  [ label = "CDG: "] 
  "1000229" -> "1000255"  [ label = "CDG: "] 
  "1000229" -> "1000274"  [ label = "CDG: "] 
  "1000229" -> "1000251"  [ label = "CDG: "] 
  "1000229" -> "1000250"  [ label = "CDG: "] 
  "1000229" -> "1000273"  [ label = "CDG: "] 
  "1000229" -> "1000265"  [ label = "CDG: "] 
  "1000229" -> "1000263"  [ label = "CDG: "] 
  "1000229" -> "1000262"  [ label = "CDG: "] 
  "1000229" -> "1000272"  [ label = "CDG: "] 
  "1000229" -> "1000249"  [ label = "CDG: "] 
  "1000229" -> "1000257"  [ label = "CDG: "] 
  "1000229" -> "1000256"  [ label = "CDG: "] 
  "1000230" -> "1000244"  [ label = "CDG: "] 
  "1000230" -> "1000236"  [ label = "CDG: "] 
  "1000230" -> "1000242"  [ label = "CDG: "] 
  "1000230" -> "1000235"  [ label = "CDG: "] 
  "1000230" -> "1000237"  [ label = "CDG: "] 
  "1000230" -> "1000241"  [ label = "CDG: "] 
  "1000272" -> "1000294"  [ label = "CDG: "] 
  "1000272" -> "1000305"  [ label = "CDG: "] 
  "1000272" -> "1000293"  [ label = "CDG: "] 
  "1000272" -> "1000298"  [ label = "CDG: "] 
  "1000272" -> "1000308"  [ label = "CDG: "] 
  "1000272" -> "1000300"  [ label = "CDG: "] 
  "1000272" -> "1000292"  [ label = "CDG: "] 
  "1000272" -> "1000306"  [ label = "CDG: "] 
  "1000272" -> "1000299"  [ label = "CDG: "] 
  "1000272" -> "1000301"  [ label = "CDG: "] 
  "1000273" -> "1000285"  [ label = "CDG: "] 
  "1000273" -> "1000284"  [ label = "CDG: "] 
  "1000273" -> "1000279"  [ label = "CDG: "] 
  "1000273" -> "1000280"  [ label = "CDG: "] 
  "1000273" -> "1000278"  [ label = "CDG: "] 
  "1000273" -> "1000287"  [ label = "CDG: "] 
}
