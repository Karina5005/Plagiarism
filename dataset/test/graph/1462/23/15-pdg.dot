digraph "solve" {  
"1000480" [label = "(METHOD,solve)" ]
"1000610" [label = "(METHOD_RETURN,void)" ]
"1000483" [label = "(<operator>.arithmeticShiftRight,cin >> t)" ]
"1000487" [label = "(<operator>.postDecrement,t --)" ]
"1000491" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000535" [label = "(sort,sort(v.begin() , v.end()))" ]
"1000538" [label = "(sort,sort(l.begin() , l.end()))" ]
"1000541" [label = "(sort,sort(r.begin() , r.end()))" ]
"1000545" [label = "(<operator>.assignment,ans = INT_MIN)" ]
"1000603" [label = "(<operator>.shiftLeft,cout << n - ans << \"\n\")" ]
"1000495" [label = "(<operator>.lessThan,vector<pair<int)" ]
"1000500" [label = "(<operator>.arithmeticShiftRight,int>> v(n))" ]
"1000508" [label = "(<operator>.assignment,i = 0)" ]
"1000511" [label = "(<operator>.lessThan,i < n)" ]
"1000514" [label = "(<operator>.postIncrement,i ++)" ]
"1000550" [label = "(<operator>.assignment,i = 0)" ]
"1000553" [label = "(<operator>.lessThan,i < n)" ]
"1000556" [label = "(<operator>.postIncrement,i ++)" ]
"1000519" [label = "(<operator>.arithmeticShiftRight,cin >> a >> b)" ]
"1000525" [label = "(<operator>.assignment,l[i] = a)" ]
"1000530" [label = "(<operator>.assignment,r[i] = b)" ]
"1000560" [label = "(<operator>.assignment,c = 0)" ]
"1000564" [label = "(<operator>.assignment,it = upper_bound(l.begin() , l.end() , v[i].second) - l.begin())" ]
"1000576" [label = "(<operator>.assignmentPlus,c += (n - it))" ]
"1000581" [label = "(<operator>.assignment,it = lower_bound(r.begin() , r.end() , v[i].first) - r.begin())" ]
"1000593" [label = "(<operator>.assignmentPlus,c += (it))" ]
"1000596" [label = "(<operator>.assignment,ans = max(ans , n - c))" ]
"1000605" [label = "(<operator>.shiftLeft,n - ans << \"\n\")" ]
"1000497" [label = "(<operator>.lessThan,pair<int)" ]
"1000502" [label = "(v,v(n))" ]
"1000606" [label = "(<operator>.subtraction,n - ans)" ]
"1000521" [label = "(<operator>.arithmeticShiftRight,a >> b)" ]
"1000566" [label = "(<operator>.subtraction,upper_bound(l.begin() , l.end() , v[i].second) - l.begin())" ]
"1000578" [label = "(<operator>.subtraction,n - it)" ]
"1000583" [label = "(<operator>.subtraction,lower_bound(r.begin() , r.end() , v[i].first) - r.begin())" ]
"1000598" [label = "(max,max(ans , n - c))" ]
"1000567" [label = "(upper_bound,upper_bound(l.begin() , l.end() , v[i].second))" ]
"1000584" [label = "(lower_bound,lower_bound(r.begin() , r.end() , v[i].first))" ]
"1000600" [label = "(<operator>.subtraction,n - c)" ]
"1000536" [label = "(v.begin,v.begin())" ]
"1000537" [label = "(v.end,v.end())" ]
"1000539" [label = "(l.begin,l.begin())" ]
"1000540" [label = "(l.end,l.end())" ]
"1000542" [label = "(r.begin,r.begin())" ]
"1000543" [label = "(r.end,r.end())" ]
"1000526" [label = "(<operator>.indirectIndexAccess,l[i])" ]
"1000531" [label = "(<operator>.indirectIndexAccess,r[i])" ]
"1000575" [label = "(l.begin,l.begin())" ]
"1000592" [label = "(r.begin,r.begin())" ]
"1000568" [label = "(l.begin,l.begin())" ]
"1000569" [label = "(l.end,l.end())" ]
"1000570" [label = "(<operator>.fieldAccess,v[i].second)" ]
"1000585" [label = "(r.begin,r.begin())" ]
"1000586" [label = "(r.end,r.end())" ]
"1000587" [label = "(<operator>.fieldAccess,v[i].first)" ]
"1000571" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000574" [label = "(FIELD_IDENTIFIER,second,second)" ]
"1000588" [label = "(<operator>.indirectIndexAccess,v[i])" ]
"1000591" [label = "(FIELD_IDENTIFIER,first,first)" ]
  "1000483" -> "1000610"  [ label = "DDG: cin"] 
  "1000483" -> "1000610"  [ label = "DDG: cin >> t"] 
  "1000487" -> "1000610"  [ label = "DDG: t"] 
  "1000491" -> "1000610"  [ label = "DDG: cin"] 
  "1000491" -> "1000610"  [ label = "DDG: cin >> n"] 
  "1000495" -> "1000610"  [ label = "DDG: pair<int"] 
  "1000495" -> "1000610"  [ label = "DDG: vector<pair<int"] 
  "1000500" -> "1000610"  [ label = "DDG: int"] 
  "1000500" -> "1000610"  [ label = "DDG: v(n)"] 
  "1000500" -> "1000610"  [ label = "DDG: int>> v(n)"] 
  "1000535" -> "1000610"  [ label = "DDG: v.begin()"] 
  "1000535" -> "1000610"  [ label = "DDG: v.end()"] 
  "1000535" -> "1000610"  [ label = "DDG: sort(v.begin() , v.end())"] 
  "1000538" -> "1000610"  [ label = "DDG: l.begin()"] 
  "1000538" -> "1000610"  [ label = "DDG: l.end()"] 
  "1000538" -> "1000610"  [ label = "DDG: sort(l.begin() , l.end())"] 
  "1000541" -> "1000610"  [ label = "DDG: r.begin()"] 
  "1000541" -> "1000610"  [ label = "DDG: r.end()"] 
  "1000541" -> "1000610"  [ label = "DDG: sort(r.begin() , r.end())"] 
  "1000553" -> "1000610"  [ label = "DDG: i"] 
  "1000553" -> "1000610"  [ label = "DDG: i < n"] 
  "1000606" -> "1000610"  [ label = "DDG: n"] 
  "1000606" -> "1000610"  [ label = "DDG: ans"] 
  "1000605" -> "1000610"  [ label = "DDG: n - ans"] 
  "1000603" -> "1000610"  [ label = "DDG: n - ans << \"\n\""] 
  "1000603" -> "1000610"  [ label = "DDG: cout << n - ans << \"\n\""] 
  "1000567" -> "1000610"  [ label = "DDG: l.end()"] 
  "1000566" -> "1000610"  [ label = "DDG: upper_bound(l.begin() , l.end() , v[i].second)"] 
  "1000566" -> "1000610"  [ label = "DDG: l.begin()"] 
  "1000564" -> "1000610"  [ label = "DDG: upper_bound(l.begin() , l.end() , v[i].second) - l.begin()"] 
  "1000576" -> "1000610"  [ label = "DDG: n - it"] 
  "1000584" -> "1000610"  [ label = "DDG: r.end()"] 
  "1000583" -> "1000610"  [ label = "DDG: lower_bound(r.begin() , r.end() , v[i].first)"] 
  "1000583" -> "1000610"  [ label = "DDG: r.begin()"] 
  "1000581" -> "1000610"  [ label = "DDG: lower_bound(r.begin() , r.end() , v[i].first) - r.begin()"] 
  "1000593" -> "1000610"  [ label = "DDG: it"] 
  "1000600" -> "1000610"  [ label = "DDG: c"] 
  "1000598" -> "1000610"  [ label = "DDG: n - c"] 
  "1000596" -> "1000610"  [ label = "DDG: max(ans , n - c)"] 
  "1000519" -> "1000610"  [ label = "DDG: cin"] 
  "1000519" -> "1000610"  [ label = "DDG: a >> b"] 
  "1000519" -> "1000610"  [ label = "DDG: cin >> a >> b"] 
  "1000525" -> "1000610"  [ label = "DDG: l[i]"] 
  "1000525" -> "1000610"  [ label = "DDG: a"] 
  "1000530" -> "1000610"  [ label = "DDG: r[i]"] 
  "1000530" -> "1000610"  [ label = "DDG: b"] 
  "1000497" -> "1000610"  [ label = "DDG: pair"] 
  "1000545" -> "1000610"  [ label = "DDG: INT_MIN"] 
  "1000603" -> "1000610"  [ label = "DDG: cout"] 
  "1000495" -> "1000610"  [ label = "DDG: vector"] 
  "1000480" -> "1000483"  [ label = "DDG: "] 
  "1000483" -> "1000487"  [ label = "DDG: t"] 
  "1000480" -> "1000487"  [ label = "DDG: "] 
  "1000480" -> "1000545"  [ label = "DDG: "] 
  "1000483" -> "1000491"  [ label = "DDG: cin"] 
  "1000519" -> "1000491"  [ label = "DDG: cin"] 
  "1000480" -> "1000491"  [ label = "DDG: "] 
  "1000606" -> "1000491"  [ label = "DDG: n"] 
  "1000480" -> "1000508"  [ label = "DDG: "] 
  "1000480" -> "1000535"  [ label = "DDG: "] 
  "1000480" -> "1000538"  [ label = "DDG: "] 
  "1000480" -> "1000541"  [ label = "DDG: "] 
  "1000480" -> "1000550"  [ label = "DDG: "] 
  "1000480" -> "1000603"  [ label = "DDG: "] 
  "1000605" -> "1000603"  [ label = "DDG: n - ans"] 
  "1000605" -> "1000603"  [ label = "DDG: \"\n\""] 
  "1000480" -> "1000495"  [ label = "DDG: "] 
  "1000497" -> "1000495"  [ label = "DDG: pair"] 
  "1000497" -> "1000495"  [ label = "DDG: int"] 
  "1000497" -> "1000500"  [ label = "DDG: int"] 
  "1000480" -> "1000500"  [ label = "DDG: "] 
  "1000502" -> "1000500"  [ label = "DDG: n"] 
  "1000508" -> "1000511"  [ label = "DDG: i"] 
  "1000514" -> "1000511"  [ label = "DDG: i"] 
  "1000480" -> "1000511"  [ label = "DDG: "] 
  "1000502" -> "1000511"  [ label = "DDG: n"] 
  "1000511" -> "1000514"  [ label = "DDG: i"] 
  "1000480" -> "1000514"  [ label = "DDG: "] 
  "1000521" -> "1000525"  [ label = "DDG: a"] 
  "1000480" -> "1000525"  [ label = "DDG: "] 
  "1000521" -> "1000530"  [ label = "DDG: b"] 
  "1000480" -> "1000530"  [ label = "DDG: "] 
  "1000550" -> "1000553"  [ label = "DDG: i"] 
  "1000556" -> "1000553"  [ label = "DDG: i"] 
  "1000480" -> "1000553"  [ label = "DDG: "] 
  "1000511" -> "1000553"  [ label = "DDG: n"] 
  "1000600" -> "1000553"  [ label = "DDG: n"] 
  "1000553" -> "1000556"  [ label = "DDG: i"] 
  "1000480" -> "1000556"  [ label = "DDG: "] 
  "1000480" -> "1000560"  [ label = "DDG: "] 
  "1000566" -> "1000564"  [ label = "DDG: upper_bound(l.begin() , l.end() , v[i].second)"] 
  "1000566" -> "1000564"  [ label = "DDG: l.begin()"] 
  "1000578" -> "1000576"  [ label = "DDG: n"] 
  "1000578" -> "1000576"  [ label = "DDG: it"] 
  "1000583" -> "1000581"  [ label = "DDG: lower_bound(r.begin() , r.end() , v[i].first)"] 
  "1000583" -> "1000581"  [ label = "DDG: r.begin()"] 
  "1000581" -> "1000593"  [ label = "DDG: it"] 
  "1000480" -> "1000593"  [ label = "DDG: "] 
  "1000598" -> "1000596"  [ label = "DDG: n - c"] 
  "1000598" -> "1000596"  [ label = "DDG: ans"] 
  "1000606" -> "1000605"  [ label = "DDG: n"] 
  "1000606" -> "1000605"  [ label = "DDG: ans"] 
  "1000480" -> "1000605"  [ label = "DDG: "] 
  "1000480" -> "1000497"  [ label = "DDG: "] 
  "1000500" -> "1000497"  [ label = "DDG: int"] 
  "1000491" -> "1000502"  [ label = "DDG: n"] 
  "1000480" -> "1000502"  [ label = "DDG: "] 
  "1000491" -> "1000519"  [ label = "DDG: cin"] 
  "1000480" -> "1000519"  [ label = "DDG: "] 
  "1000521" -> "1000519"  [ label = "DDG: b"] 
  "1000521" -> "1000519"  [ label = "DDG: a"] 
  "1000480" -> "1000564"  [ label = "DDG: "] 
  "1000560" -> "1000576"  [ label = "DDG: c"] 
  "1000480" -> "1000576"  [ label = "DDG: "] 
  "1000480" -> "1000581"  [ label = "DDG: "] 
  "1000576" -> "1000593"  [ label = "DDG: c"] 
  "1000480" -> "1000596"  [ label = "DDG: "] 
  "1000553" -> "1000606"  [ label = "DDG: n"] 
  "1000480" -> "1000606"  [ label = "DDG: "] 
  "1000545" -> "1000606"  [ label = "DDG: ans"] 
  "1000596" -> "1000606"  [ label = "DDG: ans"] 
  "1000480" -> "1000521"  [ label = "DDG: "] 
  "1000567" -> "1000566"  [ label = "DDG: v[i].second"] 
  "1000567" -> "1000566"  [ label = "DDG: l.end()"] 
  "1000567" -> "1000566"  [ label = "DDG: l.begin()"] 
  "1000480" -> "1000566"  [ label = "DDG: "] 
  "1000553" -> "1000578"  [ label = "DDG: n"] 
  "1000480" -> "1000578"  [ label = "DDG: "] 
  "1000564" -> "1000578"  [ label = "DDG: it"] 
  "1000584" -> "1000583"  [ label = "DDG: r.begin()"] 
  "1000584" -> "1000583"  [ label = "DDG: r.end()"] 
  "1000584" -> "1000583"  [ label = "DDG: v[i].first"] 
  "1000480" -> "1000583"  [ label = "DDG: "] 
  "1000545" -> "1000598"  [ label = "DDG: ans"] 
  "1000596" -> "1000598"  [ label = "DDG: ans"] 
  "1000480" -> "1000598"  [ label = "DDG: "] 
  "1000600" -> "1000598"  [ label = "DDG: c"] 
  "1000600" -> "1000598"  [ label = "DDG: n"] 
  "1000480" -> "1000567"  [ label = "DDG: "] 
  "1000480" -> "1000584"  [ label = "DDG: "] 
  "1000578" -> "1000600"  [ label = "DDG: n"] 
  "1000480" -> "1000600"  [ label = "DDG: "] 
  "1000593" -> "1000600"  [ label = "DDG: c"] 
  "1000487" -> "1000550"  [ label = "CDG: "] 
  "1000487" -> "1000537"  [ label = "CDG: "] 
  "1000487" -> "1000541"  [ label = "CDG: "] 
  "1000487" -> "1000500"  [ label = "CDG: "] 
  "1000487" -> "1000543"  [ label = "CDG: "] 
  "1000487" -> "1000495"  [ label = "CDG: "] 
  "1000487" -> "1000545"  [ label = "CDG: "] 
  "1000487" -> "1000540"  [ label = "CDG: "] 
  "1000487" -> "1000502"  [ label = "CDG: "] 
  "1000487" -> "1000511"  [ label = "CDG: "] 
  "1000487" -> "1000605"  [ label = "CDG: "] 
  "1000487" -> "1000536"  [ label = "CDG: "] 
  "1000487" -> "1000508"  [ label = "CDG: "] 
  "1000487" -> "1000491"  [ label = "CDG: "] 
  "1000487" -> "1000538"  [ label = "CDG: "] 
  "1000487" -> "1000497"  [ label = "CDG: "] 
  "1000487" -> "1000487"  [ label = "CDG: "] 
  "1000487" -> "1000553"  [ label = "CDG: "] 
  "1000487" -> "1000535"  [ label = "CDG: "] 
  "1000487" -> "1000539"  [ label = "CDG: "] 
  "1000487" -> "1000603"  [ label = "CDG: "] 
  "1000487" -> "1000606"  [ label = "CDG: "] 
  "1000487" -> "1000542"  [ label = "CDG: "] 
  "1000511" -> "1000526"  [ label = "CDG: "] 
  "1000511" -> "1000525"  [ label = "CDG: "] 
  "1000511" -> "1000514"  [ label = "CDG: "] 
  "1000511" -> "1000511"  [ label = "CDG: "] 
  "1000511" -> "1000530"  [ label = "CDG: "] 
  "1000511" -> "1000521"  [ label = "CDG: "] 
  "1000511" -> "1000519"  [ label = "CDG: "] 
  "1000511" -> "1000531"  [ label = "CDG: "] 
  "1000553" -> "1000567"  [ label = "CDG: "] 
  "1000553" -> "1000560"  [ label = "CDG: "] 
  "1000553" -> "1000584"  [ label = "CDG: "] 
  "1000553" -> "1000571"  [ label = "CDG: "] 
  "1000553" -> "1000570"  [ label = "CDG: "] 
  "1000553" -> "1000600"  [ label = "CDG: "] 
  "1000553" -> "1000598"  [ label = "CDG: "] 
  "1000553" -> "1000593"  [ label = "CDG: "] 
  "1000553" -> "1000586"  [ label = "CDG: "] 
  "1000553" -> "1000592"  [ label = "CDG: "] 
  "1000553" -> "1000596"  [ label = "CDG: "] 
  "1000553" -> "1000566"  [ label = "CDG: "] 
  "1000553" -> "1000556"  [ label = "CDG: "] 
  "1000553" -> "1000574"  [ label = "CDG: "] 
  "1000553" -> "1000585"  [ label = "CDG: "] 
  "1000553" -> "1000564"  [ label = "CDG: "] 
  "1000553" -> "1000568"  [ label = "CDG: "] 
  "1000553" -> "1000587"  [ label = "CDG: "] 
  "1000553" -> "1000553"  [ label = "CDG: "] 
  "1000553" -> "1000576"  [ label = "CDG: "] 
  "1000553" -> "1000578"  [ label = "CDG: "] 
  "1000553" -> "1000581"  [ label = "CDG: "] 
  "1000553" -> "1000588"  [ label = "CDG: "] 
  "1000553" -> "1000569"  [ label = "CDG: "] 
  "1000553" -> "1000575"  [ label = "CDG: "] 
  "1000553" -> "1000583"  [ label = "CDG: "] 
  "1000553" -> "1000591"  [ label = "CDG: "] 
}
