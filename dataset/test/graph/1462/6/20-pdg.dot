digraph "solve" {  
"1000317" [label = "(METHOD,solve)" ]
"1000458" [label = "(METHOD_RETURN,void)" ]
"1000320" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000325" [label = "(<operator>.lessThan,vector<vector<int>> a(n , vector<int>(2 , 0)))" ]
"1000376" [label = "(sort,sort(l.begin() + 1 , l.end()))" ]
"1000381" [label = "(sort,sort(r.begin() + 1 , r.end()))" ]
"1000387" [label = "(<operator>.assignment,minn = INT_MAX)" ]
"1000453" [label = "(<operator>.shiftLeft,cout << minn << nline)" ]
"1000341" [label = "(<operator>.arithmeticShiftRight,cin >> a[i][0] >> a[i][1])" ]
"1000354" [label = "(<operator>.assignment,l[i + 1] = a[i][0])" ]
"1000365" [label = "(<operator>.assignment,r[i + 1] = a[i][1])" ]
"1000392" [label = "(<operator>.assignment,cnt1 = upper_bound(l.begin() , l.end() , a[i][1]) - l.begin())" ]
"1000404" [label = "(<operator>.assignment,cnt1 = n + 1 - cnt1)" ]
"1000412" [label = "(<operator>.assignment,cnt2 = lower_bound(r.begin() , r.end() , a[i][0]) - r.begin())" ]
"1000446" [label = "(<operator>.assignment,minn = min(minn , cnt1 + cnt2))" ]
"1000327" [label = "(<operator>.lessThan,vector<int>> a(n , vector<int>(2 , 0)))" ]
"1000377" [label = "(<operator>.addition,l.begin() + 1)" ]
"1000382" [label = "(<operator>.addition,r.begin() + 1)" ]
"1000425" [label = "(<operator>.logicalOr,(cnt2 <= n && r[cnt2] >= a[i][0]) || cnt2 == n + 1)" ]
"1000444" [label = "(<operator>.postDecrement,cnt2--)" ]
"1000455" [label = "(<operator>.shiftLeft,minn << nline)" ]
"1000329" [label = "(<operator>.arithmeticShiftRight,int>> a(n , vector<int>(2 , 0)))" ]
"1000343" [label = "(<operator>.arithmeticShiftRight,a[i][0] >> a[i][1])" ]
"1000394" [label = "(<operator>.subtraction,upper_bound(l.begin() , l.end() , a[i][1]) - l.begin())" ]
"1000406" [label = "(<operator>.addition,n + 1 - cnt1)" ]
"1000414" [label = "(<operator>.subtraction,lower_bound(r.begin() , r.end() , a[i][0]) - r.begin())" ]
"1000448" [label = "(min,min(minn , cnt1 + cnt2))" ]
"1000331" [label = "(a,a(n , vector<int>(2 , 0)))" ]
"1000357" [label = "(<operator>.addition,i + 1)" ]
"1000368" [label = "(<operator>.addition,i + 1)" ]
"1000395" [label = "(upper_bound,upper_bound(l.begin() , l.end() , a[i][1]))" ]
"1000408" [label = "(<operator>.subtraction,1 - cnt1)" ]
"1000415" [label = "(lower_bound,lower_bound(r.begin() , r.end() , a[i][0]))" ]
"1000426" [label = "(<operator>.logicalAnd,cnt2 <= n && r[cnt2] >= a[i][0])" ]
"1000439" [label = "(<operator>.equals,cnt2 == n + 1)" ]
"1000450" [label = "(<operator>.addition,cnt1 + cnt2)" ]
"1000333" [label = "(<operator>.lessThan,vector<int>(2 , 0))" ]
"1000427" [label = "(<operator>.lessEqualsThan,cnt2 <= n)" ]
"1000430" [label = "(<operator>.greaterEqualsThan,r[cnt2] >= a[i][0])" ]
"1000441" [label = "(<operator>.addition,n + 1)" ]
"1000335" [label = "(<operator>.greaterThan,int>(2 , 0))" ]
"1000338" [label = "(LITERAL,2,)" ]
"1000339" [label = "(LITERAL,0,)" ]
"1000431" [label = "(<operator>.indirectIndexAccess,r[cnt2])" ]
"1000434" [label = "(<operator>.indirectIndexAccess,a[i][0])" ]
"1000435" [label = "(<operator>.indirectIndexAccess,a[i])" ]
  "1000320" -> "1000458"  [ label = "DDG: cin >> n"] 
  "1000325" -> "1000458"  [ label = "DDG: vector"] 
  "1000329" -> "1000458"  [ label = "DDG: int"] 
  "1000333" -> "1000458"  [ label = "DDG: int>(2 , 0)"] 
  "1000331" -> "1000458"  [ label = "DDG: vector<int>(2 , 0)"] 
  "1000329" -> "1000458"  [ label = "DDG: a(n , vector<int>(2 , 0))"] 
  "1000327" -> "1000458"  [ label = "DDG: int>> a(n , vector<int>(2 , 0))"] 
  "1000325" -> "1000458"  [ label = "DDG: vector<int>> a(n , vector<int>(2 , 0))"] 
  "1000325" -> "1000458"  [ label = "DDG: vector<vector<int>> a(n , vector<int>(2 , 0))"] 
  "1000341" -> "1000458"  [ label = "DDG: cin"] 
  "1000341" -> "1000458"  [ label = "DDG: a[i][0] >> a[i][1]"] 
  "1000341" -> "1000458"  [ label = "DDG: cin >> a[i][0] >> a[i][1]"] 
  "1000354" -> "1000458"  [ label = "DDG: l[i + 1]"] 
  "1000368" -> "1000458"  [ label = "DDG: i"] 
  "1000365" -> "1000458"  [ label = "DDG: r[i + 1]"] 
  "1000376" -> "1000458"  [ label = "DDG: l.begin() + 1"] 
  "1000376" -> "1000458"  [ label = "DDG: sort(l.begin() + 1 , l.end())"] 
  "1000381" -> "1000458"  [ label = "DDG: r.begin() + 1"] 
  "1000381" -> "1000458"  [ label = "DDG: sort(r.begin() + 1 , r.end())"] 
  "1000395" -> "1000458"  [ label = "DDG: l.end()"] 
  "1000395" -> "1000458"  [ label = "DDG: a[i][1]"] 
  "1000394" -> "1000458"  [ label = "DDG: upper_bound(l.begin() , l.end() , a[i][1])"] 
  "1000394" -> "1000458"  [ label = "DDG: l.begin()"] 
  "1000392" -> "1000458"  [ label = "DDG: upper_bound(l.begin() , l.end() , a[i][1]) - l.begin()"] 
  "1000406" -> "1000458"  [ label = "DDG: 1 - cnt1"] 
  "1000404" -> "1000458"  [ label = "DDG: n + 1 - cnt1"] 
  "1000415" -> "1000458"  [ label = "DDG: r.end()"] 
  "1000415" -> "1000458"  [ label = "DDG: a[i][0]"] 
  "1000414" -> "1000458"  [ label = "DDG: lower_bound(r.begin() , r.end() , a[i][0])"] 
  "1000414" -> "1000458"  [ label = "DDG: r.begin()"] 
  "1000412" -> "1000458"  [ label = "DDG: lower_bound(r.begin() , r.end() , a[i][0]) - r.begin()"] 
  "1000427" -> "1000458"  [ label = "DDG: n"] 
  "1000426" -> "1000458"  [ label = "DDG: cnt2 <= n"] 
  "1000430" -> "1000458"  [ label = "DDG: r[cnt2]"] 
  "1000430" -> "1000458"  [ label = "DDG: a[i][0]"] 
  "1000426" -> "1000458"  [ label = "DDG: r[cnt2] >= a[i][0]"] 
  "1000425" -> "1000458"  [ label = "DDG: cnt2 <= n && r[cnt2] >= a[i][0]"] 
  "1000441" -> "1000458"  [ label = "DDG: n"] 
  "1000439" -> "1000458"  [ label = "DDG: n + 1"] 
  "1000425" -> "1000458"  [ label = "DDG: cnt2 == n + 1"] 
  "1000425" -> "1000458"  [ label = "DDG: (cnt2 <= n && r[cnt2] >= a[i][0]) || cnt2 == n + 1"] 
  "1000450" -> "1000458"  [ label = "DDG: cnt1"] 
  "1000450" -> "1000458"  [ label = "DDG: cnt2"] 
  "1000448" -> "1000458"  [ label = "DDG: cnt1 + cnt2"] 
  "1000446" -> "1000458"  [ label = "DDG: min(minn , cnt1 + cnt2)"] 
  "1000455" -> "1000458"  [ label = "DDG: minn"] 
  "1000453" -> "1000458"  [ label = "DDG: minn << nline"] 
  "1000453" -> "1000458"  [ label = "DDG: cout << minn << nline"] 
  "1000455" -> "1000458"  [ label = "DDG: nline"] 
  "1000387" -> "1000458"  [ label = "DDG: INT_MAX"] 
  "1000453" -> "1000458"  [ label = "DDG: cout"] 
  "1000317" -> "1000387"  [ label = "DDG: "] 
  "1000317" -> "1000320"  [ label = "DDG: "] 
  "1000327" -> "1000325"  [ label = "DDG: vector"] 
  "1000317" -> "1000325"  [ label = "DDG: "] 
  "1000327" -> "1000325"  [ label = "DDG: int>> a(n , vector<int>(2 , 0))"] 
  "1000343" -> "1000354"  [ label = "DDG: a[i][0]"] 
  "1000343" -> "1000365"  [ label = "DDG: a[i][1]"] 
  "1000317" -> "1000376"  [ label = "DDG: "] 
  "1000317" -> "1000381"  [ label = "DDG: "] 
  "1000394" -> "1000392"  [ label = "DDG: l.begin()"] 
  "1000394" -> "1000392"  [ label = "DDG: upper_bound(l.begin() , l.end() , a[i][1])"] 
  "1000331" -> "1000404"  [ label = "DDG: n"] 
  "1000317" -> "1000404"  [ label = "DDG: "] 
  "1000408" -> "1000404"  [ label = "DDG: cnt1"] 
  "1000408" -> "1000404"  [ label = "DDG: 1"] 
  "1000414" -> "1000412"  [ label = "DDG: r.begin()"] 
  "1000414" -> "1000412"  [ label = "DDG: lower_bound(r.begin() , r.end() , a[i][0])"] 
  "1000448" -> "1000446"  [ label = "DDG: cnt1 + cnt2"] 
  "1000448" -> "1000446"  [ label = "DDG: minn"] 
  "1000317" -> "1000453"  [ label = "DDG: "] 
  "1000455" -> "1000453"  [ label = "DDG: nline"] 
  "1000455" -> "1000453"  [ label = "DDG: minn"] 
  "1000333" -> "1000327"  [ label = "DDG: vector"] 
  "1000317" -> "1000327"  [ label = "DDG: "] 
  "1000329" -> "1000327"  [ label = "DDG: a(n , vector<int>(2 , 0))"] 
  "1000329" -> "1000327"  [ label = "DDG: int"] 
  "1000320" -> "1000341"  [ label = "DDG: cin"] 
  "1000317" -> "1000341"  [ label = "DDG: "] 
  "1000343" -> "1000341"  [ label = "DDG: a[i][0]"] 
  "1000343" -> "1000341"  [ label = "DDG: a[i][1]"] 
  "1000317" -> "1000377"  [ label = "DDG: "] 
  "1000317" -> "1000382"  [ label = "DDG: "] 
  "1000317" -> "1000392"  [ label = "DDG: "] 
  "1000317" -> "1000412"  [ label = "DDG: "] 
  "1000317" -> "1000446"  [ label = "DDG: "] 
  "1000446" -> "1000455"  [ label = "DDG: minn"] 
  "1000317" -> "1000455"  [ label = "DDG: "] 
  "1000335" -> "1000329"  [ label = "DDG: int"] 
  "1000317" -> "1000329"  [ label = "DDG: "] 
  "1000331" -> "1000329"  [ label = "DDG: vector<int>(2 , 0)"] 
  "1000331" -> "1000329"  [ label = "DDG: n"] 
  "1000395" -> "1000394"  [ label = "DDG: l.end()"] 
  "1000395" -> "1000394"  [ label = "DDG: l.begin()"] 
  "1000395" -> "1000394"  [ label = "DDG: a[i][1]"] 
  "1000317" -> "1000394"  [ label = "DDG: "] 
  "1000331" -> "1000406"  [ label = "DDG: n"] 
  "1000317" -> "1000406"  [ label = "DDG: "] 
  "1000408" -> "1000406"  [ label = "DDG: cnt1"] 
  "1000408" -> "1000406"  [ label = "DDG: 1"] 
  "1000415" -> "1000414"  [ label = "DDG: a[i][0]"] 
  "1000415" -> "1000414"  [ label = "DDG: r.end()"] 
  "1000415" -> "1000414"  [ label = "DDG: r.begin()"] 
  "1000317" -> "1000414"  [ label = "DDG: "] 
  "1000426" -> "1000425"  [ label = "DDG: r[cnt2] >= a[i][0]"] 
  "1000426" -> "1000425"  [ label = "DDG: cnt2 <= n"] 
  "1000439" -> "1000425"  [ label = "DDG: n + 1"] 
  "1000439" -> "1000425"  [ label = "DDG: cnt2"] 
  "1000427" -> "1000444"  [ label = "DDG: cnt2"] 
  "1000439" -> "1000444"  [ label = "DDG: cnt2"] 
  "1000317" -> "1000444"  [ label = "DDG: "] 
  "1000387" -> "1000448"  [ label = "DDG: minn"] 
  "1000317" -> "1000448"  [ label = "DDG: "] 
  "1000404" -> "1000448"  [ label = "DDG: cnt1"] 
  "1000427" -> "1000448"  [ label = "DDG: cnt2"] 
  "1000439" -> "1000448"  [ label = "DDG: cnt2"] 
  "1000444" -> "1000448"  [ label = "DDG: cnt2"] 
  "1000320" -> "1000331"  [ label = "DDG: n"] 
  "1000317" -> "1000331"  [ label = "DDG: "] 
  "1000333" -> "1000331"  [ label = "DDG: int>(2 , 0)"] 
  "1000333" -> "1000331"  [ label = "DDG: vector"] 
  "1000317" -> "1000357"  [ label = "DDG: "] 
  "1000317" -> "1000368"  [ label = "DDG: "] 
  "1000317" -> "1000395"  [ label = "DDG: "] 
  "1000343" -> "1000395"  [ label = "DDG: a[i][1]"] 
  "1000317" -> "1000408"  [ label = "DDG: "] 
  "1000392" -> "1000408"  [ label = "DDG: cnt1"] 
  "1000317" -> "1000415"  [ label = "DDG: "] 
  "1000343" -> "1000415"  [ label = "DDG: a[i][0]"] 
  "1000427" -> "1000426"  [ label = "DDG: cnt2"] 
  "1000427" -> "1000426"  [ label = "DDG: n"] 
  "1000430" -> "1000426"  [ label = "DDG: a[i][0]"] 
  "1000430" -> "1000426"  [ label = "DDG: r[cnt2]"] 
  "1000427" -> "1000439"  [ label = "DDG: cnt2"] 
  "1000317" -> "1000439"  [ label = "DDG: "] 
  "1000427" -> "1000439"  [ label = "DDG: n"] 
  "1000404" -> "1000450"  [ label = "DDG: cnt1"] 
  "1000317" -> "1000450"  [ label = "DDG: "] 
  "1000427" -> "1000450"  [ label = "DDG: cnt2"] 
  "1000439" -> "1000450"  [ label = "DDG: cnt2"] 
  "1000444" -> "1000450"  [ label = "DDG: cnt2"] 
  "1000317" -> "1000333"  [ label = "DDG: "] 
  "1000335" -> "1000333"  [ label = "DDG: int"] 
  "1000412" -> "1000427"  [ label = "DDG: cnt2"] 
  "1000317" -> "1000427"  [ label = "DDG: "] 
  "1000331" -> "1000427"  [ label = "DDG: n"] 
  "1000415" -> "1000430"  [ label = "DDG: a[i][0]"] 
  "1000427" -> "1000441"  [ label = "DDG: n"] 
  "1000317" -> "1000441"  [ label = "DDG: "] 
  "1000317" -> "1000335"  [ label = "DDG: "] 
  "1000317" -> "1000338"  [ label = "DDG: "] 
  "1000317" -> "1000339"  [ label = "DDG: "] 
  "1000425" -> "1000444"  [ label = "CDG: "] 
  "1000426" -> "1000439"  [ label = "CDG: "] 
  "1000426" -> "1000441"  [ label = "CDG: "] 
  "1000427" -> "1000434"  [ label = "CDG: "] 
  "1000427" -> "1000430"  [ label = "CDG: "] 
  "1000427" -> "1000431"  [ label = "CDG: "] 
  "1000427" -> "1000435"  [ label = "CDG: "] 
}
