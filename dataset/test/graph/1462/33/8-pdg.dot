digraph "sieve" {  
"1000337" [label = "(METHOD,sieve)" ]
"1000381" [label = "(METHOD_RETURN,vector<ll>)" ]
"1000338" [label = "(PARAM,int n)" ]
"1000340" [label = "(int[n + 1],int[n + 1]())" ]
"1000379" [label = "(RETURN,return vect;,return vect;)" ]
"1000344" [label = "(<operator>.assignment,i = 2)" ]
"1000347" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000350" [label = "(<operator>.postIncrement,i++)" ]
"1000380" [label = "(IDENTIFIER,vect,return vect;)" ]
"1000353" [label = "(<operator>.equals,arr[i] == 0)" ]
"1000359" [label = "(vect.push_back,vect.push_back(i))" ]
"1000363" [label = "(<operator>.assignment,j = 2 * i)" ]
"1000368" [label = "(<operator>.lessEqualsThan,j <= n)" ]
"1000371" [label = "(<operator>.assignmentPlus,j += i)" ]
"1000374" [label = "(<operator>.assignment,arr[j] = 1)" ]
"1000365" [label = "(<operator>.multiplication,2 * i)" ]
"1000354" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000375" [label = "(<operator>.indirectIndexAccess,arr[j])" ]
  "1000338" -> "1000381"  [ label = "DDG: n"] 
  "1000340" -> "1000381"  [ label = "DDG: int[n + 1]()"] 
  "1000347" -> "1000381"  [ label = "DDG: i"] 
  "1000347" -> "1000381"  [ label = "DDG: n"] 
  "1000347" -> "1000381"  [ label = "DDG: i <= n"] 
  "1000353" -> "1000381"  [ label = "DDG: arr[i]"] 
  "1000353" -> "1000381"  [ label = "DDG: arr[i] == 0"] 
  "1000359" -> "1000381"  [ label = "DDG: vect.push_back(i)"] 
  "1000363" -> "1000381"  [ label = "DDG: 2 * i"] 
  "1000368" -> "1000381"  [ label = "DDG: j"] 
  "1000368" -> "1000381"  [ label = "DDG: j <= n"] 
  "1000374" -> "1000381"  [ label = "DDG: arr[j]"] 
  "1000379" -> "1000381"  [ label = "DDG: <RET>"] 
  "1000337" -> "1000338"  [ label = "DDG: "] 
  "1000337" -> "1000340"  [ label = "DDG: "] 
  "1000380" -> "1000379"  [ label = "DDG: vect"] 
  "1000337" -> "1000379"  [ label = "DDG: "] 
  "1000337" -> "1000344"  [ label = "DDG: "] 
  "1000337" -> "1000380"  [ label = "DDG: "] 
  "1000344" -> "1000347"  [ label = "DDG: i"] 
  "1000350" -> "1000347"  [ label = "DDG: i"] 
  "1000337" -> "1000347"  [ label = "DDG: "] 
  "1000368" -> "1000347"  [ label = "DDG: n"] 
  "1000338" -> "1000347"  [ label = "DDG: n"] 
  "1000347" -> "1000350"  [ label = "DDG: i"] 
  "1000365" -> "1000350"  [ label = "DDG: i"] 
  "1000337" -> "1000350"  [ label = "DDG: "] 
  "1000337" -> "1000353"  [ label = "DDG: "] 
  "1000347" -> "1000359"  [ label = "DDG: i"] 
  "1000337" -> "1000359"  [ label = "DDG: "] 
  "1000365" -> "1000363"  [ label = "DDG: i"] 
  "1000365" -> "1000363"  [ label = "DDG: 2"] 
  "1000365" -> "1000371"  [ label = "DDG: i"] 
  "1000337" -> "1000371"  [ label = "DDG: "] 
  "1000337" -> "1000374"  [ label = "DDG: "] 
  "1000337" -> "1000363"  [ label = "DDG: "] 
  "1000363" -> "1000368"  [ label = "DDG: j"] 
  "1000371" -> "1000368"  [ label = "DDG: j"] 
  "1000337" -> "1000368"  [ label = "DDG: "] 
  "1000347" -> "1000368"  [ label = "DDG: n"] 
  "1000338" -> "1000368"  [ label = "DDG: n"] 
  "1000368" -> "1000371"  [ label = "DDG: j"] 
  "1000337" -> "1000365"  [ label = "DDG: "] 
  "1000359" -> "1000365"  [ label = "DDG: i"] 
  "1000347" -> "1000350"  [ label = "CDG: "] 
  "1000347" -> "1000347"  [ label = "CDG: "] 
  "1000347" -> "1000354"  [ label = "CDG: "] 
  "1000347" -> "1000353"  [ label = "CDG: "] 
  "1000353" -> "1000365"  [ label = "CDG: "] 
  "1000353" -> "1000363"  [ label = "CDG: "] 
  "1000353" -> "1000359"  [ label = "CDG: "] 
  "1000353" -> "1000368"  [ label = "CDG: "] 
  "1000368" -> "1000375"  [ label = "CDG: "] 
  "1000368" -> "1000374"  [ label = "CDG: "] 
  "1000368" -> "1000371"  [ label = "CDG: "] 
  "1000368" -> "1000368"  [ label = "CDG: "] 
}
