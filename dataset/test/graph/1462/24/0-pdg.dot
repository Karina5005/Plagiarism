digraph "sieve" {  
"1000112" [label = "(METHOD,sieve)" ]
"1000156" [label = "(METHOD_RETURN,vector<ll>)" ]
"1000113" [label = "(PARAM,int n)" ]
"1000115" [label = "(int[n + 1],int[n + 1]())" ]
"1000154" [label = "(RETURN,return vect;,return vect;)" ]
"1000119" [label = "(<operator>.assignment,i = 2)" ]
"1000122" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000125" [label = "(<operator>.postIncrement,i++)" ]
"1000155" [label = "(IDENTIFIER,vect,return vect;)" ]
"1000128" [label = "(<operator>.equals,arr[i] == 0)" ]
"1000134" [label = "(vect.push_back,vect.push_back(i))" ]
"1000138" [label = "(<operator>.assignment,j = 2 * i)" ]
"1000143" [label = "(<operator>.lessEqualsThan,j <= n)" ]
"1000146" [label = "(<operator>.assignmentPlus,j += i)" ]
"1000149" [label = "(<operator>.assignment,arr[j] = 1)" ]
"1000140" [label = "(<operator>.multiplication,2 * i)" ]
"1000129" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000150" [label = "(<operator>.indirectIndexAccess,arr[j])" ]
  "1000113" -> "1000156"  [ label = "DDG: n"] 
  "1000115" -> "1000156"  [ label = "DDG: int[n + 1]()"] 
  "1000122" -> "1000156"  [ label = "DDG: i"] 
  "1000122" -> "1000156"  [ label = "DDG: n"] 
  "1000122" -> "1000156"  [ label = "DDG: i <= n"] 
  "1000128" -> "1000156"  [ label = "DDG: arr[i]"] 
  "1000128" -> "1000156"  [ label = "DDG: arr[i] == 0"] 
  "1000134" -> "1000156"  [ label = "DDG: vect.push_back(i)"] 
  "1000138" -> "1000156"  [ label = "DDG: 2 * i"] 
  "1000143" -> "1000156"  [ label = "DDG: j"] 
  "1000143" -> "1000156"  [ label = "DDG: j <= n"] 
  "1000149" -> "1000156"  [ label = "DDG: arr[j]"] 
  "1000154" -> "1000156"  [ label = "DDG: <RET>"] 
  "1000112" -> "1000113"  [ label = "DDG: "] 
  "1000112" -> "1000115"  [ label = "DDG: "] 
  "1000155" -> "1000154"  [ label = "DDG: vect"] 
  "1000112" -> "1000154"  [ label = "DDG: "] 
  "1000112" -> "1000119"  [ label = "DDG: "] 
  "1000112" -> "1000155"  [ label = "DDG: "] 
  "1000119" -> "1000122"  [ label = "DDG: i"] 
  "1000125" -> "1000122"  [ label = "DDG: i"] 
  "1000112" -> "1000122"  [ label = "DDG: "] 
  "1000143" -> "1000122"  [ label = "DDG: n"] 
  "1000113" -> "1000122"  [ label = "DDG: n"] 
  "1000122" -> "1000125"  [ label = "DDG: i"] 
  "1000140" -> "1000125"  [ label = "DDG: i"] 
  "1000112" -> "1000125"  [ label = "DDG: "] 
  "1000112" -> "1000128"  [ label = "DDG: "] 
  "1000122" -> "1000134"  [ label = "DDG: i"] 
  "1000112" -> "1000134"  [ label = "DDG: "] 
  "1000140" -> "1000138"  [ label = "DDG: i"] 
  "1000140" -> "1000138"  [ label = "DDG: 2"] 
  "1000140" -> "1000146"  [ label = "DDG: i"] 
  "1000112" -> "1000146"  [ label = "DDG: "] 
  "1000112" -> "1000149"  [ label = "DDG: "] 
  "1000112" -> "1000138"  [ label = "DDG: "] 
  "1000138" -> "1000143"  [ label = "DDG: j"] 
  "1000146" -> "1000143"  [ label = "DDG: j"] 
  "1000112" -> "1000143"  [ label = "DDG: "] 
  "1000122" -> "1000143"  [ label = "DDG: n"] 
  "1000113" -> "1000143"  [ label = "DDG: n"] 
  "1000143" -> "1000146"  [ label = "DDG: j"] 
  "1000112" -> "1000140"  [ label = "DDG: "] 
  "1000134" -> "1000140"  [ label = "DDG: i"] 
  "1000122" -> "1000125"  [ label = "CDG: "] 
  "1000122" -> "1000128"  [ label = "CDG: "] 
  "1000122" -> "1000129"  [ label = "CDG: "] 
  "1000122" -> "1000122"  [ label = "CDG: "] 
  "1000128" -> "1000143"  [ label = "CDG: "] 
  "1000128" -> "1000140"  [ label = "CDG: "] 
  "1000128" -> "1000138"  [ label = "CDG: "] 
  "1000128" -> "1000134"  [ label = "CDG: "] 
  "1000143" -> "1000143"  [ label = "CDG: "] 
  "1000143" -> "1000150"  [ label = "CDG: "] 
  "1000143" -> "1000146"  [ label = "CDG: "] 
  "1000143" -> "1000149"  [ label = "CDG: "] 
}
