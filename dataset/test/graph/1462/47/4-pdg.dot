digraph "solve_testcase" {  
"1000222" [label = "(METHOD,solve_testcase)" ]
"1000318" [label = "(METHOD_RETURN,void)" ]
"1000225" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000252" [label = "(<operator>.assignment,l1 = l)" ]
"1000255" [label = "(<operator>.assignment,r1 = r)" ]
"1000258" [label = "(sort,sort(l1.begin(), l1.end()))" ]
"1000261" [label = "(sort,sort(r1.begin(), r1.end()))" ]
"1000265" [label = "(<operator>.assignment,ans = n)" ]
"1000313" [label = "(<operator>.shiftLeft,cout << ans << nline)" ]
"1000232" [label = "(<operator>.assignment,i = 0)" ]
"1000235" [label = "(<operator>.lessThan,i < n)" ]
"1000238" [label = "(<operator>.postIncrement,i++)" ]
"1000270" [label = "(<operator>.assignment,i = 0)" ]
"1000273" [label = "(<operator>.lessThan,i < n)" ]
"1000276" [label = "(<operator>.postIncrement,i++)" ]
"1000241" [label = "(<operator>.arithmeticShiftRight,cin >> l[i] >> r[i])" ]
"1000280" [label = "(<operator>.assignment,x = upper_bound(l1.begin(), l1.end(), r[i]) - l1.begin())" ]
"1000290" [label = "(<operator>.assignment,x = n - x)" ]
"1000296" [label = "(<operator>.assignment,y = lower_bound(r1.begin(), r1.end(), l[i]) - r1.begin())" ]
"1000306" [label = "(<operator>.assignment,ans = min(ans, x + y))" ]
"1000315" [label = "(<operator>.shiftLeft,ans << nline)" ]
"1000243" [label = "(<operator>.arithmeticShiftRight,l[i] >> r[i])" ]
"1000282" [label = "(<operator>.subtraction,upper_bound(l1.begin(), l1.end(), r[i]) - l1.begin())" ]
"1000292" [label = "(<operator>.subtraction,n - x)" ]
"1000298" [label = "(<operator>.subtraction,lower_bound(r1.begin(), r1.end(), l[i]) - r1.begin())" ]
"1000308" [label = "(min,min(ans, x + y))" ]
"1000283" [label = "(upper_bound,upper_bound(l1.begin(), l1.end(), r[i]))" ]
"1000299" [label = "(lower_bound,lower_bound(r1.begin(), r1.end(), l[i]))" ]
"1000310" [label = "(<operator>.addition,x + y)" ]
"1000244" [label = "(<operator>.indirectIndexAccess,l[i])" ]
"1000247" [label = "(<operator>.indirectIndexAccess,r[i])" ]
"1000289" [label = "(l1.begin,l1.begin())" ]
"1000305" [label = "(r1.begin,r1.begin())" ]
"1000284" [label = "(l1.begin,l1.begin())" ]
"1000285" [label = "(l1.end,l1.end())" ]
"1000286" [label = "(<operator>.indirectIndexAccess,r[i])" ]
"1000300" [label = "(r1.begin,r1.begin())" ]
"1000301" [label = "(r1.end,r1.end())" ]
"1000302" [label = "(<operator>.indirectIndexAccess,l[i])" ]
  "1000225" -> "1000318"  [ label = "DDG: cin"] 
  "1000225" -> "1000318"  [ label = "DDG: cin >> n"] 
  "1000252" -> "1000318"  [ label = "DDG: l1"] 
  "1000252" -> "1000318"  [ label = "DDG: l"] 
  "1000255" -> "1000318"  [ label = "DDG: r1"] 
  "1000255" -> "1000318"  [ label = "DDG: r"] 
  "1000258" -> "1000318"  [ label = "DDG: l1.begin()"] 
  "1000258" -> "1000318"  [ label = "DDG: l1.end()"] 
  "1000258" -> "1000318"  [ label = "DDG: sort(l1.begin(), l1.end())"] 
  "1000261" -> "1000318"  [ label = "DDG: r1.begin()"] 
  "1000261" -> "1000318"  [ label = "DDG: r1.end()"] 
  "1000261" -> "1000318"  [ label = "DDG: sort(r1.begin(), r1.end())"] 
  "1000273" -> "1000318"  [ label = "DDG: i"] 
  "1000273" -> "1000318"  [ label = "DDG: n"] 
  "1000273" -> "1000318"  [ label = "DDG: i < n"] 
  "1000315" -> "1000318"  [ label = "DDG: ans"] 
  "1000313" -> "1000318"  [ label = "DDG: ans << nline"] 
  "1000313" -> "1000318"  [ label = "DDG: cout << ans << nline"] 
  "1000283" -> "1000318"  [ label = "DDG: l1.end()"] 
  "1000283" -> "1000318"  [ label = "DDG: r[i]"] 
  "1000282" -> "1000318"  [ label = "DDG: upper_bound(l1.begin(), l1.end(), r[i])"] 
  "1000282" -> "1000318"  [ label = "DDG: l1.begin()"] 
  "1000280" -> "1000318"  [ label = "DDG: upper_bound(l1.begin(), l1.end(), r[i]) - l1.begin()"] 
  "1000290" -> "1000318"  [ label = "DDG: n - x"] 
  "1000299" -> "1000318"  [ label = "DDG: r1.end()"] 
  "1000299" -> "1000318"  [ label = "DDG: l[i]"] 
  "1000298" -> "1000318"  [ label = "DDG: lower_bound(r1.begin(), r1.end(), l[i])"] 
  "1000298" -> "1000318"  [ label = "DDG: r1.begin()"] 
  "1000296" -> "1000318"  [ label = "DDG: lower_bound(r1.begin(), r1.end(), l[i]) - r1.begin()"] 
  "1000310" -> "1000318"  [ label = "DDG: x"] 
  "1000310" -> "1000318"  [ label = "DDG: y"] 
  "1000308" -> "1000318"  [ label = "DDG: x + y"] 
  "1000306" -> "1000318"  [ label = "DDG: min(ans, x + y)"] 
  "1000241" -> "1000318"  [ label = "DDG: cin"] 
  "1000243" -> "1000318"  [ label = "DDG: l[i]"] 
  "1000243" -> "1000318"  [ label = "DDG: r[i]"] 
  "1000241" -> "1000318"  [ label = "DDG: l[i] >> r[i]"] 
  "1000241" -> "1000318"  [ label = "DDG: cin >> l[i] >> r[i]"] 
  "1000313" -> "1000318"  [ label = "DDG: cout"] 
  "1000315" -> "1000318"  [ label = "DDG: nline"] 
  "1000243" -> "1000252"  [ label = "DDG: l[i]"] 
  "1000222" -> "1000252"  [ label = "DDG: "] 
  "1000243" -> "1000255"  [ label = "DDG: r[i]"] 
  "1000222" -> "1000255"  [ label = "DDG: "] 
  "1000235" -> "1000265"  [ label = "DDG: n"] 
  "1000222" -> "1000265"  [ label = "DDG: "] 
  "1000222" -> "1000225"  [ label = "DDG: "] 
  "1000222" -> "1000232"  [ label = "DDG: "] 
  "1000222" -> "1000258"  [ label = "DDG: "] 
  "1000222" -> "1000261"  [ label = "DDG: "] 
  "1000222" -> "1000270"  [ label = "DDG: "] 
  "1000222" -> "1000313"  [ label = "DDG: "] 
  "1000315" -> "1000313"  [ label = "DDG: nline"] 
  "1000315" -> "1000313"  [ label = "DDG: ans"] 
  "1000232" -> "1000235"  [ label = "DDG: i"] 
  "1000238" -> "1000235"  [ label = "DDG: i"] 
  "1000222" -> "1000235"  [ label = "DDG: "] 
  "1000225" -> "1000235"  [ label = "DDG: n"] 
  "1000235" -> "1000238"  [ label = "DDG: i"] 
  "1000222" -> "1000238"  [ label = "DDG: "] 
  "1000270" -> "1000273"  [ label = "DDG: i"] 
  "1000276" -> "1000273"  [ label = "DDG: i"] 
  "1000222" -> "1000273"  [ label = "DDG: "] 
  "1000292" -> "1000273"  [ label = "DDG: n"] 
  "1000235" -> "1000273"  [ label = "DDG: n"] 
  "1000273" -> "1000276"  [ label = "DDG: i"] 
  "1000222" -> "1000276"  [ label = "DDG: "] 
  "1000282" -> "1000280"  [ label = "DDG: upper_bound(l1.begin(), l1.end(), r[i])"] 
  "1000282" -> "1000280"  [ label = "DDG: l1.begin()"] 
  "1000292" -> "1000290"  [ label = "DDG: x"] 
  "1000292" -> "1000290"  [ label = "DDG: n"] 
  "1000298" -> "1000296"  [ label = "DDG: r1.begin()"] 
  "1000298" -> "1000296"  [ label = "DDG: lower_bound(r1.begin(), r1.end(), l[i])"] 
  "1000308" -> "1000306"  [ label = "DDG: x + y"] 
  "1000308" -> "1000306"  [ label = "DDG: ans"] 
  "1000265" -> "1000315"  [ label = "DDG: ans"] 
  "1000306" -> "1000315"  [ label = "DDG: ans"] 
  "1000222" -> "1000315"  [ label = "DDG: "] 
  "1000225" -> "1000241"  [ label = "DDG: cin"] 
  "1000222" -> "1000241"  [ label = "DDG: "] 
  "1000243" -> "1000241"  [ label = "DDG: r[i]"] 
  "1000243" -> "1000241"  [ label = "DDG: l[i]"] 
  "1000222" -> "1000280"  [ label = "DDG: "] 
  "1000222" -> "1000290"  [ label = "DDG: "] 
  "1000222" -> "1000296"  [ label = "DDG: "] 
  "1000222" -> "1000306"  [ label = "DDG: "] 
  "1000283" -> "1000282"  [ label = "DDG: r[i]"] 
  "1000283" -> "1000282"  [ label = "DDG: l1.end()"] 
  "1000283" -> "1000282"  [ label = "DDG: l1.begin()"] 
  "1000222" -> "1000282"  [ label = "DDG: "] 
  "1000273" -> "1000292"  [ label = "DDG: n"] 
  "1000222" -> "1000292"  [ label = "DDG: "] 
  "1000280" -> "1000292"  [ label = "DDG: x"] 
  "1000299" -> "1000298"  [ label = "DDG: l[i]"] 
  "1000299" -> "1000298"  [ label = "DDG: r1.begin()"] 
  "1000299" -> "1000298"  [ label = "DDG: r1.end()"] 
  "1000222" -> "1000298"  [ label = "DDG: "] 
  "1000265" -> "1000308"  [ label = "DDG: ans"] 
  "1000306" -> "1000308"  [ label = "DDG: ans"] 
  "1000222" -> "1000308"  [ label = "DDG: "] 
  "1000296" -> "1000308"  [ label = "DDG: y"] 
  "1000290" -> "1000308"  [ label = "DDG: x"] 
  "1000222" -> "1000283"  [ label = "DDG: "] 
  "1000243" -> "1000283"  [ label = "DDG: r[i]"] 
  "1000222" -> "1000299"  [ label = "DDG: "] 
  "1000243" -> "1000299"  [ label = "DDG: l[i]"] 
  "1000290" -> "1000310"  [ label = "DDG: x"] 
  "1000222" -> "1000310"  [ label = "DDG: "] 
  "1000296" -> "1000310"  [ label = "DDG: y"] 
  "1000235" -> "1000247"  [ label = "CDG: "] 
  "1000235" -> "1000238"  [ label = "CDG: "] 
  "1000235" -> "1000243"  [ label = "CDG: "] 
  "1000235" -> "1000244"  [ label = "CDG: "] 
  "1000235" -> "1000235"  [ label = "CDG: "] 
  "1000235" -> "1000241"  [ label = "CDG: "] 
  "1000273" -> "1000305"  [ label = "CDG: "] 
  "1000273" -> "1000286"  [ label = "CDG: "] 
  "1000273" -> "1000285"  [ label = "CDG: "] 
  "1000273" -> "1000276"  [ label = "CDG: "] 
  "1000273" -> "1000310"  [ label = "CDG: "] 
  "1000273" -> "1000302"  [ label = "CDG: "] 
  "1000273" -> "1000290"  [ label = "CDG: "] 
  "1000273" -> "1000298"  [ label = "CDG: "] 
  "1000273" -> "1000306"  [ label = "CDG: "] 
  "1000273" -> "1000283"  [ label = "CDG: "] 
  "1000273" -> "1000299"  [ label = "CDG: "] 
  "1000273" -> "1000282"  [ label = "CDG: "] 
  "1000273" -> "1000296"  [ label = "CDG: "] 
  "1000273" -> "1000308"  [ label = "CDG: "] 
  "1000273" -> "1000284"  [ label = "CDG: "] 
  "1000273" -> "1000280"  [ label = "CDG: "] 
  "1000273" -> "1000289"  [ label = "CDG: "] 
  "1000273" -> "1000300"  [ label = "CDG: "] 
  "1000273" -> "1000301"  [ label = "CDG: "] 
  "1000273" -> "1000273"  [ label = "CDG: "] 
  "1000273" -> "1000292"  [ label = "CDG: "] 
}
