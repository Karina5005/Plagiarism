digraph "main" {  
"1000171" [label = "(METHOD,main)" ]
"1000270" [label = "(METHOD_RETURN,int)" ]
"1000173" [label = "(ios::sync_with_stdio,ios::sync_with_stdio(false))" ]
"1000175" [label = "(cin.tie,cin.tie(0))" ]
"1000177" [label = "(cout.tie,cout.tie(0))" ]
"1000179" [label = "(freopen,freopen(\"input.txt\", \"r\", stdin))" ]
"1000183" [label = "(freopen,freopen(\"output.txt\", \"w\", stdout))" ]
"1000188" [label = "(<operator>.arithmeticShiftRight,cin>>t)" ]
"1000268" [label = "(RETURN,return 0;,return 0;)" ]
"1000196" [label = "(<operator>.postDecrement,t--)" ]
"1000269" [label = "(LITERAL,0,return 0;)" ]
"1000199" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000202" [label = "(<operator>.assignment,totsum = 0)" ]
"1000225" [label = "(<operator>.assignment,ans = n-1)" ]
"1000263" [label = "(<operator>.shiftLeft,cout<<ans<<\"\n\")" ]
"1000206" [label = "(<operator>.assignment,i=0)" ]
"1000209" [label = "(<operator>.lessThan,i<n)" ]
"1000212" [label = "(<operator>.postIncrement,i++)" ]
"1000231" [label = "(<operator>.assignment,i=1)" ]
"1000234" [label = "(<operator>.lessEqualsThan,i*i <= totsum)" ]
"1000239" [label = "(<operator>.postIncrement,i++)" ]
"1000215" [label = "(<operator>.arithmeticShiftRight,cin>>a[i])" ]
"1000220" [label = "(<operator>.assignmentPlus,totsum += a[i])" ]
"1000227" [label = "(<operator>.subtraction,n-1)" ]
"1000265" [label = "(<operator>.shiftLeft,ans<<\"\n\")" ]
"1000235" [label = "(<operator>.multiplication,i*i)" ]
"1000243" [label = "(<operator>.equals,totsum % i == 0)" ]
"1000249" [label = "(<operator>.assignment,ans = min(ans, check(i)))" ]
"1000255" [label = "(<operator>.assignment,ans = min(ans, check(totsum/i)))" ]
"1000244" [label = "(<operator>.modulo,totsum % i)" ]
"1000251" [label = "(min,min(ans, check(i)))" ]
"1000257" [label = "(min,min(ans, check(totsum/i)))" ]
"1000253" [label = "(check,check(i))" ]
"1000259" [label = "(check,check(totsum/i))" ]
"1000260" [label = "(<operator>.division,totsum/i)" ]
"1000217" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000222" [label = "(<operator>.indirectIndexAccess,a[i])" ]
  "1000268" -> "1000270"  [ label = "DDG: <RET>"] 
  "1000173" -> "1000270"  [ label = "DDG: ios::sync_with_stdio(false)"] 
  "1000175" -> "1000270"  [ label = "DDG: cin.tie(0)"] 
  "1000177" -> "1000270"  [ label = "DDG: cout.tie(0)"] 
  "1000179" -> "1000270"  [ label = "DDG: freopen(\"input.txt\", \"r\", stdin)"] 
  "1000183" -> "1000270"  [ label = "DDG: freopen(\"output.txt\", \"w\", stdout)"] 
  "1000188" -> "1000270"  [ label = "DDG: cin"] 
  "1000188" -> "1000270"  [ label = "DDG: cin>>t"] 
  "1000196" -> "1000270"  [ label = "DDG: t"] 
  "1000199" -> "1000270"  [ label = "DDG: cin"] 
  "1000199" -> "1000270"  [ label = "DDG: cin>>n"] 
  "1000209" -> "1000270"  [ label = "DDG: i<n"] 
  "1000227" -> "1000270"  [ label = "DDG: n"] 
  "1000225" -> "1000270"  [ label = "DDG: n-1"] 
  "1000235" -> "1000270"  [ label = "DDG: i"] 
  "1000234" -> "1000270"  [ label = "DDG: i*i"] 
  "1000234" -> "1000270"  [ label = "DDG: totsum"] 
  "1000234" -> "1000270"  [ label = "DDG: i*i <= totsum"] 
  "1000265" -> "1000270"  [ label = "DDG: ans"] 
  "1000263" -> "1000270"  [ label = "DDG: ans<<\"\n\""] 
  "1000263" -> "1000270"  [ label = "DDG: cout<<ans<<\"\n\""] 
  "1000243" -> "1000270"  [ label = "DDG: totsum % i"] 
  "1000243" -> "1000270"  [ label = "DDG: totsum % i == 0"] 
  "1000251" -> "1000270"  [ label = "DDG: check(i)"] 
  "1000249" -> "1000270"  [ label = "DDG: min(ans, check(i))"] 
  "1000259" -> "1000270"  [ label = "DDG: totsum/i"] 
  "1000257" -> "1000270"  [ label = "DDG: check(totsum/i)"] 
  "1000255" -> "1000270"  [ label = "DDG: min(ans, check(totsum/i))"] 
  "1000215" -> "1000270"  [ label = "DDG: cin"] 
  "1000215" -> "1000270"  [ label = "DDG: cin>>a[i]"] 
  "1000220" -> "1000270"  [ label = "DDG: a[i]"] 
  "1000183" -> "1000270"  [ label = "DDG: stdout"] 
  "1000179" -> "1000270"  [ label = "DDG: stdin"] 
  "1000263" -> "1000270"  [ label = "DDG: cout"] 
  "1000173" -> "1000270"  [ label = "DDG: false"] 
  "1000269" -> "1000268"  [ label = "DDG: 0"] 
  "1000171" -> "1000268"  [ label = "DDG: "] 
  "1000171" -> "1000173"  [ label = "DDG: "] 
  "1000171" -> "1000175"  [ label = "DDG: "] 
  "1000171" -> "1000177"  [ label = "DDG: "] 
  "1000171" -> "1000179"  [ label = "DDG: "] 
  "1000171" -> "1000183"  [ label = "DDG: "] 
  "1000171" -> "1000188"  [ label = "DDG: "] 
  "1000171" -> "1000269"  [ label = "DDG: "] 
  "1000188" -> "1000196"  [ label = "DDG: t"] 
  "1000171" -> "1000196"  [ label = "DDG: "] 
  "1000171" -> "1000202"  [ label = "DDG: "] 
  "1000227" -> "1000225"  [ label = "DDG: n"] 
  "1000227" -> "1000225"  [ label = "DDG: 1"] 
  "1000188" -> "1000199"  [ label = "DDG: cin"] 
  "1000215" -> "1000199"  [ label = "DDG: cin"] 
  "1000171" -> "1000199"  [ label = "DDG: "] 
  "1000227" -> "1000199"  [ label = "DDG: n"] 
  "1000171" -> "1000206"  [ label = "DDG: "] 
  "1000171" -> "1000225"  [ label = "DDG: "] 
  "1000171" -> "1000231"  [ label = "DDG: "] 
  "1000171" -> "1000263"  [ label = "DDG: "] 
  "1000265" -> "1000263"  [ label = "DDG: \"\n\""] 
  "1000265" -> "1000263"  [ label = "DDG: ans"] 
  "1000206" -> "1000209"  [ label = "DDG: i"] 
  "1000212" -> "1000209"  [ label = "DDG: i"] 
  "1000171" -> "1000209"  [ label = "DDG: "] 
  "1000199" -> "1000209"  [ label = "DDG: n"] 
  "1000209" -> "1000212"  [ label = "DDG: i"] 
  "1000171" -> "1000212"  [ label = "DDG: "] 
  "1000215" -> "1000220"  [ label = "DDG: a[i]"] 
  "1000209" -> "1000227"  [ label = "DDG: n"] 
  "1000171" -> "1000227"  [ label = "DDG: "] 
  "1000235" -> "1000234"  [ label = "DDG: i"] 
  "1000202" -> "1000234"  [ label = "DDG: totsum"] 
  "1000244" -> "1000234"  [ label = "DDG: totsum"] 
  "1000260" -> "1000234"  [ label = "DDG: totsum"] 
  "1000220" -> "1000234"  [ label = "DDG: totsum"] 
  "1000171" -> "1000234"  [ label = "DDG: "] 
  "1000244" -> "1000239"  [ label = "DDG: i"] 
  "1000260" -> "1000239"  [ label = "DDG: i"] 
  "1000171" -> "1000239"  [ label = "DDG: "] 
  "1000225" -> "1000265"  [ label = "DDG: ans"] 
  "1000255" -> "1000265"  [ label = "DDG: ans"] 
  "1000171" -> "1000265"  [ label = "DDG: "] 
  "1000199" -> "1000215"  [ label = "DDG: cin"] 
  "1000171" -> "1000215"  [ label = "DDG: "] 
  "1000202" -> "1000220"  [ label = "DDG: totsum"] 
  "1000171" -> "1000220"  [ label = "DDG: "] 
  "1000231" -> "1000235"  [ label = "DDG: i"] 
  "1000239" -> "1000235"  [ label = "DDG: i"] 
  "1000171" -> "1000235"  [ label = "DDG: "] 
  "1000244" -> "1000243"  [ label = "DDG: totsum"] 
  "1000244" -> "1000243"  [ label = "DDG: i"] 
  "1000171" -> "1000243"  [ label = "DDG: "] 
  "1000251" -> "1000249"  [ label = "DDG: check(i)"] 
  "1000251" -> "1000249"  [ label = "DDG: ans"] 
  "1000257" -> "1000255"  [ label = "DDG: check(totsum/i)"] 
  "1000257" -> "1000255"  [ label = "DDG: ans"] 
  "1000234" -> "1000244"  [ label = "DDG: totsum"] 
  "1000171" -> "1000244"  [ label = "DDG: "] 
  "1000235" -> "1000244"  [ label = "DDG: i"] 
  "1000171" -> "1000249"  [ label = "DDG: "] 
  "1000171" -> "1000255"  [ label = "DDG: "] 
  "1000225" -> "1000251"  [ label = "DDG: ans"] 
  "1000255" -> "1000251"  [ label = "DDG: ans"] 
  "1000171" -> "1000251"  [ label = "DDG: "] 
  "1000253" -> "1000251"  [ label = "DDG: i"] 
  "1000249" -> "1000257"  [ label = "DDG: ans"] 
  "1000171" -> "1000257"  [ label = "DDG: "] 
  "1000259" -> "1000257"  [ label = "DDG: totsum/i"] 
  "1000244" -> "1000253"  [ label = "DDG: i"] 
  "1000171" -> "1000253"  [ label = "DDG: "] 
  "1000260" -> "1000259"  [ label = "DDG: totsum"] 
  "1000260" -> "1000259"  [ label = "DDG: i"] 
  "1000244" -> "1000260"  [ label = "DDG: totsum"] 
  "1000171" -> "1000260"  [ label = "DDG: "] 
  "1000253" -> "1000260"  [ label = "DDG: i"] 
  "1000196" -> "1000265"  [ label = "CDG: "] 
  "1000196" -> "1000199"  [ label = "CDG: "] 
  "1000196" -> "1000227"  [ label = "CDG: "] 
  "1000196" -> "1000263"  [ label = "CDG: "] 
  "1000196" -> "1000196"  [ label = "CDG: "] 
  "1000196" -> "1000234"  [ label = "CDG: "] 
  "1000196" -> "1000225"  [ label = "CDG: "] 
  "1000196" -> "1000235"  [ label = "CDG: "] 
  "1000196" -> "1000206"  [ label = "CDG: "] 
  "1000196" -> "1000202"  [ label = "CDG: "] 
  "1000196" -> "1000231"  [ label = "CDG: "] 
  "1000196" -> "1000209"  [ label = "CDG: "] 
  "1000209" -> "1000212"  [ label = "CDG: "] 
  "1000209" -> "1000215"  [ label = "CDG: "] 
  "1000209" -> "1000222"  [ label = "CDG: "] 
  "1000209" -> "1000220"  [ label = "CDG: "] 
  "1000209" -> "1000217"  [ label = "CDG: "] 
  "1000209" -> "1000209"  [ label = "CDG: "] 
  "1000234" -> "1000239"  [ label = "CDG: "] 
  "1000234" -> "1000243"  [ label = "CDG: "] 
  "1000234" -> "1000244"  [ label = "CDG: "] 
  "1000234" -> "1000234"  [ label = "CDG: "] 
  "1000234" -> "1000235"  [ label = "CDG: "] 
  "1000243" -> "1000260"  [ label = "CDG: "] 
  "1000243" -> "1000255"  [ label = "CDG: "] 
  "1000243" -> "1000259"  [ label = "CDG: "] 
  "1000243" -> "1000251"  [ label = "CDG: "] 
  "1000243" -> "1000253"  [ label = "CDG: "] 
  "1000243" -> "1000249"  [ label = "CDG: "] 
  "1000243" -> "1000257"  [ label = "CDG: "] 
}
