digraph "findfactors" {  
"1000211" [label = "(METHOD,findfactors)" ]
"1000251" [label = "(METHOD_RETURN,ll)" ]
"1000212" [label = "(PARAM,ll n)" ]
"1000215" [label = "(<operator>.assignment,c=0)" ]
"1000249" [label = "(RETURN,return c;,return c;)" ]
"1000220" [label = "(<operator>.assignment,i=1)" ]
"1000223" [label = "(<operator>.lessEqualsThan,i<=sqrt(n))" ]
"1000227" [label = "(<operator>.postIncrement,i++)" ]
"1000250" [label = "(IDENTIFIER,c,return c;)" ]
"1000225" [label = "(sqrt,sqrt(n))" ]
"1000231" [label = "(<operator>.equals,n%i == 0)" ]
"1000232" [label = "(<operator>.modulo,n%i)" ]
"1000238" [label = "(<operator>.equals,n/i == i)" ]
"1000243" [label = "(<operator>.postIncrement,c++)" ]
"1000246" [label = "(<operator>.assignmentPlus,c+=2)" ]
"1000239" [label = "(<operator>.division,n/i)" ]
  "1000249" -> "1000251"  [ label = "DDG: <RET>"] 
  "1000212" -> "1000251"  [ label = "DDG: n"] 
  "1000215" -> "1000251"  [ label = "DDG: c"] 
  "1000223" -> "1000251"  [ label = "DDG: i"] 
  "1000225" -> "1000251"  [ label = "DDG: n"] 
  "1000223" -> "1000251"  [ label = "DDG: sqrt(n)"] 
  "1000223" -> "1000251"  [ label = "DDG: i<=sqrt(n)"] 
  "1000231" -> "1000251"  [ label = "DDG: n%i"] 
  "1000231" -> "1000251"  [ label = "DDG: n%i == 0"] 
  "1000238" -> "1000251"  [ label = "DDG: n/i"] 
  "1000238" -> "1000251"  [ label = "DDG: n/i == i"] 
  "1000246" -> "1000251"  [ label = "DDG: c"] 
  "1000243" -> "1000251"  [ label = "DDG: c"] 
  "1000211" -> "1000212"  [ label = "DDG: "] 
  "1000211" -> "1000215"  [ label = "DDG: "] 
  "1000250" -> "1000249"  [ label = "DDG: c"] 
  "1000215" -> "1000249"  [ label = "DDG: c"] 
  "1000246" -> "1000249"  [ label = "DDG: c"] 
  "1000243" -> "1000249"  [ label = "DDG: c"] 
  "1000211" -> "1000220"  [ label = "DDG: "] 
  "1000211" -> "1000250"  [ label = "DDG: "] 
  "1000220" -> "1000223"  [ label = "DDG: i"] 
  "1000227" -> "1000223"  [ label = "DDG: i"] 
  "1000211" -> "1000223"  [ label = "DDG: "] 
  "1000225" -> "1000223"  [ label = "DDG: n"] 
  "1000232" -> "1000227"  [ label = "DDG: i"] 
  "1000238" -> "1000227"  [ label = "DDG: i"] 
  "1000211" -> "1000227"  [ label = "DDG: "] 
  "1000232" -> "1000225"  [ label = "DDG: n"] 
  "1000239" -> "1000225"  [ label = "DDG: n"] 
  "1000212" -> "1000225"  [ label = "DDG: n"] 
  "1000211" -> "1000225"  [ label = "DDG: "] 
  "1000232" -> "1000231"  [ label = "DDG: i"] 
  "1000232" -> "1000231"  [ label = "DDG: n"] 
  "1000211" -> "1000231"  [ label = "DDG: "] 
  "1000225" -> "1000232"  [ label = "DDG: n"] 
  "1000212" -> "1000232"  [ label = "DDG: n"] 
  "1000211" -> "1000232"  [ label = "DDG: "] 
  "1000223" -> "1000232"  [ label = "DDG: i"] 
  "1000239" -> "1000238"  [ label = "DDG: i"] 
  "1000239" -> "1000238"  [ label = "DDG: n"] 
  "1000211" -> "1000238"  [ label = "DDG: "] 
  "1000215" -> "1000243"  [ label = "DDG: c"] 
  "1000246" -> "1000243"  [ label = "DDG: c"] 
  "1000211" -> "1000243"  [ label = "DDG: "] 
  "1000211" -> "1000246"  [ label = "DDG: "] 
  "1000232" -> "1000239"  [ label = "DDG: n"] 
  "1000212" -> "1000239"  [ label = "DDG: n"] 
  "1000211" -> "1000239"  [ label = "DDG: "] 
  "1000232" -> "1000239"  [ label = "DDG: i"] 
  "1000215" -> "1000246"  [ label = "DDG: c"] 
  "1000243" -> "1000246"  [ label = "DDG: c"] 
  "1000223" -> "1000231"  [ label = "CDG: "] 
  "1000223" -> "1000225"  [ label = "CDG: "] 
  "1000223" -> "1000227"  [ label = "CDG: "] 
  "1000223" -> "1000223"  [ label = "CDG: "] 
  "1000223" -> "1000232"  [ label = "CDG: "] 
  "1000231" -> "1000239"  [ label = "CDG: "] 
  "1000231" -> "1000238"  [ label = "CDG: "] 
  "1000238" -> "1000243"  [ label = "CDG: "] 
  "1000238" -> "1000246"  [ label = "CDG: "] 
}
