digraph "main" {  
"1000101" [label = "(METHOD,main)" ]
"1000201" [label = "(METHOD_RETURN,signed)" ]
"1000103" [label = "(cin.tie(0)->sync_with_stdio,cin.tie(0)->sync_with_stdio(0))" ]
"1000105" [label = "(freopen,freopen(\"input.txt\", \"r\" , stdin))" ]
"1000109" [label = "(freopen,freopen(\"output.txt\", \"w\", stdout))" ]
"1000114" [label = "(<operator>.arithmeticShiftRight,cin >> tc)" ]
"1000118" [label = "(<operator>.postDecrement,tc--)" ]
"1000122" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000149" [label = "(sort,sort(vx.begin(), vx.end()))" ]
"1000152" [label = "(sort,sort(vy.begin(), vy.end()))" ]
"1000129" [label = "(<operator>.assignment,i = 0)" ]
"1000132" [label = "(<operator>.lessThan,i < n)" ]
"1000135" [label = "(<operator>.postIncrement,i++)" ]
"1000156" [label = "(<operator>.and,n & 1)" ]
"1000159" [label = "(<operator>.shiftLeft,cout << 1 << endl)" ]
"1000140" [label = "(<operator>.arithmeticShiftRight,cin >> x >> y)" ]
"1000145" [label = "(vx.push_back,vx.push_back(x))" ]
"1000147" [label = "(vy.push_back,vy.push_back(y))" ]
"1000161" [label = "(<operator>.shiftLeft,1 << endl)" ]
"1000166" [label = "(<operator>.shiftLeft,cout << (vx[n / 2] - vx[n / 2 - 1] + 1) * (vy[n / 2] - vy[n / 2 - 1] + 1) << endl)" ]
"1000142" [label = "(<operator>.arithmeticShiftRight,x >> y)" ]
"1000168" [label = "(<operator>.shiftLeft,(vx[n / 2] - vx[n / 2 - 1] + 1) * (vy[n / 2] - vy[n / 2 - 1] + 1) << endl)" ]
"1000169" [label = "(<operator>.multiplication,(vx[n / 2] - vx[n / 2 - 1] + 1) * (vy[n / 2] - vy[n / 2 - 1] + 1))" ]
"1000170" [label = "(<operator>.subtraction,vx[n / 2] - vx[n / 2 - 1] + 1)" ]
"1000185" [label = "(<operator>.subtraction,vy[n / 2] - vy[n / 2 - 1] + 1)" ]
"1000176" [label = "(<operator>.addition,vx[n / 2 - 1] + 1)" ]
"1000191" [label = "(<operator>.addition,vy[n / 2 - 1] + 1)" ]
"1000173" [label = "(<operator>.division,n / 2)" ]
"1000188" [label = "(<operator>.division,n / 2)" ]
"1000179" [label = "(<operator>.subtraction,n / 2 - 1)" ]
"1000194" [label = "(<operator>.subtraction,n / 2 - 1)" ]
"1000180" [label = "(<operator>.division,n / 2)" ]
"1000195" [label = "(<operator>.division,n / 2)" ]
"1000150" [label = "(vx.begin,vx.begin())" ]
"1000151" [label = "(vx.end,vx.end())" ]
"1000153" [label = "(vy.begin,vy.begin())" ]
"1000154" [label = "(vy.end,vy.end())" ]
"1000171" [label = "(<operator>.indirectIndexAccess,vx[n / 2])" ]
"1000186" [label = "(<operator>.indirectIndexAccess,vy[n / 2])" ]
"1000177" [label = "(<operator>.indirectIndexAccess,vx[n / 2 - 1])" ]
"1000192" [label = "(<operator>.indirectIndexAccess,vy[n / 2 - 1])" ]
  "1000103" -> "1000201"  [ label = "DDG: cin.tie(0)->sync_with_stdio(0)"] 
  "1000105" -> "1000201"  [ label = "DDG: freopen(\"input.txt\", \"r\" , stdin)"] 
  "1000109" -> "1000201"  [ label = "DDG: freopen(\"output.txt\", \"w\", stdout)"] 
  "1000114" -> "1000201"  [ label = "DDG: cin"] 
  "1000114" -> "1000201"  [ label = "DDG: cin >> tc"] 
  "1000118" -> "1000201"  [ label = "DDG: tc"] 
  "1000122" -> "1000201"  [ label = "DDG: cin"] 
  "1000122" -> "1000201"  [ label = "DDG: cin >> n"] 
  "1000132" -> "1000201"  [ label = "DDG: i"] 
  "1000132" -> "1000201"  [ label = "DDG: i < n"] 
  "1000149" -> "1000201"  [ label = "DDG: vx.begin()"] 
  "1000149" -> "1000201"  [ label = "DDG: vx.end()"] 
  "1000149" -> "1000201"  [ label = "DDG: sort(vx.begin(), vx.end())"] 
  "1000152" -> "1000201"  [ label = "DDG: vy.begin()"] 
  "1000152" -> "1000201"  [ label = "DDG: vy.end()"] 
  "1000152" -> "1000201"  [ label = "DDG: sort(vy.begin(), vy.end())"] 
  "1000156" -> "1000201"  [ label = "DDG: n"] 
  "1000156" -> "1000201"  [ label = "DDG: n & 1"] 
  "1000166" -> "1000201"  [ label = "DDG: cout"] 
  "1000170" -> "1000201"  [ label = "DDG: vx[n / 2]"] 
  "1000176" -> "1000201"  [ label = "DDG: vx[n / 2 - 1]"] 
  "1000170" -> "1000201"  [ label = "DDG: vx[n / 2 - 1] + 1"] 
  "1000169" -> "1000201"  [ label = "DDG: vx[n / 2] - vx[n / 2 - 1] + 1"] 
  "1000185" -> "1000201"  [ label = "DDG: vy[n / 2]"] 
  "1000195" -> "1000201"  [ label = "DDG: n"] 
  "1000194" -> "1000201"  [ label = "DDG: n / 2"] 
  "1000191" -> "1000201"  [ label = "DDG: vy[n / 2 - 1]"] 
  "1000185" -> "1000201"  [ label = "DDG: vy[n / 2 - 1] + 1"] 
  "1000169" -> "1000201"  [ label = "DDG: vy[n / 2] - vy[n / 2 - 1] + 1"] 
  "1000168" -> "1000201"  [ label = "DDG: (vx[n / 2] - vx[n / 2 - 1] + 1) * (vy[n / 2] - vy[n / 2 - 1] + 1)"] 
  "1000168" -> "1000201"  [ label = "DDG: endl"] 
  "1000166" -> "1000201"  [ label = "DDG: (vx[n / 2] - vx[n / 2 - 1] + 1) * (vy[n / 2] - vy[n / 2 - 1] + 1) << endl"] 
  "1000166" -> "1000201"  [ label = "DDG: cout << (vx[n / 2] - vx[n / 2 - 1] + 1) * (vy[n / 2] - vy[n / 2 - 1] + 1) << endl"] 
  "1000159" -> "1000201"  [ label = "DDG: cout"] 
  "1000161" -> "1000201"  [ label = "DDG: endl"] 
  "1000159" -> "1000201"  [ label = "DDG: 1 << endl"] 
  "1000159" -> "1000201"  [ label = "DDG: cout << 1 << endl"] 
  "1000140" -> "1000201"  [ label = "DDG: cin"] 
  "1000140" -> "1000201"  [ label = "DDG: x >> y"] 
  "1000140" -> "1000201"  [ label = "DDG: cin >> x >> y"] 
  "1000145" -> "1000201"  [ label = "DDG: x"] 
  "1000145" -> "1000201"  [ label = "DDG: vx.push_back(x)"] 
  "1000147" -> "1000201"  [ label = "DDG: y"] 
  "1000147" -> "1000201"  [ label = "DDG: vy.push_back(y)"] 
  "1000109" -> "1000201"  [ label = "DDG: stdout"] 
  "1000105" -> "1000201"  [ label = "DDG: stdin"] 
  "1000101" -> "1000103"  [ label = "DDG: "] 
  "1000101" -> "1000105"  [ label = "DDG: "] 
  "1000101" -> "1000109"  [ label = "DDG: "] 
  "1000101" -> "1000114"  [ label = "DDG: "] 
  "1000114" -> "1000118"  [ label = "DDG: tc"] 
  "1000101" -> "1000118"  [ label = "DDG: "] 
  "1000114" -> "1000122"  [ label = "DDG: cin"] 
  "1000140" -> "1000122"  [ label = "DDG: cin"] 
  "1000101" -> "1000122"  [ label = "DDG: "] 
  "1000156" -> "1000122"  [ label = "DDG: n"] 
  "1000195" -> "1000122"  [ label = "DDG: n"] 
  "1000101" -> "1000129"  [ label = "DDG: "] 
  "1000101" -> "1000149"  [ label = "DDG: "] 
  "1000101" -> "1000152"  [ label = "DDG: "] 
  "1000129" -> "1000132"  [ label = "DDG: i"] 
  "1000135" -> "1000132"  [ label = "DDG: i"] 
  "1000101" -> "1000132"  [ label = "DDG: "] 
  "1000122" -> "1000132"  [ label = "DDG: n"] 
  "1000132" -> "1000135"  [ label = "DDG: i"] 
  "1000101" -> "1000135"  [ label = "DDG: "] 
  "1000132" -> "1000156"  [ label = "DDG: n"] 
  "1000101" -> "1000156"  [ label = "DDG: "] 
  "1000166" -> "1000159"  [ label = "DDG: cout"] 
  "1000101" -> "1000159"  [ label = "DDG: "] 
  "1000161" -> "1000159"  [ label = "DDG: endl"] 
  "1000161" -> "1000159"  [ label = "DDG: 1"] 
  "1000122" -> "1000140"  [ label = "DDG: cin"] 
  "1000101" -> "1000140"  [ label = "DDG: "] 
  "1000142" -> "1000140"  [ label = "DDG: x"] 
  "1000142" -> "1000140"  [ label = "DDG: y"] 
  "1000142" -> "1000145"  [ label = "DDG: x"] 
  "1000101" -> "1000145"  [ label = "DDG: "] 
  "1000142" -> "1000147"  [ label = "DDG: y"] 
  "1000101" -> "1000147"  [ label = "DDG: "] 
  "1000101" -> "1000161"  [ label = "DDG: "] 
  "1000168" -> "1000161"  [ label = "DDG: endl"] 
  "1000145" -> "1000142"  [ label = "DDG: x"] 
  "1000101" -> "1000142"  [ label = "DDG: "] 
  "1000147" -> "1000142"  [ label = "DDG: y"] 
  "1000159" -> "1000166"  [ label = "DDG: cout"] 
  "1000101" -> "1000166"  [ label = "DDG: "] 
  "1000168" -> "1000166"  [ label = "DDG: endl"] 
  "1000168" -> "1000166"  [ label = "DDG: (vx[n / 2] - vx[n / 2 - 1] + 1) * (vy[n / 2] - vy[n / 2 - 1] + 1)"] 
  "1000169" -> "1000168"  [ label = "DDG: vx[n / 2] - vx[n / 2 - 1] + 1"] 
  "1000169" -> "1000168"  [ label = "DDG: vy[n / 2] - vy[n / 2 - 1] + 1"] 
  "1000161" -> "1000168"  [ label = "DDG: endl"] 
  "1000101" -> "1000168"  [ label = "DDG: "] 
  "1000170" -> "1000169"  [ label = "DDG: vx[n / 2]"] 
  "1000170" -> "1000169"  [ label = "DDG: vx[n / 2 - 1] + 1"] 
  "1000185" -> "1000169"  [ label = "DDG: vy[n / 2 - 1] + 1"] 
  "1000185" -> "1000169"  [ label = "DDG: vy[n / 2]"] 
  "1000101" -> "1000170"  [ label = "DDG: "] 
  "1000101" -> "1000185"  [ label = "DDG: "] 
  "1000101" -> "1000176"  [ label = "DDG: "] 
  "1000101" -> "1000191"  [ label = "DDG: "] 
  "1000156" -> "1000173"  [ label = "DDG: n"] 
  "1000101" -> "1000173"  [ label = "DDG: "] 
  "1000180" -> "1000188"  [ label = "DDG: n"] 
  "1000101" -> "1000188"  [ label = "DDG: "] 
  "1000180" -> "1000179"  [ label = "DDG: 2"] 
  "1000180" -> "1000179"  [ label = "DDG: n"] 
  "1000101" -> "1000179"  [ label = "DDG: "] 
  "1000195" -> "1000194"  [ label = "DDG: 2"] 
  "1000195" -> "1000194"  [ label = "DDG: n"] 
  "1000101" -> "1000194"  [ label = "DDG: "] 
  "1000173" -> "1000180"  [ label = "DDG: n"] 
  "1000101" -> "1000180"  [ label = "DDG: "] 
  "1000188" -> "1000195"  [ label = "DDG: n"] 
  "1000101" -> "1000195"  [ label = "DDG: "] 
  "1000118" -> "1000153"  [ label = "CDG: "] 
  "1000118" -> "1000156"  [ label = "CDG: "] 
  "1000118" -> "1000152"  [ label = "CDG: "] 
  "1000118" -> "1000150"  [ label = "CDG: "] 
  "1000118" -> "1000118"  [ label = "CDG: "] 
  "1000118" -> "1000149"  [ label = "CDG: "] 
  "1000118" -> "1000122"  [ label = "CDG: "] 
  "1000118" -> "1000132"  [ label = "CDG: "] 
  "1000118" -> "1000129"  [ label = "CDG: "] 
  "1000118" -> "1000154"  [ label = "CDG: "] 
  "1000118" -> "1000151"  [ label = "CDG: "] 
  "1000132" -> "1000142"  [ label = "CDG: "] 
  "1000132" -> "1000135"  [ label = "CDG: "] 
  "1000132" -> "1000132"  [ label = "CDG: "] 
  "1000132" -> "1000147"  [ label = "CDG: "] 
  "1000132" -> "1000145"  [ label = "CDG: "] 
  "1000132" -> "1000140"  [ label = "CDG: "] 
  "1000156" -> "1000191"  [ label = "CDG: "] 
  "1000156" -> "1000161"  [ label = "CDG: "] 
  "1000156" -> "1000195"  [ label = "CDG: "] 
  "1000156" -> "1000186"  [ label = "CDG: "] 
  "1000156" -> "1000166"  [ label = "CDG: "] 
  "1000156" -> "1000180"  [ label = "CDG: "] 
  "1000156" -> "1000169"  [ label = "CDG: "] 
  "1000156" -> "1000168"  [ label = "CDG: "] 
  "1000156" -> "1000188"  [ label = "CDG: "] 
  "1000156" -> "1000159"  [ label = "CDG: "] 
  "1000156" -> "1000173"  [ label = "CDG: "] 
  "1000156" -> "1000170"  [ label = "CDG: "] 
  "1000156" -> "1000171"  [ label = "CDG: "] 
  "1000156" -> "1000179"  [ label = "CDG: "] 
  "1000156" -> "1000194"  [ label = "CDG: "] 
  "1000156" -> "1000192"  [ label = "CDG: "] 
  "1000156" -> "1000176"  [ label = "CDG: "] 
  "1000156" -> "1000177"  [ label = "CDG: "] 
  "1000156" -> "1000185"  [ label = "CDG: "] 
}
