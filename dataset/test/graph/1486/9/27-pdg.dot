digraph "solve" {  
"1000391" [label = "(METHOD,solve)" ]
"1000448" [label = "(METHOD_RETURN,void)" ]
"1000394" [label = "(read,read(n))" ]
"1000398" [label = "(read,read(x[i], y[i]))" ]
"1000405" [label = "(sort,sort(all(x)))" ]
"1000408" [label = "(sort,sort(all(y)))" ]
"1000411" [label = "(print,print((n & 1 ? 1 : (x[n / 2] - x[n / 2 - 1] + 1) * (y[n / 2] - y[n / 2 - 1] + 1))))" ]
"1000406" [label = "(all,all(x))" ]
"1000409" [label = "(all,all(y))" ]
"1000412" [label = "(<operator>.conditional,n & 1 ? 1 : (x[n / 2] - x[n / 2 - 1] + 1) * (y[n / 2] - y[n / 2 - 1] + 1))" ]
"1000413" [label = "(<operator>.and,n & 1)" ]
"1000417" [label = "(<operator>.multiplication,(x[n / 2] - x[n / 2 - 1] + 1) * (y[n / 2] - y[n / 2 - 1] + 1))" ]
"1000418" [label = "(<operator>.subtraction,x[n / 2] - x[n / 2 - 1] + 1)" ]
"1000433" [label = "(<operator>.subtraction,y[n / 2] - y[n / 2 - 1] + 1)" ]
"1000424" [label = "(<operator>.addition,x[n / 2 - 1] + 1)" ]
"1000439" [label = "(<operator>.addition,y[n / 2 - 1] + 1)" ]
"1000421" [label = "(<operator>.division,n / 2)" ]
"1000436" [label = "(<operator>.division,n / 2)" ]
"1000427" [label = "(<operator>.subtraction,n / 2 - 1)" ]
"1000442" [label = "(<operator>.subtraction,n / 2 - 1)" ]
"1000428" [label = "(<operator>.division,n / 2)" ]
"1000443" [label = "(<operator>.division,n / 2)" ]
"1000419" [label = "(<operator>.indirectIndexAccess,x[n / 2])" ]
"1000434" [label = "(<operator>.indirectIndexAccess,y[n / 2])" ]
"1000425" [label = "(<operator>.indirectIndexAccess,x[n / 2 - 1])" ]
"1000440" [label = "(<operator>.indirectIndexAccess,y[n / 2 - 1])" ]
  "1000394" -> "1000448"  [ label = "DDG: read(n)"] 
  "1000398" -> "1000448"  [ label = "DDG: x[i]"] 
  "1000398" -> "1000448"  [ label = "DDG: y[i]"] 
  "1000398" -> "1000448"  [ label = "DDG: read(x[i], y[i])"] 
  "1000406" -> "1000448"  [ label = "DDG: x"] 
  "1000405" -> "1000448"  [ label = "DDG: all(x)"] 
  "1000405" -> "1000448"  [ label = "DDG: sort(all(x))"] 
  "1000409" -> "1000448"  [ label = "DDG: y"] 
  "1000408" -> "1000448"  [ label = "DDG: all(y)"] 
  "1000408" -> "1000448"  [ label = "DDG: sort(all(y))"] 
  "1000413" -> "1000448"  [ label = "DDG: n"] 
  "1000412" -> "1000448"  [ label = "DDG: n & 1"] 
  "1000418" -> "1000448"  [ label = "DDG: x[n / 2]"] 
  "1000424" -> "1000448"  [ label = "DDG: x[n / 2 - 1]"] 
  "1000418" -> "1000448"  [ label = "DDG: x[n / 2 - 1] + 1"] 
  "1000417" -> "1000448"  [ label = "DDG: x[n / 2] - x[n / 2 - 1] + 1"] 
  "1000433" -> "1000448"  [ label = "DDG: y[n / 2]"] 
  "1000443" -> "1000448"  [ label = "DDG: n"] 
  "1000442" -> "1000448"  [ label = "DDG: n / 2"] 
  "1000439" -> "1000448"  [ label = "DDG: y[n / 2 - 1]"] 
  "1000433" -> "1000448"  [ label = "DDG: y[n / 2 - 1] + 1"] 
  "1000417" -> "1000448"  [ label = "DDG: y[n / 2] - y[n / 2 - 1] + 1"] 
  "1000412" -> "1000448"  [ label = "DDG: (x[n / 2] - x[n / 2 - 1] + 1) * (y[n / 2] - y[n / 2 - 1] + 1)"] 
  "1000411" -> "1000448"  [ label = "DDG: n & 1 ? 1 : (x[n / 2] - x[n / 2 - 1] + 1) * (y[n / 2] - y[n / 2 - 1] + 1)"] 
  "1000411" -> "1000448"  [ label = "DDG: print((n & 1 ? 1 : (x[n / 2] - x[n / 2 - 1] + 1) * (y[n / 2] - y[n / 2 - 1] + 1)))"] 
  "1000391" -> "1000394"  [ label = "DDG: "] 
  "1000406" -> "1000405"  [ label = "DDG: x"] 
  "1000409" -> "1000408"  [ label = "DDG: y"] 
  "1000417" -> "1000411"  [ label = "DDG: x[n / 2] - x[n / 2 - 1] + 1"] 
  "1000417" -> "1000411"  [ label = "DDG: y[n / 2] - y[n / 2 - 1] + 1"] 
  "1000391" -> "1000411"  [ label = "DDG: "] 
  "1000398" -> "1000406"  [ label = "DDG: x[i]"] 
  "1000391" -> "1000406"  [ label = "DDG: "] 
  "1000398" -> "1000409"  [ label = "DDG: y[i]"] 
  "1000391" -> "1000409"  [ label = "DDG: "] 
  "1000391" -> "1000412"  [ label = "DDG: "] 
  "1000417" -> "1000412"  [ label = "DDG: x[n / 2] - x[n / 2 - 1] + 1"] 
  "1000417" -> "1000412"  [ label = "DDG: y[n / 2] - y[n / 2 - 1] + 1"] 
  "1000394" -> "1000413"  [ label = "DDG: n"] 
  "1000391" -> "1000413"  [ label = "DDG: "] 
  "1000418" -> "1000417"  [ label = "DDG: x[n / 2 - 1] + 1"] 
  "1000418" -> "1000417"  [ label = "DDG: x[n / 2]"] 
  "1000433" -> "1000417"  [ label = "DDG: y[n / 2]"] 
  "1000433" -> "1000417"  [ label = "DDG: y[n / 2 - 1] + 1"] 
  "1000406" -> "1000418"  [ label = "DDG: x"] 
  "1000391" -> "1000418"  [ label = "DDG: "] 
  "1000409" -> "1000433"  [ label = "DDG: y"] 
  "1000391" -> "1000433"  [ label = "DDG: "] 
  "1000406" -> "1000424"  [ label = "DDG: x"] 
  "1000391" -> "1000424"  [ label = "DDG: "] 
  "1000409" -> "1000439"  [ label = "DDG: y"] 
  "1000391" -> "1000439"  [ label = "DDG: "] 
  "1000413" -> "1000421"  [ label = "DDG: n"] 
  "1000391" -> "1000421"  [ label = "DDG: "] 
  "1000428" -> "1000436"  [ label = "DDG: n"] 
  "1000391" -> "1000436"  [ label = "DDG: "] 
  "1000428" -> "1000427"  [ label = "DDG: 2"] 
  "1000428" -> "1000427"  [ label = "DDG: n"] 
  "1000391" -> "1000427"  [ label = "DDG: "] 
  "1000443" -> "1000442"  [ label = "DDG: n"] 
  "1000443" -> "1000442"  [ label = "DDG: 2"] 
  "1000391" -> "1000442"  [ label = "DDG: "] 
  "1000421" -> "1000428"  [ label = "DDG: n"] 
  "1000391" -> "1000428"  [ label = "DDG: "] 
  "1000436" -> "1000443"  [ label = "DDG: n"] 
  "1000391" -> "1000443"  [ label = "DDG: "] 
  "1000413" -> "1000424"  [ label = "CDG: "] 
  "1000413" -> "1000436"  [ label = "CDG: "] 
  "1000413" -> "1000440"  [ label = "CDG: "] 
  "1000413" -> "1000427"  [ label = "CDG: "] 
  "1000413" -> "1000421"  [ label = "CDG: "] 
  "1000413" -> "1000425"  [ label = "CDG: "] 
  "1000413" -> "1000419"  [ label = "CDG: "] 
  "1000413" -> "1000434"  [ label = "CDG: "] 
  "1000413" -> "1000417"  [ label = "CDG: "] 
  "1000413" -> "1000443"  [ label = "CDG: "] 
  "1000413" -> "1000428"  [ label = "CDG: "] 
  "1000413" -> "1000418"  [ label = "CDG: "] 
  "1000413" -> "1000442"  [ label = "CDG: "] 
  "1000413" -> "1000439"  [ label = "CDG: "] 
  "1000413" -> "1000433"  [ label = "CDG: "] 
}
