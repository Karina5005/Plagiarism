digraph "main" {  
"1000433" [label = "(METHOD,main)" ]
"1000536" [label = "(METHOD_RETURN,int)" ]
"1000435" [label = "(<operator>.arithmeticShiftRight,cin >> n)" ]
"1000522" [label = "(dfs0,dfs0(1 , 0))" ]
"1000525" [label = "(puts,puts(dfs1( 1 , ifib[n] ) ? \"YES\" : \"NO\"))" ]
"1000534" [label = "(RETURN,return 0;,return 0;)" ]
"1000445" [label = "(<operator>.lessEqualsThan,i <= n - 1)" ]
"1000450" [label = "(<operator>.postIncrement,i++)" ]
"1000467" [label = "(<operator>.assignment,fib[0] = fib[1] = 1)" ]
"1000476" [label = "(<operator>.assignment,ifib[1] = 1)" ]
"1000483" [label = "(<operator>.assignment,i = 2)" ]
"1000486" [label = "(<operator>.lessEqualsThan,( fib[i] = fib[i - 2] + fib[i - 1] ) <= n)" ]
"1000503" [label = "(<operator>.postIncrement,i++)" ]
"1000505" [label = "(<operator>.assignment,ifib[ fib[i] ] = i)" ]
"1000513" [label = "(<operator>.logicalNot,!ifib[n])" ]
"1000517" [label = "(RETURN,return puts(\"NO\"),0;,return puts(\"NO\"),0;)" ]
"1000535" [label = "(LITERAL,0,return 0;)" ]
"1000453" [label = "(scanf,scanf(\"%d%d\" , &u , &v))" ]
"1000526" [label = "(<operator>.conditional,dfs1( 1 , ifib[n] ) ? \"YES\" : \"NO\")" ]
"1000447" [label = "(<operator>.subtraction,n - 1)" ]
"1000460" [label = "(add,add(u , v))" ]
"1000463" [label = "(add,add(v , u))" ]
"1000471" [label = "(<operator>.assignment,fib[1] = 1)" ]
"1000487" [label = "(<operator>.assignment,fib[i] = fib[i - 2] + fib[i - 1])" ]
"1000519" [label = "(puts,puts(\"NO\"))" ]
"1000521" [label = "(LITERAL,0,)" ]
"1000527" [label = "(dfs1,dfs1( 1 , ifib[n] ))" ]
"1000491" [label = "(<operator>.addition,fib[i - 2] + fib[i - 1])" ]
"1000494" [label = "(<operator>.subtraction,i - 2)" ]
"1000499" [label = "(<operator>.subtraction,i - 1)" ]
"1000506" [label = "(<operator>.indirectIndexAccess,ifib[ fib[i] ])" ]
"1000455" [label = "(<operator>.addressOf,&u)" ]
"1000457" [label = "(<operator>.addressOf,&v)" ]
"1000488" [label = "(<operator>.indirectIndexAccess,fib[i])" ]
"1000508" [label = "(<operator>.indirectIndexAccess,fib[i])" ]
"1000529" [label = "(<operator>.indirectIndexAccess,ifib[n])" ]
"1000492" [label = "(<operator>.indirectIndexAccess,fib[i - 2])" ]
"1000497" [label = "(<operator>.indirectIndexAccess,fib[i - 1])" ]
  "1000435" -> "1000536"  [ label = "DDG: cin >> n"] 
  "1000445" -> "1000536"  [ label = "DDG: n - 1"] 
  "1000445" -> "1000536"  [ label = "DDG: i <= n - 1"] 
  "1000467" -> "1000536"  [ label = "DDG: fib[0]"] 
  "1000471" -> "1000536"  [ label = "DDG: fib[1]"] 
  "1000476" -> "1000536"  [ label = "DDG: ifib[1]"] 
  "1000487" -> "1000536"  [ label = "DDG: fib[i]"] 
  "1000491" -> "1000536"  [ label = "DDG: fib[i - 2]"] 
  "1000499" -> "1000536"  [ label = "DDG: i"] 
  "1000491" -> "1000536"  [ label = "DDG: fib[i - 1]"] 
  "1000487" -> "1000536"  [ label = "DDG: fib[i - 2] + fib[i - 1]"] 
  "1000486" -> "1000536"  [ label = "DDG: n"] 
  "1000486" -> "1000536"  [ label = "DDG: ( fib[i] = fib[i - 2] + fib[i - 1] ) <= n"] 
  "1000513" -> "1000536"  [ label = "DDG: ifib[n]"] 
  "1000513" -> "1000536"  [ label = "DDG: !ifib[n]"] 
  "1000522" -> "1000536"  [ label = "DDG: dfs0(1 , 0)"] 
  "1000527" -> "1000536"  [ label = "DDG: ifib[n]"] 
  "1000526" -> "1000536"  [ label = "DDG: dfs1( 1 , ifib[n] )"] 
  "1000525" -> "1000536"  [ label = "DDG: dfs1( 1 , ifib[n] ) ? \"YES\" : \"NO\""] 
  "1000525" -> "1000536"  [ label = "DDG: puts(dfs1( 1 , ifib[n] ) ? \"YES\" : \"NO\")"] 
  "1000519" -> "1000536"  [ label = "DDG: puts(\"NO\")"] 
  "1000505" -> "1000536"  [ label = "DDG: ifib[ fib[i] ]"] 
  "1000453" -> "1000536"  [ label = "DDG: &u"] 
  "1000453" -> "1000536"  [ label = "DDG: &v"] 
  "1000460" -> "1000536"  [ label = "DDG: add(u , v)"] 
  "1000463" -> "1000536"  [ label = "DDG: v"] 
  "1000463" -> "1000536"  [ label = "DDG: u"] 
  "1000463" -> "1000536"  [ label = "DDG: add(v , u)"] 
  "1000517" -> "1000536"  [ label = "DDG: <RET>"] 
  "1000534" -> "1000536"  [ label = "DDG: <RET>"] 
  "1000435" -> "1000536"  [ label = "DDG: cin"] 
  "1000535" -> "1000534"  [ label = "DDG: 0"] 
  "1000433" -> "1000534"  [ label = "DDG: "] 
  "1000433" -> "1000435"  [ label = "DDG: "] 
  "1000433" -> "1000476"  [ label = "DDG: "] 
  "1000433" -> "1000483"  [ label = "DDG: "] 
  "1000499" -> "1000505"  [ label = "DDG: i"] 
  "1000433" -> "1000505"  [ label = "DDG: "] 
  "1000433" -> "1000517"  [ label = "DDG: "] 
  "1000433" -> "1000522"  [ label = "DDG: "] 
  "1000433" -> "1000525"  [ label = "DDG: "] 
  "1000433" -> "1000535"  [ label = "DDG: "] 
  "1000450" -> "1000445"  [ label = "DDG: i"] 
  "1000433" -> "1000445"  [ label = "DDG: "] 
  "1000447" -> "1000445"  [ label = "DDG: 1"] 
  "1000447" -> "1000445"  [ label = "DDG: n"] 
  "1000445" -> "1000450"  [ label = "DDG: i"] 
  "1000433" -> "1000450"  [ label = "DDG: "] 
  "1000433" -> "1000453"  [ label = "DDG: "] 
  "1000471" -> "1000467"  [ label = "DDG: fib[1]"] 
  "1000433" -> "1000467"  [ label = "DDG: "] 
  "1000487" -> "1000486"  [ label = "DDG: fib[i]"] 
  "1000447" -> "1000486"  [ label = "DDG: n"] 
  "1000433" -> "1000486"  [ label = "DDG: "] 
  "1000433" -> "1000503"  [ label = "DDG: "] 
  "1000499" -> "1000503"  [ label = "DDG: i"] 
  "1000433" -> "1000526"  [ label = "DDG: "] 
  "1000435" -> "1000447"  [ label = "DDG: n"] 
  "1000433" -> "1000447"  [ label = "DDG: "] 
  "1000433" -> "1000471"  [ label = "DDG: "] 
  "1000433" -> "1000521"  [ label = "DDG: "] 
  "1000433" -> "1000527"  [ label = "DDG: "] 
  "1000513" -> "1000527"  [ label = "DDG: ifib[n]"] 
  "1000463" -> "1000460"  [ label = "DDG: u"] 
  "1000433" -> "1000460"  [ label = "DDG: "] 
  "1000463" -> "1000460"  [ label = "DDG: v"] 
  "1000460" -> "1000463"  [ label = "DDG: v"] 
  "1000433" -> "1000463"  [ label = "DDG: "] 
  "1000460" -> "1000463"  [ label = "DDG: u"] 
  "1000433" -> "1000519"  [ label = "DDG: "] 
  "1000483" -> "1000494"  [ label = "DDG: i"] 
  "1000503" -> "1000494"  [ label = "DDG: i"] 
  "1000433" -> "1000494"  [ label = "DDG: "] 
  "1000494" -> "1000499"  [ label = "DDG: i"] 
  "1000433" -> "1000499"  [ label = "DDG: "] 
  "1000445" -> "1000453"  [ label = "CDG: "] 
  "1000445" -> "1000447"  [ label = "CDG: "] 
  "1000445" -> "1000463"  [ label = "CDG: "] 
  "1000445" -> "1000457"  [ label = "CDG: "] 
  "1000445" -> "1000450"  [ label = "CDG: "] 
  "1000445" -> "1000445"  [ label = "CDG: "] 
  "1000445" -> "1000455"  [ label = "CDG: "] 
  "1000445" -> "1000460"  [ label = "CDG: "] 
  "1000486" -> "1000503"  [ label = "CDG: "] 
  "1000486" -> "1000508"  [ label = "CDG: "] 
  "1000486" -> "1000491"  [ label = "CDG: "] 
  "1000486" -> "1000494"  [ label = "CDG: "] 
  "1000486" -> "1000486"  [ label = "CDG: "] 
  "1000486" -> "1000488"  [ label = "CDG: "] 
  "1000486" -> "1000497"  [ label = "CDG: "] 
  "1000486" -> "1000499"  [ label = "CDG: "] 
  "1000486" -> "1000506"  [ label = "CDG: "] 
  "1000486" -> "1000487"  [ label = "CDG: "] 
  "1000486" -> "1000492"  [ label = "CDG: "] 
  "1000486" -> "1000505"  [ label = "CDG: "] 
  "1000513" -> "1000526"  [ label = "CDG: "] 
  "1000513" -> "1000525"  [ label = "CDG: "] 
  "1000513" -> "1000529"  [ label = "CDG: "] 
  "1000513" -> "1000519"  [ label = "CDG: "] 
  "1000513" -> "1000517"  [ label = "CDG: "] 
  "1000513" -> "1000534"  [ label = "CDG: "] 
  "1000513" -> "1000522"  [ label = "CDG: "] 
  "1000513" -> "1000527"  [ label = "CDG: "] 
}
