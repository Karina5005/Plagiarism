digraph "sieve" {  
"1000279" [label = "(METHOD,sieve)" ]
"1000317" [label = "(METHOD_RETURN,void)" ]
"1000283" [label = "(<operator>.assignment,p = 2)" ]
"1000286" [label = "(<operator>.lessEqualsThan,p * p <= 1e7)" ]
"1000291" [label = "(<operator>.postIncrement,p++)" ]
"1000294" [label = "(<operator>.equals,isPrime[p] == true)" ]
"1000287" [label = "(<operator>.multiplication,p * p)" ]
"1000301" [label = "(<operator>.assignment,i = p * p)" ]
"1000306" [label = "(<operator>.lessEqualsThan,i <= 1e7)" ]
"1000309" [label = "(<operator>.assignmentPlus,i += p)" ]
"1000312" [label = "(<operator>.assignment,isPrime[i] = false)" ]
"1000303" [label = "(<operator>.multiplication,p * p)" ]
"1000295" [label = "(<operator>.indirectIndexAccess,isPrime[p])" ]
"1000313" [label = "(<operator>.indirectIndexAccess,isPrime[i])" ]
  "1000287" -> "1000317"  [ label = "DDG: p"] 
  "1000286" -> "1000317"  [ label = "DDG: p * p"] 
  "1000286" -> "1000317"  [ label = "DDG: p * p <= 1e7"] 
  "1000294" -> "1000317"  [ label = "DDG: isPrime[p]"] 
  "1000294" -> "1000317"  [ label = "DDG: isPrime[p] == true"] 
  "1000306" -> "1000317"  [ label = "DDG: i"] 
  "1000306" -> "1000317"  [ label = "DDG: i <= 1e7"] 
  "1000312" -> "1000317"  [ label = "DDG: isPrime[i]"] 
  "1000312" -> "1000317"  [ label = "DDG: false"] 
  "1000294" -> "1000317"  [ label = "DDG: true"] 
  "1000279" -> "1000283"  [ label = "DDG: "] 
  "1000287" -> "1000286"  [ label = "DDG: p"] 
  "1000279" -> "1000286"  [ label = "DDG: "] 
  "1000287" -> "1000291"  [ label = "DDG: p"] 
  "1000303" -> "1000291"  [ label = "DDG: p"] 
  "1000279" -> "1000291"  [ label = "DDG: "] 
  "1000283" -> "1000287"  [ label = "DDG: p"] 
  "1000291" -> "1000287"  [ label = "DDG: p"] 
  "1000279" -> "1000287"  [ label = "DDG: "] 
  "1000279" -> "1000294"  [ label = "DDG: "] 
  "1000303" -> "1000301"  [ label = "DDG: p"] 
  "1000303" -> "1000309"  [ label = "DDG: p"] 
  "1000279" -> "1000309"  [ label = "DDG: "] 
  "1000279" -> "1000312"  [ label = "DDG: "] 
  "1000279" -> "1000301"  [ label = "DDG: "] 
  "1000301" -> "1000306"  [ label = "DDG: i"] 
  "1000309" -> "1000306"  [ label = "DDG: i"] 
  "1000279" -> "1000306"  [ label = "DDG: "] 
  "1000306" -> "1000309"  [ label = "DDG: i"] 
  "1000287" -> "1000303"  [ label = "DDG: p"] 
  "1000279" -> "1000303"  [ label = "DDG: "] 
  "1000286" -> "1000294"  [ label = "CDG: "] 
  "1000286" -> "1000286"  [ label = "CDG: "] 
  "1000286" -> "1000287"  [ label = "CDG: "] 
  "1000286" -> "1000295"  [ label = "CDG: "] 
  "1000286" -> "1000291"  [ label = "CDG: "] 
  "1000294" -> "1000303"  [ label = "CDG: "] 
  "1000294" -> "1000301"  [ label = "CDG: "] 
  "1000294" -> "1000306"  [ label = "CDG: "] 
  "1000306" -> "1000309"  [ label = "CDG: "] 
  "1000306" -> "1000312"  [ label = "CDG: "] 
  "1000306" -> "1000306"  [ label = "CDG: "] 
  "1000306" -> "1000313"  [ label = "CDG: "] 
}
