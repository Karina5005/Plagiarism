digraph "main" {  
"1000102" [label = "(METHOD,main)" ]
"1000263" [label = "(METHOD_RETURN,int)" ]
"1000104" [label = "(ios_base::sync_with_stdio,ios_base::sync_with_stdio(false))" ]
"1000106" [label = "(cin.tie,cin.tie(NULL))" ]
"1000108" [label = "(freopen,freopen(\"input.txt\", \"r\", stdin))" ]
"1000112" [label = "(freopen,freopen(\"output.txt\", \"w\", stdout))" ]
"1000117" [label = "(<operator>.arithmeticShiftRight,cin >> t)" ]
"1000246" [label = "(<operator>.shiftLeft,cerr << \"Time : \" << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << \"ms\n\")" ]
"1000261" [label = "(RETURN,return 0;,return 0;)" ]
"1000122" [label = "(<operator>.assignment,tt = 0)" ]
"1000125" [label = "(<operator>.lessThan,tt < t)" ]
"1000128" [label = "(<operator>.postIncrement,tt++)" ]
"1000262" [label = "(LITERAL,0,return 0;)" ]
"1000132" [label = "(<operator>.arithmeticShiftRight,cin>>n)" ]
"1000137" [label = "(<operator>.arithmeticShiftRight,cin>>u>>v)" ]
"1000143" [label = "(<operator>.arithmeticShiftRight,cin>>a[0])" ]
"1000149" [label = "(<operator>.assignment,td=0)" ]
"1000153" [label = "(<operator>.assignment,oned=0)" ]
"1000208" [label = "(<operator>.assignment,ans=0)" ]
"1000235" [label = "(<operator>.shiftLeft,cout<<min(u+v,v+v)<<\"\n\")" ]
"1000248" [label = "(<operator>.shiftLeft,\"Time : \" << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << \"ms\n\")" ]
"1000158" [label = "(<operator>.assignment,i = 1)" ]
"1000161" [label = "(<operator>.lessThan,i < n)" ]
"1000164" [label = "(<operator>.postIncrement,i++)" ]
"1000212" [label = "(<operator>.equals,td==1)" ]
"1000223" [label = "(<operator>.equals,oned==1)" ]
"1000250" [label = "(<operator>.shiftLeft,1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << \"ms\n\")" ]
"1000139" [label = "(<operator>.arithmeticShiftRight,u>>v)" ]
"1000167" [label = "(<operator>.arithmeticShiftRight,cin>>a[i])" ]
"1000216" [label = "(<operator>.shiftLeft,cout<<0<<\"\n\")" ]
"1000227" [label = "(<operator>.shiftLeft,cout<<min(u,v)<<\"\n\")" ]
"1000237" [label = "(<operator>.shiftLeft,min(u+v,v+v)<<\"\n\")" ]
"1000251" [label = "(<operator>.multiplication,1000 * ((double)clock()) / (double)CLOCKS_PER_SEC)" ]
"1000173" [label = "(<operator>.greaterEqualsThan,abs(a[i]-a[i-1])>=2)" ]
"1000238" [label = "(min,min(u+v,v+v))" ]
"1000253" [label = "(<operator>.division,((double)clock()) / (double)CLOCKS_PER_SEC)" ]
"1000186" [label = "(<operator>.assignment,td=1)" ]
"1000218" [label = "(<operator>.shiftLeft,0<<\"\n\")" ]
"1000229" [label = "(<operator>.shiftLeft,min(u,v)<<\"\n\")" ]
"1000239" [label = "(<operator>.addition,u+v)" ]
"1000242" [label = "(<operator>.addition,v+v)" ]
"1000254" [label = "(<operator>.cast,(double)clock())" ]
"1000257" [label = "(<operator>.cast,(double)CLOCKS_PER_SEC)" ]
"1000174" [label = "(abs,abs(a[i]-a[i-1]))" ]
"1000191" [label = "(<operator>.equals,abs(a[i] - a[i - 1]) == 1)" ]
"1000230" [label = "(min,min(u,v))" ]
"1000175" [label = "(<operator>.subtraction,a[i]-a[i-1])" ]
"1000204" [label = "(<operator>.assignment,oned = 1)" ]
"1000192" [label = "(abs,abs(a[i] - a[i - 1]))" ]
"1000181" [label = "(<operator>.subtraction,i-1)" ]
"1000193" [label = "(<operator>.subtraction,a[i] - a[i - 1])" ]
"1000199" [label = "(<operator>.subtraction,i - 1)" ]
"1000145" [label = "(<operator>.indirectIndexAccess,a[0])" ]
"1000169" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000176" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000179" [label = "(<operator>.indirectIndexAccess,a[i-1])" ]
"1000194" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000197" [label = "(<operator>.indirectIndexAccess,a[i - 1])" ]
  "1000261" -> "1000263"  [ label = "DDG: <RET>"] 
  "1000104" -> "1000263"  [ label = "DDG: ios_base::sync_with_stdio(false)"] 
  "1000106" -> "1000263"  [ label = "DDG: cin.tie(NULL)"] 
  "1000108" -> "1000263"  [ label = "DDG: freopen(\"input.txt\", \"r\", stdin)"] 
  "1000112" -> "1000263"  [ label = "DDG: freopen(\"output.txt\", \"w\", stdout)"] 
  "1000117" -> "1000263"  [ label = "DDG: cin"] 
  "1000117" -> "1000263"  [ label = "DDG: cin >> t"] 
  "1000125" -> "1000263"  [ label = "DDG: tt"] 
  "1000125" -> "1000263"  [ label = "DDG: t"] 
  "1000125" -> "1000263"  [ label = "DDG: tt < t"] 
  "1000254" -> "1000263"  [ label = "DDG: clock()"] 
  "1000253" -> "1000263"  [ label = "DDG: (double)clock()"] 
  "1000253" -> "1000263"  [ label = "DDG: (double)CLOCKS_PER_SEC"] 
  "1000251" -> "1000263"  [ label = "DDG: ((double)clock()) / (double)CLOCKS_PER_SEC"] 
  "1000250" -> "1000263"  [ label = "DDG: 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC"] 
  "1000248" -> "1000263"  [ label = "DDG: 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << \"ms\n\""] 
  "1000246" -> "1000263"  [ label = "DDG: \"Time : \" << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << \"ms\n\""] 
  "1000246" -> "1000263"  [ label = "DDG: cerr << \"Time : \" << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << \"ms\n\""] 
  "1000132" -> "1000263"  [ label = "DDG: cin>>n"] 
  "1000139" -> "1000263"  [ label = "DDG: u"] 
  "1000139" -> "1000263"  [ label = "DDG: v"] 
  "1000137" -> "1000263"  [ label = "DDG: u>>v"] 
  "1000137" -> "1000263"  [ label = "DDG: cin>>u>>v"] 
  "1000143" -> "1000263"  [ label = "DDG: cin"] 
  "1000143" -> "1000263"  [ label = "DDG: a[0]"] 
  "1000143" -> "1000263"  [ label = "DDG: cin>>a[0]"] 
  "1000153" -> "1000263"  [ label = "DDG: oned"] 
  "1000161" -> "1000263"  [ label = "DDG: i"] 
  "1000161" -> "1000263"  [ label = "DDG: n"] 
  "1000161" -> "1000263"  [ label = "DDG: i < n"] 
  "1000208" -> "1000263"  [ label = "DDG: ans"] 
  "1000212" -> "1000263"  [ label = "DDG: td"] 
  "1000212" -> "1000263"  [ label = "DDG: td==1"] 
  "1000223" -> "1000263"  [ label = "DDG: oned"] 
  "1000223" -> "1000263"  [ label = "DDG: oned==1"] 
  "1000235" -> "1000263"  [ label = "DDG: cout"] 
  "1000239" -> "1000263"  [ label = "DDG: u"] 
  "1000238" -> "1000263"  [ label = "DDG: u+v"] 
  "1000242" -> "1000263"  [ label = "DDG: v"] 
  "1000238" -> "1000263"  [ label = "DDG: v+v"] 
  "1000237" -> "1000263"  [ label = "DDG: min(u+v,v+v)"] 
  "1000235" -> "1000263"  [ label = "DDG: min(u+v,v+v)<<\"\n\""] 
  "1000235" -> "1000263"  [ label = "DDG: cout<<min(u+v,v+v)<<\"\n\""] 
  "1000227" -> "1000263"  [ label = "DDG: cout"] 
  "1000230" -> "1000263"  [ label = "DDG: u"] 
  "1000230" -> "1000263"  [ label = "DDG: v"] 
  "1000229" -> "1000263"  [ label = "DDG: min(u,v)"] 
  "1000227" -> "1000263"  [ label = "DDG: min(u,v)<<\"\n\""] 
  "1000227" -> "1000263"  [ label = "DDG: cout<<min(u,v)<<\"\n\""] 
  "1000216" -> "1000263"  [ label = "DDG: cout"] 
  "1000216" -> "1000263"  [ label = "DDG: 0<<\"\n\""] 
  "1000216" -> "1000263"  [ label = "DDG: cout<<0<<\"\n\""] 
  "1000167" -> "1000263"  [ label = "DDG: cin"] 
  "1000167" -> "1000263"  [ label = "DDG: cin>>a[i]"] 
  "1000175" -> "1000263"  [ label = "DDG: a[i]"] 
  "1000175" -> "1000263"  [ label = "DDG: a[i-1]"] 
  "1000174" -> "1000263"  [ label = "DDG: a[i]-a[i-1]"] 
  "1000173" -> "1000263"  [ label = "DDG: abs(a[i]-a[i-1])"] 
  "1000173" -> "1000263"  [ label = "DDG: abs(a[i]-a[i-1])>=2"] 
  "1000193" -> "1000263"  [ label = "DDG: a[i]"] 
  "1000193" -> "1000263"  [ label = "DDG: a[i - 1]"] 
  "1000192" -> "1000263"  [ label = "DDG: a[i] - a[i - 1]"] 
  "1000191" -> "1000263"  [ label = "DDG: abs(a[i] - a[i - 1])"] 
  "1000191" -> "1000263"  [ label = "DDG: abs(a[i] - a[i - 1]) == 1"] 
  "1000204" -> "1000263"  [ label = "DDG: oned"] 
  "1000257" -> "1000263"  [ label = "DDG: CLOCKS_PER_SEC"] 
  "1000108" -> "1000263"  [ label = "DDG: stdin"] 
  "1000112" -> "1000263"  [ label = "DDG: stdout"] 
  "1000106" -> "1000263"  [ label = "DDG: NULL"] 
  "1000104" -> "1000263"  [ label = "DDG: false"] 
  "1000246" -> "1000263"  [ label = "DDG: cerr"] 
  "1000262" -> "1000261"  [ label = "DDG: 0"] 
  "1000102" -> "1000261"  [ label = "DDG: "] 
  "1000102" -> "1000104"  [ label = "DDG: "] 
  "1000102" -> "1000106"  [ label = "DDG: "] 
  "1000102" -> "1000108"  [ label = "DDG: "] 
  "1000102" -> "1000112"  [ label = "DDG: "] 
  "1000102" -> "1000117"  [ label = "DDG: "] 
  "1000102" -> "1000122"  [ label = "DDG: "] 
  "1000102" -> "1000246"  [ label = "DDG: "] 
  "1000248" -> "1000246"  [ label = "DDG: 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << \"ms\n\""] 
  "1000248" -> "1000246"  [ label = "DDG: \"Time : \""] 
  "1000102" -> "1000262"  [ label = "DDG: "] 
  "1000122" -> "1000125"  [ label = "DDG: tt"] 
  "1000128" -> "1000125"  [ label = "DDG: tt"] 
  "1000102" -> "1000125"  [ label = "DDG: "] 
  "1000117" -> "1000125"  [ label = "DDG: t"] 
  "1000125" -> "1000128"  [ label = "DDG: tt"] 
  "1000102" -> "1000128"  [ label = "DDG: "] 
  "1000102" -> "1000149"  [ label = "DDG: "] 
  "1000102" -> "1000153"  [ label = "DDG: "] 
  "1000102" -> "1000208"  [ label = "DDG: "] 
  "1000102" -> "1000248"  [ label = "DDG: "] 
  "1000250" -> "1000248"  [ label = "DDG: \"ms\n\""] 
  "1000250" -> "1000248"  [ label = "DDG: 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC"] 
  "1000117" -> "1000132"  [ label = "DDG: cin"] 
  "1000143" -> "1000132"  [ label = "DDG: cin"] 
  "1000167" -> "1000132"  [ label = "DDG: cin"] 
  "1000102" -> "1000132"  [ label = "DDG: "] 
  "1000161" -> "1000132"  [ label = "DDG: n"] 
  "1000132" -> "1000137"  [ label = "DDG: cin"] 
  "1000102" -> "1000137"  [ label = "DDG: "] 
  "1000139" -> "1000137"  [ label = "DDG: v"] 
  "1000139" -> "1000137"  [ label = "DDG: u"] 
  "1000137" -> "1000143"  [ label = "DDG: cin"] 
  "1000102" -> "1000143"  [ label = "DDG: "] 
  "1000102" -> "1000158"  [ label = "DDG: "] 
  "1000227" -> "1000235"  [ label = "DDG: cout"] 
  "1000216" -> "1000235"  [ label = "DDG: cout"] 
  "1000102" -> "1000235"  [ label = "DDG: "] 
  "1000237" -> "1000235"  [ label = "DDG: \"\n\""] 
  "1000237" -> "1000235"  [ label = "DDG: min(u+v,v+v)"] 
  "1000251" -> "1000250"  [ label = "DDG: ((double)clock()) / (double)CLOCKS_PER_SEC"] 
  "1000251" -> "1000250"  [ label = "DDG: 1000"] 
  "1000102" -> "1000250"  [ label = "DDG: "] 
  "1000230" -> "1000139"  [ label = "DDG: u"] 
  "1000102" -> "1000139"  [ label = "DDG: "] 
  "1000230" -> "1000139"  [ label = "DDG: v"] 
  "1000158" -> "1000161"  [ label = "DDG: i"] 
  "1000164" -> "1000161"  [ label = "DDG: i"] 
  "1000102" -> "1000161"  [ label = "DDG: "] 
  "1000132" -> "1000161"  [ label = "DDG: n"] 
  "1000181" -> "1000164"  [ label = "DDG: i"] 
  "1000199" -> "1000164"  [ label = "DDG: i"] 
  "1000102" -> "1000164"  [ label = "DDG: "] 
  "1000149" -> "1000212"  [ label = "DDG: td"] 
  "1000186" -> "1000212"  [ label = "DDG: td"] 
  "1000102" -> "1000212"  [ label = "DDG: "] 
  "1000153" -> "1000223"  [ label = "DDG: oned"] 
  "1000204" -> "1000223"  [ label = "DDG: oned"] 
  "1000102" -> "1000223"  [ label = "DDG: "] 
  "1000238" -> "1000237"  [ label = "DDG: v+v"] 
  "1000238" -> "1000237"  [ label = "DDG: u+v"] 
  "1000102" -> "1000237"  [ label = "DDG: "] 
  "1000102" -> "1000251"  [ label = "DDG: "] 
  "1000253" -> "1000251"  [ label = "DDG: (double)clock()"] 
  "1000253" -> "1000251"  [ label = "DDG: (double)CLOCKS_PER_SEC"] 
  "1000143" -> "1000167"  [ label = "DDG: cin"] 
  "1000102" -> "1000167"  [ label = "DDG: "] 
  "1000175" -> "1000167"  [ label = "DDG: a[i]"] 
  "1000193" -> "1000167"  [ label = "DDG: a[i]"] 
  "1000235" -> "1000216"  [ label = "DDG: cout"] 
  "1000227" -> "1000216"  [ label = "DDG: cout"] 
  "1000102" -> "1000216"  [ label = "DDG: "] 
  "1000218" -> "1000216"  [ label = "DDG: \"\n\""] 
  "1000218" -> "1000216"  [ label = "DDG: 0"] 
  "1000235" -> "1000227"  [ label = "DDG: cout"] 
  "1000216" -> "1000227"  [ label = "DDG: cout"] 
  "1000102" -> "1000227"  [ label = "DDG: "] 
  "1000229" -> "1000227"  [ label = "DDG: min(u,v)"] 
  "1000229" -> "1000227"  [ label = "DDG: \"\n\""] 
  "1000139" -> "1000238"  [ label = "DDG: v"] 
  "1000102" -> "1000238"  [ label = "DDG: "] 
  "1000139" -> "1000238"  [ label = "DDG: u"] 
  "1000254" -> "1000253"  [ label = "DDG: clock()"] 
  "1000257" -> "1000253"  [ label = "DDG: CLOCKS_PER_SEC"] 
  "1000174" -> "1000173"  [ label = "DDG: a[i]-a[i-1]"] 
  "1000102" -> "1000173"  [ label = "DDG: "] 
  "1000102" -> "1000186"  [ label = "DDG: "] 
  "1000102" -> "1000218"  [ label = "DDG: "] 
  "1000230" -> "1000229"  [ label = "DDG: u"] 
  "1000230" -> "1000229"  [ label = "DDG: v"] 
  "1000102" -> "1000229"  [ label = "DDG: "] 
  "1000139" -> "1000239"  [ label = "DDG: u"] 
  "1000102" -> "1000239"  [ label = "DDG: "] 
  "1000139" -> "1000239"  [ label = "DDG: v"] 
  "1000102" -> "1000242"  [ label = "DDG: "] 
  "1000139" -> "1000242"  [ label = "DDG: v"] 
  "1000102" -> "1000254"  [ label = "DDG: "] 
  "1000102" -> "1000257"  [ label = "DDG: "] 
  "1000175" -> "1000174"  [ label = "DDG: a[i-1]"] 
  "1000175" -> "1000174"  [ label = "DDG: a[i]"] 
  "1000139" -> "1000230"  [ label = "DDG: u"] 
  "1000102" -> "1000230"  [ label = "DDG: "] 
  "1000139" -> "1000230"  [ label = "DDG: v"] 
  "1000167" -> "1000175"  [ label = "DDG: a[i]"] 
  "1000192" -> "1000191"  [ label = "DDG: a[i] - a[i - 1]"] 
  "1000102" -> "1000191"  [ label = "DDG: "] 
  "1000102" -> "1000204"  [ label = "DDG: "] 
  "1000193" -> "1000192"  [ label = "DDG: a[i - 1]"] 
  "1000193" -> "1000192"  [ label = "DDG: a[i]"] 
  "1000161" -> "1000181"  [ label = "DDG: i"] 
  "1000102" -> "1000181"  [ label = "DDG: "] 
  "1000175" -> "1000193"  [ label = "DDG: a[i]"] 
  "1000181" -> "1000199"  [ label = "DDG: i"] 
  "1000102" -> "1000199"  [ label = "DDG: "] 
  "1000125" -> "1000125"  [ label = "CDG: "] 
  "1000125" -> "1000128"  [ label = "CDG: "] 
  "1000125" -> "1000161"  [ label = "CDG: "] 
  "1000125" -> "1000208"  [ label = "CDG: "] 
  "1000125" -> "1000139"  [ label = "CDG: "] 
  "1000125" -> "1000149"  [ label = "CDG: "] 
  "1000125" -> "1000132"  [ label = "CDG: "] 
  "1000125" -> "1000145"  [ label = "CDG: "] 
  "1000125" -> "1000153"  [ label = "CDG: "] 
  "1000125" -> "1000212"  [ label = "CDG: "] 
  "1000125" -> "1000143"  [ label = "CDG: "] 
  "1000125" -> "1000158"  [ label = "CDG: "] 
  "1000125" -> "1000137"  [ label = "CDG: "] 
  "1000161" -> "1000164"  [ label = "CDG: "] 
  "1000161" -> "1000174"  [ label = "CDG: "] 
  "1000161" -> "1000161"  [ label = "CDG: "] 
  "1000161" -> "1000167"  [ label = "CDG: "] 
  "1000161" -> "1000175"  [ label = "CDG: "] 
  "1000161" -> "1000179"  [ label = "CDG: "] 
  "1000161" -> "1000176"  [ label = "CDG: "] 
  "1000161" -> "1000169"  [ label = "CDG: "] 
  "1000161" -> "1000173"  [ label = "CDG: "] 
  "1000161" -> "1000181"  [ label = "CDG: "] 
  "1000212" -> "1000216"  [ label = "CDG: "] 
  "1000212" -> "1000218"  [ label = "CDG: "] 
  "1000212" -> "1000223"  [ label = "CDG: "] 
  "1000223" -> "1000238"  [ label = "CDG: "] 
  "1000223" -> "1000227"  [ label = "CDG: "] 
  "1000223" -> "1000242"  [ label = "CDG: "] 
  "1000223" -> "1000235"  [ label = "CDG: "] 
  "1000223" -> "1000239"  [ label = "CDG: "] 
  "1000223" -> "1000229"  [ label = "CDG: "] 
  "1000223" -> "1000230"  [ label = "CDG: "] 
  "1000223" -> "1000237"  [ label = "CDG: "] 
  "1000173" -> "1000191"  [ label = "CDG: "] 
  "1000173" -> "1000199"  [ label = "CDG: "] 
  "1000173" -> "1000197"  [ label = "CDG: "] 
  "1000173" -> "1000194"  [ label = "CDG: "] 
  "1000173" -> "1000192"  [ label = "CDG: "] 
  "1000173" -> "1000186"  [ label = "CDG: "] 
  "1000173" -> "1000193"  [ label = "CDG: "] 
  "1000191" -> "1000204"  [ label = "CDG: "] 
}
