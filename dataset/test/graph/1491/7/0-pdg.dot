digraph "deep" {  
"1000102" [label = "(METHOD,deep)" ]
"1000206" [label = "(METHOD_RETURN,void)" ]
"1000107" [label = "(<operator>.arithmeticShiftRight,cin>>n>>u>>v)" ]
"1000132" [label = "(<operator>.assignment,ans = INT_MAX)" ]
"1000201" [label = "(<operator>.shiftLeft,cout<<ans<<\"\n\")" ]
"1000117" [label = "(<operator>.assignment,i = 1)" ]
"1000120" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000123" [label = "(<operator>.postIncrement,i++)" ]
"1000137" [label = "(<operator>.assignment,i = 2)" ]
"1000140" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000143" [label = "(<operator>.postIncrement,i++)" ]
"1000109" [label = "(<operator>.arithmeticShiftRight,n>>u>>v)" ]
"1000126" [label = "(<operator>.arithmeticShiftRight,cin>>a[i])" ]
"1000203" [label = "(<operator>.shiftLeft,ans<<\"\n\")" ]
"1000111" [label = "(<operator>.arithmeticShiftRight,u>>v)" ]
"1000147" [label = "(<operator>.greaterEqualsThan,abs(a[i] - a[i-1]) >= 2)" ]
"1000159" [label = "(<operator>.assignment,ans = 0)" ]
"1000163" [label = "(<operator>.equals,abs(a[i] - a[i-1]) == 1)" ]
"1000175" [label = "(<operator>.assignment,ans = min(ans, min(u, v)))" ]
"1000183" [label = "(<operator>.equals,a[i] == a[i-1])" ]
"1000192" [label = "(<operator>.assignment,ans = min(ans, v+min(u, v)))" ]
"1000148" [label = "(abs,abs(a[i] - a[i-1]))" ]
"1000164" [label = "(abs,abs(a[i] - a[i-1]))" ]
"1000177" [label = "(min,min(ans, min(u, v)))" ]
"1000194" [label = "(min,min(ans, v+min(u, v)))" ]
"1000149" [label = "(<operator>.subtraction,a[i] - a[i-1])" ]
"1000165" [label = "(<operator>.subtraction,a[i] - a[i-1])" ]
"1000179" [label = "(min,min(u, v))" ]
"1000189" [label = "(<operator>.subtraction,i-1)" ]
"1000196" [label = "(<operator>.addition,v+min(u, v))" ]
"1000198" [label = "(min,min(u, v))" ]
"1000155" [label = "(<operator>.subtraction,i-1)" ]
"1000171" [label = "(<operator>.subtraction,i-1)" ]
"1000128" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000184" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000187" [label = "(<operator>.indirectIndexAccess,a[i-1])" ]
"1000150" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000153" [label = "(<operator>.indirectIndexAccess,a[i-1])" ]
"1000166" [label = "(<operator>.indirectIndexAccess,a[i])" ]
"1000169" [label = "(<operator>.indirectIndexAccess,a[i-1])" ]
  "1000107" -> "1000206"  [ label = "DDG: cin"] 
  "1000111" -> "1000206"  [ label = "DDG: u"] 
  "1000111" -> "1000206"  [ label = "DDG: v"] 
  "1000109" -> "1000206"  [ label = "DDG: u>>v"] 
  "1000107" -> "1000206"  [ label = "DDG: n>>u>>v"] 
  "1000107" -> "1000206"  [ label = "DDG: cin>>n>>u>>v"] 
  "1000140" -> "1000206"  [ label = "DDG: i"] 
  "1000140" -> "1000206"  [ label = "DDG: n"] 
  "1000140" -> "1000206"  [ label = "DDG: i <= n"] 
  "1000203" -> "1000206"  [ label = "DDG: ans"] 
  "1000201" -> "1000206"  [ label = "DDG: ans<<\"\n\""] 
  "1000201" -> "1000206"  [ label = "DDG: cout<<ans<<\"\n\""] 
  "1000147" -> "1000206"  [ label = "DDG: abs(a[i] - a[i-1]) >= 2"] 
  "1000164" -> "1000206"  [ label = "DDG: a[i] - a[i-1]"] 
  "1000163" -> "1000206"  [ label = "DDG: abs(a[i] - a[i-1])"] 
  "1000163" -> "1000206"  [ label = "DDG: abs(a[i] - a[i-1]) == 1"] 
  "1000179" -> "1000206"  [ label = "DDG: u"] 
  "1000179" -> "1000206"  [ label = "DDG: v"] 
  "1000177" -> "1000206"  [ label = "DDG: min(u, v)"] 
  "1000175" -> "1000206"  [ label = "DDG: min(ans, min(u, v))"] 
  "1000183" -> "1000206"  [ label = "DDG: a[i]"] 
  "1000183" -> "1000206"  [ label = "DDG: a[i-1]"] 
  "1000183" -> "1000206"  [ label = "DDG: a[i] == a[i-1]"] 
  "1000196" -> "1000206"  [ label = "DDG: v"] 
  "1000198" -> "1000206"  [ label = "DDG: u"] 
  "1000196" -> "1000206"  [ label = "DDG: min(u, v)"] 
  "1000194" -> "1000206"  [ label = "DDG: v+min(u, v)"] 
  "1000192" -> "1000206"  [ label = "DDG: min(ans, v+min(u, v))"] 
  "1000126" -> "1000206"  [ label = "DDG: cin"] 
  "1000126" -> "1000206"  [ label = "DDG: a[i]"] 
  "1000126" -> "1000206"  [ label = "DDG: cin>>a[i]"] 
  "1000201" -> "1000206"  [ label = "DDG: cout"] 
  "1000132" -> "1000206"  [ label = "DDG: INT_MAX"] 
  "1000102" -> "1000132"  [ label = "DDG: "] 
  "1000102" -> "1000107"  [ label = "DDG: "] 
  "1000109" -> "1000107"  [ label = "DDG: n"] 
  "1000109" -> "1000107"  [ label = "DDG: u>>v"] 
  "1000102" -> "1000117"  [ label = "DDG: "] 
  "1000102" -> "1000137"  [ label = "DDG: "] 
  "1000102" -> "1000201"  [ label = "DDG: "] 
  "1000203" -> "1000201"  [ label = "DDG: \"\n\""] 
  "1000203" -> "1000201"  [ label = "DDG: ans"] 
  "1000102" -> "1000109"  [ label = "DDG: "] 
  "1000111" -> "1000109"  [ label = "DDG: u"] 
  "1000111" -> "1000109"  [ label = "DDG: v"] 
  "1000117" -> "1000120"  [ label = "DDG: i"] 
  "1000123" -> "1000120"  [ label = "DDG: i"] 
  "1000102" -> "1000120"  [ label = "DDG: "] 
  "1000109" -> "1000120"  [ label = "DDG: n"] 
  "1000120" -> "1000123"  [ label = "DDG: i"] 
  "1000102" -> "1000123"  [ label = "DDG: "] 
  "1000137" -> "1000140"  [ label = "DDG: i"] 
  "1000143" -> "1000140"  [ label = "DDG: i"] 
  "1000102" -> "1000140"  [ label = "DDG: "] 
  "1000120" -> "1000140"  [ label = "DDG: n"] 
  "1000189" -> "1000143"  [ label = "DDG: i"] 
  "1000102" -> "1000143"  [ label = "DDG: "] 
  "1000132" -> "1000203"  [ label = "DDG: ans"] 
  "1000159" -> "1000203"  [ label = "DDG: ans"] 
  "1000175" -> "1000203"  [ label = "DDG: ans"] 
  "1000192" -> "1000203"  [ label = "DDG: ans"] 
  "1000102" -> "1000203"  [ label = "DDG: "] 
  "1000102" -> "1000111"  [ label = "DDG: "] 
  "1000107" -> "1000126"  [ label = "DDG: cin"] 
  "1000102" -> "1000126"  [ label = "DDG: "] 
  "1000102" -> "1000159"  [ label = "DDG: "] 
  "1000177" -> "1000175"  [ label = "DDG: min(u, v)"] 
  "1000177" -> "1000175"  [ label = "DDG: ans"] 
  "1000194" -> "1000192"  [ label = "DDG: ans"] 
  "1000194" -> "1000192"  [ label = "DDG: v+min(u, v)"] 
  "1000148" -> "1000147"  [ label = "DDG: a[i] - a[i-1]"] 
  "1000102" -> "1000147"  [ label = "DDG: "] 
  "1000164" -> "1000163"  [ label = "DDG: a[i] - a[i-1]"] 
  "1000102" -> "1000163"  [ label = "DDG: "] 
  "1000102" -> "1000175"  [ label = "DDG: "] 
  "1000165" -> "1000183"  [ label = "DDG: a[i]"] 
  "1000165" -> "1000183"  [ label = "DDG: a[i-1]"] 
  "1000102" -> "1000192"  [ label = "DDG: "] 
  "1000149" -> "1000148"  [ label = "DDG: a[i-1]"] 
  "1000149" -> "1000148"  [ label = "DDG: a[i]"] 
  "1000165" -> "1000164"  [ label = "DDG: a[i]"] 
  "1000165" -> "1000164"  [ label = "DDG: a[i-1]"] 
  "1000132" -> "1000177"  [ label = "DDG: ans"] 
  "1000159" -> "1000177"  [ label = "DDG: ans"] 
  "1000175" -> "1000177"  [ label = "DDG: ans"] 
  "1000192" -> "1000177"  [ label = "DDG: ans"] 
  "1000102" -> "1000177"  [ label = "DDG: "] 
  "1000179" -> "1000177"  [ label = "DDG: u"] 
  "1000179" -> "1000177"  [ label = "DDG: v"] 
  "1000132" -> "1000194"  [ label = "DDG: ans"] 
  "1000159" -> "1000194"  [ label = "DDG: ans"] 
  "1000175" -> "1000194"  [ label = "DDG: ans"] 
  "1000192" -> "1000194"  [ label = "DDG: ans"] 
  "1000102" -> "1000194"  [ label = "DDG: "] 
  "1000198" -> "1000194"  [ label = "DDG: v"] 
  "1000198" -> "1000194"  [ label = "DDG: u"] 
  "1000183" -> "1000149"  [ label = "DDG: a[i]"] 
  "1000126" -> "1000149"  [ label = "DDG: a[i]"] 
  "1000183" -> "1000149"  [ label = "DDG: a[i-1]"] 
  "1000149" -> "1000165"  [ label = "DDG: a[i]"] 
  "1000149" -> "1000165"  [ label = "DDG: a[i-1]"] 
  "1000111" -> "1000179"  [ label = "DDG: u"] 
  "1000198" -> "1000179"  [ label = "DDG: u"] 
  "1000102" -> "1000179"  [ label = "DDG: "] 
  "1000111" -> "1000179"  [ label = "DDG: v"] 
  "1000198" -> "1000179"  [ label = "DDG: v"] 
  "1000171" -> "1000189"  [ label = "DDG: i"] 
  "1000102" -> "1000189"  [ label = "DDG: "] 
  "1000198" -> "1000196"  [ label = "DDG: v"] 
  "1000102" -> "1000196"  [ label = "DDG: "] 
  "1000198" -> "1000196"  [ label = "DDG: u"] 
  "1000111" -> "1000198"  [ label = "DDG: u"] 
  "1000179" -> "1000198"  [ label = "DDG: u"] 
  "1000102" -> "1000198"  [ label = "DDG: "] 
  "1000111" -> "1000198"  [ label = "DDG: v"] 
  "1000179" -> "1000198"  [ label = "DDG: v"] 
  "1000140" -> "1000155"  [ label = "DDG: i"] 
  "1000102" -> "1000155"  [ label = "DDG: "] 
  "1000155" -> "1000171"  [ label = "DDG: i"] 
  "1000102" -> "1000171"  [ label = "DDG: "] 
  "1000120" -> "1000128"  [ label = "CDG: "] 
  "1000120" -> "1000120"  [ label = "CDG: "] 
  "1000120" -> "1000126"  [ label = "CDG: "] 
  "1000120" -> "1000123"  [ label = "CDG: "] 
  "1000140" -> "1000153"  [ label = "CDG: "] 
  "1000140" -> "1000164"  [ label = "CDG: "] 
  "1000140" -> "1000150"  [ label = "CDG: "] 
  "1000140" -> "1000166"  [ label = "CDG: "] 
  "1000140" -> "1000148"  [ label = "CDG: "] 
  "1000140" -> "1000183"  [ label = "CDG: "] 
  "1000140" -> "1000165"  [ label = "CDG: "] 
  "1000140" -> "1000149"  [ label = "CDG: "] 
  "1000140" -> "1000189"  [ label = "CDG: "] 
  "1000140" -> "1000169"  [ label = "CDG: "] 
  "1000140" -> "1000163"  [ label = "CDG: "] 
  "1000140" -> "1000143"  [ label = "CDG: "] 
  "1000140" -> "1000155"  [ label = "CDG: "] 
  "1000140" -> "1000147"  [ label = "CDG: "] 
  "1000140" -> "1000171"  [ label = "CDG: "] 
  "1000140" -> "1000184"  [ label = "CDG: "] 
  "1000140" -> "1000187"  [ label = "CDG: "] 
  "1000140" -> "1000140"  [ label = "CDG: "] 
  "1000147" -> "1000159"  [ label = "CDG: "] 
  "1000163" -> "1000175"  [ label = "CDG: "] 
  "1000163" -> "1000179"  [ label = "CDG: "] 
  "1000163" -> "1000177"  [ label = "CDG: "] 
  "1000183" -> "1000196"  [ label = "CDG: "] 
  "1000183" -> "1000194"  [ label = "CDG: "] 
  "1000183" -> "1000192"  [ label = "CDG: "] 
  "1000183" -> "1000198"  [ label = "CDG: "] 
}
