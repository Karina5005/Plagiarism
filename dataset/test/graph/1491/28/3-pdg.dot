digraph "main" {  
"1000238" [label = "(METHOD,main)" ]
"1000262" [label = "(METHOD_RETURN,int)" ]
"1000240" [label = "(IDENTIFIER,IOS,)" ]
"1000242" [label = "(<operator>.assignment,number_of_test_cases = 1)" ]
"1000245" [label = "(<operator>.arithmeticShiftRight,cin >> number_of_test_cases)" ]
"1000260" [label = "(RETURN,return 0;,return 0;)" ]
"1000250" [label = "(<operator>.assignment,test_case_number = 1)" ]
"1000253" [label = "(<operator>.lessEqualsThan,test_case_number <= number_of_test_cases)" ]
"1000256" [label = "(<operator>.preIncrement,++test_case_number)" ]
"1000261" [label = "(LITERAL,0,return 0;)" ]
"1000259" [label = "(solve_test_case,solve_test_case())" ]
  "1000260" -> "1000262"  [ label = "DDG: <RET>"] 
  "1000245" -> "1000262"  [ label = "DDG: cin >> number_of_test_cases"] 
  "1000253" -> "1000262"  [ label = "DDG: test_case_number"] 
  "1000253" -> "1000262"  [ label = "DDG: number_of_test_cases"] 
  "1000253" -> "1000262"  [ label = "DDG: test_case_number <= number_of_test_cases"] 
  "1000259" -> "1000262"  [ label = "DDG: solve_test_case()"] 
  "1000245" -> "1000262"  [ label = "DDG: cin"] 
  "1000238" -> "1000240"  [ label = "DDG: "] 
  "1000238" -> "1000242"  [ label = "DDG: "] 
  "1000261" -> "1000260"  [ label = "DDG: 0"] 
  "1000238" -> "1000260"  [ label = "DDG: "] 
  "1000238" -> "1000245"  [ label = "DDG: "] 
  "1000242" -> "1000245"  [ label = "DDG: number_of_test_cases"] 
  "1000238" -> "1000250"  [ label = "DDG: "] 
  "1000238" -> "1000261"  [ label = "DDG: "] 
  "1000250" -> "1000253"  [ label = "DDG: test_case_number"] 
  "1000256" -> "1000253"  [ label = "DDG: test_case_number"] 
  "1000238" -> "1000253"  [ label = "DDG: "] 
  "1000245" -> "1000253"  [ label = "DDG: number_of_test_cases"] 
  "1000253" -> "1000256"  [ label = "DDG: test_case_number"] 
  "1000238" -> "1000256"  [ label = "DDG: "] 
  "1000238" -> "1000259"  [ label = "DDG: "] 
  "1000253" -> "1000256"  [ label = "CDG: "] 
  "1000253" -> "1000253"  [ label = "CDG: "] 
  "1000253" -> "1000259"  [ label = "CDG: "] 
}
