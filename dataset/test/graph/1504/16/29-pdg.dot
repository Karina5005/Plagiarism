digraph "solve" {  
"1000575" [label = "(METHOD,solve)" ]
"1000646" [label = "(METHOD_RETURN,void)" ]
"1000578" [label = "(<operator>.arithmeticShiftRight,cin>>s)" ]
"1000587" [label = "(<operator>.and,a&#39)" ]
"1000607" [label = "(<operator>.assignment,j=sz(s)-1)" ]
"1000614" [label = "(<operator>.assignment,x=-1)" ]
"1000618" [label = "(<operator>.shiftLeft,cout<<\"YES\"<<endl)" ]
"1000641" [label = "(<operator>.shiftLeft,cout<<s<<endl)" ]
"1000582" [label = "(s.begin,s.begin())" ]
"1000591" [label = "(<operator>.equals,ans==sz(s))" ]
"1000624" [label = "(<operator>.notEquals,s[j]!=&#39)" ]
"1000630" [label = "(<operator>.and,a&#39)" ]
"1000584" [label = "(s.end,s.end())" ]
"1000596" [label = "(<operator>.shiftLeft,cout<<\"NO\"<<endl)" ]
"1000601" [label = "(RETURN,return;,return;)" ]
"1000609" [label = "(<operator>.subtraction,sz(s)-1)" ]
"1000616" [label = "(<operator>.minus,-1)" ]
"1000620" [label = "(<operator>.shiftLeft,\"YES\"<<endl)" ]
"1000634" [label = "(<operator>.assignment,x=i)" ]
"1000593" [label = "(sz,sz(s))" ]
"1000604" [label = "(<operator>.postDecrement,j--)" ]
"1000610" [label = "(sz,sz(s))" ]
"1000598" [label = "(<operator>.shiftLeft,\"NO\"<<endl)" ]
  "1000578" -> "1000646"  [ label = "DDG: cin>>s"] 
  "1000582" -> "1000646"  [ label = "DDG: s.begin()"] 
  "1000584" -> "1000646"  [ label = "DDG: s.end()"] 
  "1000587" -> "1000646"  [ label = "DDG: a"] 
  "1000587" -> "1000646"  [ label = "DDG: a&#39"] 
  "1000593" -> "1000646"  [ label = "DDG: s"] 
  "1000591" -> "1000646"  [ label = "DDG: sz(s)"] 
  "1000591" -> "1000646"  [ label = "DDG: ans==sz(s)"] 
  "1000596" -> "1000646"  [ label = "DDG: cout"] 
  "1000598" -> "1000646"  [ label = "DDG: endl"] 
  "1000596" -> "1000646"  [ label = "DDG: \"NO\"<<endl"] 
  "1000596" -> "1000646"  [ label = "DDG: cout<<\"NO\"<<endl"] 
  "1000641" -> "1000646"  [ label = "DDG: cout<<s<<endl"] 
  "1000641" -> "1000646"  [ label = "DDG: cout"] 
  "1000641" -> "1000646"  [ label = "DDG: s<<endl"] 
  "1000601" -> "1000646"  [ label = "DDG: <RET>"] 
  "1000578" -> "1000646"  [ label = "DDG: cin"] 
  "1000634" -> "1000646"  [ label = "DDG: i"] 
  "1000591" -> "1000646"  [ label = "DDG: ans"] 
  "1000609" -> "1000607"  [ label = "DDG: 1"] 
  "1000609" -> "1000607"  [ label = "DDG: sz(s)"] 
  "1000616" -> "1000614"  [ label = "DDG: 1"] 
  "1000575" -> "1000578"  [ label = "DDG: "] 
  "1000575" -> "1000582"  [ label = "DDG: "] 
  "1000575" -> "1000587"  [ label = "DDG: "] 
  "1000575" -> "1000607"  [ label = "DDG: "] 
  "1000575" -> "1000614"  [ label = "DDG: "] 
  "1000575" -> "1000618"  [ label = "DDG: "] 
  "1000620" -> "1000618"  [ label = "DDG: \"YES\""] 
  "1000620" -> "1000618"  [ label = "DDG: endl"] 
  "1000575" -> "1000584"  [ label = "DDG: "] 
  "1000575" -> "1000591"  [ label = "DDG: "] 
  "1000593" -> "1000591"  [ label = "DDG: s"] 
  "1000575" -> "1000601"  [ label = "DDG: "] 
  "1000610" -> "1000609"  [ label = "DDG: s"] 
  "1000575" -> "1000609"  [ label = "DDG: "] 
  "1000575" -> "1000616"  [ label = "DDG: "] 
  "1000575" -> "1000620"  [ label = "DDG: "] 
  "1000610" -> "1000624"  [ label = "DDG: s"] 
  "1000587" -> "1000630"  [ label = "DDG: a"] 
  "1000575" -> "1000630"  [ label = "DDG: "] 
  "1000575" -> "1000634"  [ label = "DDG: "] 
  "1000578" -> "1000593"  [ label = "DDG: s"] 
  "1000575" -> "1000593"  [ label = "DDG: "] 
  "1000575" -> "1000596"  [ label = "DDG: "] 
  "1000598" -> "1000596"  [ label = "DDG: endl"] 
  "1000598" -> "1000596"  [ label = "DDG: \"NO\""] 
  "1000593" -> "1000610"  [ label = "DDG: s"] 
  "1000575" -> "1000610"  [ label = "DDG: "] 
  "1000575" -> "1000598"  [ label = "DDG: "] 
  "1000575" -> "1000604"  [ label = "DDG: "] 
}
