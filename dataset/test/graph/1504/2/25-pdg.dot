digraph "myPow" {  
"1000573" [label = "(METHOD,myPow)" ]
"1000642" [label = "(METHOD_RETURN,double)" ]
"1000574" [label = "(PARAM,double x)" ]
"1000575" [label = "(PARAM,int n)" ]
"1000578" [label = "(<operator>.equals,n==0)" ]
"1000581" [label = "(RETURN,return 1.00000 ;,return 1.00000 ;)" ]
"1000584" [label = "(<operator>.lessThan,n<0)" ]
"1000582" [label = "(LITERAL,1.00000,return 1.00000 ;)" ]
"1000588" [label = "(RETURN,return (n%2==0)? 1.00000/myPow(x*x,abs(n/2)) : 1.000/(x*myPow(x* x,abs(n/2))) ;,return (n%2==0)? 1.00000/myPow(x*x,abs(n/2)) : 1.000/(x*myPow(x* x,abs(n/2))) ;)" ]
"1000589" [label = "(<operator>.conditional,(n%2==0)? 1.00000/myPow(x*x,abs(n/2)) : 1.000/(x*myPow(x* x,abs(n/2))))" ]
"1000619" [label = "(RETURN,return (n%2==0) ? myPow(x*x,n/2) : x*myPow(x*x,n/2) ;,return (n%2==0) ? myPow(x*x,n/2) : x*myPow(x*x,n/2) ;)" ]
"1000620" [label = "(<operator>.conditional,(n%2==0) ? myPow(x*x,n/2) : x*myPow(x*x,n/2))" ]
"1000590" [label = "(<operator>.equals,n%2==0)" ]
"1000595" [label = "(<operator>.division,1.00000/myPow(x*x,abs(n/2)))" ]
"1000605" [label = "(<operator>.division,1.000/(x*myPow(x* x,abs(n/2))))" ]
"1000591" [label = "(<operator>.modulo,n%2)" ]
"1000597" [label = "(myPow,myPow(x*x,abs(n/2)))" ]
"1000607" [label = "(<operator>.multiplication,x*myPow(x* x,abs(n/2)))" ]
"1000621" [label = "(<operator>.equals,n%2==0)" ]
"1000626" [label = "(myPow,myPow(x*x,n/2))" ]
"1000633" [label = "(<operator>.multiplication,x*myPow(x*x,n/2))" ]
"1000598" [label = "(<operator>.multiplication,x*x)" ]
"1000601" [label = "(abs,abs(n/2))" ]
"1000609" [label = "(myPow,myPow(x* x,abs(n/2)))" ]
"1000622" [label = "(<operator>.modulo,n%2)" ]
"1000627" [label = "(<operator>.multiplication,x*x)" ]
"1000630" [label = "(<operator>.division,n/2)" ]
"1000635" [label = "(myPow,myPow(x*x,n/2))" ]
"1000602" [label = "(<operator>.division,n/2)" ]
"1000610" [label = "(<operator>.multiplication,x* x)" ]
"1000613" [label = "(abs,abs(n/2))" ]
"1000636" [label = "(<operator>.multiplication,x*x)" ]
"1000639" [label = "(<operator>.division,n/2)" ]
"1000614" [label = "(<operator>.division,n/2)" ]
  "1000574" -> "1000642"  [ label = "DDG: x"] 
  "1000575" -> "1000642"  [ label = "DDG: n"] 
  "1000578" -> "1000642"  [ label = "DDG: n"] 
  "1000578" -> "1000642"  [ label = "DDG: n==0"] 
  "1000584" -> "1000642"  [ label = "DDG: n<0"] 
  "1000621" -> "1000642"  [ label = "DDG: n%2"] 
  "1000620" -> "1000642"  [ label = "DDG: n%2==0"] 
  "1000633" -> "1000642"  [ label = "DDG: x"] 
  "1000635" -> "1000642"  [ label = "DDG: x*x"] 
  "1000639" -> "1000642"  [ label = "DDG: n"] 
  "1000635" -> "1000642"  [ label = "DDG: n/2"] 
  "1000620" -> "1000642"  [ label = "DDG: x*myPow(x*x,n/2)"] 
  "1000627" -> "1000642"  [ label = "DDG: x"] 
  "1000626" -> "1000642"  [ label = "DDG: x*x"] 
  "1000630" -> "1000642"  [ label = "DDG: n"] 
  "1000626" -> "1000642"  [ label = "DDG: n/2"] 
  "1000620" -> "1000642"  [ label = "DDG: myPow(x*x,n/2)"] 
  "1000620" -> "1000642"  [ label = "DDG: (n%2==0) ? myPow(x*x,n/2) : x*myPow(x*x,n/2)"] 
  "1000590" -> "1000642"  [ label = "DDG: n%2"] 
  "1000589" -> "1000642"  [ label = "DDG: n%2==0"] 
  "1000607" -> "1000642"  [ label = "DDG: x"] 
  "1000609" -> "1000642"  [ label = "DDG: x* x"] 
  "1000614" -> "1000642"  [ label = "DDG: n"] 
  "1000613" -> "1000642"  [ label = "DDG: n/2"] 
  "1000609" -> "1000642"  [ label = "DDG: abs(n/2)"] 
  "1000607" -> "1000642"  [ label = "DDG: myPow(x* x,abs(n/2))"] 
  "1000605" -> "1000642"  [ label = "DDG: x*myPow(x* x,abs(n/2))"] 
  "1000589" -> "1000642"  [ label = "DDG: 1.000/(x*myPow(x* x,abs(n/2)))"] 
  "1000598" -> "1000642"  [ label = "DDG: x"] 
  "1000597" -> "1000642"  [ label = "DDG: x*x"] 
  "1000602" -> "1000642"  [ label = "DDG: n"] 
  "1000601" -> "1000642"  [ label = "DDG: n/2"] 
  "1000597" -> "1000642"  [ label = "DDG: abs(n/2)"] 
  "1000595" -> "1000642"  [ label = "DDG: myPow(x*x,abs(n/2))"] 
  "1000589" -> "1000642"  [ label = "DDG: 1.00000/myPow(x*x,abs(n/2))"] 
  "1000589" -> "1000642"  [ label = "DDG: (n%2==0)? 1.00000/myPow(x*x,abs(n/2)) : 1.000/(x*myPow(x* x,abs(n/2)))"] 
  "1000588" -> "1000642"  [ label = "DDG: <RET>"] 
  "1000619" -> "1000642"  [ label = "DDG: <RET>"] 
  "1000581" -> "1000642"  [ label = "DDG: <RET>"] 
  "1000573" -> "1000574"  [ label = "DDG: "] 
  "1000573" -> "1000575"  [ label = "DDG: "] 
  "1000582" -> "1000581"  [ label = "DDG: 1.00000"] 
  "1000573" -> "1000581"  [ label = "DDG: "] 
  "1000575" -> "1000578"  [ label = "DDG: n"] 
  "1000573" -> "1000578"  [ label = "DDG: "] 
  "1000573" -> "1000582"  [ label = "DDG: "] 
  "1000578" -> "1000584"  [ label = "DDG: n"] 
  "1000575" -> "1000584"  [ label = "DDG: n"] 
  "1000573" -> "1000584"  [ label = "DDG: "] 
  "1000589" -> "1000588"  [ label = "DDG: (n%2==0)? 1.00000/myPow(x*x,abs(n/2)) : 1.000/(x*myPow(x* x,abs(n/2)))"] 
  "1000605" -> "1000589"  [ label = "DDG: 1.000"] 
  "1000605" -> "1000589"  [ label = "DDG: x*myPow(x* x,abs(n/2))"] 
  "1000595" -> "1000589"  [ label = "DDG: 1.00000"] 
  "1000595" -> "1000589"  [ label = "DDG: myPow(x*x,abs(n/2))"] 
  "1000620" -> "1000619"  [ label = "DDG: (n%2==0) ? myPow(x*x,n/2) : x*myPow(x*x,n/2)"] 
  "1000633" -> "1000620"  [ label = "DDG: myPow(x*x,n/2)"] 
  "1000626" -> "1000620"  [ label = "DDG: x*x"] 
  "1000626" -> "1000620"  [ label = "DDG: n/2"] 
  "1000633" -> "1000620"  [ label = "DDG: x"] 
  "1000591" -> "1000590"  [ label = "DDG: 2"] 
  "1000591" -> "1000590"  [ label = "DDG: n"] 
  "1000573" -> "1000590"  [ label = "DDG: "] 
  "1000573" -> "1000595"  [ label = "DDG: "] 
  "1000597" -> "1000595"  [ label = "DDG: x*x"] 
  "1000597" -> "1000595"  [ label = "DDG: abs(n/2)"] 
  "1000573" -> "1000605"  [ label = "DDG: "] 
  "1000607" -> "1000605"  [ label = "DDG: myPow(x* x,abs(n/2))"] 
  "1000607" -> "1000605"  [ label = "DDG: x"] 
  "1000584" -> "1000591"  [ label = "DDG: n"] 
  "1000575" -> "1000591"  [ label = "DDG: n"] 
  "1000573" -> "1000591"  [ label = "DDG: "] 
  "1000598" -> "1000597"  [ label = "DDG: x"] 
  "1000601" -> "1000597"  [ label = "DDG: n/2"] 
  "1000610" -> "1000607"  [ label = "DDG: x"] 
  "1000574" -> "1000607"  [ label = "DDG: x"] 
  "1000573" -> "1000607"  [ label = "DDG: "] 
  "1000609" -> "1000607"  [ label = "DDG: abs(n/2)"] 
  "1000609" -> "1000607"  [ label = "DDG: x* x"] 
  "1000622" -> "1000621"  [ label = "DDG: n"] 
  "1000622" -> "1000621"  [ label = "DDG: 2"] 
  "1000573" -> "1000621"  [ label = "DDG: "] 
  "1000627" -> "1000626"  [ label = "DDG: x"] 
  "1000630" -> "1000626"  [ label = "DDG: n"] 
  "1000630" -> "1000626"  [ label = "DDG: 2"] 
  "1000636" -> "1000633"  [ label = "DDG: x"] 
  "1000574" -> "1000633"  [ label = "DDG: x"] 
  "1000573" -> "1000633"  [ label = "DDG: "] 
  "1000635" -> "1000633"  [ label = "DDG: n/2"] 
  "1000635" -> "1000633"  [ label = "DDG: x*x"] 
  "1000574" -> "1000598"  [ label = "DDG: x"] 
  "1000573" -> "1000598"  [ label = "DDG: "] 
  "1000602" -> "1000601"  [ label = "DDG: 2"] 
  "1000602" -> "1000601"  [ label = "DDG: n"] 
  "1000610" -> "1000609"  [ label = "DDG: x"] 
  "1000613" -> "1000609"  [ label = "DDG: n/2"] 
  "1000584" -> "1000622"  [ label = "DDG: n"] 
  "1000575" -> "1000622"  [ label = "DDG: n"] 
  "1000573" -> "1000622"  [ label = "DDG: "] 
  "1000574" -> "1000627"  [ label = "DDG: x"] 
  "1000573" -> "1000627"  [ label = "DDG: "] 
  "1000622" -> "1000630"  [ label = "DDG: n"] 
  "1000575" -> "1000630"  [ label = "DDG: n"] 
  "1000573" -> "1000630"  [ label = "DDG: "] 
  "1000636" -> "1000635"  [ label = "DDG: x"] 
  "1000639" -> "1000635"  [ label = "DDG: n"] 
  "1000639" -> "1000635"  [ label = "DDG: 2"] 
  "1000591" -> "1000602"  [ label = "DDG: n"] 
  "1000575" -> "1000602"  [ label = "DDG: n"] 
  "1000573" -> "1000602"  [ label = "DDG: "] 
  "1000574" -> "1000610"  [ label = "DDG: x"] 
  "1000573" -> "1000610"  [ label = "DDG: "] 
  "1000614" -> "1000613"  [ label = "DDG: n"] 
  "1000614" -> "1000613"  [ label = "DDG: 2"] 
  "1000574" -> "1000636"  [ label = "DDG: x"] 
  "1000573" -> "1000636"  [ label = "DDG: "] 
  "1000622" -> "1000639"  [ label = "DDG: n"] 
  "1000575" -> "1000639"  [ label = "DDG: n"] 
  "1000573" -> "1000639"  [ label = "DDG: "] 
  "1000591" -> "1000614"  [ label = "DDG: n"] 
  "1000575" -> "1000614"  [ label = "DDG: n"] 
  "1000573" -> "1000614"  [ label = "DDG: "] 
  "1000578" -> "1000584"  [ label = "CDG: "] 
  "1000578" -> "1000581"  [ label = "CDG: "] 
  "1000584" -> "1000619"  [ label = "CDG: "] 
  "1000584" -> "1000590"  [ label = "CDG: "] 
  "1000584" -> "1000620"  [ label = "CDG: "] 
  "1000584" -> "1000588"  [ label = "CDG: "] 
  "1000584" -> "1000621"  [ label = "CDG: "] 
  "1000584" -> "1000622"  [ label = "CDG: "] 
  "1000584" -> "1000589"  [ label = "CDG: "] 
  "1000584" -> "1000591"  [ label = "CDG: "] 
  "1000590" -> "1000602"  [ label = "CDG: "] 
  "1000590" -> "1000614"  [ label = "CDG: "] 
  "1000590" -> "1000597"  [ label = "CDG: "] 
  "1000590" -> "1000607"  [ label = "CDG: "] 
  "1000590" -> "1000598"  [ label = "CDG: "] 
  "1000590" -> "1000609"  [ label = "CDG: "] 
  "1000590" -> "1000610"  [ label = "CDG: "] 
  "1000590" -> "1000595"  [ label = "CDG: "] 
  "1000590" -> "1000613"  [ label = "CDG: "] 
  "1000590" -> "1000601"  [ label = "CDG: "] 
  "1000590" -> "1000605"  [ label = "CDG: "] 
  "1000621" -> "1000626"  [ label = "CDG: "] 
  "1000621" -> "1000627"  [ label = "CDG: "] 
  "1000621" -> "1000633"  [ label = "CDG: "] 
  "1000621" -> "1000639"  [ label = "CDG: "] 
  "1000621" -> "1000635"  [ label = "CDG: "] 
  "1000621" -> "1000636"  [ label = "CDG: "] 
  "1000621" -> "1000630"  [ label = "CDG: "] 
}
