digraph "sieve" {  
"1000110" [label = "(METHOD,sieve)" ]
"1000154" [label = "(METHOD_RETURN,vector<ll>)" ]
"1000111" [label = "(PARAM,int n)" ]
"1000113" [label = "(int[n + 1],int[n + 1]())" ]
"1000152" [label = "(RETURN,return vect;,return vect;)" ]
"1000117" [label = "(<operator>.assignment,i = 2)" ]
"1000120" [label = "(<operator>.lessEqualsThan,i <= n)" ]
"1000123" [label = "(<operator>.postIncrement,i++)" ]
"1000153" [label = "(IDENTIFIER,vect,return vect;)" ]
"1000126" [label = "(<operator>.equals,arr[i] == 0)" ]
"1000132" [label = "(vect.push_back,vect.push_back(i))" ]
"1000136" [label = "(<operator>.assignment,j = 2 * i)" ]
"1000141" [label = "(<operator>.lessEqualsThan,j <= n)" ]
"1000144" [label = "(<operator>.assignmentPlus,j += i)" ]
"1000147" [label = "(<operator>.assignment,arr[j] = 1)" ]
"1000138" [label = "(<operator>.multiplication,2 * i)" ]
"1000127" [label = "(<operator>.indirectIndexAccess,arr[i])" ]
"1000148" [label = "(<operator>.indirectIndexAccess,arr[j])" ]
  "1000152" -> "1000154"  [ label = "DDG: <RET>"] 
  "1000111" -> "1000154"  [ label = "DDG: n"] 
  "1000113" -> "1000154"  [ label = "DDG: int[n + 1]()"] 
  "1000120" -> "1000154"  [ label = "DDG: i"] 
  "1000120" -> "1000154"  [ label = "DDG: n"] 
  "1000120" -> "1000154"  [ label = "DDG: i <= n"] 
  "1000126" -> "1000154"  [ label = "DDG: arr[i]"] 
  "1000126" -> "1000154"  [ label = "DDG: arr[i] == 0"] 
  "1000132" -> "1000154"  [ label = "DDG: vect.push_back(i)"] 
  "1000136" -> "1000154"  [ label = "DDG: 2 * i"] 
  "1000141" -> "1000154"  [ label = "DDG: j"] 
  "1000141" -> "1000154"  [ label = "DDG: j <= n"] 
  "1000147" -> "1000154"  [ label = "DDG: arr[j]"] 
  "1000110" -> "1000111"  [ label = "DDG: "] 
  "1000110" -> "1000113"  [ label = "DDG: "] 
  "1000153" -> "1000152"  [ label = "DDG: vect"] 
  "1000110" -> "1000152"  [ label = "DDG: "] 
  "1000110" -> "1000117"  [ label = "DDG: "] 
  "1000110" -> "1000153"  [ label = "DDG: "] 
  "1000117" -> "1000120"  [ label = "DDG: i"] 
  "1000123" -> "1000120"  [ label = "DDG: i"] 
  "1000110" -> "1000120"  [ label = "DDG: "] 
  "1000141" -> "1000120"  [ label = "DDG: n"] 
  "1000111" -> "1000120"  [ label = "DDG: n"] 
  "1000120" -> "1000123"  [ label = "DDG: i"] 
  "1000138" -> "1000123"  [ label = "DDG: i"] 
  "1000110" -> "1000123"  [ label = "DDG: "] 
  "1000110" -> "1000126"  [ label = "DDG: "] 
  "1000120" -> "1000132"  [ label = "DDG: i"] 
  "1000110" -> "1000132"  [ label = "DDG: "] 
  "1000138" -> "1000136"  [ label = "DDG: 2"] 
  "1000138" -> "1000136"  [ label = "DDG: i"] 
  "1000138" -> "1000144"  [ label = "DDG: i"] 
  "1000110" -> "1000144"  [ label = "DDG: "] 
  "1000110" -> "1000147"  [ label = "DDG: "] 
  "1000110" -> "1000136"  [ label = "DDG: "] 
  "1000136" -> "1000141"  [ label = "DDG: j"] 
  "1000144" -> "1000141"  [ label = "DDG: j"] 
  "1000110" -> "1000141"  [ label = "DDG: "] 
  "1000120" -> "1000141"  [ label = "DDG: n"] 
  "1000111" -> "1000141"  [ label = "DDG: n"] 
  "1000141" -> "1000144"  [ label = "DDG: j"] 
  "1000110" -> "1000138"  [ label = "DDG: "] 
  "1000132" -> "1000138"  [ label = "DDG: i"] 
  "1000120" -> "1000120"  [ label = "CDG: "] 
  "1000120" -> "1000127"  [ label = "CDG: "] 
  "1000120" -> "1000126"  [ label = "CDG: "] 
  "1000120" -> "1000123"  [ label = "CDG: "] 
  "1000126" -> "1000132"  [ label = "CDG: "] 
  "1000126" -> "1000141"  [ label = "CDG: "] 
  "1000126" -> "1000136"  [ label = "CDG: "] 
  "1000126" -> "1000138"  [ label = "CDG: "] 
  "1000141" -> "1000141"  [ label = "CDG: "] 
  "1000141" -> "1000147"  [ label = "CDG: "] 
  "1000141" -> "1000148"  [ label = "CDG: "] 
  "1000141" -> "1000144"  [ label = "CDG: "] 
}
